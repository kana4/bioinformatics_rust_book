{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7","program":"/Users/l/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=3ed8378ccc96d3ea","-C","extra-filename=-3ed8378ccc96d3ea","--out-dir","/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps","-L","dependency=/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps","--extern","bytes=/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps/libbytes-ea4fee0d2c4144f8.rmeta","--extern","futures_core=/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps/libfutures_core-d21f33cccef5b53a.rmeta","--extern","futures_sink=/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps/libfutures_sink-a412ebe26ff80aad.rmeta","--extern","log=/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps/liblog-e0fdd9192337fb2d.rmeta","--extern","pin_project_lite=/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps/libpin_project_lite-f5a82d4a38810324.rmeta","--extern","tokio=/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps/libtokio-4adad4bf0bceee71.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/l/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps/libtokio_util-3ed8378ccc96d3ea.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[17530516037156212688,793681998723751084]},"crate_root":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src","external_crates":[{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11266178634318078844,10430434914575217037]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[11698766721189094488,12060600386163665861]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7682173449702177568,11032960836976215208]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4743338922599007115,7423637119316760057]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2427264904945132901,10184032034968735412]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9774951351864599068,14817832832842499961]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10809433593918525561,458952361993985826]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15028772050842969220,14160812736163645060]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6995225455969351707,4449664983666090491]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8140348155906305511,16205222570971502248]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[233178625001733801,10631967199943834554]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[1525994598401419908,3288373240607898362]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[6171023582747105604,8380219937402072808]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16379221974889702373,16836676840445794723]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[17037182358159064978,13693302728723089691]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":16,"id":{"name":"futures_core","disambiguator":[4668153313673250569,10704340197495744606]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":17,"id":{"name":"futures_sink","disambiguator":[17356756952015856073,9929424919605157732]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":18,"id":{"name":"tokio","disambiguator":[17673144347724333478,15257427301512037016]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":19,"id":{"name":"mio","disambiguator":[14152280162596480672,4219708180287649308]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","num":20,"id":{"name":"log","disambiguator":[11015637507209429296,3091722645579271877]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":21,"id":{"name":"cfg_if","disambiguator":[9366737929510399661,10453437376682206837]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":22,"id":{"name":"libc","disambiguator":[788947256952803332,17157699984539357225]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","num":23,"id":{"name":"pin_project_lite","disambiguator":[3355192339277488526,8000598072596209988]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":24,"id":{"name":"bytes","disambiguator":[6478508232581162113,10154030130612807666]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":25,"id":{"name":"memchr","disambiguator":[486286139965215735,14035888004956051954]}}],"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1177},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11699437,"byte_end":11699447,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11699486,"byte_end":11699493,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":563},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11699532,"byte_end":11699539,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1486},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11699701,"byte_end":11699707,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1206},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11699709,"byte_end":11699720,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1445},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11699768,"byte_end":11699778,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1404},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11699827,"byte_end":11699838,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1230},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11699900,"byte_end":11699920,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":994},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11699922,"byte_end":11699947,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1246},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11699996,"byte_end":11700006,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1268},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11700008,"byte_end":11700023,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1276},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11700088,"byte_end":11700105,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1300},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11700107,"byte_end":11700129,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":6701,"byte_end":6718,"line_start":4,"line_end":4,"column_start":30,"column_end":47},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":6720,"byte_end":6745,"line_start":4,"line_end":4,"column_start":49,"column_end":74},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1379},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":6808,"byte_end":6818,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":286},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":6865,"byte_end":6878,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":343},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":6921,"byte_end":6938,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":496},{"krate":0,"index":14},{"krate":0,"index":378},{"krate":0,"index":447}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":356,"byte_end":393,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":394,"byte_end":397,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":398,"byte_end":455,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":456,"byte_end":520,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":521,"byte_end":596,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":597,"byte_end":600,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":601,"byte_end":637,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":496},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":672},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1110},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1174}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/cfg.rs","byte_start":5445,"byte_end":5470,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11689165,"byte_end":11689218,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11689219,"byte_end":11689222,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11689223,"byte_end":11689298,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11689299,"byte_end":11689364,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11689365,"byte_end":11689368,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11689369,"byte_end":11689449,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11689450,"byte_end":11689525,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11689526,"byte_end":11689574,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11689575,"byte_end":11689578,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11689579,"byte_end":11689602,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11689603,"byte_end":11689606,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11689607,"byte_end":11689686,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11689687,"byte_end":11689766,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11689767,"byte_end":11689838,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11689839,"byte_end":11689909,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11689910,"byte_end":11689988,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11689989,"byte_end":11690065,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690066,"byte_end":11690099,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690100,"byte_end":11690103,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690104,"byte_end":11690184,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690185,"byte_end":11690265,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690266,"byte_end":11690316,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690317,"byte_end":11690320,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690321,"byte_end":11690372,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690373,"byte_end":11690422,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690423,"byte_end":11690474,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690475,"byte_end":11690478,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690479,"byte_end":11690544,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690545,"byte_end":11690548,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690549,"byte_end":11690626,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690627,"byte_end":11690668,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690669,"byte_end":11690672,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690673,"byte_end":11690753,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690754,"byte_end":11690833,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690834,"byte_end":11690912,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690913,"byte_end":11690992,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11690993,"byte_end":11691007,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691008,"byte_end":11691011,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691012,"byte_end":11691091,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691092,"byte_end":11691171,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691172,"byte_end":11691189,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691190,"byte_end":11691193,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691194,"byte_end":11691271,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691272,"byte_end":11691351,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691352,"byte_end":11691429,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691430,"byte_end":11691500,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691501,"byte_end":11691550,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691551,"byte_end":11691554,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691555,"byte_end":11691568,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691569,"byte_end":11691601,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691602,"byte_end":11691669,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691670,"byte_end":11691784,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691785,"byte_end":11691822,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691823,"byte_end":11691884,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691885,"byte_end":11691934,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691935,"byte_end":11691938,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691939,"byte_end":11691980,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691981,"byte_end":11691991,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11691992,"byte_end":11692076,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692077,"byte_end":11692133,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692134,"byte_end":11692137,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692138,"byte_end":11692159,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692160,"byte_end":11692227,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692228,"byte_end":11692256,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692257,"byte_end":11692270,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692271,"byte_end":11692289,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692290,"byte_end":11692299,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692300,"byte_end":11692303,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692304,"byte_end":11692363,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692364,"byte_end":11692388,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692389,"byte_end":11692398,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692399,"byte_end":11692404,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692405,"byte_end":11692413,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692414,"byte_end":11692421,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692422,"byte_end":11692496,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692497,"byte_end":11692500,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692501,"byte_end":11692523,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692524,"byte_end":11692527,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692528,"byte_end":11692605,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692606,"byte_end":11692682,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692683,"byte_end":11692762,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692763,"byte_end":11692817,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692818,"byte_end":11692821,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692822,"byte_end":11692866,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692867,"byte_end":11692874,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692875,"byte_end":11692910,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692911,"byte_end":11692942,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692943,"byte_end":11692946,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692947,"byte_end":11692976,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692977,"byte_end":11692980,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11692981,"byte_end":11693020,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693021,"byte_end":11693024,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693025,"byte_end":11693063,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693064,"byte_end":11693091,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693092,"byte_end":11693128,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693129,"byte_end":11693132,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693133,"byte_end":11693151,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693152,"byte_end":11693174,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693175,"byte_end":11693205,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693206,"byte_end":11693260,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693261,"byte_end":11693291,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693292,"byte_end":11693349,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693350,"byte_end":11693382,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693383,"byte_end":11693396,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693397,"byte_end":11693400,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693401,"byte_end":11693435,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693436,"byte_end":11693480,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693481,"byte_end":11693533,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693534,"byte_end":11693601,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693602,"byte_end":11693605,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693606,"byte_end":11693680,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693681,"byte_end":11693747,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693748,"byte_end":11693777,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693778,"byte_end":11693825,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693826,"byte_end":11693878,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693879,"byte_end":11693950,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693951,"byte_end":11693970,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693971,"byte_end":11693984,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693985,"byte_end":11693988,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11693989,"byte_end":11694028,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694029,"byte_end":11694084,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694085,"byte_end":11694103,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694104,"byte_end":11694180,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694181,"byte_end":11694247,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694248,"byte_end":11694300,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694301,"byte_end":11694304,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694305,"byte_end":11694385,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694386,"byte_end":11694411,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694412,"byte_end":11694444,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694445,"byte_end":11694458,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694459,"byte_end":11694462,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694463,"byte_end":11694535,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694536,"byte_end":11694562,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694563,"byte_end":11694614,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694615,"byte_end":11694651,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694652,"byte_end":11694655,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694656,"byte_end":11694734,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694735,"byte_end":11694778,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694779,"byte_end":11694826,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694827,"byte_end":11694863,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694864,"byte_end":11694908,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694909,"byte_end":11694965,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11694966,"byte_end":11695014,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695015,"byte_end":11695037,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695038,"byte_end":11695056,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695057,"byte_end":11695070,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695071,"byte_end":11695080,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695081,"byte_end":11695086,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695087,"byte_end":11695094,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695095,"byte_end":11695098,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695099,"byte_end":11695122,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695123,"byte_end":11695126,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695127,"byte_end":11695205,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695206,"byte_end":11695279,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695280,"byte_end":11695356,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695357,"byte_end":11695437,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695438,"byte_end":11695454,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695455,"byte_end":11695458,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695459,"byte_end":11695539,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695540,"byte_end":11695619,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695620,"byte_end":11695700,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695701,"byte_end":11695773,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695774,"byte_end":11695777,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695778,"byte_end":11695855,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695856,"byte_end":11695934,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11695935,"byte_end":11696008,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696009,"byte_end":11696075,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696076,"byte_end":11696079,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696080,"byte_end":11696093,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696094,"byte_end":11696127,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696128,"byte_end":11696162,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696163,"byte_end":11696200,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696201,"byte_end":11696268,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696269,"byte_end":11696304,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696305,"byte_end":11696366,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696367,"byte_end":11696413,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696414,"byte_end":11696475,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696476,"byte_end":11696479,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696480,"byte_end":11696508,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696509,"byte_end":11696512,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696513,"byte_end":11696554,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696555,"byte_end":11696565,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696566,"byte_end":11696590,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696591,"byte_end":11696665,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696666,"byte_end":11696708,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696709,"byte_end":11696723,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696724,"byte_end":11696781,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696782,"byte_end":11696831,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696832,"byte_end":11696846,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696847,"byte_end":11696884,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696885,"byte_end":11696936,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696937,"byte_end":11696983,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11696984,"byte_end":11697014,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697015,"byte_end":11697029,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697030,"byte_end":11697039,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697040,"byte_end":11697045,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697046,"byte_end":11697053,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697054,"byte_end":11697061,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697062,"byte_end":11697137,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697138,"byte_end":11697211,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697212,"byte_end":11697254,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697255,"byte_end":11697258,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697259,"byte_end":11697281,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697282,"byte_end":11697285,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697286,"byte_end":11697363,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697364,"byte_end":11697440,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697441,"byte_end":11697517,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697518,"byte_end":11697541,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697542,"byte_end":11697545,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697546,"byte_end":11697591,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697592,"byte_end":11697599,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697600,"byte_end":11697635,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697636,"byte_end":11697660,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697661,"byte_end":11697664,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697665,"byte_end":11697694,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697695,"byte_end":11697698,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697699,"byte_end":11697738,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697739,"byte_end":11697742,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697743,"byte_end":11697789,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697790,"byte_end":11697826,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697827,"byte_end":11697830,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697831,"byte_end":11697922,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697923,"byte_end":11697997,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11697998,"byte_end":11698020,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698021,"byte_end":11698054,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698055,"byte_end":11698102,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698103,"byte_end":11698155,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698156,"byte_end":11698231,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698232,"byte_end":11698251,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698252,"byte_end":11698265,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698266,"byte_end":11698269,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698270,"byte_end":11698322,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698323,"byte_end":11698400,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698401,"byte_end":11698465,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698466,"byte_end":11698469,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698470,"byte_end":11698513,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698514,"byte_end":11698554,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698555,"byte_end":11698558,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698559,"byte_end":11698616,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698617,"byte_end":11698663,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698664,"byte_end":11698715,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698716,"byte_end":11698734,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698735,"byte_end":11698744,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698745,"byte_end":11698750,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698751,"byte_end":11698758,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698759,"byte_end":11698762,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698763,"byte_end":11698802,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698803,"byte_end":11698844,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698845,"byte_end":11698881,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698882,"byte_end":11698914,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11698915,"byte_end":11699011,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11699012,"byte_end":11699063,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11699064,"byte_end":11699117,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11699118,"byte_end":11699161,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11699162,"byte_end":11699206,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11699207,"byte_end":11699255,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11699256,"byte_end":11699304,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11699305,"byte_end":11699351,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11699352,"byte_end":11699391,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701415,"byte_end":11701425,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700258,"byte_end":11700343,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700344,"byte_end":11700347,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700348,"byte_end":11700386,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700387,"byte_end":11700425,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700426,"byte_end":11700429,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700430,"byte_end":11700443,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700444,"byte_end":11700447,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700448,"byte_end":11700529,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700530,"byte_end":11700533,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700534,"byte_end":11700573,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700574,"byte_end":11700607,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700608,"byte_end":11700637,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700638,"byte_end":11700641,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700642,"byte_end":11700649,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700650,"byte_end":11700668,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700669,"byte_end":11700699,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700700,"byte_end":11700724,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700725,"byte_end":11700732,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700733,"byte_end":11700762,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700763,"byte_end":11700815,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700816,"byte_end":11700819,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700820,"byte_end":11700838,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700839,"byte_end":11700856,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700857,"byte_end":11700937,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700938,"byte_end":11700972,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11700973,"byte_end":11701026,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701027,"byte_end":11701038,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701039,"byte_end":11701046,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701047,"byte_end":11701052,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701053,"byte_end":11701100,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701101,"byte_end":11701154,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701155,"byte_end":11701213,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701214,"byte_end":11701293,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701294,"byte_end":11701306,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701307,"byte_end":11701314,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701315,"byte_end":11701322,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701323,"byte_end":11701326,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701527,"byte_end":11701530,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701454,"byte_end":11701515,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":546},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703530,"byte_end":11703537,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11702245,"byte_end":11702280,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11702281,"byte_end":11702284,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11702285,"byte_end":11702354,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11702355,"byte_end":11702434,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11702435,"byte_end":11702507,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11702508,"byte_end":11702532,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11702533,"byte_end":11702536,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11702537,"byte_end":11702605,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11702606,"byte_end":11702683,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11702684,"byte_end":11702745,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11702746,"byte_end":11702749,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11702750,"byte_end":11702811,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11702812,"byte_end":11702874,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11702875,"byte_end":11702878,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11702879,"byte_end":11702942,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11702943,"byte_end":11703006,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703007,"byte_end":11703086,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703087,"byte_end":11703161,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703162,"byte_end":11703181,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703182,"byte_end":11703185,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703186,"byte_end":11703254,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703255,"byte_end":11703317,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703318,"byte_end":11703393,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ reseting the entire internal state.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703394,"byte_end":11703433,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703434,"byte_end":11703437,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703438,"byte_end":11703474,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703475,"byte_end":11703519,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":547},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703585,"byte_end":11703589,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703544,"byte_end":11703575,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":548},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11704355,"byte_end":11704360,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703596,"byte_end":11703648,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703653,"byte_end":11703656,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703661,"byte_end":11703730,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703735,"byte_end":11703805,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703810,"byte_end":11703856,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703861,"byte_end":11703864,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703869,"byte_end":11703945,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11703950,"byte_end":11704025,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11704030,"byte_end":11704105,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11704110,"byte_end":11704150,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11704155,"byte_end":11704158,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11704163,"byte_end":11704237,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11704242,"byte_end":11704288,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11704293,"byte_end":11704296,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11704301,"byte_end":11704345,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707296,"byte_end":11707302,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11704384,"byte_end":11704449,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11704454,"byte_end":11704457,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11704462,"byte_end":11704536,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11704541,"byte_end":11704613,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11704618,"byte_end":11704691,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11704696,"byte_end":11704739,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11704744,"byte_end":11704747,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11704752,"byte_end":11704825,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11704830,"byte_end":11704893,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11704898,"byte_end":11704973,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11704978,"byte_end":11705053,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705058,"byte_end":11705081,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705086,"byte_end":11705089,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705094,"byte_end":11705166,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705171,"byte_end":11705245,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705250,"byte_end":11705320,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705325,"byte_end":11705328,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705333,"byte_end":11705401,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705406,"byte_end":11705477,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705482,"byte_end":11705562,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705567,"byte_end":11705579,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705584,"byte_end":11705587,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705592,"byte_end":11705662,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705667,"byte_end":11705742,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705747,"byte_end":11705784,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705789,"byte_end":11705792,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705797,"byte_end":11705833,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705838,"byte_end":11705882,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705887,"byte_end":11705890,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705895,"byte_end":11705918,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705923,"byte_end":11705926,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11705931,"byte_end":11706005,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706010,"byte_end":11706084,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706089,"byte_end":11706142,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706147,"byte_end":11706150,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706155,"byte_end":11706226,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706231,"byte_end":11706301,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706306,"byte_end":11706322,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706327,"byte_end":11706330,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706335,"byte_end":11706348,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706353,"byte_end":11706371,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706376,"byte_end":11706381,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706386,"byte_end":11706412,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706417,"byte_end":11706454,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706459,"byte_end":11706464,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706469,"byte_end":11706490,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706495,"byte_end":11706500,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706505,"byte_end":11706535,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706540,"byte_end":11706554,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706559,"byte_end":11706590,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706595,"byte_end":11706628,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706633,"byte_end":11706636,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706641,"byte_end":11706734,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706739,"byte_end":11706757,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706762,"byte_end":11706765,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706770,"byte_end":11706842,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706847,"byte_end":11706907,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706912,"byte_end":11706964,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11706969,"byte_end":11707031,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707036,"byte_end":11707103,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707108,"byte_end":11707111,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707116,"byte_end":11707144,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707149,"byte_end":11707158,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707163,"byte_end":11707168,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707173,"byte_end":11707180,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707185,"byte_end":11707188,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707193,"byte_end":11707262,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707267,"byte_end":11707288,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11708468,"byte_end":11708478,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707383,"byte_end":11707455,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707460,"byte_end":11707509,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707514,"byte_end":11707517,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707522,"byte_end":11707590,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707595,"byte_end":11707662,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707667,"byte_end":11707735,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707740,"byte_end":11707816,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707821,"byte_end":11707887,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707892,"byte_end":11707895,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707900,"byte_end":11707968,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11707973,"byte_end":11708048,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11708053,"byte_end":11708128,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11708133,"byte_end":11708205,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11708210,"byte_end":11708252,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11708257,"byte_end":11708260,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11708265,"byte_end":11708340,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11708345,"byte_end":11708423,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11708428,"byte_end":11708460,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11710086,"byte_end":11710092,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11708896,"byte_end":11708976,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11708981,"byte_end":11709057,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11709062,"byte_end":11709065,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11709070,"byte_end":11709145,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11709150,"byte_end":11709220,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11709225,"byte_end":11709296,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11709301,"byte_end":11709373,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11709378,"byte_end":11709436,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11709441,"byte_end":11709444,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11709449,"byte_end":11709518,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11709523,"byte_end":11709598,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11709603,"byte_end":11709679,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11709684,"byte_end":11709706,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11709711,"byte_end":11709714,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11709719,"byte_end":11709792,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11709797,"byte_end":11709870,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11709875,"byte_end":11709951,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11709956,"byte_end":11709959,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11709964,"byte_end":11710000,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11710005,"byte_end":11710037,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11710042,"byte_end":11710078,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":563},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11710426,"byte_end":11710433,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11710271,"byte_end":11710343,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11710344,"byte_end":11710364,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11710365,"byte_end":11710368,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11710369,"byte_end":11710415,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":565},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11710698,"byte_end":11710703,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11710446,"byte_end":11710478,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11710483,"byte_end":11710486,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11710491,"byte_end":11710568,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11710573,"byte_end":11710629,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11710634,"byte_end":11710637,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11710642,"byte_end":11710688,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11711054,"byte_end":11711060,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11710727,"byte_end":11710772,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11710777,"byte_end":11710780,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11710785,"byte_end":11710859,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11710864,"byte_end":11710944,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11710949,"byte_end":11710987,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11710992,"byte_end":11710995,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11711000,"byte_end":11711046,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1486},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11721877,"byte_end":11721883,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1489}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11723656,"byte_end":11723659,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11722025,"byte_end":11722105,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11722110,"byte_end":11722191,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11722196,"byte_end":11722199,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11722204,"byte_end":11722279,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11722284,"byte_end":11722354,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11722359,"byte_end":11722428,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11722433,"byte_end":11722505,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11722510,"byte_end":11722568,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11722573,"byte_end":11722576,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11722581,"byte_end":11722652,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11722657,"byte_end":11722734,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11722739,"byte_end":11722815,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11722820,"byte_end":11722842,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11722847,"byte_end":11722850,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11722855,"byte_end":11722928,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11722933,"byte_end":11723006,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11723011,"byte_end":11723087,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11723092,"byte_end":11723095,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11723100,"byte_end":11723176,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11723181,"byte_end":11723257,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11723262,"byte_end":11723337,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11723342,"byte_end":11723377,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11723382,"byte_end":11723385,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11723390,"byte_end":11723426,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11723431,"byte_end":11723463,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11723468,"byte_end":11723505,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11723510,"byte_end":11723548,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11723553,"byte_end":11723644,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11725267,"byte_end":11725280,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11723872,"byte_end":11723952,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11723957,"byte_end":11724038,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11724043,"byte_end":11724092,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11724097,"byte_end":11724100,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11724105,"byte_end":11724180,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11724185,"byte_end":11724255,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11724260,"byte_end":11724329,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11724334,"byte_end":11724406,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11724411,"byte_end":11724469,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11724474,"byte_end":11724477,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11724482,"byte_end":11724553,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11724558,"byte_end":11724635,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11724640,"byte_end":11724716,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11724721,"byte_end":11724743,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11724748,"byte_end":11724751,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11724756,"byte_end":11724829,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11724834,"byte_end":11724907,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11724912,"byte_end":11724988,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11724993,"byte_end":11724996,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11725001,"byte_end":11725037,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11725042,"byte_end":11725074,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11725079,"byte_end":11725116,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11725121,"byte_end":11725159,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11725164,"byte_end":11725255,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11727383,"byte_end":11727393,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11725806,"byte_end":11725886,"line_start":118,"line_end":118,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11725891,"byte_end":11725972,"line_start":119,"line_end":119,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11725977,"byte_end":11725980,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11725985,"byte_end":11726060,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11726065,"byte_end":11726135,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11726140,"byte_end":11726211,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11726216,"byte_end":11726288,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11726293,"byte_end":11726351,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11726356,"byte_end":11726359,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11726364,"byte_end":11726435,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11726440,"byte_end":11726517,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11726522,"byte_end":11726598,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11726603,"byte_end":11726625,"line_start":130,"line_end":130,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11726630,"byte_end":11726633,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11726638,"byte_end":11726717,"line_start":132,"line_end":132,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11726722,"byte_end":11726799,"line_start":133,"line_end":133,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11726804,"byte_end":11726807,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11726812,"byte_end":11726885,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11726890,"byte_end":11726963,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11726968,"byte_end":11727044,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11727049,"byte_end":11727052,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11727057,"byte_end":11727093,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11727098,"byte_end":11727130,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11727135,"byte_end":11727173,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11727178,"byte_end":11727216,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11727221,"byte_end":11727275,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11727280,"byte_end":11727371,"line_start":144,"line_end":144,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11728028,"byte_end":11728035,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11727745,"byte_end":11727808,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11727813,"byte_end":11727826,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11727831,"byte_end":11727834,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11727839,"byte_end":11727914,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11727919,"byte_end":11727989,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11727994,"byte_end":11728016,"line_start":163,"line_end":163,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11728379,"byte_end":11728386,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11728088,"byte_end":11728159,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11728164,"byte_end":11728177,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11728182,"byte_end":11728185,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11728190,"byte_end":11728265,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11728270,"byte_end":11728340,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11728345,"byte_end":11728367,"line_start":173,"line_end":173,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11728749,"byte_end":11728760,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11728451,"byte_end":11728529,"line_start":178,"line_end":178,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11728534,"byte_end":11728547,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11728552,"byte_end":11728555,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11728560,"byte_end":11728635,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11728640,"byte_end":11728710,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11728715,"byte_end":11728737,"line_start":183,"line_end":183,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11729107,"byte_end":11729112,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11728856,"byte_end":11728914,"line_start":188,"line_end":188,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11728919,"byte_end":11728932,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11728937,"byte_end":11728940,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11728945,"byte_end":11729019,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11729024,"byte_end":11729095,"line_start":192,"line_end":192,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11729424,"byte_end":11729433,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11729165,"byte_end":11729231,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11729236,"byte_end":11729249,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11729254,"byte_end":11729257,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11729262,"byte_end":11729336,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11729341,"byte_end":11729412,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11729553,"byte_end":11729564,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11729498,"byte_end":11729541,"line_start":206,"line_end":206,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11729699,"byte_end":11729714,"line_start":212,"line_end":212,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11729636,"byte_end":11729687,"line_start":211,"line_end":211,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11729854,"byte_end":11729866,"line_start":217,"line_end":217,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11729798,"byte_end":11729842,"line_start":216,"line_end":216,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11730003,"byte_end":11730019,"line_start":222,"line_end":222,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11729939,"byte_end":11729991,"line_start":221,"line_end":221,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11730369,"byte_end":11730379,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11730104,"byte_end":11730167,"line_start":226,"line_end":226,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11730172,"byte_end":11730175,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11730180,"byte_end":11730255,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11730260,"byte_end":11730330,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11730335,"byte_end":11730357,"line_start":230,"line_end":230,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11730751,"byte_end":11730761,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11730429,"byte_end":11730503,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11730508,"byte_end":11730549,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11730554,"byte_end":11730557,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11730562,"byte_end":11730637,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11730642,"byte_end":11730712,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11730717,"byte_end":11730739,"line_start":240,"line_end":240,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1206},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11732735,"byte_end":11732746,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11732420,"byte_end":11732491,"line_start":304,"line_end":304,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11732492,"byte_end":11732564,"line_start":305,"line_end":305,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11732565,"byte_end":11732625,"line_start":306,"line_end":306,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11732626,"byte_end":11732629,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11732630,"byte_end":11732666,"line_start":308,"line_end":308,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11732684,"byte_end":11732723,"line_start":310,"line_end":310,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1209},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11732832,"byte_end":11732834,"line_start":313,"line_end":313,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11732759,"byte_end":11732823,"line_start":312,"line_end":312,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1210},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11732866,"byte_end":11732871,"line_start":316,"line_end":316,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11732844,"byte_end":11732857,"line_start":315,"line_end":315,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1211},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11732936,"byte_end":11732944,"line_start":319,"line_end":319,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11732881,"byte_end":11732927,"line_start":318,"line_end":318,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11733031,"byte_end":11733040,"line_start":322,"line_end":322,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11732961,"byte_end":11733022,"line_start":321,"line_end":321,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11733273,"byte_end":11733276,"line_start":331,"line_end":331,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11733221,"byte_end":11733261,"line_start":330,"line_end":330,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11734005,"byte_end":11734015,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1448}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11734266,"byte_end":11734269,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11734198,"byte_end":11734254,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11734617,"byte_end":11734630,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11734501,"byte_end":11734583,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11734588,"byte_end":11734605,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735344,"byte_end":11735351,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735057,"byte_end":11735120,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735125,"byte_end":11735142,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735147,"byte_end":11735150,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735155,"byte_end":11735230,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735235,"byte_end":11735305,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735310,"byte_end":11735332,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735699,"byte_end":11735706,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735404,"byte_end":11735475,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735480,"byte_end":11735497,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735502,"byte_end":11735505,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735510,"byte_end":11735585,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735590,"byte_end":11735660,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735665,"byte_end":11735687,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11736073,"byte_end":11736084,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735771,"byte_end":11735849,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735854,"byte_end":11735871,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735876,"byte_end":11735879,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735884,"byte_end":11735959,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735964,"byte_end":11736034,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11736039,"byte_end":11736061,"line_start":86,"line_end":86,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11736449,"byte_end":11736459,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11736180,"byte_end":11736247,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11736252,"byte_end":11736255,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11736260,"byte_end":11736335,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11736340,"byte_end":11736410,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11736415,"byte_end":11736437,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11736571,"byte_end":11736578,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11736509,"byte_end":11736559,"line_start":100,"line_end":100,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11736701,"byte_end":11736712,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11736631,"byte_end":11736689,"line_start":105,"line_end":105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11736832,"byte_end":11736843,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11736777,"byte_end":11736820,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11736973,"byte_end":11736988,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11736910,"byte_end":11736961,"line_start":115,"line_end":115,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11739089,"byte_end":11739100,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1407}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11739307,"byte_end":11739310,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11739238,"byte_end":11739295,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11739868,"byte_end":11739875,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11739580,"byte_end":11739643,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11739648,"byte_end":11739666,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11739671,"byte_end":11739674,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11739679,"byte_end":11739754,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11739759,"byte_end":11739829,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11739834,"byte_end":11739856,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11740224,"byte_end":11740231,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11739928,"byte_end":11739999,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11740004,"byte_end":11740022,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11740027,"byte_end":11740030,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11740035,"byte_end":11740110,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11740115,"byte_end":11740185,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11740190,"byte_end":11740212,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11740599,"byte_end":11740610,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11740296,"byte_end":11740374,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11740379,"byte_end":11740397,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11740402,"byte_end":11740405,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11740410,"byte_end":11740485,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11740490,"byte_end":11740560,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11740565,"byte_end":11740587,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11740976,"byte_end":11740986,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11740706,"byte_end":11740774,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11740779,"byte_end":11740782,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11740787,"byte_end":11740862,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11740867,"byte_end":11740937,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11740942,"byte_end":11740964,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11741098,"byte_end":11741105,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11741036,"byte_end":11741086,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11741228,"byte_end":11741239,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11741158,"byte_end":11741216,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11741360,"byte_end":11741372,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11741304,"byte_end":11741348,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11741503,"byte_end":11741519,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11741439,"byte_end":11741491,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":940},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":1218},{"krate":0,"index":1228},{"krate":0,"index":1226},{"krate":0,"index":1225},{"krate":0,"index":994},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1244},{"krate":0,"index":1242},{"krate":0,"index":1241},{"krate":0,"index":996},{"krate":0,"index":1003},{"krate":0,"index":1007},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1038}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743046,"byte_end":11743098,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743099,"byte_end":11743102,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743103,"byte_end":11743173,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743174,"byte_end":11743232,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743233,"byte_end":11743305,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743306,"byte_end":11743376,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743377,"byte_end":11743444,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743445,"byte_end":11743448,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743449,"byte_end":11743470,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743471,"byte_end":11743474,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743475,"byte_end":11743550,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743551,"byte_end":11743622,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743623,"byte_end":11743694,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743695,"byte_end":11743765,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743766,"byte_end":11743806,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743807,"byte_end":11743810,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743811,"byte_end":11743818,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743819,"byte_end":11743862,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743863,"byte_end":11743921,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743922,"byte_end":11743925,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743926,"byte_end":11743981,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11743982,"byte_end":11744024,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744025,"byte_end":11744030,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744031,"byte_end":11744083,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744084,"byte_end":11744089,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744090,"byte_end":11744112,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744113,"byte_end":11744120,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744121,"byte_end":11744124,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744125,"byte_end":11744197,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744198,"byte_end":11744269,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744270,"byte_end":11744289,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744290,"byte_end":11744293,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744294,"byte_end":11744305,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744306,"byte_end":11744355,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744356,"byte_end":11744405,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744406,"byte_end":11744455,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744456,"byte_end":11744463,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744464,"byte_end":11744467,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744468,"byte_end":11744506,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744507,"byte_end":11744510,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744511,"byte_end":11744518,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744519,"byte_end":11744562,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744563,"byte_end":11744621,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744622,"byte_end":11744625,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744626,"byte_end":11744651,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744652,"byte_end":11744673,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744674,"byte_end":11744677,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744678,"byte_end":11744754,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744755,"byte_end":11744764,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744765,"byte_end":11744807,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744808,"byte_end":11744813,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744814,"byte_end":11744887,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744888,"byte_end":11744935,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744936,"byte_end":11744939,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744940,"byte_end":11744977,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744978,"byte_end":11744992,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744993,"byte_end":11744998,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11744999,"byte_end":11745006,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745007,"byte_end":11745010,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745011,"byte_end":11745053,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745054,"byte_end":11745057,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745058,"byte_end":11745069,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745070,"byte_end":11745109,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745110,"byte_end":11745149,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745150,"byte_end":11745189,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745190,"byte_end":11745197,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745198,"byte_end":11745201,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745202,"byte_end":11745216,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745217,"byte_end":11745220,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745221,"byte_end":11745296,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745297,"byte_end":11745370,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745371,"byte_end":11745437,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745438,"byte_end":11745507,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745508,"byte_end":11745573,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745574,"byte_end":11745577,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745578,"byte_end":11745594,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745595,"byte_end":11745598,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745599,"byte_end":11745675,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745676,"byte_end":11745717,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745718,"byte_end":11745721,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745722,"byte_end":11745729,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745730,"byte_end":11745761,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745762,"byte_end":11745812,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745813,"byte_end":11745854,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745855,"byte_end":11745890,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745891,"byte_end":11745939,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745940,"byte_end":11745971,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11745972,"byte_end":11746020,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746021,"byte_end":11746070,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746071,"byte_end":11746093,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746094,"byte_end":11746101,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746102,"byte_end":11746124,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746125,"byte_end":11746132,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746133,"byte_end":11746136,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746137,"byte_end":11746185,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746186,"byte_end":11746189,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746190,"byte_end":11746201,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746202,"byte_end":11746254,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746255,"byte_end":11746320,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746321,"byte_end":11746386,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746387,"byte_end":11746452,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746453,"byte_end":11746460,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746461,"byte_end":11746464,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746465,"byte_end":11746541,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746542,"byte_end":11746616,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746617,"byte_end":11746689,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746690,"byte_end":11746766,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746767,"byte_end":11746809,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746810,"byte_end":11746813,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746814,"byte_end":11746830,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746831,"byte_end":11746834,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746835,"byte_end":11746910,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746911,"byte_end":11746952,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746953,"byte_end":11746956,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746957,"byte_end":11746964,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746965,"byte_end":11746996,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11746997,"byte_end":11747047,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747048,"byte_end":11747089,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747090,"byte_end":11747125,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747126,"byte_end":11747174,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747175,"byte_end":11747206,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747207,"byte_end":11747255,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747256,"byte_end":11747315,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747316,"byte_end":11747338,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747339,"byte_end":11747346,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747347,"byte_end":11747369,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747370,"byte_end":11747377,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747378,"byte_end":11747381,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747382,"byte_end":11747430,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747431,"byte_end":11747434,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747435,"byte_end":11747446,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747447,"byte_end":11747496,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747497,"byte_end":11747551,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747552,"byte_end":11747606,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747607,"byte_end":11747661,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747662,"byte_end":11747669,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747670,"byte_end":11747673,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747674,"byte_end":11747747,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747748,"byte_end":11747815,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747816,"byte_end":11747819,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747820,"byte_end":11747836,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747837,"byte_end":11747840,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747841,"byte_end":11747917,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747918,"byte_end":11747990,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11747991,"byte_end":11748030,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748031,"byte_end":11748034,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748035,"byte_end":11748042,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748043,"byte_end":11748074,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748075,"byte_end":11748125,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748126,"byte_end":11748167,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748168,"byte_end":11748203,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748204,"byte_end":11748252,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748253,"byte_end":11748284,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748285,"byte_end":11748332,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748333,"byte_end":11748353,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748354,"byte_end":11748376,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748377,"byte_end":11748384,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748385,"byte_end":11748407,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748408,"byte_end":11748415,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748416,"byte_end":11748419,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748420,"byte_end":11748468,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748469,"byte_end":11748472,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748473,"byte_end":11748484,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748485,"byte_end":11748537,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748538,"byte_end":11748603,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748604,"byte_end":11748669,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748670,"byte_end":11748735,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748736,"byte_end":11748743,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748744,"byte_end":11748747,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748748,"byte_end":11748820,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748821,"byte_end":11748896,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748897,"byte_end":11748969,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11748970,"byte_end":11749046,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749047,"byte_end":11749120,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749121,"byte_end":11749124,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749125,"byte_end":11749141,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749142,"byte_end":11749145,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749146,"byte_end":11749220,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749221,"byte_end":11749288,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749289,"byte_end":11749292,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749293,"byte_end":11749300,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749301,"byte_end":11749332,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749333,"byte_end":11749383,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749384,"byte_end":11749425,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749426,"byte_end":11749461,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749462,"byte_end":11749510,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749511,"byte_end":11749542,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749543,"byte_end":11749591,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749592,"byte_end":11749612,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749613,"byte_end":11749635,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749636,"byte_end":11749643,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749644,"byte_end":11749666,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749667,"byte_end":11749674,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749675,"byte_end":11749678,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749679,"byte_end":11749727,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749728,"byte_end":11749731,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749732,"byte_end":11749743,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749744,"byte_end":11749770,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749771,"byte_end":11749816,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749817,"byte_end":11749862,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749863,"byte_end":11749908,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749909,"byte_end":11749912,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749913,"byte_end":11749941,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749942,"byte_end":11749987,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11749988,"byte_end":11750033,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750034,"byte_end":11750079,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750080,"byte_end":11750087,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750088,"byte_end":11750091,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750092,"byte_end":11750164,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750165,"byte_end":11750241,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750242,"byte_end":11750312,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750313,"byte_end":11750382,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750383,"byte_end":11750420,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750421,"byte_end":11750424,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750425,"byte_end":11750499,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750500,"byte_end":11750554,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750555,"byte_end":11750558,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750559,"byte_end":11750575,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750576,"byte_end":11750579,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750580,"byte_end":11750653,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750654,"byte_end":11750730,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750731,"byte_end":11750805,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750806,"byte_end":11750819,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750820,"byte_end":11750823,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750824,"byte_end":11750831,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750832,"byte_end":11750863,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750864,"byte_end":11750914,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750915,"byte_end":11750956,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750957,"byte_end":11750992,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11750993,"byte_end":11751042,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751043,"byte_end":11751074,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751075,"byte_end":11751123,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751124,"byte_end":11751168,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751169,"byte_end":11751191,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751192,"byte_end":11751199,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751200,"byte_end":11751222,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751223,"byte_end":11751230,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751231,"byte_end":11751234,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751235,"byte_end":11751283,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751284,"byte_end":11751287,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751288,"byte_end":11751299,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751300,"byte_end":11751326,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751327,"byte_end":11751377,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751378,"byte_end":11751428,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751429,"byte_end":11751479,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751480,"byte_end":11751483,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751484,"byte_end":11751504,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751505,"byte_end":11751535,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751536,"byte_end":11751566,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751567,"byte_end":11751597,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751598,"byte_end":11751605,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751606,"byte_end":11751609,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751610,"byte_end":11751683,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751684,"byte_end":11751759,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751760,"byte_end":11751832,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751833,"byte_end":11751871,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751872,"byte_end":11751875,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751876,"byte_end":11751950,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11751951,"byte_end":11752027,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752028,"byte_end":11752101,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752102,"byte_end":11752130,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752131,"byte_end":11752134,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752135,"byte_end":11752151,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752152,"byte_end":11752155,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752156,"byte_end":11752229,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752230,"byte_end":11752306,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752307,"byte_end":11752381,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752382,"byte_end":11752454,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752455,"byte_end":11752466,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752467,"byte_end":11752470,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752471,"byte_end":11752478,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752479,"byte_end":11752510,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752511,"byte_end":11752561,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752562,"byte_end":11752603,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752604,"byte_end":11752639,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752640,"byte_end":11752689,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752690,"byte_end":11752721,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752722,"byte_end":11752787,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752788,"byte_end":11752808,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752809,"byte_end":11752831,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752832,"byte_end":11752839,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752840,"byte_end":11752847,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752848,"byte_end":11752851,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752852,"byte_end":11752900,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752901,"byte_end":11752904,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752905,"byte_end":11752916,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752917,"byte_end":11752943,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752944,"byte_end":11752994,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11752995,"byte_end":11753045,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753046,"byte_end":11753096,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753097,"byte_end":11753100,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753101,"byte_end":11753121,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753122,"byte_end":11753152,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753153,"byte_end":11753183,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753184,"byte_end":11753214,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753215,"byte_end":11753222,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753223,"byte_end":11753226,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753227,"byte_end":11753300,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753301,"byte_end":11753375,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753376,"byte_end":11753450,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753451,"byte_end":11753524,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753525,"byte_end":11753601,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753602,"byte_end":11753635,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753636,"byte_end":11753639,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753640,"byte_end":11753656,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753657,"byte_end":11753660,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753661,"byte_end":11753735,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753736,"byte_end":11753803,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753804,"byte_end":11753807,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753808,"byte_end":11753815,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753816,"byte_end":11753847,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753848,"byte_end":11753898,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753899,"byte_end":11753940,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753941,"byte_end":11753976,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11753977,"byte_end":11754025,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754026,"byte_end":11754057,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754058,"byte_end":11754105,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754106,"byte_end":11754152,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754153,"byte_end":11754175,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754176,"byte_end":11754183,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754184,"byte_end":11754206,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754207,"byte_end":11754214,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754215,"byte_end":11754218,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754219,"byte_end":11754267,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754268,"byte_end":11754271,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754272,"byte_end":11754283,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754284,"byte_end":11754340,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754341,"byte_end":11754402,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754403,"byte_end":11754464,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754465,"byte_end":11754526,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754527,"byte_end":11754534,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754535,"byte_end":11754538,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754539,"byte_end":11754613,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754614,"byte_end":11754634,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754635,"byte_end":11754638,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754639,"byte_end":11754653,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754654,"byte_end":11754657,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754658,"byte_end":11754733,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754734,"byte_end":11754806,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754807,"byte_end":11754875,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754876,"byte_end":11754952,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754953,"byte_end":11754994,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754995,"byte_end":11754998,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11754999,"byte_end":11755069,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755070,"byte_end":11755088,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755089,"byte_end":11755092,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755093,"byte_end":11755100,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755101,"byte_end":11755133,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755134,"byte_end":11755184,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755185,"byte_end":11755229,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755230,"byte_end":11755243,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755244,"byte_end":11755279,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755280,"byte_end":11755311,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755312,"byte_end":11755335,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755336,"byte_end":11755343,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755344,"byte_end":11755366,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755367,"byte_end":11755374,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755375,"byte_end":11755378,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755379,"byte_end":11755429,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755430,"byte_end":11755433,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755434,"byte_end":11755445,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755446,"byte_end":11755479,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755480,"byte_end":11755513,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755514,"byte_end":11755547,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755548,"byte_end":11755555,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755556,"byte_end":11755559,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755560,"byte_end":11755629,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755630,"byte_end":11755667,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755668,"byte_end":11755707,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755708,"byte_end":11755753,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755754,"byte_end":11755801,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755802,"byte_end":11755832,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11755833,"byte_end":11755866,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1218},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11756428,"byte_end":11756435,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11756110,"byte_end":11756165,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11756166,"byte_end":11756169,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11756170,"byte_end":11756245,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11756246,"byte_end":11756326,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11756327,"byte_end":11756386,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":994},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11757106,"byte_end":11757131,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":995}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11757021,"byte_end":11757094,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11757476,"byte_end":11757496,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11757152,"byte_end":11757226,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11757227,"byte_end":11757230,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11757231,"byte_end":11757310,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11757311,"byte_end":11757354,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11757355,"byte_end":11757358,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11757359,"byte_end":11757412,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11757413,"byte_end":11757416,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11757417,"byte_end":11757447,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11757840,"byte_end":11757843,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11757749,"byte_end":11757828,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11758070,"byte_end":11758077,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11757967,"byte_end":11758042,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11758047,"byte_end":11758058,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11758299,"byte_end":11758315,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11758127,"byte_end":11758168,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11758173,"byte_end":11758176,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11758181,"byte_end":11758254,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11758259,"byte_end":11758287,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11758736,"byte_end":11758756,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11758380,"byte_end":11758414,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11758419,"byte_end":11758422,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11758427,"byte_end":11758497,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11758502,"byte_end":11758577,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11758582,"byte_end":11758654,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11758659,"byte_end":11758724,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11764011,"byte_end":11764014,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763469,"byte_end":11763544,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763549,"byte_end":11763560,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763565,"byte_end":11763568,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763573,"byte_end":11763587,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763592,"byte_end":11763595,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763600,"byte_end":11763607,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763612,"byte_end":11763643,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763648,"byte_end":11763696,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763701,"byte_end":11763704,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763709,"byte_end":11763750,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763755,"byte_end":11763790,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763795,"byte_end":11763826,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763831,"byte_end":11763862,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763867,"byte_end":11763896,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763901,"byte_end":11763921,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763926,"byte_end":11763948,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763953,"byte_end":11763960,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763965,"byte_end":11763987,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763992,"byte_end":11763999,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765199,"byte_end":11765209,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11764678,"byte_end":11764727,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11764732,"byte_end":11764735,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11764740,"byte_end":11764772,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11764777,"byte_end":11764780,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11764785,"byte_end":11764853,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11764858,"byte_end":11764861,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11764866,"byte_end":11764880,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11764885,"byte_end":11764888,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11764893,"byte_end":11764900,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11764905,"byte_end":11764936,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11764941,"byte_end":11764989,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11764994,"byte_end":11764997,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765002,"byte_end":11765043,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765048,"byte_end":11765083,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765088,"byte_end":11765109,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765114,"byte_end":11765136,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765141,"byte_end":11765148,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765153,"byte_end":11765175,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765180,"byte_end":11765187,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765841,"byte_end":11765854,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765308,"byte_end":11765360,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765365,"byte_end":11765368,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765373,"byte_end":11765411,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765416,"byte_end":11765419,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765424,"byte_end":11765492,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765497,"byte_end":11765500,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765505,"byte_end":11765519,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765524,"byte_end":11765527,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765532,"byte_end":11765539,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765544,"byte_end":11765575,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765580,"byte_end":11765628,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765633,"byte_end":11765636,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765641,"byte_end":11765682,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765687,"byte_end":11765722,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765727,"byte_end":11765751,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765756,"byte_end":11765778,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765783,"byte_end":11765790,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765795,"byte_end":11765817,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765822,"byte_end":11765829,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766487,"byte_end":11766500,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11765954,"byte_end":11766006,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766011,"byte_end":11766014,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766019,"byte_end":11766057,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766062,"byte_end":11766065,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766070,"byte_end":11766138,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766143,"byte_end":11766146,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766151,"byte_end":11766165,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766170,"byte_end":11766173,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766178,"byte_end":11766185,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766190,"byte_end":11766221,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766226,"byte_end":11766274,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766279,"byte_end":11766282,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766287,"byte_end":11766328,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766333,"byte_end":11766368,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766373,"byte_end":11766397,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766402,"byte_end":11766424,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766429,"byte_end":11766436,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766441,"byte_end":11766463,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766468,"byte_end":11766475,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767581,"byte_end":11767597,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766669,"byte_end":11766698,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766703,"byte_end":11766706,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766711,"byte_end":11766783,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766788,"byte_end":11766813,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766818,"byte_end":11766821,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766826,"byte_end":11766898,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766903,"byte_end":11766972,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11766977,"byte_end":11767050,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767055,"byte_end":11767067,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767072,"byte_end":11767075,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767080,"byte_end":11767155,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767160,"byte_end":11767221,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767226,"byte_end":11767229,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767234,"byte_end":11767248,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767253,"byte_end":11767256,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767261,"byte_end":11767268,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767273,"byte_end":11767304,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767309,"byte_end":11767357,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767362,"byte_end":11767365,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767370,"byte_end":11767411,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767416,"byte_end":11767451,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767456,"byte_end":11767491,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767496,"byte_end":11767518,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767523,"byte_end":11767530,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767535,"byte_end":11767557,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767562,"byte_end":11767569,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768258,"byte_end":11768277,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767694,"byte_end":11767757,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767762,"byte_end":11767765,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767770,"byte_end":11767821,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767826,"byte_end":11767829,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767834,"byte_end":11767902,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767907,"byte_end":11767910,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767915,"byte_end":11767929,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767934,"byte_end":11767937,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767942,"byte_end":11767949,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767954,"byte_end":11767985,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11767990,"byte_end":11768038,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768043,"byte_end":11768046,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768051,"byte_end":11768092,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768097,"byte_end":11768132,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768137,"byte_end":11768168,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768173,"byte_end":11768195,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768200,"byte_end":11768207,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768212,"byte_end":11768234,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768239,"byte_end":11768246,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768936,"byte_end":11768955,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768446,"byte_end":11768512,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768517,"byte_end":11768520,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768525,"byte_end":11768580,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768585,"byte_end":11768588,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768593,"byte_end":11768607,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768612,"byte_end":11768615,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768620,"byte_end":11768627,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768632,"byte_end":11768663,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768668,"byte_end":11768716,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768721,"byte_end":11768724,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768729,"byte_end":11768770,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768775,"byte_end":11768810,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768815,"byte_end":11768846,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768851,"byte_end":11768873,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768878,"byte_end":11768885,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768890,"byte_end":11768912,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11768917,"byte_end":11768924,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769509,"byte_end":11769526,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769058,"byte_end":11769131,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769136,"byte_end":11769154,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769159,"byte_end":11769162,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769167,"byte_end":11769181,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769186,"byte_end":11769189,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769194,"byte_end":11769201,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769206,"byte_end":11769237,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769242,"byte_end":11769290,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769295,"byte_end":11769298,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769303,"byte_end":11769344,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769349,"byte_end":11769384,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769389,"byte_end":11769419,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769424,"byte_end":11769446,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769451,"byte_end":11769458,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769463,"byte_end":11769485,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769490,"byte_end":11769497,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770176,"byte_end":11770184,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769627,"byte_end":11769690,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769695,"byte_end":11769698,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769703,"byte_end":11769764,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769769,"byte_end":11769772,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769777,"byte_end":11769831,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769836,"byte_end":11769839,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769844,"byte_end":11769858,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769863,"byte_end":11769866,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769871,"byte_end":11769878,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769883,"byte_end":11769914,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769919,"byte_end":11769967,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769972,"byte_end":11769975,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11769980,"byte_end":11770021,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770026,"byte_end":11770061,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770066,"byte_end":11770086,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770091,"byte_end":11770113,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770118,"byte_end":11770125,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770130,"byte_end":11770152,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770157,"byte_end":11770164,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770704,"byte_end":11770713,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770282,"byte_end":11770345,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770350,"byte_end":11770353,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770358,"byte_end":11770372,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770377,"byte_end":11770380,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770385,"byte_end":11770392,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770397,"byte_end":11770445,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770450,"byte_end":11770471,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770476,"byte_end":11770511,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770516,"byte_end":11770547,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770552,"byte_end":11770583,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770588,"byte_end":11770617,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770622,"byte_end":11770642,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770647,"byte_end":11770668,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770673,"byte_end":11770680,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770685,"byte_end":11770692,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771369,"byte_end":11771377,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770865,"byte_end":11770918,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770923,"byte_end":11770926,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770931,"byte_end":11770945,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770950,"byte_end":11770953,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770958,"byte_end":11770965,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11770970,"byte_end":11771001,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771006,"byte_end":11771054,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771059,"byte_end":11771062,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771067,"byte_end":11771108,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771113,"byte_end":11771148,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771153,"byte_end":11771184,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771189,"byte_end":11771220,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771225,"byte_end":11771254,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771259,"byte_end":11771279,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771284,"byte_end":11771306,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771311,"byte_end":11771318,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771323,"byte_end":11771345,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771350,"byte_end":11771357,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771950,"byte_end":11771959,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771541,"byte_end":11771595,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771600,"byte_end":11771603,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771608,"byte_end":11771622,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771627,"byte_end":11771630,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771635,"byte_end":11771642,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771647,"byte_end":11771679,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771684,"byte_end":11771734,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771739,"byte_end":11771783,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771788,"byte_end":11771823,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771828,"byte_end":11771859,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771864,"byte_end":11771887,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771892,"byte_end":11771899,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771904,"byte_end":11771926,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11771931,"byte_end":11771938,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11772568,"byte_end":11772578,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11772120,"byte_end":11772169,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11772174,"byte_end":11772177,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11772182,"byte_end":11772196,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11772201,"byte_end":11772204,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11772209,"byte_end":11772216,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11772221,"byte_end":11772266,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11772271,"byte_end":11772321,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11772326,"byte_end":11772382,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11772387,"byte_end":11772400,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11772405,"byte_end":11772440,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11772445,"byte_end":11772476,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11772481,"byte_end":11772505,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11772510,"byte_end":11772517,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11772522,"byte_end":11772544,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11772549,"byte_end":11772556,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11773957,"byte_end":11773967,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11773714,"byte_end":11773801,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11773802,"byte_end":11773805,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11773806,"byte_end":11773844,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11773845,"byte_end":11773883,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11775067,"byte_end":11775070,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11774648,"byte_end":11774708,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11774713,"byte_end":11774716,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11774721,"byte_end":11774731,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11774736,"byte_end":11774739,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11774744,"byte_end":11774816,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11774821,"byte_end":11774894,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11774899,"byte_end":11774966,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11774971,"byte_end":11774974,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11774979,"byte_end":11775055,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776201,"byte_end":11776220,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11775228,"byte_end":11775288,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11775293,"byte_end":11775296,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11775301,"byte_end":11775364,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11775369,"byte_end":11775447,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11775452,"byte_end":11775519,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11775524,"byte_end":11775596,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11775601,"byte_end":11775671,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11775676,"byte_end":11775699,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11775704,"byte_end":11775707,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11775712,"byte_end":11775722,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11775727,"byte_end":11775730,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11775735,"byte_end":11775810,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11775815,"byte_end":11775888,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11775893,"byte_end":11775969,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11775974,"byte_end":11776047,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776052,"byte_end":11776122,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776127,"byte_end":11776130,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776135,"byte_end":11776189,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776786,"byte_end":11776796,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776348,"byte_end":11776398,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776403,"byte_end":11776406,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776411,"byte_end":11776418,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776423,"byte_end":11776442,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776447,"byte_end":11776485,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776490,"byte_end":11776493,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776498,"byte_end":11776532,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776537,"byte_end":11776584,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776589,"byte_end":11776596,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776601,"byte_end":11776608,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776613,"byte_end":11776651,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776656,"byte_end":11776659,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776664,"byte_end":11776717,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776722,"byte_end":11776762,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11776767,"byte_end":11776774,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1269},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11781121,"byte_end":11781142,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11781075,"byte_end":11781116,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1271},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11781177,"byte_end":11781179,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11781148,"byte_end":11781172,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":1268},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11781053,"byte_end":11781068,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1271}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11780971,"byte_end":11781026,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11783101,"byte_end":11783118,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11781915,"byte_end":11782056,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782057,"byte_end":11782060,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782061,"byte_end":11782099,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782100,"byte_end":11782138,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782139,"byte_end":11782142,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782143,"byte_end":11782156,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782157,"byte_end":11782224,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782225,"byte_end":11782228,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782229,"byte_end":11782262,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782263,"byte_end":11782292,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782293,"byte_end":11782296,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782297,"byte_end":11782304,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782305,"byte_end":11782361,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782362,"byte_end":11782396,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782397,"byte_end":11782400,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782401,"byte_end":11782406,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782407,"byte_end":11782454,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782455,"byte_end":11782508,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782509,"byte_end":11782586,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782587,"byte_end":11782622,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782623,"byte_end":11782644,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782645,"byte_end":11782695,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782696,"byte_end":11782759,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782760,"byte_end":11782823,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782824,"byte_end":11782887,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782888,"byte_end":11782944,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782945,"byte_end":11782994,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11782995,"byte_end":11783007,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11783008,"byte_end":11783015,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11783016,"byte_end":11783023,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11783024,"byte_end":11783027,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11784453,"byte_end":11784456,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11784011,"byte_end":11784079,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11784084,"byte_end":11784087,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11784092,"byte_end":11784102,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11784107,"byte_end":11784110,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11784115,"byte_end":11784194,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11784199,"byte_end":11784273,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11784278,"byte_end":11784345,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11784350,"byte_end":11784353,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11784358,"byte_end":11784441,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11785767,"byte_end":11785786,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11784736,"byte_end":11784804,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11784809,"byte_end":11784812,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11784817,"byte_end":11784887,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11784892,"byte_end":11784978,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11784983,"byte_end":11785053,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11785058,"byte_end":11785135,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11785140,"byte_end":11785210,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11785215,"byte_end":11785238,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11785243,"byte_end":11785246,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11785251,"byte_end":11785261,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11785266,"byte_end":11785269,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11785274,"byte_end":11785356,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11785361,"byte_end":11785434,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11785439,"byte_end":11785516,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11785521,"byte_end":11785594,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11785599,"byte_end":11785674,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11785679,"byte_end":11785682,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11785687,"byte_end":11785755,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11786574,"byte_end":11786584,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11786043,"byte_end":11786094,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11786099,"byte_end":11786102,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11786107,"byte_end":11786114,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11786119,"byte_end":11786138,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11786143,"byte_end":11786188,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11786193,"byte_end":11786196,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11786201,"byte_end":11786273,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11786278,"byte_end":11786325,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11786330,"byte_end":11786337,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11786342,"byte_end":11786349,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11786354,"byte_end":11786399,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11786404,"byte_end":11786407,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11786412,"byte_end":11786505,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11786510,"byte_end":11786550,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11786555,"byte_end":11786562,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11790679,"byte_end":11790701,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11790632,"byte_end":11790674,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11790737,"byte_end":11790739,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11790707,"byte_end":11790732,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11790603,"byte_end":11790625,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1303}],"decl_id":null,"docs":" An error occured while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a chunk.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11790520,"byte_end":11790576,"line_start":237,"line_end":237,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":186},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":375}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":6616,"byte_end":6646,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":51},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8580,"byte_end":8597,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":52}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7362,"byte_end":7439,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7440,"byte_end":7450,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7451,"byte_end":7454,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7455,"byte_end":7520,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7521,"byte_end":7595,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7596,"byte_end":7599,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7600,"byte_end":7683,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7684,"byte_end":7687,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7688,"byte_end":7702,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7703,"byte_end":7706,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7707,"byte_end":7720,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7721,"byte_end":7743,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7744,"byte_end":7784,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7785,"byte_end":7788,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7789,"byte_end":7807,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7808,"byte_end":7829,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7830,"byte_end":7875,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7876,"byte_end":7917,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7918,"byte_end":7921,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7922,"byte_end":7973,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7974,"byte_end":8037,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8038,"byte_end":8059,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8060,"byte_end":8109,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8110,"byte_end":8156,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8157,"byte_end":8178,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8179,"byte_end":8196,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8197,"byte_end":8278,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8279,"byte_end":8301,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8302,"byte_end":8319,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8320,"byte_end":8333,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8334,"byte_end":8345,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8346,"byte_end":8349,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8350,"byte_end":8383,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8384,"byte_end":8459,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8460,"byte_end":8487,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8488,"byte_end":8499,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8500,"byte_end":8503,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8504,"byte_end":8554,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8555,"byte_end":8560,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8561,"byte_end":8568,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9017,"byte_end":9042,"line_start":66,"line_end":66,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8864,"byte_end":8938,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8939,"byte_end":8956,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8957,"byte_end":9005,"line_start":65,"line_end":65,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":11550,"byte_end":11553,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":11475,"byte_end":11538,"line_start":139,"line_end":139,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13606,"byte_end":13617,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12343,"byte_end":12414,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12419,"byte_end":12452,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12457,"byte_end":12460,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12465,"byte_end":12536,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12541,"byte_end":12573,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12578,"byte_end":12581,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12586,"byte_end":12600,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12605,"byte_end":12608,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12613,"byte_end":12626,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12631,"byte_end":12653,"line_start":173,"line_end":173,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12658,"byte_end":12698,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12703,"byte_end":12706,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12711,"byte_end":12729,"line_start":176,"line_end":176,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12734,"byte_end":12755,"line_start":177,"line_end":177,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12760,"byte_end":12805,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12810,"byte_end":12856,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12861,"byte_end":12864,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12869,"byte_end":12920,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12925,"byte_end":12988,"line_start":182,"line_end":182,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12993,"byte_end":13014,"line_start":183,"line_end":183,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13019,"byte_end":13067,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13072,"byte_end":13118,"line_start":185,"line_end":185,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13123,"byte_end":13144,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13149,"byte_end":13166,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13171,"byte_end":13252,"line_start":188,"line_end":188,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13257,"byte_end":13279,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13284,"byte_end":13301,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13306,"byte_end":13319,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13324,"byte_end":13335,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13340,"byte_end":13343,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13348,"byte_end":13381,"line_start":194,"line_end":194,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13386,"byte_end":13461,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13466,"byte_end":13493,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13498,"byte_end":13509,"line_start":197,"line_end":197,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13514,"byte_end":13517,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13522,"byte_end":13572,"line_start":199,"line_end":199,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13577,"byte_end":13582,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13587,"byte_end":13594,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16192,"byte_end":16198,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16003,"byte_end":16075,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16080,"byte_end":16100,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16105,"byte_end":16108,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16113,"byte_end":16180,"line_start":259,"line_end":259,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16326,"byte_end":16338,"line_start":265,"line_end":265,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16250,"byte_end":16314,"line_start":264,"line_end":264,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16489,"byte_end":16498,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16403,"byte_end":16477,"line_start":269,"line_end":269,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1379},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":70044,"byte_end":70054,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":69906,"byte_end":69963,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":69964,"byte_end":69967,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":69968,"byte_end":70015,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":70777,"byte_end":70780,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":70735,"byte_end":70765,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71495,"byte_end":71505,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":70983,"byte_end":71012,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71017,"byte_end":71020,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71025,"byte_end":71101,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71106,"byte_end":71175,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71180,"byte_end":71198,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71203,"byte_end":71206,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71211,"byte_end":71282,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71287,"byte_end":71360,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71365,"byte_end":71439,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71444,"byte_end":71483,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73026,"byte_end":73040,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71929,"byte_end":72010,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72015,"byte_end":72061,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72066,"byte_end":72069,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72074,"byte_end":72122,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72127,"byte_end":72130,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72135,"byte_end":72219,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72224,"byte_end":72283,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72288,"byte_end":72373,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72378,"byte_end":72397,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72402,"byte_end":72481,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72486,"byte_end":72489,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72494,"byte_end":72569,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72574,"byte_end":72650,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72655,"byte_end":72710,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72715,"byte_end":72789,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72794,"byte_end":72867,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72872,"byte_end":72906,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72911,"byte_end":72914,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72919,"byte_end":72995,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73000,"byte_end":73014,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73674,"byte_end":73682,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73426,"byte_end":73491,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73496,"byte_end":73499,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73504,"byte_end":73577,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73582,"byte_end":73592,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73597,"byte_end":73600,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73605,"byte_end":73662,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73794,"byte_end":73803,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73736,"byte_end":73782,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74144,"byte_end":74155,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73945,"byte_end":73979,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73984,"byte_end":73987,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73992,"byte_end":74065,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74070,"byte_end":74132,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74460,"byte_end":74469,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74260,"byte_end":74295,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74300,"byte_end":74303,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74308,"byte_end":74381,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74386,"byte_end":74448,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75169,"byte_end":75186,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74620,"byte_end":74689,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74694,"byte_end":74697,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74702,"byte_end":74772,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74777,"byte_end":74850,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74855,"byte_end":74901,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74906,"byte_end":74909,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74914,"byte_end":74989,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74994,"byte_end":75068,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75073,"byte_end":75099,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75104,"byte_end":75107,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75112,"byte_end":75157,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75352,"byte_end":75362,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75239,"byte_end":75286,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75291,"byte_end":75294,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75299,"byte_end":75340,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":286},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":77874,"byte_end":77887,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":77743,"byte_end":77816,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":77817,"byte_end":77820,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":77821,"byte_end":77862,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78081,"byte_end":78084,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78036,"byte_end":78069,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78248,"byte_end":78253,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78211,"byte_end":78236,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78359,"byte_end":78370,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78305,"byte_end":78347,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78485,"byte_end":78495,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78440,"byte_end":78473,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":79229,"byte_end":79241,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78556,"byte_end":78604,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78609,"byte_end":78612,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78617,"byte_end":78658,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78663,"byte_end":78666,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78671,"byte_end":78733,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78738,"byte_end":78798,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78803,"byte_end":78863,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78868,"byte_end":78871,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78876,"byte_end":78951,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78956,"byte_end":79024,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":79029,"byte_end":79105,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":79110,"byte_end":79178,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":79183,"byte_end":79217,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80669,"byte_end":80686,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80385,"byte_end":80437,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80442,"byte_end":80445,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80450,"byte_end":80526,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80531,"byte_end":80565,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80570,"byte_end":80573,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80578,"byte_end":80657,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81146,"byte_end":81157,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80759,"byte_end":80801,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80806,"byte_end":80809,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80814,"byte_end":80887,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80892,"byte_end":80932,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80937,"byte_end":80940,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80945,"byte_end":81015,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81020,"byte_end":81054,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81059,"byte_end":81062,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81067,"byte_end":81134,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":343},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82300,"byte_end":82317,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":345}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82100,"byte_end":82157,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82158,"byte_end":82161,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82162,"byte_end":82229,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82230,"byte_end":82288,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82495,"byte_end":82498,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82412,"byte_end":82483,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83079,"byte_end":83082,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82864,"byte_end":82916,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82921,"byte_end":82924,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82929,"byte_end":83001,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83006,"byte_end":83067,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83525,"byte_end":83532,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83284,"byte_end":83336,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83341,"byte_end":83344,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83349,"byte_end":83422,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83427,"byte_end":83497,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83502,"byte_end":83513,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":85372,"byte_end":85379,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":85308,"byte_end":85360,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":85665,"byte_end":85669,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":85610,"byte_end":85653,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":378},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":1387},{"krate":0,"index":1400},{"krate":0,"index":1396},{"krate":0,"index":416},{"krate":0,"index":422},{"krate":0,"index":426},{"krate":0,"index":431},{"krate":0,"index":436},{"krate":0,"index":442}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":86782,"byte_end":86817,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88764,"byte_end":88768,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1393},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88777,"byte_end":88782,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1387},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88745,"byte_end":88751,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1390},{"krate":0,"index":1393}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":86994,"byte_end":87100,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87101,"byte_end":87104,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87105,"byte_end":87195,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87196,"byte_end":87199,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87200,"byte_end":87235,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87236,"byte_end":87239,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87240,"byte_end":87253,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87254,"byte_end":87257,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87258,"byte_end":87295,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87296,"byte_end":87299,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87300,"byte_end":87319,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87320,"byte_end":87362,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87363,"byte_end":87413,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87414,"byte_end":87465,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87466,"byte_end":87484,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87485,"byte_end":87506,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87507,"byte_end":87549,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87550,"byte_end":87583,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87584,"byte_end":87600,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87601,"byte_end":87695,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87696,"byte_end":87706,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87707,"byte_end":87710,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87711,"byte_end":87758,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87759,"byte_end":87764,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87765,"byte_end":87772,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87773,"byte_end":87776,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87977,"byte_end":87980,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87981,"byte_end":88067,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88068,"byte_end":88078,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88079,"byte_end":88082,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88083,"byte_end":88090,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88091,"byte_end":88126,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88127,"byte_end":88169,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88170,"byte_end":88220,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88221,"byte_end":88272,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88273,"byte_end":88276,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88277,"byte_end":88295,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88296,"byte_end":88317,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88318,"byte_end":88360,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88361,"byte_end":88408,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88409,"byte_end":88425,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88426,"byte_end":88475,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88476,"byte_end":88486,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88487,"byte_end":88490,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88491,"byte_end":88524,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88525,"byte_end":88565,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88566,"byte_end":88598,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88599,"byte_end":88604,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88605,"byte_end":88612,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88613,"byte_end":88635,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701437,"byte_end":11701447,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701598,"byte_end":11701608,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701935,"byte_end":11701945,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11712123,"byte_end":11712132,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11712332,"byte_end":11712342,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11712493,"byte_end":11712502,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11712825,"byte_end":11712835,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11713081,"byte_end":11713089,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11713186,"byte_end":11713194,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11713305,"byte_end":11713313,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11713413,"byte_end":11713421,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11713531,"byte_end":11713541,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11719123,"byte_end":11719133,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11721969,"byte_end":11721975,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11725787,"byte_end":11725793,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11731108,"byte_end":11731114,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11731430,"byte_end":11731436,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11732151,"byte_end":11732157,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11733197,"byte_end":11733208,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11734135,"byte_end":11734145,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735034,"byte_end":11735044,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11737141,"byte_end":11737151,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11737464,"byte_end":11737474,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11738200,"byte_end":11738210,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11739189,"byte_end":11739200,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11739556,"byte_end":11739567,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11741676,"byte_end":11741687,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11742451,"byte_end":11742462,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11742703,"byte_end":11742714,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11757722,"byte_end":11757742,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11761075,"byte_end":11761095,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11761981,"byte_end":11762001,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763342,"byte_end":11763362,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763455,"byte_end":11763462,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11773061,"byte_end":11773068,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11773194,"byte_end":11773219,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11773377,"byte_end":11773402,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11773537,"byte_end":11773562,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11774631,"byte_end":11774641,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11777183,"byte_end":11777193,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11780569,"byte_end":11780579,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11780902,"byte_end":11780912,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11781217,"byte_end":11781232,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11781514,"byte_end":11781529,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11781646,"byte_end":11781661,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11783987,"byte_end":11784004,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11786653,"byte_end":11786670,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11789962,"byte_end":11789979,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11790343,"byte_end":11790360,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11790777,"byte_end":11790799,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11791128,"byte_end":11791150,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11791281,"byte_end":11791303,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78016,"byte_end":78029,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81241,"byte_end":81254,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81468,"byte_end":81481,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81599,"byte_end":81612,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81824,"byte_end":81837,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82385,"byte_end":82402,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":85776,"byte_end":85793,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86083,"byte_end":86100,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86318,"byte_end":86335,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86431,"byte_end":86448,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86473,"byte_end":86490,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86634,"byte_end":86651,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":89388,"byte_end":89394,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":89637,"byte_end":89643,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":89916,"byte_end":89922,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":90250,"byte_end":90256,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":90610,"byte_end":90616,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":91168,"byte_end":91174,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":698,"byte_end":703,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":496}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11699849,"byte_end":11699865,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":940}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":880,"byte_end":884,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":895,"byte_end":901,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":378}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701437,"byte_end":11701447,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701598,"byte_end":11701608,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1177},"to":{"krate":0,"index":546}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11701935,"byte_end":11701945,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1177},"to":{"krate":0,"index":563}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11712123,"byte_end":11712132,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11712332,"byte_end":11712342,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":628},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11712493,"byte_end":11712502,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11712825,"byte_end":11712835,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":628},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11713081,"byte_end":11713089,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2425}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11713186,"byte_end":11713194,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2428}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11713305,"byte_end":11713313,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2425}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11713413,"byte_end":11713421,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2428}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11713531,"byte_end":11713541,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1536},"to":{"krate":16,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11719123,"byte_end":11719133,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1536},"to":{"krate":17,"index":17}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11721969,"byte_end":11721975,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11725787,"byte_end":11725793,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11731108,"byte_end":11731114,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1486},"to":{"krate":16,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11731430,"byte_end":11731436,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1486},"to":{"krate":17,"index":17}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11732151,"byte_end":11732157,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1486},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11733197,"byte_end":11733208,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11734135,"byte_end":11734145,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11735034,"byte_end":11735044,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11737141,"byte_end":11737151,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1445},"to":{"krate":16,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11737464,"byte_end":11737474,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1445},"to":{"krate":17,"index":17}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11738200,"byte_end":11738210,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1445},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11739189,"byte_end":11739200,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11739556,"byte_end":11739567,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11741676,"byte_end":11741687,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1404},"to":{"krate":17,"index":17}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11742451,"byte_end":11742462,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1404},"to":{"krate":16,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11742703,"byte_end":11742714,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1404},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11757722,"byte_end":11757742,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11761075,"byte_end":11761095,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1230},"to":{"krate":0,"index":546}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11761981,"byte_end":11762001,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1230},"to":{"krate":0,"index":563}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763342,"byte_end":11763362,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1230},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11763455,"byte_end":11763462,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11773061,"byte_end":11773068,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1218},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11773194,"byte_end":11773219,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":994},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11773377,"byte_end":11773402,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":994},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11773537,"byte_end":11773562,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11774631,"byte_end":11774641,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11777183,"byte_end":11777193,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1246},"to":{"krate":0,"index":546}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11780569,"byte_end":11780579,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1246},"to":{"krate":0,"index":563}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11780902,"byte_end":11780912,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1246},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11781217,"byte_end":11781232,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11781514,"byte_end":11781529,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11781646,"byte_end":11781661,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1268},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11783987,"byte_end":11784004,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11786653,"byte_end":11786670,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1276},"to":{"krate":0,"index":546}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11789962,"byte_end":11789979,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1276},"to":{"krate":0,"index":563}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11790343,"byte_end":11790360,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1276},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11790777,"byte_end":11790799,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11791128,"byte_end":11791150,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11791281,"byte_end":11791303,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1300},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":51},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":95},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1363},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1363},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1379},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1379},"to":{"krate":17,"index":17}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78016,"byte_end":78029,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81241,"byte_end":81254,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":286},"to":{"krate":16,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81468,"byte_end":81481,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81599,"byte_end":81612,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81824,"byte_end":81837,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":2719}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82385,"byte_end":82402,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":85776,"byte_end":85793,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86083,"byte_end":86100,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86318,"byte_end":86335,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86431,"byte_end":86448,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86473,"byte_end":86490,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86634,"byte_end":86651,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":89388,"byte_end":89394,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1387},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":89637,"byte_end":89643,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1387},"to":{"krate":18,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":89916,"byte_end":89922,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1387},"to":{"krate":18,"index":151}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":90250,"byte_end":90256,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1387},"to":{"krate":18,"index":232}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":90610,"byte_end":90616,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1387},"to":{"krate":18,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":91168,"byte_end":91174,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1387},"to":{"krate":16,"index":96}}]}