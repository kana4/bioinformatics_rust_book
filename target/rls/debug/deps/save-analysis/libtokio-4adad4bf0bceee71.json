{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0","program":"/Users/l/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bytes\"","--cfg","feature=\"default\"","--cfg","feature=\"io-util\"","--cfg","feature=\"libc\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"net\"","--cfg","feature=\"rt\"","--cfg","feature=\"sync\"","--cfg","feature=\"time\"","--cfg","feature=\"winapi\"","-C","metadata=4adad4bf0bceee71","-C","extra-filename=-4adad4bf0bceee71","--out-dir","/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps","-L","dependency=/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps","--extern","bytes=/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps/libbytes-ea4fee0d2c4144f8.rmeta","--extern","libc=/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps/liblibc-8a20305b2b8d5c57.rmeta","--extern","memchr=/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps/libmemchr-ea9b3bd1fc6b2a68.rmeta","--extern","mio=/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps/libmio-b362f38af8874f25.rmeta","--extern","pin_project_lite=/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps/libpin_project_lite-f5a82d4a38810324.rmeta","--cap-lints","allow","--cfg","tokio_track_caller","--error-format=json","--sysroot","/Users/l/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps/libtokio-4adad4bf0bceee71.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[17673144347724333478,15257427301512037016]},"crate_root":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src","external_crates":[{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11266178634318078844,10430434914575217037]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","num":2,"id":{"name":"core","disambiguator":[11698766721189094488,12060600386163665861]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7682173449702177568,11032960836976215208]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4743338922599007115,7423637119316760057]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2427264904945132901,10184032034968735412]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9774951351864599068,14817832832842499961]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10809433593918525561,458952361993985826]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15028772050842969220,14160812736163645060]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6995225455969351707,4449664983666090491]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8140348155906305511,16205222570971502248]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[233178625001733801,10631967199943834554]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[1525994598401419908,3288373240607898362]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[6171023582747105604,8380219937402072808]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16379221974889702373,16836676840445794723]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[17037182358159064978,13693302728723089691]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/registration.rs","num":16,"id":{"name":"mio","disambiguator":[14152280162596480672,4219708180287649308]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/registration.rs","num":17,"id":{"name":"log","disambiguator":[11015637507209429296,3091722645579271877]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/registration.rs","num":18,"id":{"name":"cfg_if","disambiguator":[9366737929510399661,10453437376682206837]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/ucred.rs","num":19,"id":{"name":"libc","disambiguator":[788947256952803332,17157699984539357225]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/seek.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[3355192339277488526,8000598072596209988]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","num":21,"id":{"name":"bytes","disambiguator":[6478508232581162113,10154030130612807666]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_until.rs","num":22,"id":{"name":"memchr","disambiguator":[486286139965215735,14035888004956051954]}}],"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":0,"byte_end":18096,"line_start":1,"line_end":510,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":11835},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/support.rs","byte_start":32832,"byte_end":32838,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":2,"index":37471},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/support.rs","byte_start":32858,"byte_end":32861,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":2,"index":40046},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/support.rs","byte_start":32882,"byte_end":32886,"line_start":9,"line_end":9,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":151},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":41912,"byte_end":41924,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":193},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":41969,"byte_end":41978,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":232},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":42023,"byte_end":42032,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":272},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":42079,"byte_end":42089,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":336},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":42130,"byte_end":42137,"line_start":200,"line_end":200,"column_start":25,"column_end":32},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":1,"index":3733},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":42307,"byte_end":42312,"line_start":205,"line_end":205,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":1,"index":9419},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":42314,"byte_end":42323,"line_start":205,"line_end":205,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":1,"index":3731},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":42325,"byte_end":42331,"line_start":205,"line_end":205,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":1,"index":9492},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":42333,"byte_end":42341,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":1395},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":42435,"byte_end":42443,"line_start":211,"line_end":211,"column_start":26,"column_end":34},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":1408},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":42445,"byte_end":42450,"line_start":211,"line_end":211,"column_start":36,"column_end":41},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":1623},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":42722,"byte_end":42729,"line_start":225,"line_end":225,"column_start":35,"column_end":42},"alias_span":null,"name":"AsyncFd","value":"","parent":{"krate":0,"index":1710}},{"kind":"Use","ref_id":{"krate":0,"index":1627},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":42731,"byte_end":42748,"line_start":225,"line_end":225,"column_start":44,"column_end":61},"alias_span":null,"name":"AsyncFdReadyGuard","value":"","parent":{"krate":0,"index":1710}},{"kind":"Use","ref_id":{"krate":0,"index":1632},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":42750,"byte_end":42770,"line_start":225,"line_end":225,"column_start":63,"column_end":83},"alias_span":null,"name":"AsyncFdReadyMutGuard","value":"","parent":{"krate":0,"index":1710}},{"kind":"Use","ref_id":{"krate":0,"index":1724},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":42772,"byte_end":42782,"line_start":225,"line_end":225,"column_start":85,"column_end":95},"alias_span":null,"name":"TryIoError","value":"","parent":{"krate":0,"index":1710}},{"kind":"Use","ref_id":{"krate":0,"index":1935},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43044,"byte_end":43049,"line_start":244,"line_end":244,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":1929},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43051,"byte_end":43059,"line_start":244,"line_end":244,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":1932},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43061,"byte_end":43070,"line_start":244,"line_end":244,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":3787},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43152,"byte_end":43156,"line_start":249,"line_end":249,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":2614},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43158,"byte_end":43176,"line_start":249,"line_end":249,"column_start":15,"column_end":33},"alias_span":null,"name":"copy_bidirectional","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":3793},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43178,"byte_end":43186,"line_start":249,"line_end":249,"column_start":35,"column_end":43},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":2811},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43188,"byte_end":43194,"line_start":249,"line_end":249,"column_start":45,"column_end":51},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":3813},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43196,"byte_end":43201,"line_start":249,"line_end":249,"column_start":53,"column_end":58},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":3978},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43203,"byte_end":43209,"line_start":249,"line_end":249,"column_start":60,"column_end":66},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":3985},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43211,"byte_end":43215,"line_start":249,"line_end":249,"column_start":68,"column_end":72},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":3623},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43217,"byte_end":43232,"line_start":249,"line_end":249,"column_start":74,"column_end":89},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":3631},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43234,"byte_end":43246,"line_start":249,"line_end":249,"column_start":91,"column_end":103},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":3682},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43248,"byte_end":43260,"line_start":249,"line_end":249,"column_start":105,"column_end":117},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":3686},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43262,"byte_end":43275,"line_start":249,"line_end":249,"column_start":119,"column_end":132},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":13889},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43285,"byte_end":43294,"line_start":250,"line_end":250,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":13858},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43296,"byte_end":43305,"line_start":250,"line_end":250,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":13808},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43307,"byte_end":43316,"line_start":250,"line_end":250,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":3814},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43318,"byte_end":43330,"line_start":250,"line_end":250,"column_start":42,"column_end":54},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":3811},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43332,"byte_end":43337,"line_start":250,"line_end":250,"column_start":56,"column_end":61},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":13667},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43339,"byte_end":43344,"line_start":250,"line_end":250,"column_start":63,"column_end":68},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":3979},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43346,"byte_end":43352,"line_start":250,"line_end":250,"column_start":70,"column_end":76},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":3983},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43354,"byte_end":43358,"line_start":250,"line_end":250,"column_start":78,"column_end":82},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":12304},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43360,"byte_end":43365,"line_start":250,"line_end":250,"column_start":84,"column_end":89},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":12264},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":43367,"byte_end":43371,"line_start":250,"line_end":250,"column_start":91,"column_end":95},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":406},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81511,"byte_end":81524,"line_start":28,"line_end":28,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":379}},{"kind":"Use","ref_id":{"krate":0,"index":4865},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81584,"byte_end":81595,"line_start":32,"line_end":32,"column_start":26,"column_end":37},"alias_span":null,"name":"lookup_host","value":"","parent":{"krate":0,"index":379}},{"kind":"Use","ref_id":{"krate":0,"index":4874},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/mod.rs","byte_start":10412712,"byte_end":10412720,"line_start":8,"line_end":8,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":4217}},{"kind":"Use","ref_id":{"krate":0,"index":4881},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/mod.rs","byte_start":10412722,"byte_end":10412731,"line_start":8,"line_end":8,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":4217}},{"kind":"Use","ref_id":{"krate":0,"index":4888},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/mod.rs","byte_start":10412774,"byte_end":10412787,"line_start":11,"line_end":11,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":4217}},{"kind":"Use","ref_id":{"krate":0,"index":4892},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/mod.rs","byte_start":10412789,"byte_end":10412803,"line_start":11,"line_end":11,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":4217}},{"kind":"Use","ref_id":{"krate":0,"index":4897},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/mod.rs","byte_start":10412805,"byte_end":10412817,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":4217}},{"kind":"Use","ref_id":{"krate":0,"index":4898},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/mod.rs","byte_start":10412805,"byte_end":10412817,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":4217}},{"kind":"Use","ref_id":{"krate":0,"index":4870},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81642,"byte_end":81653,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":379}},{"kind":"Use","ref_id":{"krate":0,"index":4872},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81680,"byte_end":81689,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpSocket","value":"","parent":{"krate":0,"index":379}},{"kind":"Use","ref_id":{"krate":0,"index":4906},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81716,"byte_end":81725,"line_start":37,"line_end":37,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":379}},{"kind":"Use","ref_id":{"krate":0,"index":4917},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81758,"byte_end":81767,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":379}},{"kind":"Use","ref_id":{"krate":0,"index":5509},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/mod.rs","byte_start":10551472,"byte_end":10551480,"line_start":12,"line_end":12,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":4928}},{"kind":"Use","ref_id":{"krate":0,"index":5516},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/mod.rs","byte_start":10551482,"byte_end":10551491,"line_start":12,"line_end":12,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":4928}},{"kind":"Use","ref_id":{"krate":0,"index":5523},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/mod.rs","byte_start":10551534,"byte_end":10551547,"line_start":15,"line_end":15,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":4928}},{"kind":"Use","ref_id":{"krate":0,"index":5527},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/mod.rs","byte_start":10551549,"byte_end":10551563,"line_start":15,"line_end":15,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":4928}},{"kind":"Use","ref_id":{"krate":0,"index":5532},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/mod.rs","byte_start":10551565,"byte_end":10551577,"line_start":15,"line_end":15,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":4928}},{"kind":"Use","ref_id":{"krate":0,"index":5533},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/mod.rs","byte_start":10551565,"byte_end":10551577,"line_start":15,"line_end":15,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":4928}},{"kind":"Use","ref_id":{"krate":0,"index":5252},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/mod.rs","byte_start":10551617,"byte_end":10551627,"line_start":18,"line_end":18,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":4928}},{"kind":"Use","ref_id":{"krate":0,"index":5253},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/mod.rs","byte_start":10551617,"byte_end":10551627,"line_start":18,"line_end":18,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":4928}},{"kind":"Use","ref_id":{"krate":0,"index":5549},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/mod.rs","byte_start":10551715,"byte_end":10551720,"line_start":24,"line_end":24,"column_start":16,"column_end":21},"alias_span":null,"name":"UCred","value":"","parent":{"krate":0,"index":4928}},{"kind":"Use","ref_id":{"krate":0,"index":5496},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81842,"byte_end":81854,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":379}},{"kind":"Use","ref_id":{"krate":0,"index":5506},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81884,"byte_end":81896,"line_start":46,"line_end":46,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":379}},{"kind":"Use","ref_id":{"krate":0,"index":5541},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81924,"byte_end":81934,"line_start":47,"line_end":47,"column_start":27,"column_end":37},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":379}},{"kind":"Use","ref_id":{"krate":0,"index":6809},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10656058,"byte_end":10656065,"line_start":193,"line_end":193,"column_start":28,"column_end":35},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":5652}},{"kind":"Use","ref_id":{"krate":0,"index":7058},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10656190,"byte_end":10656200,"line_start":201,"line_end":201,"column_start":22,"column_end":32},"alias_span":null,"name":"EnterGuard","value":"","parent":{"krate":0,"index":5652}},{"kind":"Use","ref_id":{"krate":0,"index":7047},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10656202,"byte_end":10656208,"line_start":201,"line_end":201,"column_start":34,"column_end":40},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":5652}},{"kind":"Use","ref_id":{"krate":0,"index":9400},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823484,"byte_end":10823492,"line_start":433,"line_end":433,"column_start":32,"column_end":40},"alias_span":null,"name":"Notified","value":"","parent":{"krate":0,"index":7154}},{"kind":"Use","ref_id":{"krate":0,"index":9274},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823540,"byte_end":10823547,"line_start":437,"line_end":437,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":9286},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823549,"byte_end":10823566,"line_start":437,"line_end":437,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":7522},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867855,"byte_end":10867862,"line_start":76,"line_end":76,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":7380}},{"kind":"Use","ref_id":{"krate":0,"index":7516},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867864,"byte_end":10867875,"line_start":76,"line_end":76,"column_start":34,"column_end":45},"alias_span":null,"name":"OwnedPermit","value":"","parent":{"krate":0,"index":7380}},{"kind":"Use","ref_id":{"krate":0,"index":7512},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867877,"byte_end":10867883,"line_start":76,"line_end":76,"column_start":47,"column_end":53},"alias_span":null,"name":"Permit","value":"","parent":{"krate":0,"index":7380}},{"kind":"Use","ref_id":{"krate":0,"index":7519},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867885,"byte_end":10867893,"line_start":76,"line_end":76,"column_start":55,"column_end":63},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":7380}},{"kind":"Use","ref_id":{"krate":0,"index":7509},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867895,"byte_end":10867901,"line_start":76,"line_end":76,"column_start":65,"column_end":71},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":7380}},{"kind":"Use","ref_id":{"krate":0,"index":7897},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867979,"byte_end":10867996,"line_start":83,"line_end":83,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":7380}},{"kind":"Use","ref_id":{"krate":0,"index":7891},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867998,"byte_end":10868015,"line_start":83,"line_end":83,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":7380}},{"kind":"Use","ref_id":{"krate":0,"index":7882},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10868017,"byte_end":10868032,"line_start":83,"line_end":83,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":7380}},{"kind":"Use","ref_id":{"krate":0,"index":7997},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823648,"byte_end":10823653,"line_start":444,"line_end":444,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":8001},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823655,"byte_end":10823665,"line_start":444,"line_end":444,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":9373},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823667,"byte_end":10823679,"line_start":444,"line_end":444,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":9374},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823667,"byte_end":10823679,"line_start":444,"line_end":444,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":8005},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823681,"byte_end":10823696,"line_start":444,"line_end":444,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":8008},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823698,"byte_end":10823714,"line_start":444,"line_end":444,"column_start":71,"column_end":87},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":9378},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823765,"byte_end":10823771,"line_start":447,"line_end":447,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":9471},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823862,"byte_end":10823874,"line_start":452,"line_end":452,"column_start":31,"column_end":43},"alias_span":null,"name":"AcquireError","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":9461},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823876,"byte_end":10823891,"line_start":452,"line_end":452,"column_start":45,"column_end":60},"alias_span":null,"name":"TryAcquireError","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":9476},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823938,"byte_end":10823947,"line_start":455,"line_end":455,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":9480},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823949,"byte_end":10823964,"line_start":455,"line_end":455,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":9487},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823966,"byte_end":10823986,"line_start":455,"line_end":455,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":9492},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10824026,"byte_end":10824032,"line_start":458,"line_end":458,"column_start":21,"column_end":27},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":8616},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10824072,"byte_end":10824092,"line_start":459,"line_end":459,"column_start":39,"column_end":59},"alias_span":null,"name":"OwnedRwLockReadGuard","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":8677},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10824133,"byte_end":10824154,"line_start":460,"line_end":460,"column_start":40,"column_end":61},"alias_span":null,"name":"OwnedRwLockWriteGuard","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":8733},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10824202,"byte_end":10824229,"line_start":461,"line_end":461,"column_start":47,"column_end":74},"alias_span":null,"name":"OwnedRwLockMappedWriteGuard","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":8786},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10824263,"byte_end":10824278,"line_start":462,"line_end":462,"column_start":33,"column_end":48},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":8839},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10824313,"byte_end":10824329,"line_start":463,"line_end":463,"column_start":34,"column_end":50},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":8893},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10824371,"byte_end":10824393,"line_start":464,"line_end":464,"column_start":41,"column_end":63},"alias_span":null,"name":"RwLockMappedWriteGuard","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":9130},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10824498,"byte_end":10824506,"line_start":470,"line_end":470,"column_start":31,"column_end":39},"alias_span":null,"name":"OnceCell","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":9500},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10824508,"byte_end":10824516,"line_start":470,"line_end":470,"column_start":41,"column_end":49},"alias_span":null,"name":"SetError","value":"","parent":{"krate":0,"index":7153}},{"kind":"Use","ref_id":{"krate":0,"index":6389},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137483,"byte_end":137492,"line_start":279,"line_end":279,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":879}},{"kind":"Use","ref_id":{"krate":0,"index":6391},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137494,"byte_end":137504,"line_start":279,"line_end":279,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":879}},{"kind":"Use","ref_id":{"krate":0,"index":9851},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137548,"byte_end":137562,"line_start":282,"line_end":282,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":879}},{"kind":"Use","ref_id":{"krate":0,"index":9854},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137599,"byte_end":137604,"line_start":285,"line_end":285,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":879}},{"kind":"Use","ref_id":{"krate":0,"index":9856},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137725,"byte_end":137734,"line_start":292,"line_end":292,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":879}},{"kind":"Use","ref_id":{"krate":0,"index":9873},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137772,"byte_end":137783,"line_start":295,"line_end":295,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":879}},{"kind":"Use","ref_id":{"krate":0,"index":9864},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137785,"byte_end":137793,"line_start":295,"line_end":295,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":879}},{"kind":"Use","ref_id":{"krate":0,"index":9761},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137841,"byte_end":137849,"line_start":298,"line_end":298,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":879}},{"kind":"Use","ref_id":{"krate":0,"index":9842},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137903,"byte_end":137916,"line_start":301,"line_end":301,"column_start":29,"column_end":42},"alias_span":null,"name":"unconstrained","value":"","parent":{"krate":0,"index":879}},{"kind":"Use","ref_id":{"krate":0,"index":10970},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137918,"byte_end":137931,"line_start":301,"line_end":301,"column_start":44,"column_end":57},"alias_span":null,"name":"Unconstrained","value":"","parent":{"krate":0,"index":879}},{"kind":"Use","ref_id":{"krate":0,"index":9854},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":14845,"byte_end":14850,"line_start":397,"line_end":397,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10164},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11210216,"byte_end":11210221,"line_start":95,"line_end":95,"column_start":25,"column_end":30},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":9893}},{"kind":"Use","ref_id":{"krate":0,"index":10163},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11210223,"byte_end":11210234,"line_start":95,"line_end":95,"column_start":32,"column_end":43},"alias_span":null,"name":"sleep_until","value":"","parent":{"krate":0,"index":9893}},{"kind":"Use","ref_id":{"krate":0,"index":10942},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11210236,"byte_end":11210241,"line_start":95,"line_end":95,"column_start":45,"column_end":50},"alias_span":null,"name":"Sleep","value":"","parent":{"krate":0,"index":9893}},{"kind":"Use","ref_id":{"krate":0,"index":10598},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11210297,"byte_end":11210304,"line_start":100,"line_end":100,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":9893}},{"kind":"Use","ref_id":{"krate":0,"index":10400},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11210340,"byte_end":11210348,"line_start":103,"line_end":103,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":9893}},{"kind":"Use","ref_id":{"krate":0,"index":10401},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11210350,"byte_end":11210361,"line_start":103,"line_end":103,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":9893}},{"kind":"Use","ref_id":{"krate":0,"index":10617},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11210363,"byte_end":11210371,"line_start":103,"line_end":103,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":9893}},{"kind":"Use","ref_id":{"krate":0,"index":10452},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11210421,"byte_end":11210428,"line_start":107,"line_end":107,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":9893}},{"kind":"Use","ref_id":{"krate":0,"index":10454},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11210430,"byte_end":11210440,"line_start":107,"line_end":107,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":9893}},{"kind":"Use","ref_id":{"krate":0,"index":10904},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11210442,"byte_end":11210449,"line_start":107,"line_end":107,"column_start":40,"column_end":47},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":9893}},{"kind":"Use","ref_id":{"krate":2,"index":39924},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11210562,"byte_end":11210570,"line_start":115,"line_end":115,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":9893}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":0,"byte_end":18096,"line_start":1,"line_end":510,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":93},{"krate":0,"index":130},{"krate":0,"index":379},{"krate":0,"index":473},{"krate":0,"index":722},{"krate":0,"index":854},{"krate":0,"index":5652},{"krate":0,"index":855},{"krate":0,"index":7153},{"krate":0,"index":879},{"krate":0,"index":9890},{"krate":0,"index":9893},{"krate":0,"index":880},{"krate":0,"index":966},{"krate":0,"index":967}],"decl_id":null,"docs":" A runtime for writing reliable network applications without compromising speed.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":0,"byte_end":112,"line_start":1,"line_end":5,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":113,"byte_end":219,"line_start":6,"line_end":11,"column_start":1,"column_end":3}},{"value":"/ A runtime for writing reliable network applications without compromising speed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":428,"byte_end":511,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":512,"byte_end":515,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":516,"byte_end":596,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":597,"byte_end":669,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":670,"byte_end":706,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":707,"byte_end":710,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":711,"byte_end":778,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, sleeps, and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":779,"byte_end":859,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":860,"byte_end":883,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":884,"byte_end":971,"line_start":28,"line_end":28,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":972,"byte_end":1045,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1046,"byte_end":1124,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1125,"byte_end":1205,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1206,"byte_end":1256,"line_start":32,"line_end":32,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1257,"byte_end":1260,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1261,"byte_end":1317,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1318,"byte_end":1321,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1322,"byte_end":1354,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1355,"byte_end":1378,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1379,"byte_end":1402,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1403,"byte_end":1429,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1430,"byte_end":1451,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1452,"byte_end":1471,"line_start":41,"line_end":41,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1472,"byte_end":1501,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1502,"byte_end":1529,"line_start":43,"line_end":43,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1530,"byte_end":1549,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1550,"byte_end":1579,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1580,"byte_end":1626,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1627,"byte_end":1630,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1631,"byte_end":1652,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1653,"byte_end":1656,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1657,"byte_end":1736,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1737,"byte_end":1810,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1811,"byte_end":1890,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1891,"byte_end":1906,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1907,"byte_end":1910,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1911,"byte_end":1983,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":1984,"byte_end":2021,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2022,"byte_end":2025,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2026,"byte_end":2037,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2038,"byte_end":2088,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2089,"byte_end":2096,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2097,"byte_end":2100,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2101,"byte_end":2131,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2132,"byte_end":2135,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2136,"byte_end":2217,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2218,"byte_end":2303,"line_start":65,"line_end":65,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2304,"byte_end":2388,"line_start":66,"line_end":66,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2389,"byte_end":2419,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2420,"byte_end":2423,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2424,"byte_end":2440,"line_start":69,"line_end":69,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2441,"byte_end":2444,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2445,"byte_end":2511,"line_start":71,"line_end":71,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2512,"byte_end":2515,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2516,"byte_end":2527,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2528,"byte_end":2578,"line_start":74,"line_end":74,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2579,"byte_end":2586,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2587,"byte_end":2590,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2591,"byte_end":2618,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2619,"byte_end":2622,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lightest weight crate","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2623,"byte_end":2703,"line_start":79,"line_end":79,"column_start":1,"column_end":81}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2704,"byte_end":2786,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2787,"byte_end":2868,"line_start":81,"line_end":81,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2869,"byte_end":2904,"line_start":82,"line_end":82,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2905,"byte_end":2908,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2909,"byte_end":2925,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2926,"byte_end":2929,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":2930,"byte_end":3012,"line_start":86,"line_end":86,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3013,"byte_end":3063,"line_start":87,"line_end":87,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3064,"byte_end":3067,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3068,"byte_end":3079,"line_start":89,"line_end":89,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"rt\", \"net\"] }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3080,"byte_end":3135,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3136,"byte_end":3143,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3144,"byte_end":3147,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3148,"byte_end":3173,"line_start":93,"line_end":93,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3174,"byte_end":3177,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3178,"byte_end":3254,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3255,"byte_end":3338,"line_start":96,"line_end":96,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3339,"byte_end":3382,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3383,"byte_end":3386,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3387,"byte_end":3466,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3467,"byte_end":3550,"line_start":100,"line_end":100,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3551,"byte_end":3629,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3630,"byte_end":3649,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3650,"byte_end":3653,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt\" feature flag","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3654,"byte_end":3727,"line_start":104,"line_end":104,"column_start":1,"column_end":74}},{"value":"/ is enabled.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3728,"byte_end":3743,"line_start":105,"line_end":105,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3744,"byte_end":3747,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3748,"byte_end":3791,"line_start":107,"line_end":107,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3792,"byte_end":3824,"line_start":108,"line_end":108,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3825,"byte_end":3860,"line_start":109,"line_end":109,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3861,"byte_end":3904,"line_start":110,"line_end":110,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3905,"byte_end":3958,"line_start":111,"line_end":111,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3959,"byte_end":3962,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":3963,"byte_end":4041,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4042,"byte_end":4098,"line_start":114,"line_end":114,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4099,"byte_end":4102,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4103,"byte_end":4176,"line_start":116,"line_end":116,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4177,"byte_end":4197,"line_start":117,"line_end":117,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4198,"byte_end":4273,"line_start":118,"line_end":118,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4274,"byte_end":4286,"line_start":119,"line_end":119,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4287,"byte_end":4367,"line_start":120,"line_end":120,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4368,"byte_end":4398,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4399,"byte_end":4402,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4403,"byte_end":4479,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4480,"byte_end":4492,"line_start":124,"line_end":124,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4493,"byte_end":4496,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4497,"byte_end":4529,"line_start":126,"line_end":126,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4530,"byte_end":4563,"line_start":127,"line_end":127,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4564,"byte_end":4601,"line_start":128,"line_end":128,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4602,"byte_end":4639,"line_start":129,"line_end":129,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4640,"byte_end":4671,"line_start":130,"line_end":130,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4672,"byte_end":4705,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4706,"byte_end":4709,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4710,"byte_end":4781,"line_start":133,"line_end":133,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4782,"byte_end":4862,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ tasks, [sleeping][sleep] work to run in the future, or [repeating an operation at an","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4863,"byte_end":4951,"line_start":135,"line_end":135,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4952,"byte_end":4976,"line_start":136,"line_end":136,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4977,"byte_end":4980,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":4981,"byte_end":5056,"line_start":138,"line_end":138,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":5057,"byte_end":5060,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":5061,"byte_end":5093,"line_start":140,"line_end":140,"column_start":1,"column_end":33}},{"value":"/ [sleep]: crate::time::sleep()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":5094,"byte_end":5127,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":5128,"byte_end":5167,"line_start":142,"line_end":142,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":5168,"byte_end":5205,"line_start":143,"line_end":143,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":5206,"byte_end":5209,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":5210,"byte_end":5288,"line_start":145,"line_end":145,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":5289,"byte_end":5373,"line_start":146,"line_end":146,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. However, this macro provides only basic configuration options. As","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":5374,"byte_end":5458,"line_start":147,"line_end":147,"column_start":1,"column_end":85}},{"value":"/ an alternative, the [`tokio::runtime`] module provides more powerful APIs for configuring","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":5459,"byte_end":5552,"line_start":148,"line_end":148,"column_start":1,"column_end":94}},{"value":"/ and managing runtimes. You should use that module if the `#[tokio::main]` macro doesn't","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":5553,"byte_end":5644,"line_start":149,"line_end":149,"column_start":1,"column_end":92}},{"value":"/ provide the functionality you need.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":5645,"byte_end":5684,"line_start":150,"line_end":150,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":5685,"byte_end":5688,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt\" or \"rt-multi-thread\" feature flags, to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":5689,"byte_end":5767,"line_start":152,"line_end":152,"column_start":1,"column_end":79}},{"value":"/ enable the basic [single-threaded scheduler][rt] and the [thread-pool","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":5768,"byte_end":5841,"line_start":153,"line_end":153,"column_start":1,"column_end":74}},{"value":"/ scheduler][rt-multi-thread], respectively. See the [`runtime` module","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":5842,"byte_end":5914,"line_start":154,"line_end":154,"column_start":1,"column_end":73}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":5915,"byte_end":5993,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":5994,"byte_end":6064,"line_start":156,"line_end":156,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":6065,"byte_end":6068,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":6069,"byte_end":6095,"line_start":158,"line_end":158,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":6096,"byte_end":6134,"line_start":159,"line_end":159,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":6135,"byte_end":6175,"line_start":160,"line_end":160,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":6176,"byte_end":6216,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"/ [rt]: runtime/index.html#basic-scheduler","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":6217,"byte_end":6261,"line_start":162,"line_end":162,"column_start":1,"column_end":45}},{"value":"/ [rt-multi-thread]: runtime/index.html#threaded-scheduler","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":6262,"byte_end":6322,"line_start":163,"line_end":163,"column_start":1,"column_end":61}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":6323,"byte_end":6378,"line_start":164,"line_end":164,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":6379,"byte_end":6382,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":6383,"byte_end":6423,"line_start":166,"line_end":166,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":6424,"byte_end":6427,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":6428,"byte_end":6507,"line_start":168,"line_end":168,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":6508,"byte_end":6585,"line_start":169,"line_end":169,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":6586,"byte_end":6666,"line_start":170,"line_end":170,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":6667,"byte_end":6741,"line_start":171,"line_end":171,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":6742,"byte_end":6821,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":6822,"byte_end":6899,"line_start":173,"line_end":173,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":6900,"byte_end":6973,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, can be used to run blocking code that would otherwise","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":6974,"byte_end":7050,"line_start":175,"line_end":175,"column_start":1,"column_end":77}},{"value":"/ block other tasks from running and are kept alive when not used for a certain","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7051,"byte_end":7132,"line_start":176,"line_end":176,"column_start":1,"column_end":82}},{"value":"/ amount of time which can be configured with [`thread_keep_alive`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7133,"byte_end":7203,"line_start":177,"line_end":177,"column_start":1,"column_end":71}},{"value":"/ Since it is not possible for Tokio to swap out blocking tasks, like it","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7204,"byte_end":7278,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ can do with asynchronous code, the upper limit on the number of blocking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7279,"byte_end":7355,"line_start":179,"line_end":179,"column_start":1,"column_end":77}},{"value":"/ threads is very large. These limits can be configured on the [`Builder`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7356,"byte_end":7433,"line_start":180,"line_end":180,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7434,"byte_end":7437,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7438,"byte_end":7515,"line_start":182,"line_end":182,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7516,"byte_end":7519,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7520,"byte_end":7560,"line_start":184,"line_end":184,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7561,"byte_end":7614,"line_start":185,"line_end":185,"column_start":1,"column_end":54}},{"value":"/ [`thread_keep_alive`]: crate::runtime::Builder::thread_keep_alive()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7615,"byte_end":7686,"line_start":186,"line_end":186,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7687,"byte_end":7690,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7691,"byte_end":7698,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7699,"byte_end":7717,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7718,"byte_end":7739,"line_start":190,"line_end":190,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7740,"byte_end":7784,"line_start":191,"line_end":191,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7785,"byte_end":7788,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7789,"byte_end":7849,"line_start":193,"line_end":193,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7850,"byte_end":7902,"line_start":194,"line_end":194,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7903,"byte_end":7938,"line_start":195,"line_end":195,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7939,"byte_end":7950,"line_start":196,"line_end":196,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7951,"byte_end":7954,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":7955,"byte_end":8010,"line_start":198,"line_end":198,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8011,"byte_end":8086,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8087,"byte_end":8104,"line_start":200,"line_end":200,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8105,"byte_end":8142,"line_start":201,"line_end":201,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8143,"byte_end":8148,"line_start":202,"line_end":202,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8149,"byte_end":8156,"line_start":203,"line_end":203,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8157,"byte_end":8160,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8161,"byte_end":8239,"line_start":205,"line_end":205,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8240,"byte_end":8316,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8317,"byte_end":8393,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8394,"byte_end":8418,"line_start":208,"line_end":208,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8419,"byte_end":8422,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8423,"byte_end":8457,"line_start":210,"line_end":210,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8458,"byte_end":8495,"line_start":211,"line_end":211,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8496,"byte_end":8499,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8500,"byte_end":8522,"line_start":213,"line_end":213,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8523,"byte_end":8526,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8527,"byte_end":8606,"line_start":215,"line_end":215,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8607,"byte_end":8654,"line_start":216,"line_end":216,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8655,"byte_end":8658,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8659,"byte_end":8738,"line_start":218,"line_end":218,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8739,"byte_end":8819,"line_start":219,"line_end":219,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8820,"byte_end":8900,"line_start":220,"line_end":220,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8901,"byte_end":8972,"line_start":221,"line_end":221,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":8973,"byte_end":9004,"line_start":222,"line_end":222,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9005,"byte_end":9008,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9009,"byte_end":9089,"line_start":224,"line_end":224,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9090,"byte_end":9150,"line_start":225,"line_end":225,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9151,"byte_end":9154,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9155,"byte_end":9234,"line_start":227,"line_end":227,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9235,"byte_end":9304,"line_start":228,"line_end":228,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9305,"byte_end":9382,"line_start":229,"line_end":229,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9383,"byte_end":9439,"line_start":230,"line_end":230,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9440,"byte_end":9520,"line_start":231,"line_end":231,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9521,"byte_end":9566,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9567,"byte_end":9646,"line_start":233,"line_end":233,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9647,"byte_end":9681,"line_start":234,"line_end":234,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9682,"byte_end":9685,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9686,"byte_end":9714,"line_start":236,"line_end":236,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9715,"byte_end":9754,"line_start":237,"line_end":237,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9755,"byte_end":9796,"line_start":238,"line_end":238,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9797,"byte_end":9842,"line_start":239,"line_end":239,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9843,"byte_end":9867,"line_start":240,"line_end":240,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9868,"byte_end":9898,"line_start":241,"line_end":241,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9899,"byte_end":9925,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::UdpSocket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9926,"byte_end":9958,"line_start":243,"line_end":243,"column_start":1,"column_end":33}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9959,"byte_end":9986,"line_start":244,"line_end":244,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":9987,"byte_end":10015,"line_start":245,"line_end":245,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10016,"byte_end":10040,"line_start":246,"line_end":246,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10041,"byte_end":10077,"line_start":247,"line_end":247,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10078,"byte_end":10116,"line_start":248,"line_end":248,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10117,"byte_end":10120,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10121,"byte_end":10135,"line_start":250,"line_end":250,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10136,"byte_end":10139,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10140,"byte_end":10169,"line_start":252,"line_end":252,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10170,"byte_end":10173,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10174,"byte_end":10187,"line_start":254,"line_end":254,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10188,"byte_end":10220,"line_start":255,"line_end":255,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10221,"byte_end":10270,"line_start":256,"line_end":256,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10271,"byte_end":10274,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10275,"byte_end":10293,"line_start":258,"line_end":258,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10294,"byte_end":10357,"line_start":259,"line_end":259,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10358,"byte_end":10424,"line_start":260,"line_end":260,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10425,"byte_end":10428,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10429,"byte_end":10443,"line_start":262,"line_end":262,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10444,"byte_end":10503,"line_start":263,"line_end":263,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10504,"byte_end":10507,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10508,"byte_end":10545,"line_start":265,"line_end":265,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10546,"byte_end":10586,"line_start":266,"line_end":266,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10587,"byte_end":10590,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10591,"byte_end":10671,"line_start":268,"line_end":268,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10672,"byte_end":10694,"line_start":269,"line_end":269,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10695,"byte_end":10758,"line_start":270,"line_end":270,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10759,"byte_end":10799,"line_start":271,"line_end":271,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10800,"byte_end":10850,"line_start":272,"line_end":272,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10851,"byte_end":10886,"line_start":273,"line_end":273,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10887,"byte_end":10922,"line_start":274,"line_end":274,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":10923,"byte_end":11006,"line_start":275,"line_end":275,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11007,"byte_end":11042,"line_start":276,"line_end":276,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11043,"byte_end":11068,"line_start":277,"line_end":277,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11069,"byte_end":11091,"line_start":278,"line_end":278,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11092,"byte_end":11095,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11096,"byte_end":11138,"line_start":280,"line_end":280,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11139,"byte_end":11211,"line_start":281,"line_end":281,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11212,"byte_end":11290,"line_start":282,"line_end":282,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11291,"byte_end":11322,"line_start":283,"line_end":283,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11323,"byte_end":11344,"line_start":284,"line_end":284,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11345,"byte_end":11362,"line_start":285,"line_end":285,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11363,"byte_end":11378,"line_start":286,"line_end":286,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11379,"byte_end":11388,"line_start":287,"line_end":287,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11389,"byte_end":11394,"line_start":288,"line_end":288,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11395,"byte_end":11402,"line_start":289,"line_end":289,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11403,"byte_end":11406,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11407,"byte_end":11427,"line_start":291,"line_end":291,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11428,"byte_end":11431,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11432,"byte_end":11513,"line_start":293,"line_end":293,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11514,"byte_end":11592,"line_start":294,"line_end":294,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11593,"byte_end":11673,"line_start":295,"line_end":295,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11674,"byte_end":11751,"line_start":296,"line_end":296,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11752,"byte_end":11835,"line_start":297,"line_end":297,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11836,"byte_end":11913,"line_start":298,"line_end":298,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":11914,"byte_end":12001,"line_start":299,"line_end":299,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":12002,"byte_end":12083,"line_start":300,"line_end":300,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":12084,"byte_end":12093,"line_start":301,"line_end":301,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":12094,"byte_end":12097,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below except `test-util`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":12098,"byte_end":12182,"line_start":303,"line_end":303,"column_start":1,"column_end":85}},{"value":"/ - `rt`: Enables `tokio::spawn`, the basic (current thread) scheduler,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":12183,"byte_end":12256,"line_start":304,"line_end":304,"column_start":1,"column_end":74}},{"value":"/         and non-scheduler utilities.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":12257,"byte_end":12297,"line_start":305,"line_end":305,"column_start":1,"column_end":41}},{"value":"/ - `rt-multi-thread`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":12298,"byte_end":12384,"line_start":306,"line_end":306,"column_start":1,"column_end":87}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":12385,"byte_end":12436,"line_start":307,"line_end":307,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":12437,"byte_end":12497,"line_start":308,"line_end":308,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":12498,"byte_end":12588,"line_start":309,"line_end":309,"column_start":1,"column_end":91}},{"value":"/          as well as (on Unix-like systems) `AsyncFd`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":12589,"byte_end":12645,"line_start":310,"line_end":310,"column_start":1,"column_end":57}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":12646,"byte_end":12723,"line_start":311,"line_end":311,"column_start":1,"column_end":78}},{"value":"/           the built in timer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":12724,"byte_end":12757,"line_start":312,"line_end":312,"column_start":1,"column_end":34}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":12758,"byte_end":12806,"line_start":313,"line_end":313,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":12807,"byte_end":12876,"line_start":314,"line_end":314,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":12877,"byte_end":12923,"line_start":315,"line_end":315,"column_start":1,"column_end":47}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":12924,"byte_end":12974,"line_start":316,"line_end":316,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":12975,"byte_end":13013,"line_start":317,"line_end":317,"column_start":1,"column_end":39}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13014,"byte_end":13092,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13093,"byte_end":13096,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13097,"byte_end":13179,"line_start":320,"line_end":320,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13180,"byte_end":13202,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13203,"byte_end":13206,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13207,"byte_end":13232,"line_start":323,"line_end":323,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13233,"byte_end":13236,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13237,"byte_end":13305,"line_start":325,"line_end":325,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13306,"byte_end":13369,"line_start":326,"line_end":326,"column_start":1,"column_end":64}},{"value":"/ dependencies.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13370,"byte_end":13387,"line_start":327,"line_end":327,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13388,"byte_end":13391,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13392,"byte_end":13471,"line_start":329,"line_end":329,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13472,"byte_end":13549,"line_start":330,"line_end":330,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13550,"byte_end":13583,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13584,"byte_end":13587,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ ### Unstable features","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13588,"byte_end":13613,"line_start":333,"line_end":333,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13614,"byte_end":13617,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 1.x","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13618,"byte_end":13703,"line_start":335,"line_end":335,"column_start":1,"column_end":86}},{"value":"/ releases. To enable these features, the `--cfg tokio_unstable` must be passed to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13704,"byte_end":13788,"line_start":336,"line_end":336,"column_start":1,"column_end":85}},{"value":"/ `rustc` when compiling. This is easiest done using the `RUSTFLAGS` env variable:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13789,"byte_end":13873,"line_start":337,"line_end":337,"column_start":1,"column_end":85}},{"value":"/ `RUSTFLAGS=\"--cfg tokio_unstable\"`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13874,"byte_end":13913,"line_start":338,"line_end":338,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13914,"byte_end":13917,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ - `tracing`: Enables tracing events.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13918,"byte_end":13958,"line_start":340,"line_end":340,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13959,"byte_end":13962,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":13963,"byte_end":14060,"line_start":342,"line_end":342,"column_start":1,"column_end":98}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":83}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":14249,"byte_end":14261,"line_start":348,"line_end":348,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/mod.rs","byte_start":18133,"byte_end":18153,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":83},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/future/ready.rs","byte_start":10127215,"byte_end":10127220,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/future/ready.rs","byte_start":10126986,"byte_end":10127027,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/future/ready.rs","byte_start":10127028,"byte_end":10127031,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/future/ready.rs","byte_start":10127032,"byte_end":10127109,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/future/ready.rs","byte_start":10127178,"byte_end":10127203,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":130},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":1039},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1552},{"krate":0,"index":1352},{"krate":0,"index":1392},{"krate":0,"index":1589},{"krate":0,"index":1710},{"krate":0,"index":1729},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1822},{"krate":0,"index":1825},{"krate":0,"index":1828},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1869},{"krate":0,"index":1872},{"krate":0,"index":1875},{"krate":0,"index":1878},{"krate":0,"index":1881},{"krate":0,"index":1884},{"krate":0,"index":1887},{"krate":0,"index":1890},{"krate":0,"index":1893},{"krate":0,"index":1896},{"krate":0,"index":1899},{"krate":0,"index":1902},{"krate":0,"index":1905},{"krate":0,"index":1908},{"krate":0,"index":1911},{"krate":0,"index":1914},{"krate":0,"index":1917},{"krate":0,"index":1920},{"krate":0,"index":1923},{"krate":0,"index":1926}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":34364,"byte_end":34441,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":34442,"byte_end":34445,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":34446,"byte_end":34517,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":34518,"byte_end":34598,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":34599,"byte_end":34673,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":34674,"byte_end":34677,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":34678,"byte_end":34708,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":34709,"byte_end":34712,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":34713,"byte_end":34793,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":34794,"byte_end":34871,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":34872,"byte_end":34949,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":34950,"byte_end":35030,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":35031,"byte_end":35109,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":35110,"byte_end":35175,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":35176,"byte_end":35179,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":35180,"byte_end":35252,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":35253,"byte_end":35320,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":35321,"byte_end":35400,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":35401,"byte_end":35475,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":35476,"byte_end":35550,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":35551,"byte_end":35568,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":35569,"byte_end":35572,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":35573,"byte_end":35637,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":35638,"byte_end":35713,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":35714,"byte_end":35789,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":35790,"byte_end":35867,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":35868,"byte_end":35871,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":35872,"byte_end":35948,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":35949,"byte_end":36024,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36025,"byte_end":36105,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36106,"byte_end":36177,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36178,"byte_end":36247,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36248,"byte_end":36251,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36252,"byte_end":36324,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36325,"byte_end":36405,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36406,"byte_end":36459,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36460,"byte_end":36463,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36464,"byte_end":36477,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36478,"byte_end":36518,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36519,"byte_end":36543,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36544,"byte_end":36547,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36548,"byte_end":36566,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36567,"byte_end":36606,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36607,"byte_end":36656,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36657,"byte_end":36690,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36691,"byte_end":36694,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36695,"byte_end":36725,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36726,"byte_end":36769,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36770,"byte_end":36773,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36774,"byte_end":36824,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36825,"byte_end":36839,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36840,"byte_end":36845,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36846,"byte_end":36853,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36854,"byte_end":36857,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36858,"byte_end":36887,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36888,"byte_end":36928,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36929,"byte_end":36965,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":36966,"byte_end":37007,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37008,"byte_end":37011,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37012,"byte_end":37047,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37048,"byte_end":37051,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37052,"byte_end":37133,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37134,"byte_end":37208,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37209,"byte_end":37287,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37288,"byte_end":37332,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37333,"byte_end":37336,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37337,"byte_end":37407,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37408,"byte_end":37486,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37487,"byte_end":37565,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37566,"byte_end":37643,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37644,"byte_end":37647,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37648,"byte_end":37723,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37724,"byte_end":37762,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37763,"byte_end":37766,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37767,"byte_end":37780,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37781,"byte_end":37835,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37836,"byte_end":37860,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37861,"byte_end":37864,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37865,"byte_end":37883,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37884,"byte_end":37923,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37924,"byte_end":37969,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":37970,"byte_end":38013,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38014,"byte_end":38053,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38054,"byte_end":38057,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38058,"byte_end":38092,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38093,"byte_end":38138,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38139,"byte_end":38142,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38143,"byte_end":38174,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38175,"byte_end":38189,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38190,"byte_end":38195,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38196,"byte_end":38203,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38204,"byte_end":38207,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38208,"byte_end":38289,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38290,"byte_end":38368,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38369,"byte_end":38431,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38432,"byte_end":38435,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38436,"byte_end":38449,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38450,"byte_end":38502,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38503,"byte_end":38527,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38528,"byte_end":38531,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38532,"byte_end":38550,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38551,"byte_end":38590,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38591,"byte_end":38638,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38639,"byte_end":38648,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38649,"byte_end":38696,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38697,"byte_end":38700,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38701,"byte_end":38743,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38744,"byte_end":38785,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38786,"byte_end":38789,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38790,"byte_end":38850,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38851,"byte_end":38885,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38886,"byte_end":38889,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38890,"byte_end":38980,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38981,"byte_end":38984,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":38985,"byte_end":38999,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39000,"byte_end":39005,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39006,"byte_end":39013,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39014,"byte_end":39017,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39018,"byte_end":39063,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39064,"byte_end":39106,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39107,"byte_end":39152,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39153,"byte_end":39192,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39193,"byte_end":39232,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39233,"byte_end":39236,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39237,"byte_end":39281,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39282,"byte_end":39285,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39286,"byte_end":39368,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39369,"byte_end":39448,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39449,"byte_end":39523,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39524,"byte_end":39597,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39598,"byte_end":39658,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39659,"byte_end":39662,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39663,"byte_end":39704,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39705,"byte_end":39708,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39709,"byte_end":39777,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39778,"byte_end":39847,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39848,"byte_end":39914,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39915,"byte_end":39978,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":39979,"byte_end":40046,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40047,"byte_end":40116,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40117,"byte_end":40187,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40188,"byte_end":40266,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40267,"byte_end":40292,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40293,"byte_end":40296,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40297,"byte_end":40373,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40374,"byte_end":40377,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40378,"byte_end":40409,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40410,"byte_end":40413,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40414,"byte_end":40494,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40495,"byte_end":40571,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40572,"byte_end":40619,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40620,"byte_end":40623,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40624,"byte_end":40697,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40698,"byte_end":40774,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40775,"byte_end":40851,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40852,"byte_end":40855,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40856,"byte_end":40877,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40878,"byte_end":40901,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40902,"byte_end":40924,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40925,"byte_end":40928,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40929,"byte_end":40951,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40952,"byte_end":40955,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":40956,"byte_end":41032,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":41033,"byte_end":41080,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":41081,"byte_end":41084,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":41085,"byte_end":41119,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":41120,"byte_end":41156,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":41157,"byte_end":41197,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":41198,"byte_end":41240,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":41241,"byte_end":41314,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":41315,"byte_end":41398,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":41399,"byte_end":41482,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":41483,"byte_end":41510,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":41511,"byte_end":41544,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":41545,"byte_end":41572,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":41573,"byte_end":41600,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":41601,"byte_end":41632,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":41633,"byte_end":41703,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.3/futures/stream/trait.Stream.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":41704,"byte_end":41780,"line_start":181,"line_end":181,"column_start":1,"column_end":77}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":41781,"byte_end":41810,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":151},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44508,"byte_end":44520,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":43831,"byte_end":43862,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":43863,"byte_end":43866,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":43867,"byte_end":43939,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":43940,"byte_end":44018,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44019,"byte_end":44105,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44106,"byte_end":44183,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44184,"byte_end":44195,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44196,"byte_end":44199,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44200,"byte_end":44268,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44269,"byte_end":44293,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44294,"byte_end":44297,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44298,"byte_end":44340,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44341,"byte_end":44391,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44392,"byte_end":44445,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44446,"byte_end":44497,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":45618,"byte_end":45631,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44538,"byte_end":44623,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44628,"byte_end":44669,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44674,"byte_end":44677,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44682,"byte_end":44729,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44734,"byte_end":44737,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44742,"byte_end":44801,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44806,"byte_end":44864,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44869,"byte_end":44950,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44955,"byte_end":44981,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44986,"byte_end":44989,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44994,"byte_end":45065,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":45070,"byte_end":45132,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":45137,"byte_end":45208,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":45213,"byte_end":45294,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":45299,"byte_end":45375,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":45380,"byte_end":45431,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":45436,"byte_end":45439,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":45444,"byte_end":45515,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":45520,"byte_end":45523,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":45528,"byte_end":45567,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":45572,"byte_end":45610,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":46534,"byte_end":46541,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":45709,"byte_end":45783,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":45788,"byte_end":45855,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":45860,"byte_end":45863,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":45868,"byte_end":45939,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":45944,"byte_end":46013,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":46018,"byte_end":46092,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":46097,"byte_end":46174,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":46179,"byte_end":46249,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":46254,"byte_end":46307,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":46312,"byte_end":46315,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":46320,"byte_end":46392,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":46397,"byte_end":46419,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":46424,"byte_end":46427,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":46432,"byte_end":46471,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":46476,"byte_end":46526,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":193},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49855,"byte_end":49864,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":194}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":48168,"byte_end":48198,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":48199,"byte_end":48202,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":48203,"byte_end":48282,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":48283,"byte_end":48357,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":48358,"byte_end":48437,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":48438,"byte_end":48515,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":48516,"byte_end":48527,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":48528,"byte_end":48531,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":48532,"byte_end":48609,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":48610,"byte_end":48628,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":48629,"byte_end":48632,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(()))` means that data was immediately read and placed into","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":48633,"byte_end":48713,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   the output buffer. The amount of data read can be determined by the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":48714,"byte_end":48787,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/   increase in the length of the slice returned by `ReadBuf::filled`. If the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":48788,"byte_end":48867,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   difference is 0, EOF has been reached.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":48868,"byte_end":48912,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":48913,"byte_end":48916,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":48917,"byte_end":48982,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":48983,"byte_end":49063,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49064,"byte_end":49143,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49144,"byte_end":49217,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49218,"byte_end":49291,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49292,"byte_end":49313,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49314,"byte_end":49317,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49318,"byte_end":49402,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49403,"byte_end":49427,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49428,"byte_end":49431,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49432,"byte_end":49505,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49506,"byte_end":49585,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49586,"byte_end":49589,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49590,"byte_end":49655,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49656,"byte_end":49677,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49678,"byte_end":49681,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49682,"byte_end":49721,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49722,"byte_end":49758,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49759,"byte_end":49798,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49799,"byte_end":49844,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":50381,"byte_end":50390,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49871,"byte_end":49924,"line_start":44,"line_end":44,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49929,"byte_end":49932,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))` and places data in the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":49937,"byte_end":50005,"line_start":46,"line_end":46,"column_start":5,"column_end":73}},{"value":"/ unfilled portion of `buf`. If no data was read (`buf.filled().len()` is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":50010,"byte_end":50085,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ unchanged), it implies that EOF has been reached.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":50090,"byte_end":50143,"line_start":48,"line_end":48,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":50148,"byte_end":50151,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns `Poll::Pending`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":50156,"byte_end":50231,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ and arranges for the current task (via `cx.waker()`) to receive a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":50236,"byte_end":50305,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ notification when the object becomes readable or is closed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":50310,"byte_end":50373,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":232},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":52986,"byte_end":52995,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":52504,"byte_end":52534,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":52535,"byte_end":52538,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":52539,"byte_end":52613,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":52614,"byte_end":52684,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":52685,"byte_end":52754,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":52755,"byte_end":52758,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":52759,"byte_end":52824,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":52825,"byte_end":52846,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":52847,"byte_end":52850,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":52851,"byte_end":52887,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":52888,"byte_end":52929,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":52930,"byte_end":52975,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53637,"byte_end":53647,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, SeekFrom) -> io::Result<()>","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53002,"byte_end":53059,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53064,"byte_end":53067,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53072,"byte_end":53145,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53150,"byte_end":53176,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53181,"byte_end":53184,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53189,"byte_end":53264,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53269,"byte_end":53325,"line_start":25,"line_end":25,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53330,"byte_end":53333,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53338,"byte_end":53350,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53355,"byte_end":53358,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This function can return [`io::ErrorKind::Other`] in case there is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53363,"byte_end":53433,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ another seek in progress. To avoid this, it is advisable that any call","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53438,"byte_end":53512,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ to `start_seek` is preceded by a call to `poll_complete` to ensure all","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53517,"byte_end":53591,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pending seeks have completed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53596,"byte_end":53629,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":54170,"byte_end":54183,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53714,"byte_end":53757,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53762,"byte_end":53765,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53770,"byte_end":53819,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53824,"byte_end":53894,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`]. Repeatedly","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53899,"byte_end":53971,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ calling this function without calling `start_seek` might return the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":53976,"byte_end":54047,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ same result.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":54052,"byte_end":54068,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":54073,"byte_end":54076,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":54081,"byte_end":54093,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":54098,"byte_end":54101,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":54106,"byte_end":54162,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":272},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57474,"byte_end":57484,"line_start":45,"line_end":45,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":279}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":55611,"byte_end":55643,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":55644,"byte_end":55647,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":55648,"byte_end":55730,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":55731,"byte_end":55806,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":55807,"byte_end":55874,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":55875,"byte_end":55878,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":55879,"byte_end":55959,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":55960,"byte_end":55978,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":55979,"byte_end":55982,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":55983,"byte_end":56054,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":56055,"byte_end":56069,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":56070,"byte_end":56073,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":56074,"byte_end":56142,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":56143,"byte_end":56223,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":56224,"byte_end":56303,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":56304,"byte_end":56377,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":56378,"byte_end":56451,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":56452,"byte_end":56473,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":56474,"byte_end":56477,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":56478,"byte_end":56562,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":56563,"byte_end":56587,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":56588,"byte_end":56591,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":56592,"byte_end":56674,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":56675,"byte_end":56758,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":56759,"byte_end":56762,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":56763,"byte_end":56847,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":56848,"byte_end":56932,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":56933,"byte_end":57011,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57012,"byte_end":57091,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57092,"byte_end":57153,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57154,"byte_end":57157,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57158,"byte_end":57224,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57225,"byte_end":57247,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57248,"byte_end":57251,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57252,"byte_end":57290,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57291,"byte_end":57335,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57336,"byte_end":57375,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57376,"byte_end":57415,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57416,"byte_end":57463,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":58156,"byte_end":58166,"line_start":58,"line_end":58,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":272},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57491,"byte_end":57545,"line_start":46,"line_end":46,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57550,"byte_end":57553,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`. If successful,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57558,"byte_end":57634,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ then it must be guaranteed that `n <= buf.len()`. A return value of `0`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57639,"byte_end":57714,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ typically means that the underlying object is no longer able to accept","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57719,"byte_end":57793,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ bytes and will likely not be able to in the future as well, or that the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57798,"byte_end":57873,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ buffer provided is empty.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57878,"byte_end":57907,"line_start":52,"line_end":52,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57912,"byte_end":57915,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57920,"byte_end":57982,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":57987,"byte_end":58045,"line_start":55,"line_end":55,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":58050,"byte_end":58117,"line_start":56,"line_end":56,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":58122,"byte_end":58148,"line_start":57,"line_end":57,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":58707,"byte_end":58717,"line_start":73,"line_end":73,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":272},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":58294,"byte_end":58365,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":58370,"byte_end":58392,"line_start":65,"line_end":65,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":58397,"byte_end":58400,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":58405,"byte_end":58451,"line_start":67,"line_end":67,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":58456,"byte_end":58459,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":58464,"byte_end":58528,"line_start":69,"line_end":69,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":58533,"byte_end":58591,"line_start":70,"line_end":70,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":58596,"byte_end":58664,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":58669,"byte_end":58699,"line_start":72,"line_end":72,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62003,"byte_end":62016,"line_start":133,"line_end":133,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":272},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":58799,"byte_end":58873,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":58878,"byte_end":58926,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":58931,"byte_end":58934,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":58939,"byte_end":59010,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":59015,"byte_end":59091,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":59096,"byte_end":59172,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":59177,"byte_end":59252,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":59257,"byte_end":59328,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":59333,"byte_end":59409,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":59414,"byte_end":59442,"line_start":84,"line_end":84,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":59447,"byte_end":59450,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":59455,"byte_end":59516,"line_start":86,"line_end":86,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":59521,"byte_end":59592,"line_start":87,"line_end":87,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":59597,"byte_end":59669,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":59674,"byte_end":59749,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":59754,"byte_end":59827,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":59832,"byte_end":59907,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":59912,"byte_end":59984,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":59989,"byte_end":60000,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":60005,"byte_end":60008,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":60013,"byte_end":60087,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":60092,"byte_end":60164,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":60169,"byte_end":60238,"line_start":97,"line_end":97,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":60243,"byte_end":60311,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":60316,"byte_end":60377,"line_start":99,"line_end":99,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":60382,"byte_end":60385,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":60390,"byte_end":60408,"line_start":101,"line_end":101,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":60413,"byte_end":60416,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":60421,"byte_end":60491,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":60496,"byte_end":60499,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":60504,"byte_end":60567,"line_start":105,"line_end":105,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":60572,"byte_end":60641,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":60646,"byte_end":60721,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":60726,"byte_end":60799,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":60804,"byte_end":60855,"line_start":109,"line_end":109,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":60860,"byte_end":60863,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":60868,"byte_end":60938,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":60943,"byte_end":61018,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61023,"byte_end":61095,"line_start":113,"line_end":113,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61100,"byte_end":61170,"line_start":114,"line_end":114,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61175,"byte_end":61250,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61255,"byte_end":61258,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61263,"byte_end":61344,"line_start":117,"line_end":117,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61349,"byte_end":61424,"line_start":118,"line_end":118,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61429,"byte_end":61496,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61501,"byte_end":61504,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61509,"byte_end":61521,"line_start":121,"line_end":121,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61526,"byte_end":61529,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61534,"byte_end":61605,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61610,"byte_end":61676,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61681,"byte_end":61755,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61760,"byte_end":61824,"line_start":126,"line_end":126,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61829,"byte_end":61868,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61873,"byte_end":61876,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61881,"byte_end":61893,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61898,"byte_end":61901,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61906,"byte_end":61981,"line_start":131,"line_end":131,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":61986,"byte_end":61995,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":63129,"byte_end":63148,"line_start":158,"line_end":158,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"::io::async_write::AsyncWrite::poll_write_vectored","value":"pub fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":272},"children":[],"decl_id":null,"docs":" Like [`poll_write`], except that it writes from a slice of buffers.","sig":null,"attributes":[{"value":"/ Like [`poll_write`], except that it writes from a slice of buffers.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62098,"byte_end":62169,"line_start":135,"line_end":135,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62174,"byte_end":62177,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Data is copied from each buffer in order, with the final buffer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62182,"byte_end":62249,"line_start":137,"line_end":137,"column_start":5,"column_end":72}},{"value":"/ read from possibly being only partially consumed. This method must","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62254,"byte_end":62324,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/ behave as a call to [`write`] with the buffers concatenated would.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62329,"byte_end":62399,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62404,"byte_end":62407,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The default implementation calls [`poll_write`] with either the first nonempty","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62412,"byte_end":62494,"line_start":141,"line_end":141,"column_start":5,"column_end":87}},{"value":"/ buffer provided, or an empty one if none exists.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62499,"byte_end":62551,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62556,"byte_end":62559,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62564,"byte_end":62625,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62630,"byte_end":62633,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62638,"byte_end":62700,"line_start":146,"line_end":146,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62705,"byte_end":62763,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62768,"byte_end":62835,"line_start":148,"line_end":148,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62840,"byte_end":62866,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62871,"byte_end":62874,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62879,"byte_end":62889,"line_start":151,"line_end":151,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62894,"byte_end":62897,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be implemented as a single \"atomic\" write action. If any","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62902,"byte_end":62974,"line_start":153,"line_end":153,"column_start":5,"column_end":77}},{"value":"/ data has been partially written, it is wrong to return an error or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":62979,"byte_end":63049,"line_start":154,"line_end":154,"column_start":5,"column_end":75}},{"value":"/ pending.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":63054,"byte_end":63066,"line_start":155,"line_end":155,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":63071,"byte_end":63074,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":63079,"byte_end":63121,"line_start":157,"line_end":157,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":63916,"byte_end":63933,"line_start":180,"line_end":180,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"::io::async_write::AsyncWrite::is_write_vectored","value":"pub fn is_write_vectored(&Self) -> bool","parent":{"krate":0,"index":272},"children":[],"decl_id":null,"docs":" Determines if this writer has an efficient [`poll_write_vectored`]\n implementation.","sig":null,"attributes":[{"value":"/ Determines if this writer has an efficient [`poll_write_vectored`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":63446,"byte_end":63516,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":63521,"byte_end":63540,"line_start":171,"line_end":171,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":63545,"byte_end":63548,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If a writer does not override the default [`poll_write_vectored`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":63553,"byte_end":63622,"line_start":173,"line_end":173,"column_start":5,"column_end":74}},{"value":"/ implementation, code using it may want to avoid the method all together","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":63627,"byte_end":63702,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ and coalesce writes into a single buffer for higher performance.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":63707,"byte_end":63775,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":63780,"byte_end":63783,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `false`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":63788,"byte_end":63835,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":63840,"byte_end":63843,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_vectored`]: AsyncWrite::poll_write_vectored","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":63848,"byte_end":63908,"line_start":179,"line_end":179,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":336},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":71173,"byte_end":71180,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"ReadBuf","qualname":"::io::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340}],"decl_id":null,"docs":" A wrapper around a byte buffer that is incrementally filled and initialized.","sig":null,"attributes":[{"value":"/ A wrapper around a byte buffer that is incrementally filled and initialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":70225,"byte_end":70305,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":70306,"byte_end":70309,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a sort of \"double cursor\". It tracks three regions in the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":70310,"byte_end":70384,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ buffer: a region at the beginning of the buffer that has been logically","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":70385,"byte_end":70460,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ filled with data, a region that has been initialized at some point but not","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":70461,"byte_end":70539,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ yet logically filled, and a region at the end that may be uninitialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":70540,"byte_end":70616,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ The filled region is guaranteed to be a subset of the initialized region.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":70617,"byte_end":70694,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":70695,"byte_end":70698,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ In summary, the contents of the buffer can be visualized as:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":70699,"byte_end":70763,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":70764,"byte_end":70767,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```not_rust","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":70768,"byte_end":70783,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/ [             capacity              ]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":70784,"byte_end":70825,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ [ filled |         unfilled         ]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":70826,"byte_end":70867,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ [    initialized    | uninitialized ]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":70868,"byte_end":70909,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":70910,"byte_end":70917,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":70918,"byte_end":70921,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ It is undefined behavior to de-initialize any bytes from the uninitialized","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":70922,"byte_end":71000,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ region, since it is merely unknown whether this region is uninitialized or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":71001,"byte_end":71079,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ not, and if part of it turns out to be initialized, it must stay initialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":71080,"byte_end":71161,"line_start":26,"line_end":26,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":71382,"byte_end":71385,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuf>::new","value":"pub fn new(&'a mut [u8]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully initialized buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully initialized buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":71296,"byte_end":71356,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":71361,"byte_end":71370,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":71831,"byte_end":71837,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ReadBuf>::uninit","value":"pub fn uninit(&'a mut [MaybeUninit<u8>]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully uninitialized buffer.","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully uninitialized buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":71650,"byte_end":71712,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":71717,"byte_end":71720,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Use `assume_init` if part of the buffer is known to be already inintialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":71725,"byte_end":71805,"line_start":48,"line_end":48,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":71810,"byte_end":71819,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":72065,"byte_end":72073,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ReadBuf>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total capacity of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns the total capacity of the buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":71994,"byte_end":72039,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":72044,"byte_end":72053,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":72219,"byte_end":72225,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"filled","qualname":"<ReadBuf>::filled","value":"pub fn filled(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the filled portion of the buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":72126,"byte_end":72193,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":72198,"byte_end":72207,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":72679,"byte_end":72689,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"filled_mut","qualname":"<ReadBuf>::filled_mut","value":"pub fn filled_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the filled portion of the buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":72585,"byte_end":72653,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":72658,"byte_end":72667,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":73167,"byte_end":73171,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"take","qualname":"<ReadBuf>::take","value":"pub fn take(&mut Self, usize) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ReadBuf` comprised of the unfilled section up to `n`.\n","sig":null,"attributes":[{"value":"/ Returns a new `ReadBuf` comprised of the unfilled section up to `n`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":73069,"byte_end":73141,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":73146,"byte_end":73155,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":73577,"byte_end":73588,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"initialized","qualname":"<ReadBuf>::initialized","value":"pub fn initialized(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the initialized portion of the buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":73429,"byte_end":73501,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":73506,"byte_end":73509,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":73514,"byte_end":73551,"line_start":94,"line_end":94,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":73556,"byte_end":73565,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":74100,"byte_end":74115,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"initialized_mut","qualname":"<ReadBuf>::initialized_mut","value":"pub fn initialized_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the initialized portion of the buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":73951,"byte_end":74024,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":74029,"byte_end":74032,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":74037,"byte_end":74074,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":74079,"byte_end":74088,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":75338,"byte_end":75347,"line_start":131,"line_end":131,"column_start":19,"column_end":28},"name":"inner_mut","qualname":"<ReadBuf>::inner_mut","value":"pub unsafe fn inner_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the entire buffer, without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the entire buffer, without ensuring that it has been fully","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":74498,"byte_end":74591,"line_start":116,"line_end":116,"column_start":5,"column_end":98}},{"value":"/ initialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":74596,"byte_end":74612,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":74617,"byte_end":74620,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The elements between 0 and `self.filled().len()` are filled, and those between 0 and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":74625,"byte_end":74713,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ `self.initialized().len()` are initialized (and so can be transmuted to a `&mut [u8]`).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":74718,"byte_end":74809,"line_start":120,"line_end":120,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":74814,"byte_end":74817,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The caller of this method must ensure that these invariants are upheld. For example, if the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":74822,"byte_end":74917,"line_start":122,"line_end":122,"column_start":5,"column_end":100}},{"value":"/ caller initializes some of the uninitialized section of the buffer, it must call","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":74922,"byte_end":75006,"line_start":123,"line_end":123,"column_start":5,"column_end":89}},{"value":"/ [`assume_init`](Self::assume_init) with the number of bytes initialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":75011,"byte_end":75087,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":75092,"byte_end":75095,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":75100,"byte_end":75112,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":75117,"byte_end":75120,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":75125,"byte_end":75221,"line_start":128,"line_end":128,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":75226,"byte_end":75305,"line_start":129,"line_end":129,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":75310,"byte_end":75319,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":75793,"byte_end":75805,"line_start":143,"line_end":143,"column_start":19,"column_end":31},"name":"unfilled_mut","qualname":"<ReadBuf>::unfilled_mut","value":"pub unsafe fn unfilled_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":75415,"byte_end":75521,"line_start":135,"line_end":135,"column_start":5,"column_end":111}},{"value":"/ initialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":75526,"byte_end":75542,"line_start":136,"line_end":136,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":75547,"byte_end":75550,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":75555,"byte_end":75567,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":75572,"byte_end":75575,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":75580,"byte_end":75676,"line_start":140,"line_end":140,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":75681,"byte_end":75760,"line_start":141,"line_end":141,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":75765,"byte_end":75774,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":76167,"byte_end":76186,"line_start":152,"line_end":152,"column_start":12,"column_end":31},"name":"initialize_unfilled","qualname":"<ReadBuf>::initialize_unfilled","value":"pub fn initialize_unfilled(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":75893,"byte_end":75994,"line_start":147,"line_end":147,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":75999,"byte_end":76002,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Since `ReadBuf` tracks the region of the buffer that has been initialized, this is effectively \"free\" after","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":76007,"byte_end":76118,"line_start":149,"line_end":149,"column_start":5,"column_end":116}},{"value":"/ the first use.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":76123,"byte_end":76141,"line_start":150,"line_end":150,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":76146,"byte_end":76155,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":76524,"byte_end":76546,"line_start":163,"line_end":163,"column_start":12,"column_end":34},"name":"initialize_unfilled_to","qualname":"<ReadBuf>::initialize_unfilled_to","value":"pub fn initialize_unfilled_to(&mut Self, usize) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is\n fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":76278,"byte_end":76383,"line_start":156,"line_end":156,"column_start":5,"column_end":110}},{"value":"/ fully initialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":76388,"byte_end":76410,"line_start":157,"line_end":157,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":76415,"byte_end":76418,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":76423,"byte_end":76435,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":76440,"byte_end":76443,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `n`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":76448,"byte_end":76498,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":76503,"byte_end":76512,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":77391,"byte_end":77400,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"remaining","qualname":"<ReadBuf>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes at the end of the slice that have not yet been filled.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes at the end of the slice that have not yet been filled.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":77279,"byte_end":77365,"line_start":184,"line_end":184,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":77370,"byte_end":77379,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":77667,"byte_end":77672,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"clear","qualname":"<ReadBuf>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, resetting the filled region to empty.","sig":null,"attributes":[{"value":"/ Clears the buffer, resetting the filled region to empty.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":77468,"byte_end":77528,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":77533,"byte_end":77536,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed, and the contents of the buffer are not modified.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":77541,"byte_end":77641,"line_start":192,"line_end":192,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":77646,"byte_end":77655,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":78001,"byte_end":78008,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"advance","qualname":"<ReadBuf>::advance","value":"pub fn advance(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Advances the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Advances the size of the filled region of the buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":77722,"byte_end":77779,"line_start":198,"line_end":198,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":77784,"byte_end":77787,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":77792,"byte_end":77843,"line_start":200,"line_end":200,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":77848,"byte_end":77851,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":77856,"byte_end":77868,"line_start":202,"line_end":202,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":77873,"byte_end":77876,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":77881,"byte_end":77975,"line_start":204,"line_end":204,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":77980,"byte_end":77989,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":78618,"byte_end":78628,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"set_filled","qualname":"<ReadBuf>::set_filled","value":"pub fn set_filled(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Sets the size of the filled region of the buffer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":78145,"byte_end":78198,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":78203,"byte_end":78206,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":78211,"byte_end":78262,"line_start":213,"line_end":213,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":78267,"byte_end":78270,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that this can be used to *shrink* the filled region of the buffer in addition to growing it (for","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":78275,"byte_end":78380,"line_start":215,"line_end":215,"column_start":5,"column_end":110}},{"value":"/ example, by a `AsyncRead` implementation that compresses data in-place).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":78385,"byte_end":78461,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":78466,"byte_end":78469,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":78474,"byte_end":78486,"line_start":218,"line_end":218,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":78491,"byte_end":78494,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the intialized region.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":78499,"byte_end":78592,"line_start":220,"line_end":220,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":78597,"byte_end":78606,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":79232,"byte_end":79243,"line_start":239,"line_end":239,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ReadBuf>::assume_init","value":"pub unsafe fn assume_init(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Asserts that the first `n` unfilled bytes of the buffer are initialized.","sig":null,"attributes":[{"value":"/ Asserts that the first `n` unfilled bytes of the buffer are initialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":78812,"byte_end":78888,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":78893,"byte_end":78896,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ `ReadBuf` assumes that bytes are never de-initialized, so this method does nothing when called with fewer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":78901,"byte_end":79010,"line_start":232,"line_end":232,"column_start":5,"column_end":114}},{"value":"/ bytes than are already known to be initialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":79015,"byte_end":79066,"line_start":233,"line_end":233,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":79071,"byte_end":79074,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":79079,"byte_end":79091,"line_start":235,"line_end":235,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":79096,"byte_end":79099,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `n` unfilled bytes of the buffer have already been initialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":79104,"byte_end":79199,"line_start":237,"line_end":237,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":79204,"byte_end":79213,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":79623,"byte_end":79632,"line_start":252,"line_end":252,"column_start":12,"column_end":21},"name":"put_slice","qualname":"<ReadBuf>::put_slice","value":"pub fn put_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends data to the buffer, advancing the written position and possibly also the initialized position.","sig":null,"attributes":[{"value":"/ Appends data to the buffer, advancing the written position and possibly also the initialized position.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":79395,"byte_end":79501,"line_start":246,"line_end":246,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":79506,"byte_end":79509,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":79514,"byte_end":79526,"line_start":248,"line_end":248,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":79531,"byte_end":79534,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `buf.len()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":79539,"byte_end":79597,"line_start":250,"line_end":250,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":79602,"byte_end":79611,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1395},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138327,"byte_end":10138335,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"Interest","qualname":"::io::driver::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Readiness event interest","sig":null,"attributes":[{"value":"/ Readiness event interest","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138083,"byte_end":10138111,"line_start":8,"line_end":8,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138112,"byte_end":10138115,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Specifies the readiness events the caller is interested in when awaiting on","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138116,"byte_end":10138195,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ I/O resource readiness states.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138196,"byte_end":10138230,"line_start":11,"line_end":11,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138487,"byte_end":10138495,"line_start":20,"line_end":20,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":1050},"children":[],"decl_id":null,"docs":" Interest in all readable events.","sig":null,"attributes":[{"value":"/ Interest in all readable events.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138373,"byte_end":10138409,"line_start":17,"line_end":17,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138414,"byte_end":10138417,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Readable interest includes read-closed events.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138422,"byte_end":10138472,"line_start":19,"line_end":19,"column_start":5,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":1052},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138662,"byte_end":10138670,"line_start":25,"line_end":25,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":1050},"children":[],"decl_id":null,"docs":" Interest in all writable events","sig":null,"attributes":[{"value":"/ Interest in all writable events","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138548,"byte_end":10138583,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138588,"byte_end":10138591,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Writable interest includes write-closed events.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138596,"byte_end":10138647,"line_start":24,"line_end":24,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139106,"byte_end":10139117,"line_start":40,"line_end":40,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"pub const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable interest.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138723,"byte_end":10138780,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138785,"byte_end":10138788,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138793,"byte_end":10138807,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138812,"byte_end":10138815,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138820,"byte_end":10138827,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138832,"byte_end":10138860,"line_start":32,"line_end":32,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138865,"byte_end":10138868,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ assert!(Interest::READABLE.is_readable());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138873,"byte_end":10138919,"line_start":34,"line_end":34,"column_start":5,"column_end":51}},{"value":"/ assert!(!Interest::WRITABLE.is_readable());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138924,"byte_end":10138971,"line_start":35,"line_end":35,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138976,"byte_end":10138979,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138984,"byte_end":10139039,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_readable());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139044,"byte_end":10139076,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139081,"byte_end":10139088,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139557,"byte_end":10139568,"line_start":57,"line_end":57,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"pub const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable interest.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139174,"byte_end":10139231,"line_start":44,"line_end":44,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139236,"byte_end":10139239,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139244,"byte_end":10139258,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139263,"byte_end":10139266,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139271,"byte_end":10139278,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139283,"byte_end":10139311,"line_start":49,"line_end":49,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139316,"byte_end":10139319,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ assert!(!Interest::READABLE.is_writable());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139324,"byte_end":10139371,"line_start":51,"line_end":51,"column_start":5,"column_end":52}},{"value":"/ assert!(Interest::WRITABLE.is_writable());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139376,"byte_end":10139422,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139427,"byte_end":10139430,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139435,"byte_end":10139490,"line_start":54,"line_end":54,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_writable());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139495,"byte_end":10139527,"line_start":55,"line_end":55,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139532,"byte_end":10139539,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139986,"byte_end":10139989,"line_start":74,"line_end":74,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"pub const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interst` values.","sig":null,"attributes":[{"value":"/ Add together two `Interst` values.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139625,"byte_end":10139663,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139668,"byte_end":10139671,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function works from a `const` context.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139676,"byte_end":10139723,"line_start":63,"line_end":63,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139728,"byte_end":10139731,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139736,"byte_end":10139750,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139755,"byte_end":10139758,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139763,"byte_end":10139770,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139775,"byte_end":10139803,"line_start":68,"line_end":68,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139808,"byte_end":10139811,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ const BOTH: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139816,"byte_end":10139886,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139891,"byte_end":10139894,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ assert!(BOTH.is_readable());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139899,"byte_end":10139931,"line_start":72,"line_end":72,"column_start":5,"column_end":37}},{"value":"/ assert!(BOTH.is_writable());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10139936,"byte_end":10139968,"line_start":73,"line_end":73,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1408},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10141367,"byte_end":10141372,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Ready","qualname":"::io::driver::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Describes the readiness state of an I/O resources.","sig":null,"attributes":[{"value":"/ Describes the readiness state of an I/O resources.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10141132,"byte_end":10141186,"line_start":11,"line_end":11,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10141187,"byte_end":10141190,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `Ready` tracks which operation an I/O resource is ready to perform.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10141191,"byte_end":10141262,"line_start":13,"line_end":13,"column_start":1,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10141448,"byte_end":10141453,"line_start":20,"line_end":20,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::io::driver::ready::Ready::EMPTY","value":"Ready","parent":{"krate":0,"index":1079},"children":[],"decl_id":null,"docs":" Returns the empty `Ready` set.\n","sig":null,"attributes":[{"value":"/ Returns the empty `Ready` set.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10141399,"byte_end":10141433,"line_start":19,"line_end":19,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10141547,"byte_end":10141555,"line_start":23,"line_end":23,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::ready::Ready::READABLE","value":"Ready","parent":{"krate":0,"index":1079},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readable readiness.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10141478,"byte_end":10141532,"line_start":22,"line_end":22,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":1082},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10141656,"byte_end":10141664,"line_start":26,"line_end":26,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::ready::Ready::WRITABLE","value":"Ready","parent":{"krate":0,"index":1079},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing writable readiness.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10141587,"byte_end":10141641,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":1083},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10141768,"byte_end":10141779,"line_start":29,"line_end":29,"column_start":15,"column_end":26},"name":"READ_CLOSED","qualname":"::io::driver::ready::Ready::READ_CLOSED","value":"Ready","parent":{"krate":0,"index":1079},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing read closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing read closed readiness.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10141696,"byte_end":10141753,"line_start":28,"line_end":28,"column_start":5,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":1084},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10141887,"byte_end":10141899,"line_start":32,"line_end":32,"column_start":15,"column_end":27},"name":"WRITE_CLOSED","qualname":"::io::driver::ready::Ready::WRITE_CLOSED","value":"Ready","parent":{"krate":0,"index":1079},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing write closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing write closed readiness.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10141814,"byte_end":10141872,"line_start":31,"line_end":31,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":1085},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10142014,"byte_end":10142017,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"ALL","qualname":"::io::driver::ready::Ready::ALL","value":"Ready","parent":{"krate":0,"index":1079},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readiness for all operations.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readiness for all operations.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10141935,"byte_end":10141999,"line_start":34,"line_end":34,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10142874,"byte_end":10142882,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Ready>::is_empty","value":"pub fn is_empty(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Ready` is the empty set","sig":null,"attributes":[{"value":"/ Returns true if `Ready` is the empty set","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10142633,"byte_end":10142677,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10142682,"byte_end":10142685,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10142690,"byte_end":10142704,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10142709,"byte_end":10142712,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10142717,"byte_end":10142724,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10142729,"byte_end":10142754,"line_start":65,"line_end":65,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10142759,"byte_end":10142762,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ assert!(Ready::EMPTY.is_empty());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10142767,"byte_end":10142804,"line_start":67,"line_end":67,"column_start":5,"column_end":42}},{"value":"/ assert!(!Ready::READABLE.is_empty());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10142809,"byte_end":10142850,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10142855,"byte_end":10142862,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143293,"byte_end":10143304,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Ready>::is_readable","value":"pub fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes `readable`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes `readable`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10142939,"byte_end":10142990,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10142995,"byte_end":10142998,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143003,"byte_end":10143017,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143022,"byte_end":10143025,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143030,"byte_end":10143037,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143042,"byte_end":10143067,"line_start":79,"line_end":79,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143072,"byte_end":10143075,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_readable());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143080,"byte_end":10143121,"line_start":81,"line_end":81,"column_start":5,"column_end":46}},{"value":"/ assert!(Ready::READABLE.is_readable());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143126,"byte_end":10143169,"line_start":82,"line_end":82,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::READ_CLOSED.is_readable());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143174,"byte_end":10143220,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/ assert!(!Ready::WRITABLE.is_readable());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143225,"byte_end":10143269,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143274,"byte_end":10143281,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143761,"byte_end":10143772,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Ready>::is_writable","value":"pub fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes writable `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes writable `readiness`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143396,"byte_end":10143457,"line_start":90,"line_end":90,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143462,"byte_end":10143465,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143470,"byte_end":10143484,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143489,"byte_end":10143492,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143497,"byte_end":10143504,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143509,"byte_end":10143534,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143539,"byte_end":10143542,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_writable());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143547,"byte_end":10143588,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/ assert!(!Ready::READABLE.is_writable());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143593,"byte_end":10143637,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/ assert!(Ready::WRITABLE.is_writable());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143642,"byte_end":10143685,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_writable());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143690,"byte_end":10143737,"line_start":100,"line_end":100,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143742,"byte_end":10143749,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10144193,"byte_end":10144207,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Ready>::is_read_closed","value":"pub fn is_read_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes read-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes read-closed `readiness`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143865,"byte_end":10143929,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143934,"byte_end":10143937,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143942,"byte_end":10143956,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143961,"byte_end":10143964,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143969,"byte_end":10143976,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10143981,"byte_end":10144006,"line_start":111,"line_end":111,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10144011,"byte_end":10144014,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_read_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10144019,"byte_end":10144063,"line_start":113,"line_end":113,"column_start":5,"column_end":49}},{"value":"/ assert!(!Ready::READABLE.is_read_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10144068,"byte_end":10144115,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/ assert!(Ready::READ_CLOSED.is_read_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10144120,"byte_end":10144169,"line_start":115,"line_end":115,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10144174,"byte_end":10144181,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10144610,"byte_end":10144625,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Ready>::is_write_closed","value":"pub fn is_write_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes write-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes write-closed `readiness`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10144277,"byte_end":10144342,"line_start":121,"line_end":121,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10144347,"byte_end":10144350,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10144355,"byte_end":10144369,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10144374,"byte_end":10144377,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10144382,"byte_end":10144389,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10144394,"byte_end":10144419,"line_start":126,"line_end":126,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10144424,"byte_end":10144427,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_write_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10144432,"byte_end":10144477,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/ assert!(!Ready::WRITABLE.is_write_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10144482,"byte_end":10144530,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_write_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10144535,"byte_end":10144586,"line_start":130,"line_end":130,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10144591,"byte_end":10144598,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1623},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188663,"byte_end":10188670,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"AsyncFd","qualname":"::io::async_fd::AsyncFd","value":"AsyncFd {  }","parent":null,"children":[{"krate":0,"index":1625},{"krate":0,"index":1626}],"decl_id":null,"docs":" Associates an IO object backed by a Unix file descriptor with the tokio\n reactor, allowing for readiness to be polled. The file descriptor must be of\n a type that can be used with the OS polling facilities (ie, `poll`, `epoll`,\n `kqueue`, etc), such as a network socket or pipe, and the file descriptor\n must have the nonblocking mode set to true.","sig":null,"attributes":[{"value":"/ Associates an IO object backed by a Unix file descriptor with the tokio","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10183071,"byte_end":10183146,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ reactor, allowing for readiness to be polled. The file descriptor must be of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10183147,"byte_end":10183227,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ a type that can be used with the OS polling facilities (ie, `poll`, `epoll`,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10183228,"byte_end":10183308,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ `kqueue`, etc), such as a network socket or pipe, and the file descriptor","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10183309,"byte_end":10183386,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ must have the nonblocking mode set to true.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10183387,"byte_end":10183434,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10183435,"byte_end":10183438,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Creating an AsyncFd registers the file descriptor with the current tokio","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10183439,"byte_end":10183515,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ Reactor, allowing you to directly await the file descriptor being readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10183516,"byte_end":10183594,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ or writable. Once registered, the file descriptor remains registered until","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10183595,"byte_end":10183673,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ the AsyncFd is dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10183674,"byte_end":10183701,"line_start":17,"line_end":17,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10183702,"byte_end":10183705,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The AsyncFd takes ownership of an arbitrary object to represent the IO","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10183706,"byte_end":10183780,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ object. It is intended that this object will handle closing the file","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10183781,"byte_end":10183853,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ descriptor when it is dropped, avoiding resource leaks and ensuring that the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10183854,"byte_end":10183934,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ AsyncFd can clean up the registration before closing the file descriptor.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10183935,"byte_end":10184012,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ The [`AsyncFd::into_inner`] function can be used to extract the inner object","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10184013,"byte_end":10184093,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ to retake control from the tokio IO reactor.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10184094,"byte_end":10184142,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10184143,"byte_end":10184146,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The inner object is required to implement [`AsRawFd`]. This file descriptor","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10184147,"byte_end":10184226,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ must not change while [`AsyncFd`] owns the inner object, i.e. the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10184227,"byte_end":10184296,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ [`AsRawFd::as_raw_fd`] method on the inner type must always return the same","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10184297,"byte_end":10184376,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ file descriptor when called multiple times. Failure to uphold this results","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10184377,"byte_end":10184455,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ in unspecified behavior in the IO driver, which may include breaking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10184456,"byte_end":10184528,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ notifications for other sockets/etc.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10184529,"byte_end":10184569,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10184570,"byte_end":10184573,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Polling for readiness is done by calling the async functions [`readable`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10184574,"byte_end":10184651,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ and [`writable`]. These functions complete when the associated readiness","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10184652,"byte_end":10184728,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ condition is observed. Any number of tasks can query the same `AsyncFd` in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10184729,"byte_end":10184807,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ parallel, on the same or different conditions.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10184808,"byte_end":10184858,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10184859,"byte_end":10184862,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ On some platforms, the readiness detecting mechanism relies on","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10184863,"byte_end":10184929,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ edge-triggered notifications. This means that the OS will only notify Tokio","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10184930,"byte_end":10185009,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ when the file descriptor transitions from not-ready to ready. For this to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10185010,"byte_end":10185087,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ work you should first try to read or write and only poll for readiness","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10185088,"byte_end":10185162,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ if that fails with an error of [`std::io::ErrorKind::WouldBlock`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10185163,"byte_end":10185233,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10185234,"byte_end":10185237,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Tokio internally tracks when it has received a ready notification, and when","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10185238,"byte_end":10185317,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ readiness checking functions like [`readable`] and [`writable`] are called,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10185318,"byte_end":10185397,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ if the readiness flag is set, these async functions will complete","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10185398,"byte_end":10185467,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/ immediately. This however does mean that it is critical to ensure that this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10185468,"byte_end":10185547,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ ready flag is cleared when (and only when) the file descriptor ceases to be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10185548,"byte_end":10185627,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ ready. The [`AsyncFdReadyGuard`] returned from readiness checking functions","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10185628,"byte_end":10185707,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ serves this function; after calling a readiness-checking async function,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10185708,"byte_end":10185784,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/ you must use this [`AsyncFdReadyGuard`] to signal to tokio whether the file","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10185785,"byte_end":10185864,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ descriptor is no longer in a ready state.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10185865,"byte_end":10185910,"line_start":52,"line_end":52,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10185911,"byte_end":10185914,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Use with to a poll-based API","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10185915,"byte_end":10185950,"line_start":54,"line_end":54,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10185951,"byte_end":10185954,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ In some cases it may be desirable to use `AsyncFd` from APIs similar to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10185955,"byte_end":10186030,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/ [`TcpStream::poll_read_ready`]. The [`AsyncFd::poll_read_ready`] and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186031,"byte_end":10186103,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/ [`AsyncFd::poll_write_ready`] functions are provided for this purpose.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186104,"byte_end":10186178,"line_start":58,"line_end":58,"column_start":1,"column_end":75}},{"value":"/ Because these functions don't create a future to hold their state, they have","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186179,"byte_end":10186259,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"/ the limitation that only one task can wait on each direction (read or write)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186260,"byte_end":10186340,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ at a time.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186341,"byte_end":10186355,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186356,"byte_end":10186359,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186360,"byte_end":10186374,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186375,"byte_end":10186378,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This example shows how to turn [`std::net::TcpStream`] asynchronous using","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186379,"byte_end":10186456,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ `AsyncFd`.  It implements `read` as an async fn, and `AsyncWrite` as a trait","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186457,"byte_end":10186537,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ to show how to implement both approaches.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186538,"byte_end":10186583,"line_start":67,"line_end":67,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186584,"byte_end":10186587,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186588,"byte_end":10186601,"line_start":69,"line_end":69,"column_start":1,"column_end":14}},{"value":"/ use futures::ready;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186602,"byte_end":10186625,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ use std::io::{self, Read, Write};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186626,"byte_end":10186663,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/ use std::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186664,"byte_end":10186692,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186693,"byte_end":10186715,"line_start":73,"line_end":73,"column_start":1,"column_end":23}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186716,"byte_end":10186751,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/ use tokio::io::AsyncWrite;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186752,"byte_end":10186782,"line_start":75,"line_end":75,"column_start":1,"column_end":31}},{"value":"/ use tokio::io::unix::AsyncFd;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186783,"byte_end":10186816,"line_start":76,"line_end":76,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186817,"byte_end":10186820,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ pub struct AsyncTcpStream {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186821,"byte_end":10186852,"line_start":78,"line_end":78,"column_start":1,"column_end":32}},{"value":"/     inner: AsyncFd<TcpStream>,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186853,"byte_end":10186887,"line_start":79,"line_end":79,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186888,"byte_end":10186893,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186894,"byte_end":10186897,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ impl AsyncTcpStream {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186898,"byte_end":10186923,"line_start":82,"line_end":82,"column_start":1,"column_end":26}},{"value":"/     pub fn new(tcp: TcpStream) -> io::Result<Self> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186924,"byte_end":10186980,"line_start":83,"line_end":83,"column_start":1,"column_end":57}},{"value":"/         Ok(Self {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10186981,"byte_end":10187002,"line_start":84,"line_end":84,"column_start":1,"column_end":22}},{"value":"/             inner: AsyncFd::new(tcp)?,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187003,"byte_end":10187045,"line_start":85,"line_end":85,"column_start":1,"column_end":43}},{"value":"/         })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187046,"byte_end":10187060,"line_start":86,"line_end":86,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187061,"byte_end":10187070,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187071,"byte_end":10187074,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/     pub async fn read(&self, out: &mut [u8]) -> io::Result<usize> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187075,"byte_end":10187146,"line_start":89,"line_end":89,"column_start":1,"column_end":72}},{"value":"/         loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187147,"byte_end":10187165,"line_start":90,"line_end":90,"column_start":1,"column_end":19}},{"value":"/             let mut guard = self.inner.readable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187166,"byte_end":10187227,"line_start":91,"line_end":91,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187228,"byte_end":10187231,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/             match guard.try_io(|inner| inner.get_ref().read(out)) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187232,"byte_end":10187303,"line_start":93,"line_end":93,"column_start":1,"column_end":72}},{"value":"/                 Ok(result) => return result,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187304,"byte_end":10187352,"line_start":94,"line_end":94,"column_start":1,"column_end":49}},{"value":"/                 Err(_would_block) => continue,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187353,"byte_end":10187403,"line_start":95,"line_end":95,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187404,"byte_end":10187421,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187422,"byte_end":10187435,"line_start":97,"line_end":97,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187436,"byte_end":10187445,"line_start":98,"line_end":98,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187446,"byte_end":10187451,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187452,"byte_end":10187455,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ impl AsyncWrite for AsyncTcpStream {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187456,"byte_end":10187496,"line_start":101,"line_end":101,"column_start":1,"column_end":41}},{"value":"/     fn poll_write(","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187497,"byte_end":10187519,"line_start":102,"line_end":102,"column_start":1,"column_end":23}},{"value":"/         self: Pin<&mut Self>,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187520,"byte_end":10187553,"line_start":103,"line_end":103,"column_start":1,"column_end":34}},{"value":"/         cx: &mut Context<'_>,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187554,"byte_end":10187587,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"/         buf: &[u8]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187588,"byte_end":10187610,"line_start":105,"line_end":105,"column_start":1,"column_end":23}},{"value":"/     ) -> Poll<io::Result<usize>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187611,"byte_end":10187649,"line_start":106,"line_end":106,"column_start":1,"column_end":39}},{"value":"/         loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187650,"byte_end":10187668,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/             let mut guard = ready!(self.inner.poll_write_ready(cx))?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187669,"byte_end":10187742,"line_start":108,"line_end":108,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187743,"byte_end":10187746,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/             match guard.try_io(|inner| inner.get_ref().write(buf)) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187747,"byte_end":10187819,"line_start":110,"line_end":110,"column_start":1,"column_end":73}},{"value":"/                 Ok(result) => return Poll::Ready(result),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187820,"byte_end":10187881,"line_start":111,"line_end":111,"column_start":1,"column_end":62}},{"value":"/                 Err(_would_block) => continue,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187882,"byte_end":10187932,"line_start":112,"line_end":112,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187933,"byte_end":10187950,"line_start":113,"line_end":113,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187951,"byte_end":10187964,"line_start":114,"line_end":114,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187965,"byte_end":10187974,"line_start":115,"line_end":115,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187975,"byte_end":10187978,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     fn poll_flush(","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10187979,"byte_end":10188001,"line_start":117,"line_end":117,"column_start":1,"column_end":23}},{"value":"/         self: Pin<&mut Self>,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188002,"byte_end":10188035,"line_start":118,"line_end":118,"column_start":1,"column_end":34}},{"value":"/         cx: &mut Context<'_>,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188036,"byte_end":10188069,"line_start":119,"line_end":119,"column_start":1,"column_end":34}},{"value":"/     ) -> Poll<io::Result<()>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188070,"byte_end":10188105,"line_start":120,"line_end":120,"column_start":1,"column_end":36}},{"value":"/         // tcp flush is a no-op","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188106,"byte_end":10188141,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188142,"byte_end":10188173,"line_start":122,"line_end":122,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188174,"byte_end":10188183,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188184,"byte_end":10188187,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/     fn poll_shutdown(","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188188,"byte_end":10188213,"line_start":125,"line_end":125,"column_start":1,"column_end":26}},{"value":"/         self: Pin<&mut Self>,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188214,"byte_end":10188247,"line_start":126,"line_end":126,"column_start":1,"column_end":34}},{"value":"/         cx: &mut Context<'_>,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188248,"byte_end":10188281,"line_start":127,"line_end":127,"column_start":1,"column_end":34}},{"value":"/     ) -> Poll<io::Result<()>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188282,"byte_end":10188317,"line_start":128,"line_end":128,"column_start":1,"column_end":36}},{"value":"/         self.inner.get_ref().shutdown(std::net::Shutdown::Write)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188318,"byte_end":10188388,"line_start":129,"line_end":129,"column_start":1,"column_end":71}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188389,"byte_end":10188420,"line_start":130,"line_end":130,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188421,"byte_end":10188430,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188431,"byte_end":10188436,"line_start":132,"line_end":132,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188437,"byte_end":10188444,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188445,"byte_end":10188448,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188449,"byte_end":10188488,"line_start":135,"line_end":135,"column_start":1,"column_end":40}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188489,"byte_end":10188528,"line_start":136,"line_end":136,"column_start":1,"column_end":40}},{"value":"/ [`AsyncFdReadyGuard`]: struct@self::AsyncFdReadyGuard","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188529,"byte_end":10188586,"line_start":137,"line_end":137,"column_start":1,"column_end":58}},{"value":"/ [`TcpStream::poll_read_ready`]: struct@crate::net::TcpStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188587,"byte_end":10188651,"line_start":138,"line_end":138,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1627},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10189178,"byte_end":10189195,"line_start":150,"line_end":150,"column_start":12,"column_end":29},"name":"AsyncFdReadyGuard","qualname":"::io::async_fd::AsyncFdReadyGuard","value":"AsyncFdReadyGuard {  }","parent":null,"children":[{"krate":0,"index":1630},{"krate":0,"index":1631}],"decl_id":null,"docs":" Represents an IO-ready event detected on a particular file descriptor that\n has not yet been acknowledged. This is a `must_use` structure to help ensure\n that you do not forget to explicitly clear (or not clear) the event.","sig":null,"attributes":[{"value":"/ Represents an IO-ready event detected on a particular file descriptor that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188742,"byte_end":10188820,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ has not yet been acknowledged. This is a `must_use` structure to help ensure","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188821,"byte_end":10188901,"line_start":145,"line_end":145,"column_start":1,"column_end":81}},{"value":"/ that you do not forget to explicitly clear (or not clear) the event.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188902,"byte_end":10188974,"line_start":146,"line_end":146,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188975,"byte_end":10188978,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ This type exposes an immutable reference to the underlying IO object.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10188979,"byte_end":10189052,"line_start":148,"line_end":148,"column_start":1,"column_end":74}},{"value":"must_use =\n  \"You must explicitly choose whether to clear the readiness state by calling a method on ReadyGuard\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10189053,"byte_end":10189166,"line_start":149,"line_end":149,"column_start":1,"column_end":114}}]},{"kind":"Struct","id":{"krate":0,"index":1632},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10189711,"byte_end":10189731,"line_start":161,"line_end":161,"column_start":12,"column_end":32},"name":"AsyncFdReadyMutGuard","qualname":"::io::async_fd::AsyncFdReadyMutGuard","value":"AsyncFdReadyMutGuard {  }","parent":null,"children":[{"krate":0,"index":1635},{"krate":0,"index":1636}],"decl_id":null,"docs":" Represents an IO-ready event detected on a particular file descriptor that\n has not yet been acknowledged. This is a `must_use` structure to help ensure\n that you do not forget to explicitly clear (or not clear) the event.","sig":null,"attributes":[{"value":"/ Represents an IO-ready event detected on a particular file descriptor that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10189278,"byte_end":10189356,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ has not yet been acknowledged. This is a `must_use` structure to help ensure","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10189357,"byte_end":10189437,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ that you do not forget to explicitly clear (or not clear) the event.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10189438,"byte_end":10189510,"line_start":157,"line_end":157,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10189511,"byte_end":10189514,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ This type exposes a mutable reference to the underlying IO object.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10189515,"byte_end":10189585,"line_start":159,"line_end":159,"column_start":1,"column_end":71}},{"value":"must_use =\n  \"You must explicitly choose whether to clear the readiness state by calling a method on ReadyGuard\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10189586,"byte_end":10189699,"line_start":160,"line_end":160,"column_start":1,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":1640},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10190205,"byte_end":10190208,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<AsyncFd<T>>::new","value":"pub fn new(T) -> io::Result<Self> where T: AsRawFd","parent":null,"children":[],"decl_id":null,"docs":" Creates an AsyncFd backed by (and taking ownership of) an object\n implementing [`AsRawFd`]. The backing file descriptor is cached at the\n time of creation.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10189928,"byte_end":10189937,"line_start":169,"line_end":169,"column_start":5,"column_end":14}},{"value":"/ Creates an AsyncFd backed by (and taking ownership of) an object","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10189942,"byte_end":10190010,"line_start":170,"line_end":170,"column_start":5,"column_end":73}},{"value":"/ implementing [`AsRawFd`]. The backing file descriptor is cached at the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10190015,"byte_end":10190089,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ time of creation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10190094,"byte_end":10190115,"line_start":172,"line_end":172,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10190120,"byte_end":10190123,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This method must be called in the context of a tokio runtime.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10190128,"byte_end":10190193,"line_start":174,"line_end":174,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10190533,"byte_end":10190546,"line_start":185,"line_end":185,"column_start":12,"column_end":25},"name":"with_interest","qualname":"<AsyncFd<T>>::with_interest","value":"pub fn with_interest(T, Interest) -> io::Result<Self> where T: AsRawFd","parent":null,"children":[],"decl_id":null,"docs":" Creates new instance as `new` with additional ability to customize interest,\n allowing to specify whether file descriptor will be polled for read, write or both.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10190335,"byte_end":10190344,"line_start":182,"line_end":182,"column_start":5,"column_end":14}},{"value":"/ Creates new instance as `new` with additional ability to customize interest,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10190349,"byte_end":10190429,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/ allowing to specify whether file descriptor will be polled for read, write or both.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10190434,"byte_end":10190521,"line_start":184,"line_end":184,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10191224,"byte_end":10191231,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AsyncFd<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the backing object of this [`AsyncFd`]\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the backing object of this [`AsyncFd`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10191126,"byte_end":10191198,"line_start":208,"line_end":208,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10191203,"byte_end":10191212,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10191394,"byte_end":10191401,"line_start":216,"line_end":216,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AsyncFd<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the backing object of this [`AsyncFd`]\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the backing object of this [`AsyncFd`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10191295,"byte_end":10191368,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10191373,"byte_end":10191382,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10191826,"byte_end":10191836,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AsyncFd<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Deregisters this file descriptor and returns ownership of the backing\n object.\n","sig":null,"attributes":[{"value":"/ Deregisters this file descriptor and returns ownership of the backing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10191725,"byte_end":10191798,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ object.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10191803,"byte_end":10191814,"line_start":231,"line_end":231,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10193363,"byte_end":10193378,"line_start":263,"line_end":263,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<AsyncFd<T>>::poll_read_ready","value":"pub fn poll_read_ready<'a>(&'a Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10191900,"byte_end":10191929,"line_start":236,"line_end":236,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10191934,"byte_end":10191937,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for reading, this method","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10191942,"byte_end":10192016,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10192021,"byte_end":10192100,"line_start":239,"line_end":239,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for reading, [`Waker::wake`] will be called.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10192105,"byte_end":10192183,"line_start":240,"line_end":240,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10192188,"byte_end":10192191,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_read_ready`] or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10192196,"byte_end":10192253,"line_start":242,"line_end":242,"column_start":5,"column_end":62}},{"value":"/ [`poll_read_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10192258,"byte_end":10192336,"line_start":243,"line_end":243,"column_start":5,"column_end":83}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10192341,"byte_end":10192405,"line_start":244,"line_end":244,"column_start":5,"column_end":69}},{"value":"/ [`poll_write_ready`] retains a second, independent waker).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10192410,"byte_end":10192472,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10192477,"byte_end":10192480,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10192485,"byte_end":10192558,"line_start":247,"line_end":247,"column_start":5,"column_end":78}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10192563,"byte_end":10192638,"line_start":248,"line_end":248,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10192643,"byte_end":10192711,"line_start":249,"line_end":249,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10192716,"byte_end":10192719,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10192724,"byte_end":10192792,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10192797,"byte_end":10192865,"line_start":252,"line_end":252,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10192870,"byte_end":10192939,"line_start":253,"line_end":253,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10192944,"byte_end":10192970,"line_start":254,"line_end":254,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10192975,"byte_end":10192978,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10192983,"byte_end":10193036,"line_start":256,"line_end":256,"column_start":5,"column_end":58}},{"value":"/ [`poll_read_ready_mut`]: method@Self::poll_read_ready_mut","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10193041,"byte_end":10193102,"line_start":257,"line_end":257,"column_start":5,"column_end":66}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10193107,"byte_end":10193162,"line_start":258,"line_end":258,"column_start":5,"column_end":60}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10193167,"byte_end":10193206,"line_start":259,"line_end":259,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10193211,"byte_end":10193253,"line_start":260,"line_end":260,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10193258,"byte_end":10193296,"line_start":261,"line_end":261,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10193301,"byte_end":10193351,"line_start":262,"line_end":262,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10195045,"byte_end":10195064,"line_start":301,"line_end":301,"column_start":12,"column_end":31},"name":"poll_read_ready_mut","qualname":"<AsyncFd<T>>::poll_read_ready_mut","value":"pub fn poll_read_ready_mut<'a>(&'a mut Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyMutGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10193684,"byte_end":10193713,"line_start":276,"line_end":276,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10193718,"byte_end":10193721,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for reading, this method","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10193726,"byte_end":10193800,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10193805,"byte_end":10193884,"line_start":279,"line_end":279,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for reading, [`Waker::wake`] will be called.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10193889,"byte_end":10193967,"line_start":280,"line_end":280,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10193972,"byte_end":10193975,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_read_ready`] or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10193980,"byte_end":10194037,"line_start":282,"line_end":282,"column_start":5,"column_end":62}},{"value":"/ [`poll_read_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10194042,"byte_end":10194120,"line_start":283,"line_end":283,"column_start":5,"column_end":83}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10194125,"byte_end":10194189,"line_start":284,"line_end":284,"column_start":5,"column_end":69}},{"value":"/ [`poll_write_ready`] retains a second, independent waker).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10194194,"byte_end":10194256,"line_start":285,"line_end":285,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10194261,"byte_end":10194264,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10194269,"byte_end":10194342,"line_start":287,"line_end":287,"column_start":5,"column_end":78}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10194347,"byte_end":10194422,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10194427,"byte_end":10194495,"line_start":289,"line_end":289,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10194500,"byte_end":10194503,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10194508,"byte_end":10194583,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10194588,"byte_end":10194652,"line_start":292,"line_end":292,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10194657,"byte_end":10194660,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10194665,"byte_end":10194718,"line_start":294,"line_end":294,"column_start":5,"column_end":58}},{"value":"/ [`poll_read_ready_mut`]: method@Self::poll_read_ready_mut","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10194723,"byte_end":10194784,"line_start":295,"line_end":295,"column_start":5,"column_end":66}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10194789,"byte_end":10194844,"line_start":296,"line_end":296,"column_start":5,"column_end":60}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10194849,"byte_end":10194888,"line_start":297,"line_end":297,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10194893,"byte_end":10194935,"line_start":298,"line_end":298,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10194940,"byte_end":10194978,"line_start":299,"line_end":299,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10194983,"byte_end":10195033,"line_start":300,"line_end":300,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1651},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10196847,"byte_end":10196863,"line_start":341,"line_end":341,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<AsyncFd<T>>::poll_write_ready","value":"pub fn poll_write_ready<'a>(&'a Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10195380,"byte_end":10195410,"line_start":314,"line_end":314,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10195415,"byte_end":10195418,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for writing, this method","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10195423,"byte_end":10195497,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10195502,"byte_end":10195581,"line_start":317,"line_end":317,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for writing, [`Waker::wake`] will be called.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10195586,"byte_end":10195664,"line_start":318,"line_end":318,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10195669,"byte_end":10195672,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_write_ready`] or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10195677,"byte_end":10195735,"line_start":320,"line_end":320,"column_start":5,"column_end":63}},{"value":"/ [`poll_write_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10195740,"byte_end":10195819,"line_start":321,"line_end":321,"column_start":5,"column_end":84}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10195824,"byte_end":10195888,"line_start":322,"line_end":322,"column_start":5,"column_end":69}},{"value":"/ [`poll_read_ready`] retains a second, independent waker).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10195893,"byte_end":10195954,"line_start":323,"line_end":323,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10195959,"byte_end":10195962,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10195967,"byte_end":10196040,"line_start":325,"line_end":325,"column_start":5,"column_end":78}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10196045,"byte_end":10196120,"line_start":326,"line_end":326,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10196125,"byte_end":10196193,"line_start":327,"line_end":327,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10196198,"byte_end":10196201,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10196206,"byte_end":10196274,"line_start":329,"line_end":329,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10196279,"byte_end":10196347,"line_start":330,"line_end":330,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10196352,"byte_end":10196421,"line_start":331,"line_end":331,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10196426,"byte_end":10196452,"line_start":332,"line_end":332,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10196457,"byte_end":10196460,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10196465,"byte_end":10196518,"line_start":334,"line_end":334,"column_start":5,"column_end":58}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10196523,"byte_end":10196578,"line_start":335,"line_end":335,"column_start":5,"column_end":60}},{"value":"/ [`poll_write_ready_mut`]: method@Self::poll_write_ready_mut","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10196583,"byte_end":10196646,"line_start":336,"line_end":336,"column_start":5,"column_end":68}},{"value":"/ [`writable`]: method@Self::readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10196651,"byte_end":10196690,"line_start":337,"line_end":337,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10196695,"byte_end":10196737,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10196742,"byte_end":10196780,"line_start":339,"line_end":339,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10196785,"byte_end":10196835,"line_start":340,"line_end":340,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10198535,"byte_end":10198555,"line_start":379,"line_end":379,"column_start":12,"column_end":32},"name":"poll_write_ready_mut","qualname":"<AsyncFd<T>>::poll_write_ready_mut","value":"pub fn poll_write_ready_mut<'a>(&'a mut Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyMutGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10197170,"byte_end":10197200,"line_start":354,"line_end":354,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10197205,"byte_end":10197208,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for writing, this method","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10197213,"byte_end":10197287,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10197292,"byte_end":10197371,"line_start":357,"line_end":357,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for writing, [`Waker::wake`] will be called.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10197376,"byte_end":10197454,"line_start":358,"line_end":358,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10197459,"byte_end":10197462,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_write_ready`] or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10197467,"byte_end":10197525,"line_start":360,"line_end":360,"column_start":5,"column_end":63}},{"value":"/ [`poll_write_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10197530,"byte_end":10197609,"line_start":361,"line_end":361,"column_start":5,"column_end":84}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10197614,"byte_end":10197678,"line_start":362,"line_end":362,"column_start":5,"column_end":69}},{"value":"/ [`poll_read_ready`] retains a second, independent waker).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10197683,"byte_end":10197744,"line_start":363,"line_end":363,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10197749,"byte_end":10197752,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10197757,"byte_end":10197830,"line_start":365,"line_end":365,"column_start":5,"column_end":78}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10197835,"byte_end":10197910,"line_start":366,"line_end":366,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10197915,"byte_end":10197983,"line_start":367,"line_end":367,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10197988,"byte_end":10197991,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10197996,"byte_end":10198071,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10198076,"byte_end":10198140,"line_start":370,"line_end":370,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10198145,"byte_end":10198148,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10198153,"byte_end":10198206,"line_start":372,"line_end":372,"column_start":5,"column_end":58}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10198211,"byte_end":10198266,"line_start":373,"line_end":373,"column_start":5,"column_end":60}},{"value":"/ [`poll_write_ready_mut`]: method@Self::poll_write_ready_mut","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10198271,"byte_end":10198334,"line_start":374,"line_end":374,"column_start":5,"column_end":68}},{"value":"/ [`writable`]: method@Self::readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10198339,"byte_end":10198378,"line_start":375,"line_end":375,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10198383,"byte_end":10198425,"line_start":376,"line_end":376,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10198430,"byte_end":10198468,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10198473,"byte_end":10198523,"line_start":378,"line_end":378,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10199965,"byte_end":10199973,"line_start":422,"line_end":422,"column_start":18,"column_end":26},"name":"readable","qualname":"<AsyncFd<T>>::readable","value":"pub async fn readable<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become readable, returning a\n [`AsyncFdReadyGuard`] that must be dropped to resume read-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become readable, returning a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10199445,"byte_end":10199510,"line_start":413,"line_end":413,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyGuard`] that must be dropped to resume read-readiness","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10199515,"byte_end":10199586,"line_start":414,"line_end":414,"column_start":5,"column_end":76}},{"value":"/ polling.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10199591,"byte_end":10199603,"line_start":415,"line_end":415,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10199608,"byte_end":10199611,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10199616,"byte_end":10199684,"line_start":417,"line_end":417,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10199689,"byte_end":10199757,"line_start":418,"line_end":418,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10199762,"byte_end":10199831,"line_start":419,"line_end":419,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10199836,"byte_end":10199862,"line_start":420,"line_end":420,"column_start":5,"column_end":31}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10199867,"byte_end":10199903,"line_start":421,"line_end":421,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10200511,"byte_end":10200523,"line_start":433,"line_end":433,"column_start":18,"column_end":30},"name":"readable_mut","qualname":"<AsyncFd<T>>::readable_mut","value":"pub async fn readable_mut<'a>(&'a mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become readable, returning a\n [`AsyncFdReadyMutGuard`] that must be dropped to resume read-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become readable, returning a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10200090,"byte_end":10200155,"line_start":426,"line_end":426,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyMutGuard`] that must be dropped to resume read-readiness","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10200160,"byte_end":10200234,"line_start":427,"line_end":427,"column_start":5,"column_end":79}},{"value":"/ polling.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10200239,"byte_end":10200251,"line_start":428,"line_end":428,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10200256,"byte_end":10200259,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10200264,"byte_end":10200339,"line_start":430,"line_end":430,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10200344,"byte_end":10200408,"line_start":431,"line_end":431,"column_start":5,"column_end":69}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10200413,"byte_end":10200449,"line_start":432,"line_end":432,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10201172,"byte_end":10201180,"line_start":446,"line_end":446,"column_start":18,"column_end":26},"name":"writable","qualname":"<AsyncFd<T>>::writable","value":"pub async fn writable<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become writable, returning a\n [`AsyncFdReadyGuard`] that must be dropped to resume write-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become writable, returning a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10200651,"byte_end":10200716,"line_start":437,"line_end":437,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyGuard`] that must be dropped to resume write-readiness","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10200721,"byte_end":10200793,"line_start":438,"line_end":438,"column_start":5,"column_end":77}},{"value":"/ polling.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10200798,"byte_end":10200810,"line_start":439,"line_end":439,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10200815,"byte_end":10200818,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10200823,"byte_end":10200891,"line_start":441,"line_end":441,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10200896,"byte_end":10200964,"line_start":442,"line_end":442,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10200969,"byte_end":10201038,"line_start":443,"line_end":443,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10201043,"byte_end":10201069,"line_start":444,"line_end":444,"column_start":5,"column_end":31}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10201074,"byte_end":10201110,"line_start":445,"line_end":445,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10201719,"byte_end":10201731,"line_start":457,"line_end":457,"column_start":18,"column_end":30},"name":"writable_mut","qualname":"<AsyncFd<T>>::writable_mut","value":"pub async fn writable_mut<'a>(&'a mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become writable, returning a\n [`AsyncFdReadyMutGuard`] that must be dropped to resume write-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become writable, returning a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10201297,"byte_end":10201362,"line_start":450,"line_end":450,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyMutGuard`] that must be dropped to resume write-readiness","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10201367,"byte_end":10201442,"line_start":451,"line_end":451,"column_start":5,"column_end":80}},{"value":"/ polling.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10201447,"byte_end":10201459,"line_start":452,"line_end":452,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10201464,"byte_end":10201467,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10201472,"byte_end":10201547,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10201552,"byte_end":10201616,"line_start":455,"line_end":455,"column_start":5,"column_end":69}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10201621,"byte_end":10201657,"line_start":456,"line_end":456,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10202961,"byte_end":10202972,"line_start":493,"line_end":493,"column_start":12,"column_end":23},"name":"clear_ready","qualname":"<AsyncFdReadyGuard>::clear_ready","value":"pub fn clear_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Indicates to tokio that the file descriptor is no longer ready. The\n internal readiness flag will be cleared, and tokio will wait for the\n next edge-triggered readiness notification from the OS.","sig":null,"attributes":[{"value":"/ Indicates to tokio that the file descriptor is no longer ready. The","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10202407,"byte_end":10202478,"line_start":483,"line_end":483,"column_start":5,"column_end":76}},{"value":"/ internal readiness flag will be cleared, and tokio will wait for the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10202483,"byte_end":10202555,"line_start":484,"line_end":484,"column_start":5,"column_end":77}},{"value":"/ next edge-triggered readiness notification from the OS.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10202560,"byte_end":10202619,"line_start":485,"line_end":485,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10202624,"byte_end":10202627,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ It is critical that this function not be called unless your code","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10202632,"byte_end":10202700,"line_start":487,"line_end":487,"column_start":5,"column_end":73}},{"value":"/ _actually observes_ that the file descriptor is _not_ ready. Do not call","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10202705,"byte_end":10202781,"line_start":488,"line_end":488,"column_start":5,"column_end":81}},{"value":"/ it simply because, for example, a read succeeded; it should be called","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10202786,"byte_end":10202859,"line_start":489,"line_end":489,"column_start":5,"column_end":78}},{"value":"/ when a read is observed to block.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10202864,"byte_end":10202901,"line_start":490,"line_end":490,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10202906,"byte_end":10202909,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ [`drop`]: method@std::mem::drop","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10202914,"byte_end":10202949,"line_start":492,"line_end":492,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10203373,"byte_end":10203385,"line_start":504,"line_end":504,"column_start":12,"column_end":24},"name":"retain_ready","qualname":"<AsyncFdReadyGuard>::retain_ready","value":"pub fn retain_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" This method should be invoked when you intentionally want to keep the\n ready flag asserted.","sig":null,"attributes":[{"value":"/ This method should be invoked when you intentionally want to keep the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10203119,"byte_end":10203192,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/ ready flag asserted.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10203197,"byte_end":10203221,"line_start":500,"line_end":500,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10203226,"byte_end":10203229,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ While this function is itself a no-op, it satisfies the `#[must_use]`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10203234,"byte_end":10203307,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"/ constraint on the [`AsyncFdReadyGuard`] type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10203312,"byte_end":10203361,"line_start":503,"line_end":503,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10204417,"byte_end":10204423,"line_start":526,"line_end":526,"column_start":12,"column_end":18},"name":"try_io","qualname":"<AsyncFdReadyGuard>::try_io","value":"pub fn try_io<R,\n              impl FnOnce(&AsyncFd<Inner>) -> io::Result<R>: FnOnce(&AsyncFd<Inner>)\n              ->\n              io::Result<R>>(&mut Self,\n                             impl FnOnce(&AsyncFd<Inner>) -> io::Result<R>)\n-> Result<io::Result<R>, TryIoError>","parent":null,"children":[],"decl_id":null,"docs":" Performs the provided IO operation.","sig":null,"attributes":[{"value":"/ Performs the provided IO operation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10203427,"byte_end":10203466,"line_start":508,"line_end":508,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10203471,"byte_end":10203474,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ If `f` returns a [`WouldBlock`] error, the readiness state associated","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10203479,"byte_end":10203552,"line_start":510,"line_end":510,"column_start":5,"column_end":78}},{"value":"/ with this file descriptor is cleared, and the method returns","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10203557,"byte_end":10203621,"line_start":511,"line_end":511,"column_start":5,"column_end":69}},{"value":"/ `Err(TryIoError::WouldBlock)`. You will typically need to poll the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10203626,"byte_end":10203696,"line_start":512,"line_end":512,"column_start":5,"column_end":75}},{"value":"/ `AsyncFd` again when this happens.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10203701,"byte_end":10203739,"line_start":513,"line_end":513,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10203744,"byte_end":10203747,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method helps ensure that the readiness state of the underlying file","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10203752,"byte_end":10203828,"line_start":515,"line_end":515,"column_start":5,"column_end":81}},{"value":"/ descriptor remains in sync with the tokio-side readiness state, by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10203833,"byte_end":10203903,"line_start":516,"line_end":516,"column_start":5,"column_end":75}},{"value":"/ clearing the tokio-side state only when a [`WouldBlock`] condition","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10203908,"byte_end":10203978,"line_start":517,"line_end":517,"column_start":5,"column_end":75}},{"value":"/ occurs. It is the responsibility of the caller to ensure that `f`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10203983,"byte_end":10204052,"line_start":518,"line_end":518,"column_start":5,"column_end":74}},{"value":"/ returns [`WouldBlock`] only if the file descriptor that originated this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10204057,"byte_end":10204132,"line_start":519,"line_end":519,"column_start":5,"column_end":80}},{"value":"/ `AsyncFdReadyGuard` no longer expresses the readiness state that was queried to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10204137,"byte_end":10204220,"line_start":520,"line_end":520,"column_start":5,"column_end":88}},{"value":"/ create this `AsyncFdReadyGuard`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10204225,"byte_end":10204261,"line_start":521,"line_end":521,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10204266,"byte_end":10204269,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10204274,"byte_end":10204324,"line_start":523,"line_end":523,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10205529,"byte_end":10205540,"line_start":556,"line_end":556,"column_start":12,"column_end":23},"name":"clear_ready","qualname":"<AsyncFdReadyMutGuard>::clear_ready","value":"pub fn clear_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Indicates to tokio that the file descriptor is no longer ready. The\n internal readiness flag will be cleared, and tokio will wait for the\n next edge-triggered readiness notification from the OS.","sig":null,"attributes":[{"value":"/ Indicates to tokio that the file descriptor is no longer ready. The","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10204975,"byte_end":10205046,"line_start":546,"line_end":546,"column_start":5,"column_end":76}},{"value":"/ internal readiness flag will be cleared, and tokio will wait for the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10205051,"byte_end":10205123,"line_start":547,"line_end":547,"column_start":5,"column_end":77}},{"value":"/ next edge-triggered readiness notification from the OS.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10205128,"byte_end":10205187,"line_start":548,"line_end":548,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10205192,"byte_end":10205195,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ It is critical that this function not be called unless your code","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10205200,"byte_end":10205268,"line_start":550,"line_end":550,"column_start":5,"column_end":73}},{"value":"/ _actually observes_ that the file descriptor is _not_ ready. Do not call","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10205273,"byte_end":10205349,"line_start":551,"line_end":551,"column_start":5,"column_end":81}},{"value":"/ it simply because, for example, a read succeeded; it should be called","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10205354,"byte_end":10205427,"line_start":552,"line_end":552,"column_start":5,"column_end":78}},{"value":"/ when a read is observed to block.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10205432,"byte_end":10205469,"line_start":553,"line_end":553,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10205474,"byte_end":10205477,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ [`drop`]: method@std::mem::drop","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10205482,"byte_end":10205517,"line_start":555,"line_end":555,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10205941,"byte_end":10205953,"line_start":567,"line_end":567,"column_start":12,"column_end":24},"name":"retain_ready","qualname":"<AsyncFdReadyMutGuard>::retain_ready","value":"pub fn retain_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" This method should be invoked when you intentionally want to keep the\n ready flag asserted.","sig":null,"attributes":[{"value":"/ This method should be invoked when you intentionally want to keep the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10205687,"byte_end":10205760,"line_start":562,"line_end":562,"column_start":5,"column_end":78}},{"value":"/ ready flag asserted.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10205765,"byte_end":10205789,"line_start":563,"line_end":563,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10205794,"byte_end":10205797,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ While this function is itself a no-op, it satisfies the `#[must_use]`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10205802,"byte_end":10205875,"line_start":565,"line_end":565,"column_start":5,"column_end":78}},{"value":"/ constraint on the [`AsyncFdReadyGuard`] type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10205880,"byte_end":10205929,"line_start":566,"line_end":566,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10206904,"byte_end":10206910,"line_start":587,"line_end":587,"column_start":12,"column_end":18},"name":"try_io","qualname":"<AsyncFdReadyMutGuard>::try_io","value":"pub fn try_io<R,\n              impl FnOnce(&mut AsyncFd<Inner>) -> io::Result<R>: FnOnce(&mut AsyncFd<Inner>)\n              ->\n              io::Result<R>>(&mut Self,\n                             impl FnOnce(&mut AsyncFd<Inner>) -> io::Result<R>)\n-> Result<io::Result<R>, TryIoError>","parent":null,"children":[],"decl_id":null,"docs":" Performs the provided IO operation.","sig":null,"attributes":[{"value":"/ Performs the provided IO operation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10205995,"byte_end":10206034,"line_start":571,"line_end":571,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10206039,"byte_end":10206042,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ If `f` returns a [`WouldBlock`] error, the readiness state associated","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10206047,"byte_end":10206120,"line_start":573,"line_end":573,"column_start":5,"column_end":78}},{"value":"/ with this file descriptor is cleared, and the method returns","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10206125,"byte_end":10206189,"line_start":574,"line_end":574,"column_start":5,"column_end":69}},{"value":"/ `Err(TryIoError::WouldBlock)`. You will typically need to poll the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10206194,"byte_end":10206264,"line_start":575,"line_end":575,"column_start":5,"column_end":75}},{"value":"/ `AsyncFd` again when this happens.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10206269,"byte_end":10206307,"line_start":576,"line_end":576,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10206312,"byte_end":10206315,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ This method helps ensure that the readiness state of the underlying file","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10206320,"byte_end":10206396,"line_start":578,"line_end":578,"column_start":5,"column_end":81}},{"value":"/ descriptor remains in sync with the tokio-side readiness state, by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10206401,"byte_end":10206471,"line_start":579,"line_end":579,"column_start":5,"column_end":75}},{"value":"/ clearing the tokio-side state only when a [`WouldBlock`] condition","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10206476,"byte_end":10206546,"line_start":580,"line_end":580,"column_start":5,"column_end":75}},{"value":"/ occurs. It is the responsibility of the caller to ensure that `f`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10206551,"byte_end":10206620,"line_start":581,"line_end":581,"column_start":5,"column_end":74}},{"value":"/ returns [`WouldBlock`] only if the file descriptor that originated this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10206625,"byte_end":10206700,"line_start":582,"line_end":582,"column_start":5,"column_end":80}},{"value":"/ `AsyncFdReadyGuard` no longer expresses the readiness state that was queried to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10206705,"byte_end":10206788,"line_start":583,"line_end":583,"column_start":5,"column_end":88}},{"value":"/ create this `AsyncFdReadyGuard`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10206793,"byte_end":10206829,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10206834,"byte_end":10206837,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10206842,"byte_end":10206892,"line_start":586,"line_end":586,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1724},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10208220,"byte_end":10208230,"line_start":629,"line_end":629,"column_start":12,"column_end":22},"name":"TryIoError","qualname":"::io::async_fd::TryIoError","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error type returned by [`try_io`].","sig":null,"attributes":[{"value":"/ The error type returned by [`try_io`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10207962,"byte_end":10208004,"line_start":622,"line_end":622,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10208005,"byte_end":10208008,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ This error indicates that the IO resource returned a [`WouldBlock`] error.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10208009,"byte_end":10208087,"line_start":624,"line_end":624,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10208088,"byte_end":10208091,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10208092,"byte_end":10208142,"line_start":626,"line_end":626,"column_start":1,"column_end":51}},{"value":"/ [`try_io`]: method@AsyncFdReadyGuard::try_io","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10208143,"byte_end":10208191,"line_start":627,"line_end":627,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":1710},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","byte_start":42601,"byte_end":42605,"line_start":223,"line_end":223,"column_start":13,"column_end":17},"name":"unix","qualname":"::io::unix","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1715},{"krate":0,"index":1718},{"krate":0,"index":1721}],"decl_id":null,"docs":" Asynchronous IO structures specific to Unix-like operating systems.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":22140,"byte_end":22174,"line_start":178,"line_end":178,"column_start":13,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1929},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10208833,"byte_end":10208841,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1931}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1932},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10208970,"byte_end":10208979,"line_start":25,"line_end":25,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1934}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1935},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10209293,"byte_end":10209298,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10209924,"byte_end":10209934,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10209821,"byte_end":10209896,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10209901,"byte_end":10209912,"line_start":64,"line_end":64,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10210341,"byte_end":10210348,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10210017,"byte_end":10210066,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10210071,"byte_end":10210074,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10210079,"byte_end":10210091,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10210096,"byte_end":10210099,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10210104,"byte_end":10210178,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10210183,"byte_end":10210233,"line_start":74,"line_end":74,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10210238,"byte_end":10210302,"line_start":75,"line_end":75,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10210307,"byte_end":10210329,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10210849,"byte_end":10210859,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10210747,"byte_end":10210821,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10210826,"byte_end":10210837,"line_start":94,"line_end":94,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":13945},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/seek.rs","byte_start":10213728,"byte_end":10213732,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":13948},{"krate":0,"index":13949},{"krate":0,"index":13950}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3623},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_buf_read_ext.rs","byte_start":10217153,"byte_end":10217168,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":3624},{"krate":0,"index":3626},{"krate":0,"index":3628},{"krate":0,"index":3629}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3624},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_buf_read_ext.rs","byte_start":10219964,"byte_end":10219974,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":3623},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3626},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_buf_read_ext.rs","byte_start":10222865,"byte_end":10222874,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":3623},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3628},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_buf_read_ext.rs","byte_start":10224274,"byte_end":10224279,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":3623},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_buf_read_ext.rs","byte_start":10226119,"byte_end":10226124,"line_start":250,"line_end":250,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":3623},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3631},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10228197,"byte_end":10228209,"line_start":61,"line_end":61,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":3632},{"krate":0,"index":3634},{"krate":0,"index":3636},{"krate":0,"index":3639},{"krate":0,"index":3646},{"krate":0,"index":3648},{"krate":0,"index":3650},{"krate":0,"index":3652},{"krate":0,"index":3654},{"krate":0,"index":3656},{"krate":0,"index":3658},{"krate":0,"index":3660},{"krate":0,"index":3662},{"krate":0,"index":3664},{"krate":0,"index":3666},{"krate":0,"index":3668},{"krate":0,"index":3670},{"krate":0,"index":3672},{"krate":0,"index":3674},{"krate":0,"index":3676},{"krate":0,"index":3678},{"krate":0,"index":3680},{"krate":0,"index":3641},{"krate":0,"index":3643},{"krate":0,"index":3645}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10229329,"byte_end":10229334,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10232196,"byte_end":10232200,"line_start":161,"line_end":161,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10234808,"byte_end":10234816,"line_start":230,"line_end":230,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3639},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10236713,"byte_end":10236723,"line_start":284,"line_end":284,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3646},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10238160,"byte_end":10238167,"line_start":328,"line_end":328,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3648},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10239456,"byte_end":10239463,"line_start":366,"line_end":366,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3650},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10240794,"byte_end":10240802,"line_start":404,"line_end":404,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10242142,"byte_end":10242150,"line_start":442,"line_end":442,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10243431,"byte_end":10243439,"line_start":479,"line_end":479,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10244734,"byte_end":10244742,"line_start":517,"line_end":517,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3658},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10246105,"byte_end":10246113,"line_start":556,"line_end":556,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3660},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10247398,"byte_end":10247406,"line_start":593,"line_end":593,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3662},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10248866,"byte_end":10248875,"line_start":633,"line_end":633,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3664},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10250261,"byte_end":10250270,"line_start":673,"line_end":673,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3666},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10251617,"byte_end":10251628,"line_start":711,"line_end":711,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3668},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10252989,"byte_end":10253000,"line_start":749,"line_end":749,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10254301,"byte_end":10254312,"line_start":786,"line_end":786,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3672},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10255624,"byte_end":10255635,"line_start":824,"line_end":824,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3674},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10257016,"byte_end":10257027,"line_start":863,"line_end":863,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10258321,"byte_end":10258332,"line_start":900,"line_end":900,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3678},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10259810,"byte_end":10259822,"line_start":940,"line_end":940,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3680},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10261216,"byte_end":10261228,"line_start":980,"line_end":980,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3641},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10262887,"byte_end":10262898,"line_start":1028,"line_end":1028,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3643},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10264453,"byte_end":10264467,"line_start":1075,"line_end":1075,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3645},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10265759,"byte_end":10265763,"line_start":1113,"line_end":1113,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3631},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3682},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_seek_ext.rs","byte_start":10266851,"byte_end":10266863,"line_start":33,"line_end":33,"column_start":15,"column_end":27},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":3683},{"krate":0,"index":3684}],"decl_id":null,"docs":" An extension trait that adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3683},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_seek_ext.rs","byte_start":10267859,"byte_end":10267863,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":3682},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3684},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_seek_ext.rs","byte_start":10268203,"byte_end":10268218,"line_start":74,"line_end":74,"column_start":12,"column_end":27},"name":"stream_position","qualname":"::io::util::async_seek_ext::AsyncSeekExt::stream_position","value":"pub fn stream_position(&mut Self) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":3682},"children":[],"decl_id":null,"docs":" Creates a future which will return the current seek position from the\n start of the stream.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3686},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10270501,"byte_end":10270514,"line_start":68,"line_end":68,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":3687},{"krate":0,"index":3689},{"krate":0,"index":3692},{"krate":0,"index":3695},{"krate":0,"index":3698},{"krate":0,"index":3702},{"krate":0,"index":3704},{"krate":0,"index":3706},{"krate":0,"index":3708},{"krate":0,"index":3710},{"krate":0,"index":3712},{"krate":0,"index":3714},{"krate":0,"index":3716},{"krate":0,"index":3718},{"krate":0,"index":3720},{"krate":0,"index":3722},{"krate":0,"index":3724},{"krate":0,"index":3726},{"krate":0,"index":3728},{"krate":0,"index":3730},{"krate":0,"index":3732},{"krate":0,"index":3734},{"krate":0,"index":3736},{"krate":0,"index":3700},{"krate":0,"index":3701}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3687},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10272356,"byte_end":10272361,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3689},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10273566,"byte_end":10273580,"line_start":156,"line_end":156,"column_start":12,"column_end":26},"name":"write_vectored","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_vectored","value":"pub fn write_vectored<'a, 'b>(&'a mut Self, &'a [IoSlice]) -> WriteVectored\nwhere Self: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Like [`write`], except that it writes from a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3692},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10276472,"byte_end":10276481,"line_start":229,"line_end":229,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3695},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10278356,"byte_end":10278369,"line_start":282,"line_end":282,"column_start":12,"column_end":25},"name":"write_all_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all_buf","value":"pub fn write_all_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteAllBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3698},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10279718,"byte_end":10279727,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3702},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10281127,"byte_end":10281135,"line_start":366,"line_end":366,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3704},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10282396,"byte_end":10282404,"line_start":403,"line_end":403,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3706},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10283719,"byte_end":10283728,"line_start":441,"line_end":441,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3708},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10285041,"byte_end":10285050,"line_start":479,"line_end":479,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3710},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10286390,"byte_end":10286399,"line_start":517,"line_end":517,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3712},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10287734,"byte_end":10287743,"line_start":555,"line_end":555,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3714},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10289120,"byte_end":10289129,"line_start":593,"line_end":593,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3716},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10290500,"byte_end":10290509,"line_start":631,"line_end":631,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3718},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10291964,"byte_end":10291974,"line_start":671,"line_end":671,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3720},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10293356,"byte_end":10293366,"line_start":711,"line_end":711,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3722},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10294698,"byte_end":10294710,"line_start":750,"line_end":750,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3724},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10296037,"byte_end":10296049,"line_start":788,"line_end":788,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3726},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10297403,"byte_end":10297415,"line_start":826,"line_end":826,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3728},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10298764,"byte_end":10298776,"line_start":864,"line_end":864,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3730},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10300167,"byte_end":10300179,"line_start":902,"line_end":902,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3732},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10301564,"byte_end":10301576,"line_start":940,"line_end":940,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3734},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10303043,"byte_end":10303056,"line_start":980,"line_end":980,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3736},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10304450,"byte_end":10304463,"line_start":1020,"line_end":1020,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3700},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10305483,"byte_end":10305488,"line_start":1053,"line_end":1053,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3701},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10306778,"byte_end":10306786,"line_start":1092,"line_end":1092,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13889},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10308181,"byte_end":10308190,"line_start":27,"line_end":27,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":13891},{"krate":0,"index":13892},{"krate":0,"index":13893},{"krate":0,"index":13894},{"krate":0,"index":13895}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2282},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10308568,"byte_end":10308571,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10308426,"byte_end":10308518,"line_start":38,"line_end":38,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10308523,"byte_end":10308556,"line_start":39,"line_end":39,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10308733,"byte_end":10308746,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10308656,"byte_end":10308721,"line_start":44,"line_end":44,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10309141,"byte_end":10309148,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10309004,"byte_end":10309050,"line_start":56,"line_end":56,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10309055,"byte_end":10309058,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10309063,"byte_end":10309129,"line_start":58,"line_end":58,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10309340,"byte_end":10309347,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10309195,"byte_end":10309249,"line_start":63,"line_end":63,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10309254,"byte_end":10309257,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10309262,"byte_end":10309328,"line_start":65,"line_end":65,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10309558,"byte_end":10309569,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10309406,"byte_end":10309467,"line_start":70,"line_end":70,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10309472,"byte_end":10309475,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10309480,"byte_end":10309546,"line_start":72,"line_end":72,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2287},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10309800,"byte_end":10309810,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10309649,"byte_end":10309712,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10309717,"byte_end":10309720,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10309725,"byte_end":10309788,"line_start":79,"line_end":79,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2288},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10310014,"byte_end":10310020,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10309854,"byte_end":10309910,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10309915,"byte_end":10309918,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10309923,"byte_end":10310002,"line_start":86,"line_end":86,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":13858},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10319309,"byte_end":10319318,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":13860}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10319597,"byte_end":10319600,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10319443,"byte_end":10319500,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10319505,"byte_end":10319508,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10319513,"byte_end":10319585,"line_start":28,"line_end":28,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10319932,"byte_end":10319945,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10319732,"byte_end":10319817,"line_start":35,"line_end":35,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10319822,"byte_end":10319835,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10319840,"byte_end":10319843,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10319848,"byte_end":10319920,"line_start":38,"line_end":38,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2360},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10320402,"byte_end":10320409,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10320257,"byte_end":10320307,"line_start":52,"line_end":52,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10320312,"byte_end":10320315,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10320320,"byte_end":10320390,"line_start":54,"line_end":54,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2361},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10320629,"byte_end":10320636,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10320476,"byte_end":10320534,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10320539,"byte_end":10320542,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10320547,"byte_end":10320617,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10320871,"byte_end":10320882,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10320711,"byte_end":10320776,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10320781,"byte_end":10320784,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10320789,"byte_end":10320859,"line_start":68,"line_end":68,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2363},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10321146,"byte_end":10321156,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10320991,"byte_end":10321058,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10321063,"byte_end":10321066,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10321071,"byte_end":10321134,"line_start":75,"line_end":75,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13808},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10326153,"byte_end":10326162,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":13810},{"krate":0,"index":13811},{"krate":0,"index":13812},{"krate":0,"index":13813}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2437},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10326512,"byte_end":10326515,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10326370,"byte_end":10326462,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10326467,"byte_end":10326500,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10326677,"byte_end":10326690,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10326600,"byte_end":10326665,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10327813,"byte_end":10327820,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10327755,"byte_end":10327801,"line_start":86,"line_end":86,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2441},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10328011,"byte_end":10328018,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10327867,"byte_end":10327921,"line_start":91,"line_end":91,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10327926,"byte_end":10327929,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10327934,"byte_end":10327999,"line_start":93,"line_end":93,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2442},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10328228,"byte_end":10328239,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10328077,"byte_end":10328138,"line_start":98,"line_end":98,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10328143,"byte_end":10328146,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10328151,"byte_end":10328216,"line_start":100,"line_end":100,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2443},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10328470,"byte_end":10328480,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10328319,"byte_end":10328382,"line_start":105,"line_end":105,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10328387,"byte_end":10328390,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10328395,"byte_end":10328458,"line_start":107,"line_end":107,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2444},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10328592,"byte_end":10328598,"line_start":113,"line_end":113,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10328524,"byte_end":10328580,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":13759},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10332965,"byte_end":10332970,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":13762},{"krate":0,"index":13763},{"krate":0,"index":13764}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10333411,"byte_end":10333418,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10333337,"byte_end":10333399,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10333750,"byte_end":10333757,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10333487,"byte_end":10333557,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10333562,"byte_end":10333565,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10333570,"byte_end":10333643,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10333648,"byte_end":10333721,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10333726,"byte_end":10333738,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2505},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10334116,"byte_end":10334127,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10333846,"byte_end":10333923,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10333928,"byte_end":10333931,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10333936,"byte_end":10334009,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10334014,"byte_end":10334087,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10334092,"byte_end":10334104,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2506},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10334324,"byte_end":10334334,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10334256,"byte_end":10334312,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":3787},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy.rs","byte_start":10339732,"byte_end":10339736,"line_start":123,"line_end":123,"column_start":18,"column_end":22},"name":"copy","qualname":"::io::util::copy::copy","value":"pub async fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2614},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10343810,"byte_end":10343828,"line_start":108,"line_end":108,"column_start":14,"column_end":32},"name":"copy_bidirectional","qualname":"::io::util::copy_bidirectional::copy_bidirectional","value":"pub async fn copy_bidirectional<A: ?Sized, B: ?Sized, '_,\n                                '_>(&'_ mut A, &'_ mut B) -> /*impl Trait*/\nwhere A: AsyncRead + AsyncWrite + Unpin, B: AsyncRead + AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Copies data in both directions between `a` and `b`.","sig":null,"attributes":[{"value":"/ Copies data in both directions between `a` and `b`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10342558,"byte_end":10342613,"line_start":80,"line_end":80,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10342614,"byte_end":10342617,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This function returns a future that will read from both streams,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10342618,"byte_end":10342686,"line_start":82,"line_end":82,"column_start":1,"column_end":69}},{"value":"/ writing any data read to the opposing stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10342687,"byte_end":10342736,"line_start":83,"line_end":83,"column_start":1,"column_end":50}},{"value":"/ This happens in both directions concurrently.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10342737,"byte_end":10342786,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10342787,"byte_end":10342790,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ If an EOF is observed on one stream, [`shutdown()`] will be invoked on","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10342791,"byte_end":10342865,"line_start":86,"line_end":86,"column_start":1,"column_end":75}},{"value":"/ the other, and reading from that stream will stop. Copying of data in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10342866,"byte_end":10342939,"line_start":87,"line_end":87,"column_start":1,"column_end":74}},{"value":"/ the other direction will continue.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10342940,"byte_end":10342978,"line_start":88,"line_end":88,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10342979,"byte_end":10342982,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The future will complete successfully once both directions of communication has been shut down.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10342983,"byte_end":10343082,"line_start":90,"line_end":90,"column_start":1,"column_end":100}},{"value":"/ A direction is shut down when the reader reports EOF,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10343083,"byte_end":10343140,"line_start":91,"line_end":91,"column_start":1,"column_end":58}},{"value":"/ at which point [`shutdown()`] is called on the corresponding writer. When finished,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10343141,"byte_end":10343228,"line_start":92,"line_end":92,"column_start":1,"column_end":88}},{"value":"/ it will return a tuple of the number of bytes copied from a to b","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10343229,"byte_end":10343297,"line_start":93,"line_end":93,"column_start":1,"column_end":69}},{"value":"/ and the number of bytes copied from b to a, in that order.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10343298,"byte_end":10343360,"line_start":94,"line_end":94,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10343361,"byte_end":10343364,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`shutdown()`]: crate::io::AsyncWriteExt::shutdown","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10343365,"byte_end":10343419,"line_start":96,"line_end":96,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10343420,"byte_end":10343423,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10343424,"byte_end":10343436,"line_start":98,"line_end":98,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10343437,"byte_end":10343440,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The future will immediately return an error if any IO operation on `a`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10343441,"byte_end":10343515,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ or `b` returns an error. Some data read from either stream may be lost (not","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10343516,"byte_end":10343595,"line_start":101,"line_end":101,"column_start":1,"column_end":80}},{"value":"/ written to the other stream) in this case.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10343596,"byte_end":10343642,"line_start":102,"line_end":102,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10343643,"byte_end":10343646,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Return value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10343647,"byte_end":10343665,"line_start":104,"line_end":104,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10343666,"byte_end":10343669,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Returns a tuple of bytes copied `a` to `b` and bytes copied `b` to `a`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10343670,"byte_end":10343745,"line_start":106,"line_end":106,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":3793},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_buf.rs","byte_start":10345824,"byte_end":10345832,"line_start":54,"line_end":54,"column_start":18,"column_end":26},"name":"copy_buf","qualname":"::io::util::copy_buf::copy_buf","value":"pub async fn copy_buf<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncBufRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3811},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/empty.rs","byte_start":10347641,"byte_end":10347646,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3812}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3813},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/empty.rs","byte_start":10348325,"byte_end":10348330,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":13717},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/flush.rs","byte_start":10349571,"byte_end":10349576,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":13720},{"krate":0,"index":13721}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13667},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351010,"byte_end":10351015,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":13669},{"krate":0,"index":13670},{"krate":0,"index":13671},{"krate":0,"index":13672}],"decl_id":null,"docs":" Read lines from an [`AsyncBufRead`].","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351862,"byte_end":10351871,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351372,"byte_end":10351412,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351417,"byte_end":10351420,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351425,"byte_end":10351439,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351444,"byte_end":10351447,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351452,"byte_end":10351459,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351464,"byte_end":10351498,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351503,"byte_end":10351538,"line_start":54,"line_end":54,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351543,"byte_end":10351546,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351551,"byte_end":10351634,"line_start":56,"line_end":56,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351639,"byte_end":10351679,"line_start":57,"line_end":57,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351684,"byte_end":10351687,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351692,"byte_end":10351745,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351750,"byte_end":10351793,"line_start":60,"line_end":60,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351798,"byte_end":10351803,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351808,"byte_end":10351820,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351825,"byte_end":10351832,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351837,"byte_end":10351844,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10352098,"byte_end":10352105,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10352031,"byte_end":10352086,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2765},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10352224,"byte_end":10352231,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10352165,"byte_end":10352212,"line_start":76,"line_end":76,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10352518,"byte_end":10352528,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10352283,"byte_end":10352344,"line_start":81,"line_end":81,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10352349,"byte_end":10352352,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10352357,"byte_end":10352420,"line_start":83,"line_end":83,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10352425,"byte_end":10352506,"line_start":84,"line_end":84,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2769},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10353414,"byte_end":10353428,"line_start":110,"line_end":110,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next line in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next line in the stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10352621,"byte_end":10352663,"line_start":94,"line_end":94,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10352668,"byte_end":10352671,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10352676,"byte_end":10352700,"line_start":96,"line_end":96,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10352705,"byte_end":10352708,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next line is not yet available.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10352713,"byte_end":10352774,"line_start":98,"line_end":98,"column_start":5,"column_end":66}},{"value":"/  * `Poll::Ready(Ok(Some(line)))` if the next line is available.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10352779,"byte_end":10352846,"line_start":99,"line_end":99,"column_start":5,"column_end":72}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more lines in this stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10352851,"byte_end":10352924,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the next line.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10352929,"byte_end":10353012,"line_start":101,"line_end":101,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10353017,"byte_end":10353020,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10353025,"byte_end":10353097,"line_start":103,"line_end":103,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10353102,"byte_end":10353171,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10353176,"byte_end":10353220,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10353225,"byte_end":10353228,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_line`, only the `Waker` from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10353233,"byte_end":10353307,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ the `Context` passed to the most recent call is scheduled to receive a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10353312,"byte_end":10353386,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10353391,"byte_end":10353402,"line_start":109,"line_end":109,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3814},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355585,"byte_end":10355597,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"DuplexStream","qualname":"::io::util::mem::DuplexStream","value":"DuplexStream {  }","parent":null,"children":[{"krate":0,"index":3815},{"krate":0,"index":3816}],"decl_id":null,"docs":" A bidirectional pipe to read and write bytes in memory.","sig":null,"attributes":[{"value":"/ A bidirectional pipe to read and write bytes in memory.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10354350,"byte_end":10354409,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10354410,"byte_end":10354413,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A pair of `DuplexStream`s are created together, and they act as a \"channel\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10354414,"byte_end":10354493,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ that can be used as in-memory IO types. Writing to one of the pairs will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10354494,"byte_end":10354570,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ allow that data to be read from the other, and vice versa.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10354571,"byte_end":10354633,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10354634,"byte_end":10354637,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Closing a `DuplexStream`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10354638,"byte_end":10354668,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10354669,"byte_end":10354672,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If one end of the `DuplexStream` channel is dropped, any pending reads on","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10354673,"byte_end":10354750,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ the other side will continue to read data until the buffer is drained, then","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10354751,"byte_end":10354830,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ they will signal EOF by returning 0 bytes. Any writes to the other side,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10354831,"byte_end":10354907,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ including pending ones (that are waiting for free space in the buffer) will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10354908,"byte_end":10354987,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ return `Err(BrokenPipe)` immediately.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10354988,"byte_end":10355029,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355030,"byte_end":10355033,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355034,"byte_end":10355047,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355048,"byte_end":10355051,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355052,"byte_end":10355059,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # async fn ex() -> std::io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355060,"byte_end":10355104,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/ # use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355105,"byte_end":10355156,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ let (mut client, mut server) = tokio::io::duplex(64);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355157,"byte_end":10355214,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355215,"byte_end":10355218,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ client.write_all(b\"ping\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355219,"byte_end":10355256,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355257,"byte_end":10355260,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 4];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355261,"byte_end":10355288,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/ server.read_exact(&mut buf).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355289,"byte_end":10355328,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"ping\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355329,"byte_end":10355359,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355360,"byte_end":10355363,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ server.write_all(b\"pong\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355364,"byte_end":10355401,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355402,"byte_end":10355405,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ client.read_exact(&mut buf).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355406,"byte_end":10355445,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"pong\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355446,"byte_end":10355476,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355477,"byte_end":10355489,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355490,"byte_end":10355497,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10355498,"byte_end":10355505,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2811},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10356945,"byte_end":10356951,"line_start":85,"line_end":85,"column_start":8,"column_end":14},"name":"duplex","qualname":"::io::util::mem::duplex","value":"pub fn duplex(usize) -> (DuplexStream, DuplexStream)","parent":null,"children":[],"decl_id":null,"docs":" Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10356660,"byte_end":10356743,"line_start":80,"line_end":80,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10356744,"byte_end":10356747,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ The `max_buf_size` argument is the maximum amount of bytes that can be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10356748,"byte_end":10356822,"line_start":82,"line_end":82,"column_start":1,"column_end":75}},{"value":"/ written to a side before the write returns `Poll::Pending`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10356823,"byte_end":10356886,"line_start":83,"line_end":83,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":13616},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read.rs","byte_start":10362354,"byte_end":10362358,"line_start":34,"line_end":34,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":13619},{"krate":0,"index":13620},{"krate":0,"index":13621}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13556},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_buf.rs","byte_start":10363575,"byte_end":10363582,"line_start":27,"line_end":27,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":13560},{"krate":0,"index":13561},{"krate":0,"index":13562}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13501},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_exact.rs","byte_start":10365787,"byte_end":10365796,"line_start":34,"line_end":34,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":13504},{"krate":0,"index":13505},{"krate":0,"index":13506}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13457},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_int.rs","byte_start":10370820,"byte_end":10370826,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":13459},{"krate":0,"index":13460}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13420},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_int.rs","byte_start":10370842,"byte_end":10370848,"line_start":133,"line_end":133,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":13422},{"krate":0,"index":13423}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13371},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_int.rs","byte_start":10370864,"byte_end":10370871,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":13373},{"krate":0,"index":13374},{"krate":0,"index":13376},{"krate":0,"index":13377}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13322},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_int.rs","byte_start":10370896,"byte_end":10370903,"line_start":136,"line_end":136,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":13324},{"krate":0,"index":13325},{"krate":0,"index":13327},{"krate":0,"index":13328}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13273},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_int.rs","byte_start":10370928,"byte_end":10370935,"line_start":137,"line_end":137,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":13275},{"krate":0,"index":13276},{"krate":0,"index":13278},{"krate":0,"index":13279}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13224},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_int.rs","byte_start":10370960,"byte_end":10370968,"line_start":138,"line_end":138,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":13226},{"krate":0,"index":13227},{"krate":0,"index":13229},{"krate":0,"index":13230}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13175},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_int.rs","byte_start":10370996,"byte_end":10371003,"line_start":140,"line_end":140,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":13177},{"krate":0,"index":13178},{"krate":0,"index":13180},{"krate":0,"index":13181}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13126},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_int.rs","byte_start":10371028,"byte_end":10371035,"line_start":141,"line_end":141,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":13128},{"krate":0,"index":13129},{"krate":0,"index":13131},{"krate":0,"index":13132}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13077},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_int.rs","byte_start":10371060,"byte_end":10371067,"line_start":142,"line_end":142,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":13079},{"krate":0,"index":13080},{"krate":0,"index":13082},{"krate":0,"index":13083}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13028},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_int.rs","byte_start":10371092,"byte_end":10371100,"line_start":143,"line_end":143,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":13030},{"krate":0,"index":13031},{"krate":0,"index":13033},{"krate":0,"index":13034}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12979},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_int.rs","byte_start":10371128,"byte_end":10371137,"line_start":145,"line_end":145,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":12981},{"krate":0,"index":12982},{"krate":0,"index":12984},{"krate":0,"index":12985}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12930},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_int.rs","byte_start":10371165,"byte_end":10371174,"line_start":146,"line_end":146,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":12932},{"krate":0,"index":12933},{"krate":0,"index":12935},{"krate":0,"index":12936}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12881},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_int.rs","byte_start":10371202,"byte_end":10371211,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":12883},{"krate":0,"index":12884},{"krate":0,"index":12886},{"krate":0,"index":12887}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12832},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_int.rs","byte_start":10371239,"byte_end":10371249,"line_start":148,"line_end":148,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":12834},{"krate":0,"index":12835},{"krate":0,"index":12837},{"krate":0,"index":12838}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12783},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_int.rs","byte_start":10371280,"byte_end":10371289,"line_start":150,"line_end":150,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":12785},{"krate":0,"index":12786},{"krate":0,"index":12788},{"krate":0,"index":12789}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12734},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_int.rs","byte_start":10371317,"byte_end":10371326,"line_start":151,"line_end":151,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":12736},{"krate":0,"index":12737},{"krate":0,"index":12739},{"krate":0,"index":12740}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12685},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_int.rs","byte_start":10371354,"byte_end":10371363,"line_start":152,"line_end":152,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":12687},{"krate":0,"index":12688},{"krate":0,"index":12690},{"krate":0,"index":12691}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12636},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_int.rs","byte_start":10371391,"byte_end":10371401,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":12638},{"krate":0,"index":12639},{"krate":0,"index":12641},{"krate":0,"index":12642}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12582},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_line.rs","byte_start":10371918,"byte_end":10371926,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":12585},{"krate":0,"index":12586},{"krate":0,"index":12587},{"krate":0,"index":12588},{"krate":0,"index":12589}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12525},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_to_end.rs","byte_start":10375849,"byte_end":10375858,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":12528},{"krate":0,"index":12529},{"krate":0,"index":12530},{"krate":0,"index":12531}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12464},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_to_string.rs","byte_start":10384178,"byte_end":10384190,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":12467},{"krate":0,"index":12468},{"krate":0,"index":12469},{"krate":0,"index":12470},{"krate":0,"index":12471}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12403},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_until.rs","byte_start":10386582,"byte_end":10386591,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":12406},{"krate":0,"index":12407},{"krate":0,"index":12408},{"krate":0,"index":12409},{"krate":0,"index":12410}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3979},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/repeat.rs","byte_start":10388933,"byte_end":10388939,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3980}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3978},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/repeat.rs","byte_start":10389625,"byte_end":10389631,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":12354},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/shutdown.rs","byte_start":10390670,"byte_end":10390678,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":12357},{"krate":0,"index":12358}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3983},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/sink.rs","byte_start":10391824,"byte_end":10391828,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":3984}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3985},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/sink.rs","byte_start":10392669,"byte_end":10392673,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":12304},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394110,"byte_end":10394115,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":12306},{"krate":0,"index":12307},{"krate":0,"index":12308},{"krate":0,"index":12309}],"decl_id":null,"docs":" Splitter for the [`split`](crate::io::AsyncBufReadExt::split) method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394976,"byte_end":10394988,"line_start":61,"line_end":61,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394464,"byte_end":10394507,"line_start":44,"line_end":44,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394512,"byte_end":10394515,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394520,"byte_end":10394534,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394539,"byte_end":10394542,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394547,"byte_end":10394554,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394559,"byte_end":10394593,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394598,"byte_end":10394633,"line_start":50,"line_end":50,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394638,"byte_end":10394641,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394646,"byte_end":10394729,"line_start":52,"line_end":52,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394734,"byte_end":10394781,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394786,"byte_end":10394789,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394794,"byte_end":10394856,"line_start":55,"line_end":55,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394861,"byte_end":10394907,"line_start":56,"line_end":56,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394912,"byte_end":10394917,"line_start":57,"line_end":57,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394922,"byte_end":10394934,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394939,"byte_end":10394946,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394951,"byte_end":10394958,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3350},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10396025,"byte_end":10396042,"line_start":89,"line_end":89,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next segment in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next segment in the stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10395200,"byte_end":10395245,"line_start":72,"line_end":72,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10395250,"byte_end":10395253,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10395258,"byte_end":10395282,"line_start":74,"line_end":74,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10395287,"byte_end":10395290,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next segment is not yet available.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10395295,"byte_end":10395359,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/  * `Poll::Ready(Ok(Some(segment)))` if the next segment is available.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10395364,"byte_end":10395437,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more segments in this stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10395442,"byte_end":10395518,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10395523,"byte_end":10395595,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/    next segment.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10395600,"byte_end":10395620,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10395625,"byte_end":10395628,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10395633,"byte_end":10395705,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10395710,"byte_end":10395779,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10395784,"byte_end":10395828,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10395833,"byte_end":10395836,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_segment`, only the `Waker`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10395841,"byte_end":10395913,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ from the `Context` passed to the most recent call is scheduled to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10395918,"byte_end":10395987,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/ receive a wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10395992,"byte_end":10396013,"line_start":88,"line_end":88,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":12264},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10397184,"byte_end":10397188,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":12266},{"krate":0,"index":12267}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3389},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10397778,"byte_end":10397783,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10397475,"byte_end":10397528,"line_start":29,"line_end":29,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10397533,"byte_end":10397579,"line_start":30,"line_end":30,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10397584,"byte_end":10397587,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10397592,"byte_end":10397602,"line_start":32,"line_end":32,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10397607,"byte_end":10397610,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10397615,"byte_end":10397692,"line_start":34,"line_end":34,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10397697,"byte_end":10397766,"line_start":35,"line_end":35,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3390},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10398102,"byte_end":10398111,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10397831,"byte_end":10397902,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10397907,"byte_end":10397981,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10397986,"byte_end":10398061,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10398066,"byte_end":10398090,"line_start":43,"line_end":43,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3391},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10398234,"byte_end":10398241,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10398176,"byte_end":10398222,"line_start":48,"line_end":48,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3392},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10398533,"byte_end":10398540,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10398288,"byte_end":10398342,"line_start":53,"line_end":53,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10398347,"byte_end":10398350,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10398355,"byte_end":10398428,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10398433,"byte_end":10398505,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10398510,"byte_end":10398521,"line_start":57,"line_end":57,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10398851,"byte_end":10398862,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10398599,"byte_end":10398660,"line_start":62,"line_end":62,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10398665,"byte_end":10398668,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10398673,"byte_end":10398746,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10398751,"byte_end":10398823,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10398828,"byte_end":10398839,"line_start":66,"line_end":66,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3394},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10399008,"byte_end":10399018,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10398942,"byte_end":10398996,"line_start":71,"line_end":71,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":12213},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write.rs","byte_start":10401002,"byte_end":10401007,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":12216},{"krate":0,"index":12217},{"krate":0,"index":12218}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12153},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_vectored.rs","byte_start":10402211,"byte_end":10402224,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"name":"WriteVectored","qualname":"::io::util::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":12157},{"krate":0,"index":12158},{"krate":0,"index":12159}],"decl_id":null,"docs":" A future to write a slice of buffers to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12098},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_all.rs","byte_start":10403337,"byte_end":10403345,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":12101},{"krate":0,"index":12102},{"krate":0,"index":12103}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12038},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_buf.rs","byte_start":10404786,"byte_end":10404794,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":12042},{"krate":0,"index":12043},{"krate":0,"index":12044}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11976},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_all_buf.rs","byte_start":10406108,"byte_end":10406119,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"WriteAllBuf","qualname":"::io::util::write_all_buf::WriteAllBuf","value":"WriteAllBuf {  }","parent":null,"children":[{"krate":0,"index":11980},{"krate":0,"index":11981},{"krate":0,"index":11982}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11926},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_int.rs","byte_start":10410976,"byte_end":10410983,"line_start":125,"line_end":125,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":11928},{"krate":0,"index":11929},{"krate":0,"index":11930}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11885},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_int.rs","byte_start":10410999,"byte_end":10411006,"line_start":126,"line_end":126,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":11887},{"krate":0,"index":11888},{"krate":0,"index":11889}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11836},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_int.rs","byte_start":10411022,"byte_end":10411030,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":11838},{"krate":0,"index":11839},{"krate":0,"index":11841},{"krate":0,"index":11842}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11787},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_int.rs","byte_start":10411055,"byte_end":10411063,"line_start":129,"line_end":129,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":11789},{"krate":0,"index":11790},{"krate":0,"index":11792},{"krate":0,"index":11793}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11738},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_int.rs","byte_start":10411088,"byte_end":10411096,"line_start":130,"line_end":130,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":11740},{"krate":0,"index":11741},{"krate":0,"index":11743},{"krate":0,"index":11744}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11689},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_int.rs","byte_start":10411121,"byte_end":10411130,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":11691},{"krate":0,"index":11692},{"krate":0,"index":11694},{"krate":0,"index":11695}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11640},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_int.rs","byte_start":10411158,"byte_end":10411166,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":11642},{"krate":0,"index":11643},{"krate":0,"index":11645},{"krate":0,"index":11646}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11591},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_int.rs","byte_start":10411191,"byte_end":10411199,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":11593},{"krate":0,"index":11594},{"krate":0,"index":11596},{"krate":0,"index":11597}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11542},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_int.rs","byte_start":10411224,"byte_end":10411232,"line_start":135,"line_end":135,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":11544},{"krate":0,"index":11545},{"krate":0,"index":11547},{"krate":0,"index":11548}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11493},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_int.rs","byte_start":10411257,"byte_end":10411266,"line_start":136,"line_end":136,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":11495},{"krate":0,"index":11496},{"krate":0,"index":11498},{"krate":0,"index":11499}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11444},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_int.rs","byte_start":10411294,"byte_end":10411304,"line_start":138,"line_end":138,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":11446},{"krate":0,"index":11447},{"krate":0,"index":11449},{"krate":0,"index":11450}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11395},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_int.rs","byte_start":10411332,"byte_end":10411342,"line_start":139,"line_end":139,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":11397},{"krate":0,"index":11398},{"krate":0,"index":11400},{"krate":0,"index":11401}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11346},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_int.rs","byte_start":10411370,"byte_end":10411380,"line_start":140,"line_end":140,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":11348},{"krate":0,"index":11349},{"krate":0,"index":11351},{"krate":0,"index":11352}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11297},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_int.rs","byte_start":10411408,"byte_end":10411419,"line_start":141,"line_end":141,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":11299},{"krate":0,"index":11300},{"krate":0,"index":11302},{"krate":0,"index":11303}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11248},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_int.rs","byte_start":10411450,"byte_end":10411460,"line_start":143,"line_end":143,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":11250},{"krate":0,"index":11251},{"krate":0,"index":11253},{"krate":0,"index":11254}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11199},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_int.rs","byte_start":10411488,"byte_end":10411498,"line_start":144,"line_end":144,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":11201},{"krate":0,"index":11202},{"krate":0,"index":11204},{"krate":0,"index":11205}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11150},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_int.rs","byte_start":10411526,"byte_end":10411536,"line_start":145,"line_end":145,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":11152},{"krate":0,"index":11153},{"krate":0,"index":11155},{"krate":0,"index":11156}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11101},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_int.rs","byte_start":10411564,"byte_end":10411575,"line_start":146,"line_end":146,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":11103},{"krate":0,"index":11104},{"krate":0,"index":11106},{"krate":0,"index":11107}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":379},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4217},{"krate":0,"index":4690},{"krate":0,"index":4693},{"krate":0,"index":4696},{"krate":0,"index":4699},{"krate":0,"index":4849},{"krate":0,"index":4928},{"krate":0,"index":5484},{"krate":0,"index":5487},{"krate":0,"index":5490}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":80550,"byte_end":80568,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":80570,"byte_end":80608,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":80609,"byte_end":80612,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":80613,"byte_end":80696,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":80697,"byte_end":80762,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":80763,"byte_end":80766,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":80767,"byte_end":80785,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":80786,"byte_end":80789,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":80790,"byte_end":80878,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":80879,"byte_end":80948,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":80949,"byte_end":81037,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81038,"byte_end":81096,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81097,"byte_end":81160,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81161,"byte_end":81226,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81228,"byte_end":81231,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81232,"byte_end":81264,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81265,"byte_end":81293,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81294,"byte_end":81322,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81323,"byte_end":81357,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81358,"byte_end":81388,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81389,"byte_end":81423,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":406},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":82688,"byte_end":82701,"line_start":20,"line_end":20,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":82100,"byte_end":82177,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":82178,"byte_end":82181,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":82182,"byte_end":82191,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":82192,"byte_end":82195,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":82196,"byte_end":82273,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":82274,"byte_end":82277,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":82278,"byte_end":82291,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":82292,"byte_end":82295,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":82296,"byte_end":82373,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":82374,"byte_end":82446,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":82447,"byte_end":82516,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":82517,"byte_end":82520,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":82521,"byte_end":82600,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":82601,"byte_end":82677,"line_start":19,"line_end":19,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":461},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":89141,"byte_end":89158,"line_start":248,"line_end":248,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":462},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":89174,"byte_end":89178,"line_start":249,"line_end":249,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":463},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":89239,"byte_end":89245,"line_start":250,"line_end":250,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":89317,"byte_end":89332,"line_start":252,"line_end":252,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self, Internal) -> Self::Future","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":465},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":89443,"byte_end":89451,"line_start":256,"line_end":256,"column_start":16,"column_end":24},"name":"Internal","qualname":"::net::addr::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":89388,"byte_end":89427,"line_start":255,"line_end":255,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4190},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":89693,"byte_end":89703,"line_start":268,"line_end":268,"column_start":20,"column_end":30},"name":"MaybeReady","qualname":"::net::addr::sealed::MaybeReady","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21942,"byte_end":21965,"line_start":168,"line_end":168,"column_start":13,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4205},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":89993,"byte_end":89996,"line_start":279,"line_end":279,"column_start":13,"column_end":16},"name":"One","qualname":"::net::addr::sealed::OneOrMore::One","value":"OneOrMore::One(option::IntoIter<SocketAddr>)","parent":{"krate":0,"index":4204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4208},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":90040,"byte_end":90044,"line_start":280,"line_end":280,"column_start":13,"column_end":17},"name":"More","qualname":"::net::addr::sealed::OneOrMore::More","value":"OneOrMore::More(vec::IntoIter<SocketAddr>)","parent":{"krate":0,"index":4204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4204},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":89969,"byte_end":89978,"line_start":278,"line_end":278,"column_start":18,"column_end":27},"name":"OneOrMore","qualname":"::net::addr::sealed::OneOrMore","value":"pub enum OneOrMore {\n    One(option::IntoIter<SocketAddr>),\n    More(vec::IntoIter<SocketAddr>),\n}","parent":null,"children":[{"krate":0,"index":4205},{"krate":0,"index":4208}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21942,"byte_end":21965,"line_start":168,"line_end":168,"column_start":13,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":4865},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/lookup_host.rs","byte_start":10412448,"byte_end":10412459,"line_start":32,"line_end":32,"column_start":18,"column_end":29},"name":"lookup_host","qualname":"::net::lookup_host::lookup_host","value":"pub async fn lookup_host<T>(T) -> /*impl Trait*/ where T: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Performs a DNS resolution.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21942,"byte_end":21965,"line_start":168,"line_end":168,"column_start":13,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":4217},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":4218},{"krate":0,"index":4298},{"krate":0,"index":4361},{"krate":0,"index":4413},{"krate":0,"index":4414},{"krate":0,"index":4417},{"krate":0,"index":4420},{"krate":0,"index":4492},{"krate":0,"index":4493},{"krate":0,"index":4496},{"krate":0,"index":4499},{"krate":0,"index":4500},{"krate":0,"index":4502},{"krate":0,"index":4687}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21942,"byte_end":21965,"line_start":168,"line_end":168,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/mod.rs","byte_start":10412612,"byte_end":10412633,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4870},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10414487,"byte_end":10414498,"line_start":52,"line_end":52,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":4871}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21942,"byte_end":21965,"line_start":168,"line_end":168,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4260},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415997,"byte_end":10416001,"line_start":97,"line_end":97,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10414581,"byte_end":10414657,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10414662,"byte_end":10414665,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10414670,"byte_end":10414731,"line_start":60,"line_end":60,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10414736,"byte_end":10414739,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10414744,"byte_end":10414819,"line_start":62,"line_end":62,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10414824,"byte_end":10414900,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10414905,"byte_end":10414916,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10414921,"byte_end":10414924,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10414929,"byte_end":10415004,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415009,"byte_end":10415085,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415090,"byte_end":10415163,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415168,"byte_end":10415241,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415246,"byte_end":10415298,"line_start":70,"line_end":70,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415303,"byte_end":10415306,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415311,"byte_end":10415374,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415379,"byte_end":10415382,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ To configure the socket before binding, you can use the [`TcpSocket`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415387,"byte_end":10415460,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415465,"byte_end":10415474,"line_start":75,"line_end":75,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415479,"byte_end":10415482,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415487,"byte_end":10415541,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/ [`TcpSocket`]: struct@crate::net::TcpSocket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415546,"byte_end":10415593,"line_start":78,"line_end":78,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415598,"byte_end":10415601,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415606,"byte_end":10415620,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415625,"byte_end":10415628,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415633,"byte_end":10415646,"line_start":82,"line_end":82,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415651,"byte_end":10415683,"line_start":83,"line_end":83,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415688,"byte_end":10415691,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415696,"byte_end":10415712,"line_start":85,"line_end":85,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415717,"byte_end":10415720,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415725,"byte_end":10415743,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415748,"byte_end":10415787,"line_start":88,"line_end":88,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415792,"byte_end":10415858,"line_start":89,"line_end":89,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415863,"byte_end":10415866,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415871,"byte_end":10415898,"line_start":91,"line_end":91,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415903,"byte_end":10415906,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415911,"byte_end":10415938,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415943,"byte_end":10415957,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415962,"byte_end":10415967,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10415972,"byte_end":10415979,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4266},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417567,"byte_end":10417573,"line_start":149,"line_end":149,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10416712,"byte_end":10416769,"line_start":122,"line_end":122,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10416774,"byte_end":10416777,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10416782,"byte_end":10416857,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10416862,"byte_end":10416932,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10416937,"byte_end":10416966,"line_start":126,"line_end":126,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10416971,"byte_end":10416974,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10416979,"byte_end":10417026,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417031,"byte_end":10417034,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417039,"byte_end":10417053,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417058,"byte_end":10417061,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417066,"byte_end":10417079,"line_start":132,"line_end":132,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417084,"byte_end":10417116,"line_start":133,"line_end":133,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417121,"byte_end":10417124,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417129,"byte_end":10417145,"line_start":135,"line_end":135,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417150,"byte_end":10417153,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417158,"byte_end":10417176,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417181,"byte_end":10417220,"line_start":138,"line_end":138,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417225,"byte_end":10417291,"line_start":139,"line_end":139,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417296,"byte_end":10417299,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417304,"byte_end":10417343,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417348,"byte_end":10417418,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417423,"byte_end":10417486,"line_start":143,"line_end":143,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417491,"byte_end":10417500,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417505,"byte_end":10417508,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417513,"byte_end":10417527,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417532,"byte_end":10417537,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417542,"byte_end":10417549,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4270},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10418241,"byte_end":10418252,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417863,"byte_end":10417926,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417931,"byte_end":10417934,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10417939,"byte_end":10418015,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.  Note that on multiple calls","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10418020,"byte_end":10418094,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ to `poll_accept`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10418099,"byte_end":10418175,"line_start":164,"line_end":164,"column_start":5,"column_end":81}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10418180,"byte_end":10418229,"line_start":165,"line_end":165,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4271},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10420290,"byte_end":10420298,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpListener` from a `std::net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates new `TcpListener` from a `std::net::TcpListener`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10418860,"byte_end":10418921,"line_start":183,"line_end":183,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10418926,"byte_end":10418929,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10418934,"byte_end":10419006,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419011,"byte_end":10419087,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/ about the underlying listener; it is left up to the user to set it in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419092,"byte_end":10419165,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419170,"byte_end":10419192,"line_start":188,"line_end":188,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419197,"byte_end":10419200,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `socket2` crate and the `Socket`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419205,"byte_end":10419279,"line_start":190,"line_end":190,"column_start":5,"column_end":79}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419284,"byte_end":10419360,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419365,"byte_end":10419430,"line_start":192,"line_end":192,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419435,"byte_end":10419490,"line_start":193,"line_end":193,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419495,"byte_end":10419498,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419503,"byte_end":10419517,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419522,"byte_end":10419525,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419530,"byte_end":10419548,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419553,"byte_end":10419579,"line_start":198,"line_end":198,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419584,"byte_end":10419616,"line_start":199,"line_end":199,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419621,"byte_end":10419624,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419629,"byte_end":10419647,"line_start":201,"line_end":201,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419652,"byte_end":10419703,"line_start":202,"line_end":202,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419708,"byte_end":10419779,"line_start":203,"line_end":203,"column_start":5,"column_end":76}},{"value":"/     std_listener.set_nonblocking(true)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419784,"byte_end":10419828,"line_start":204,"line_end":204,"column_start":5,"column_end":49}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419833,"byte_end":10419893,"line_start":205,"line_end":205,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419898,"byte_end":10419912,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419917,"byte_end":10419922,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419927,"byte_end":10419934,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419939,"byte_end":10419942,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419947,"byte_end":10419959,"line_start":210,"line_end":210,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419964,"byte_end":10419967,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10419972,"byte_end":10420032,"line_start":212,"line_end":212,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10420037,"byte_end":10420040,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10420045,"byte_end":10420115,"line_start":214,"line_end":214,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10420120,"byte_end":10420193,"line_start":215,"line_end":215,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10420198,"byte_end":10420278,"line_start":216,"line_end":216,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4272},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10421348,"byte_end":10421356,"line_start":245,"line_end":245,"column_start":12,"column_end":20},"name":"into_std","qualname":"<TcpListener>::into_std","value":"pub fn into_std(Self) -> io::Result<std::net::TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::TcpListener`] into a [`std::net::TcpListener`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::TcpListener`] into a [`std::net::TcpListener`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10420498,"byte_end":10420570,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10420575,"byte_end":10420578,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::net::TcpListener`] will have nonblocking mode set as","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10420583,"byte_end":10420659,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ `true`.  Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10420664,"byte_end":10420739,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10420744,"byte_end":10420747,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10420752,"byte_end":10420766,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10420771,"byte_end":10420774,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10420779,"byte_end":10420797,"line_start":230,"line_end":230,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10420802,"byte_end":10420828,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10420833,"byte_end":10420836,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10420841,"byte_end":10420859,"line_start":233,"line_end":233,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10420864,"byte_end":10420915,"line_start":234,"line_end":234,"column_start":5,"column_end":56}},{"value":"/     let tokio_listener = tokio::net::TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10420920,"byte_end":10421001,"line_start":235,"line_end":235,"column_start":5,"column_end":86}},{"value":"/     let std_listener = tokio_listener.into_std()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10421006,"byte_end":10421060,"line_start":236,"line_end":236,"column_start":5,"column_end":59}},{"value":"/     std_listener.set_nonblocking(false)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10421065,"byte_end":10421110,"line_start":237,"line_end":237,"column_start":5,"column_end":50}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10421115,"byte_end":10421129,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10421134,"byte_end":10421139,"line_start":239,"line_end":239,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10421144,"byte_end":10421151,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10421156,"byte_end":10421159,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ [`tokio::net::TcpListener`]: TcpListener","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10421164,"byte_end":10421208,"line_start":242,"line_end":242,"column_start":5,"column_end":49}},{"value":"/ [`std::net::TcpListener`]: std::net::TcpListener","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10421213,"byte_end":10421265,"line_start":243,"line_end":243,"column_start":5,"column_end":57}},{"value":"/ [`set_nonblocking`]: fn@std::net::TcpListener::set_nonblocking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10421270,"byte_end":10421336,"line_start":244,"line_end":244,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4283},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422896,"byte_end":10422906,"line_start":293,"line_end":293,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422170,"byte_end":10422231,"line_start":270,"line_end":270,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422236,"byte_end":10422239,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422244,"byte_end":10422317,"line_start":272,"line_end":272,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422322,"byte_end":10422356,"line_start":273,"line_end":273,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422361,"byte_end":10422364,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422369,"byte_end":10422383,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422388,"byte_end":10422391,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422396,"byte_end":10422414,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422419,"byte_end":10422451,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422456,"byte_end":10422459,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422464,"byte_end":10422480,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422485,"byte_end":10422540,"line_start":281,"line_end":281,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422545,"byte_end":10422548,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422553,"byte_end":10422571,"line_start":283,"line_end":283,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422576,"byte_end":10422615,"line_start":284,"line_end":284,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422620,"byte_end":10422686,"line_start":285,"line_end":285,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422691,"byte_end":10422694,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422699,"byte_end":10422741,"line_start":287,"line_end":287,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422746,"byte_end":10422835,"line_start":288,"line_end":288,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422840,"byte_end":10422843,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422848,"byte_end":10422862,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422867,"byte_end":10422872,"line_start":291,"line_end":291,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422877,"byte_end":10422884,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4284},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423599,"byte_end":10423602,"line_start":320,"line_end":320,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10422982,"byte_end":10423040,"line_start":297,"line_end":297,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423045,"byte_end":10423048,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423053,"byte_end":10423113,"line_start":299,"line_end":299,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423118,"byte_end":10423121,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423126,"byte_end":10423163,"line_start":301,"line_end":301,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423168,"byte_end":10423171,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423176,"byte_end":10423190,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423195,"byte_end":10423198,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423203,"byte_end":10423216,"line_start":305,"line_end":305,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423221,"byte_end":10423253,"line_start":306,"line_end":306,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423258,"byte_end":10423261,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423266,"byte_end":10423282,"line_start":308,"line_end":308,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423287,"byte_end":10423290,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423295,"byte_end":10423313,"line_start":310,"line_end":310,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423318,"byte_end":10423357,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423362,"byte_end":10423424,"line_start":312,"line_end":312,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423429,"byte_end":10423432,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423437,"byte_end":10423494,"line_start":314,"line_end":314,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423499,"byte_end":10423539,"line_start":315,"line_end":315,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423544,"byte_end":10423547,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423552,"byte_end":10423565,"line_start":317,"line_end":317,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423570,"byte_end":10423575,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423580,"byte_end":10423587,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4285},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10424231,"byte_end":10424238,"line_start":345,"line_end":345,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423664,"byte_end":10423722,"line_start":324,"line_end":324,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423727,"byte_end":10423730,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423735,"byte_end":10423811,"line_start":326,"line_end":326,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423816,"byte_end":10423837,"line_start":327,"line_end":327,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423842,"byte_end":10423845,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423850,"byte_end":10423864,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423869,"byte_end":10423872,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423877,"byte_end":10423890,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423895,"byte_end":10423927,"line_start":332,"line_end":332,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423932,"byte_end":10423935,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423940,"byte_end":10423956,"line_start":334,"line_end":334,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423961,"byte_end":10423964,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423969,"byte_end":10423987,"line_start":336,"line_end":336,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10423992,"byte_end":10424031,"line_start":337,"line_end":337,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10424036,"byte_end":10424099,"line_start":338,"line_end":338,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10424104,"byte_end":10424107,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10424112,"byte_end":10424170,"line_start":340,"line_end":340,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10424175,"byte_end":10424178,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10424183,"byte_end":10424197,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10424202,"byte_end":10424207,"line_start":343,"line_end":343,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10424212,"byte_end":10424219,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4872},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428375,"byte_end":10428384,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"TcpSocket","qualname":"::net::tcp::socket::TcpSocket","value":"TcpSocket {  }","parent":null,"children":[{"krate":0,"index":4873}],"decl_id":null,"docs":" A TCP socket that has not yet been converted to a `TcpStream` or\n `TcpListener`.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21942,"byte_end":21965,"line_start":168,"line_end":168,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4329},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429248,"byte_end":10429254,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<TcpSocket>::new_v4","value":"pub fn new_v4() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv4.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv4.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428453,"byte_end":10428497,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428502,"byte_end":10428505,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET` and `SOCK_STREAM`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428510,"byte_end":10428565,"line_start":92,"line_end":92,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428570,"byte_end":10428573,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428578,"byte_end":10428591,"line_start":94,"line_end":94,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428596,"byte_end":10428599,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428604,"byte_end":10428677,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428682,"byte_end":10428722,"line_start":97,"line_end":97,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428727,"byte_end":10428730,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428735,"byte_end":10428749,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428754,"byte_end":10428757,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv4 socket and start listening.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428762,"byte_end":10428811,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428816,"byte_end":10428819,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428824,"byte_end":10428837,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428842,"byte_end":10428872,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428877,"byte_end":10428880,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428885,"byte_end":10428901,"line_start":106,"line_end":106,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428906,"byte_end":10428909,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428914,"byte_end":10428932,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428937,"byte_end":10428976,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428981,"byte_end":10429034,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429039,"byte_end":10429081,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429086,"byte_end":10429113,"line_start":112,"line_end":112,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429118,"byte_end":10429121,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429126,"byte_end":10429169,"line_start":114,"line_end":114,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429174,"byte_end":10429195,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429200,"byte_end":10429214,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429219,"byte_end":10429224,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429229,"byte_end":10429236,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4330},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430171,"byte_end":10430177,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<TcpSocket>::new_v6","value":"pub fn new_v6() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv6.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv6.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429379,"byte_end":10429423,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429428,"byte_end":10429431,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET6` and `SOCK_STREAM`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429436,"byte_end":10429492,"line_start":126,"line_end":126,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429497,"byte_end":10429500,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429505,"byte_end":10429518,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429523,"byte_end":10429526,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429531,"byte_end":10429604,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429609,"byte_end":10429649,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429654,"byte_end":10429657,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429662,"byte_end":10429676,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429681,"byte_end":10429684,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv6 socket and start listening.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429689,"byte_end":10429738,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429743,"byte_end":10429746,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429751,"byte_end":10429764,"line_start":137,"line_end":137,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429769,"byte_end":10429799,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429804,"byte_end":10429807,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429812,"byte_end":10429828,"line_start":140,"line_end":140,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429833,"byte_end":10429836,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429841,"byte_end":10429859,"line_start":142,"line_end":142,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429864,"byte_end":10429903,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/     let addr = \"[::1]:8080\".parse().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429908,"byte_end":10429957,"line_start":144,"line_end":144,"column_start":5,"column_end":54}},{"value":"/     let socket = TcpSocket::new_v6()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10429962,"byte_end":10430004,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430009,"byte_end":10430036,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430041,"byte_end":10430044,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430049,"byte_end":10430092,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430097,"byte_end":10430118,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430123,"byte_end":10430137,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430142,"byte_end":10430147,"line_start":151,"line_end":151,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430152,"byte_end":10430159,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4331},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430992,"byte_end":10431005,"line_start":184,"line_end":184,"column_start":12,"column_end":25},"name":"set_reuseaddr","qualname":"<TcpSocket>::set_reuseaddr","value":"pub fn set_reuseaddr(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use address.","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use address.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430302,"byte_end":10430352,"line_start":158,"line_end":158,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430357,"byte_end":10430360,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430365,"byte_end":10430430,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430435,"byte_end":10430470,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430475,"byte_end":10430478,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430483,"byte_end":10430497,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430502,"byte_end":10430505,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430510,"byte_end":10430523,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430528,"byte_end":10430558,"line_start":166,"line_end":166,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430563,"byte_end":10430566,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430571,"byte_end":10430587,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430592,"byte_end":10430595,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430600,"byte_end":10430618,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430623,"byte_end":10430662,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430667,"byte_end":10430720,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430725,"byte_end":10430728,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430733,"byte_end":10430775,"line_start":174,"line_end":174,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430780,"byte_end":10430816,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430821,"byte_end":10430848,"line_start":176,"line_end":176,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430853,"byte_end":10430856,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430861,"byte_end":10430905,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430910,"byte_end":10430931,"line_start":179,"line_end":179,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430936,"byte_end":10430939,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430944,"byte_end":10430958,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430963,"byte_end":10430968,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10430973,"byte_end":10430980,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4332},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431704,"byte_end":10431713,"line_start":210,"line_end":210,"column_start":12,"column_end":21},"name":"reuseaddr","qualname":"<TcpSocket>::reuseaddr","value":"pub fn reuseaddr(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the value set for `SO_REUSEADDR` on this socket","sig":null,"attributes":[{"value":"/ Retrieves the value set for `SO_REUSEADDR` on this socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431105,"byte_end":10431166,"line_start":188,"line_end":188,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431171,"byte_end":10431174,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431179,"byte_end":10431193,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431198,"byte_end":10431201,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431206,"byte_end":10431219,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431224,"byte_end":10431254,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431259,"byte_end":10431262,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431267,"byte_end":10431283,"line_start":195,"line_end":195,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431288,"byte_end":10431291,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431296,"byte_end":10431314,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431319,"byte_end":10431358,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431363,"byte_end":10431416,"line_start":199,"line_end":199,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431421,"byte_end":10431424,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431429,"byte_end":10431471,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431476,"byte_end":10431512,"line_start":202,"line_end":202,"column_start":5,"column_end":41}},{"value":"/     assert!(socket.reuseaddr().unwrap());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431517,"byte_end":10431562,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431567,"byte_end":10431594,"line_start":204,"line_end":204,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431599,"byte_end":10431602,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431607,"byte_end":10431651,"line_start":206,"line_end":206,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431656,"byte_end":10431670,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431675,"byte_end":10431680,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431685,"byte_end":10431692,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4333},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432714,"byte_end":10432727,"line_start":244,"line_end":244,"column_start":12,"column_end":25},"name":"set_reuseport","qualname":"<TcpSocket>::set_reuseport","value":"pub fn set_reuseport(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use port. Only available for unix systems\n (excluding Solaris & Illumos).","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use port. Only available for unix systems","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431789,"byte_end":10431868,"line_start":214,"line_end":214,"column_start":5,"column_end":84}},{"value":"/ (excluding Solaris & Illumos).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431873,"byte_end":10431907,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431912,"byte_end":10431915,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431920,"byte_end":10431985,"line_start":217,"line_end":217,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10431990,"byte_end":10432025,"line_start":218,"line_end":218,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432030,"byte_end":10432033,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432038,"byte_end":10432052,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432057,"byte_end":10432060,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432065,"byte_end":10432078,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432083,"byte_end":10432113,"line_start":223,"line_end":223,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432118,"byte_end":10432121,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432126,"byte_end":10432142,"line_start":225,"line_end":225,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432147,"byte_end":10432150,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432155,"byte_end":10432173,"line_start":227,"line_end":227,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432178,"byte_end":10432217,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432222,"byte_end":10432275,"line_start":229,"line_end":229,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432280,"byte_end":10432283,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432288,"byte_end":10432330,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseport(true)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432335,"byte_end":10432371,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432376,"byte_end":10432403,"line_start":233,"line_end":233,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432408,"byte_end":10432411,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432416,"byte_end":10432460,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432465,"byte_end":10432479,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432484,"byte_end":10432489,"line_start":237,"line_end":237,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432494,"byte_end":10432501,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"cfg(all(unix, not(target_os = \"solaris\"), not(target_os = \"illumos\")))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432506,"byte_end":10432579,"line_start":239,"line_end":239,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4334},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433802,"byte_end":10433811,"line_start":279,"line_end":279,"column_start":12,"column_end":21},"name":"reuseport","qualname":"<TcpSocket>::reuseport","value":"pub fn reuseport(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use port. Only available for unix systems\n (excluding Solaris & Illumos).","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use port. Only available for unix systems","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432827,"byte_end":10432906,"line_start":248,"line_end":248,"column_start":5,"column_end":84}},{"value":"/ (excluding Solaris & Illumos).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432911,"byte_end":10432945,"line_start":249,"line_end":249,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432950,"byte_end":10432953,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10432958,"byte_end":10433023,"line_start":251,"line_end":251,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433028,"byte_end":10433063,"line_start":252,"line_end":252,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433068,"byte_end":10433071,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433076,"byte_end":10433090,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433095,"byte_end":10433098,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433103,"byte_end":10433116,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433121,"byte_end":10433151,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433156,"byte_end":10433159,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433164,"byte_end":10433180,"line_start":259,"line_end":259,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433185,"byte_end":10433188,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433193,"byte_end":10433211,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433216,"byte_end":10433255,"line_start":262,"line_end":262,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433260,"byte_end":10433313,"line_start":263,"line_end":263,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433318,"byte_end":10433321,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433326,"byte_end":10433368,"line_start":265,"line_end":265,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseport(true)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433373,"byte_end":10433409,"line_start":266,"line_end":266,"column_start":5,"column_end":41}},{"value":"/     assert!(socket.reuseport().unwrap());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433414,"byte_end":10433459,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433464,"byte_end":10433491,"line_start":268,"line_end":268,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433496,"byte_end":10433499,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433504,"byte_end":10433548,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433553,"byte_end":10433567,"line_start":271,"line_end":271,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433572,"byte_end":10433577,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433582,"byte_end":10433589,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"cfg(all(unix, not(target_os = \"solaris\"), not(target_os = \"illumos\")))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433594,"byte_end":10433667,"line_start":274,"line_end":274,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4335},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10434039,"byte_end":10434059,"line_start":286,"line_end":286,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpSocket>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP send buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP send buffer on this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433887,"byte_end":10433943,"line_start":283,"line_end":283,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433948,"byte_end":10433951,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_SNDBUF` socket option.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10433956,"byte_end":10434027,"line_start":285,"line_end":285,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4336},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10435382,"byte_end":10435398,"line_start":313,"line_end":313,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpSocket>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP send buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP send buffer for this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10434155,"byte_end":10434215,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10434220,"byte_end":10434223,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_SNDBUF` socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10434228,"byte_end":10434302,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10434307,"byte_end":10434318,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10434323,"byte_end":10434326,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_send_buffer_size`] has been called on this socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10434331,"byte_end":10434403,"line_start":295,"line_end":295,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10434408,"byte_end":10434482,"line_start":296,"line_end":296,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10434487,"byte_end":10434555,"line_start":297,"line_end":297,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10434560,"byte_end":10434582,"line_start":298,"line_end":298,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10434587,"byte_end":10434590,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10434595,"byte_end":10434670,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/   send buffer, and will clamp the provided value if it is below the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10434675,"byte_end":10434746,"line_start":301,"line_end":301,"column_start":5,"column_end":76}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10434751,"byte_end":10434827,"line_start":302,"line_end":302,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10434832,"byte_end":10434851,"line_start":303,"line_end":303,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10434856,"byte_end":10434931,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10434936,"byte_end":10435011,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10435016,"byte_end":10435032,"line_start":306,"line_end":306,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10435037,"byte_end":10435102,"line_start":307,"line_end":307,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10435107,"byte_end":10435172,"line_start":308,"line_end":308,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10435177,"byte_end":10435249,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10435254,"byte_end":10435299,"line_start":310,"line_end":310,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10435304,"byte_end":10435307,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: #method.set_send_buffer_size","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10435312,"byte_end":10435370,"line_start":312,"line_end":312,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4337},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10435635,"byte_end":10435655,"line_start":320,"line_end":320,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpSocket>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP receive buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP receive buffer on this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10435480,"byte_end":10435539,"line_start":317,"line_end":317,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10435544,"byte_end":10435547,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_RCVBUF` socket option.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10435552,"byte_end":10435623,"line_start":319,"line_end":319,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4338},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10436984,"byte_end":10437000,"line_start":347,"line_end":347,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpSocket>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP receive buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP receive buffer for this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10435751,"byte_end":10435814,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10435819,"byte_end":10435822,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_RCVBUF` socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10435827,"byte_end":10435901,"line_start":326,"line_end":326,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10435906,"byte_end":10435917,"line_start":327,"line_end":327,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10435922,"byte_end":10435925,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_recv_buffer_size`] has been called on this socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10435930,"byte_end":10436002,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10436007,"byte_end":10436081,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10436086,"byte_end":10436154,"line_start":331,"line_end":331,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10436159,"byte_end":10436181,"line_start":332,"line_end":332,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10436186,"byte_end":10436189,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10436194,"byte_end":10436269,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/   receive buffer, and will clamp the provided value if it is below the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10436274,"byte_end":10436348,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10436353,"byte_end":10436429,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10436434,"byte_end":10436453,"line_start":337,"line_end":337,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10436458,"byte_end":10436533,"line_start":338,"line_end":338,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10436538,"byte_end":10436613,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10436618,"byte_end":10436634,"line_start":340,"line_end":340,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10436639,"byte_end":10436704,"line_start":341,"line_end":341,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10436709,"byte_end":10436774,"line_start":342,"line_end":342,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10436779,"byte_end":10436851,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10436856,"byte_end":10436901,"line_start":344,"line_end":344,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10436906,"byte_end":10436909,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: #method.set_recv_buffer_size","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10436914,"byte_end":10436972,"line_start":346,"line_end":346,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4339},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437708,"byte_end":10437718,"line_start":373,"line_end":373,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the local address of this socket.","sig":null,"attributes":[{"value":"/ Get the local address of this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437082,"byte_end":10437123,"line_start":351,"line_end":351,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437128,"byte_end":10437131,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Will fail on windows if called before `bind`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437136,"byte_end":10437185,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437190,"byte_end":10437193,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437198,"byte_end":10437212,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437217,"byte_end":10437220,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437225,"byte_end":10437238,"line_start":357,"line_end":357,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437243,"byte_end":10437273,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437278,"byte_end":10437281,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437286,"byte_end":10437302,"line_start":360,"line_end":360,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437307,"byte_end":10437310,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437315,"byte_end":10437333,"line_start":362,"line_end":362,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437338,"byte_end":10437377,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437382,"byte_end":10437435,"line_start":364,"line_end":364,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437440,"byte_end":10437443,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437448,"byte_end":10437490,"line_start":366,"line_end":366,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437495,"byte_end":10437522,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(socket.local_addr().unwrap().to_string(), \"127.0.0.1:8080\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437527,"byte_end":10437606,"line_start":368,"line_end":368,"column_start":5,"column_end":84}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437611,"byte_end":10437655,"line_start":369,"line_end":369,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437660,"byte_end":10437674,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437679,"byte_end":10437684,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437689,"byte_end":10437696,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4340},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438548,"byte_end":10438552,"line_start":405,"line_end":405,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpSocket>::bind","value":"pub fn bind(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Bind the socket to the given address.","sig":null,"attributes":[{"value":"/ Bind the socket to the given address.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437800,"byte_end":10437841,"line_start":377,"line_end":377,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437846,"byte_end":10437849,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This calls the `bind(2)` operating-system function. Behavior is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437854,"byte_end":10437921,"line_start":379,"line_end":379,"column_start":5,"column_end":72}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10437926,"byte_end":10438002,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438007,"byte_end":10438019,"line_start":381,"line_end":381,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438024,"byte_end":10438027,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438032,"byte_end":10438046,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438051,"byte_end":10438054,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Bind a socket before listening.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438059,"byte_end":10438094,"line_start":385,"line_end":385,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438099,"byte_end":10438102,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438107,"byte_end":10438120,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438125,"byte_end":10438155,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438160,"byte_end":10438163,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438168,"byte_end":10438184,"line_start":390,"line_end":390,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438189,"byte_end":10438192,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438197,"byte_end":10438215,"line_start":392,"line_end":392,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438220,"byte_end":10438259,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438264,"byte_end":10438317,"line_start":394,"line_end":394,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438322,"byte_end":10438325,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438330,"byte_end":10438372,"line_start":396,"line_end":396,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438377,"byte_end":10438404,"line_start":397,"line_end":397,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438409,"byte_end":10438412,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438417,"byte_end":10438461,"line_start":399,"line_end":399,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438466,"byte_end":10438487,"line_start":400,"line_end":400,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438492,"byte_end":10438495,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438500,"byte_end":10438514,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438519,"byte_end":10438524,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438529,"byte_end":10438536,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4341},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439620,"byte_end":10439627,"line_start":441,"line_end":441,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpSocket>::connect","value":"pub async fn connect(Self, SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Establish a TCP connection with a peer at the specified socket address.","sig":null,"attributes":[{"value":"/ Establish a TCP connection with a peer at the specified socket address.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438639,"byte_end":10438714,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438719,"byte_end":10438722,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ The `TcpSocket` is consumed. Once the connection is established, a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438727,"byte_end":10438797,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ connected [`TcpStream`] is returned. If the connection fails, the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438802,"byte_end":10438871,"line_start":412,"line_end":412,"column_start":5,"column_end":74}},{"value":"/ encountered error is returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438876,"byte_end":10438910,"line_start":413,"line_end":413,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438915,"byte_end":10438918,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438923,"byte_end":10438951,"line_start":415,"line_end":415,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438956,"byte_end":10438959,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This calls the `connect(2)` operating-system function. Behavior is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10438964,"byte_end":10439034,"line_start":417,"line_end":417,"column_start":5,"column_end":75}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439039,"byte_end":10439115,"line_start":418,"line_end":418,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439120,"byte_end":10439132,"line_start":419,"line_end":419,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439137,"byte_end":10439140,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439145,"byte_end":10439159,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439164,"byte_end":10439167,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Connecting to a peer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439172,"byte_end":10439197,"line_start":423,"line_end":423,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439202,"byte_end":10439205,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439210,"byte_end":10439223,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439228,"byte_end":10439258,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439263,"byte_end":10439266,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439271,"byte_end":10439287,"line_start":428,"line_end":428,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439292,"byte_end":10439295,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439300,"byte_end":10439318,"line_start":430,"line_end":430,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439323,"byte_end":10439362,"line_start":431,"line_end":431,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439367,"byte_end":10439420,"line_start":432,"line_end":432,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439425,"byte_end":10439428,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439433,"byte_end":10439475,"line_start":434,"line_end":434,"column_start":5,"column_end":47}},{"value":"/     let stream = socket.connect(addr).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439480,"byte_end":10439529,"line_start":435,"line_end":435,"column_start":5,"column_end":54}},{"value":"/ # drop(stream);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439534,"byte_end":10439553,"line_start":436,"line_end":436,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439558,"byte_end":10439561,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439566,"byte_end":10439580,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439585,"byte_end":10439590,"line_start":439,"line_end":439,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439595,"byte_end":10439602,"line_start":440,"line_end":440,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4344},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440924,"byte_end":10440930,"line_start":481,"line_end":481,"column_start":12,"column_end":18},"name":"listen","qualname":"<TcpSocket>::listen","value":"pub fn listen(Self, u32) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convert the socket into a `TcpListener`.","sig":null,"attributes":[{"value":"/ Convert the socket into a `TcpListener`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439777,"byte_end":10439821,"line_start":446,"line_end":446,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439826,"byte_end":10439829,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ `backlog` defines the maximum number of pending connections are queued","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439834,"byte_end":10439908,"line_start":448,"line_end":448,"column_start":5,"column_end":79}},{"value":"/ by the operating system at any given time. Connection are removed from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439913,"byte_end":10439987,"line_start":449,"line_end":449,"column_start":5,"column_end":79}},{"value":"/ the queue with [`TcpListener::accept`]. When the queue is full, the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10439992,"byte_end":10440063,"line_start":450,"line_end":450,"column_start":5,"column_end":76}},{"value":"/ operating-system will start rejecting connections.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440068,"byte_end":10440122,"line_start":451,"line_end":451,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440127,"byte_end":10440130,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener::accept`]: TcpListener::accept","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440135,"byte_end":10440183,"line_start":453,"line_end":453,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440188,"byte_end":10440191,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ This calls the `listen(2)` operating-system function, marking the socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440196,"byte_end":10440272,"line_start":455,"line_end":455,"column_start":5,"column_end":81}},{"value":"/ as a passive socket. Behavior is platform specific. Refer to the target","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440277,"byte_end":10440352,"line_start":456,"line_end":456,"column_start":5,"column_end":80}},{"value":"/ platform's documentation for more details.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440357,"byte_end":10440403,"line_start":457,"line_end":457,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440408,"byte_end":10440411,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440416,"byte_end":10440430,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440435,"byte_end":10440438,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Create a `TcpListener`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440443,"byte_end":10440470,"line_start":461,"line_end":461,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440475,"byte_end":10440478,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440483,"byte_end":10440496,"line_start":463,"line_end":463,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440501,"byte_end":10440531,"line_start":464,"line_end":464,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440536,"byte_end":10440539,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440544,"byte_end":10440560,"line_start":466,"line_end":466,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440565,"byte_end":10440568,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440573,"byte_end":10440591,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440596,"byte_end":10440635,"line_start":469,"line_end":469,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440640,"byte_end":10440693,"line_start":470,"line_end":470,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440698,"byte_end":10440701,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440706,"byte_end":10440748,"line_start":472,"line_end":472,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440753,"byte_end":10440780,"line_start":473,"line_end":473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440785,"byte_end":10440788,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440793,"byte_end":10440837,"line_start":475,"line_end":475,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440842,"byte_end":10440863,"line_start":476,"line_end":476,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440868,"byte_end":10440871,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440876,"byte_end":10440890,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440895,"byte_end":10440900,"line_start":479,"line_end":479,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10440905,"byte_end":10440912,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4345},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441931,"byte_end":10441946,"line_start":510,"line_end":510,"column_start":12,"column_end":27},"name":"from_std_stream","qualname":"<TcpSocket>::from_std_stream","value":"pub fn from_std_stream(std::net::TcpStream) -> TcpSocket","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`std::net::TcpStream`] into a `TcpSocket`. The provided\n socket must not have been connected prior to calling this function. This\n function is typically used together with crates such as [`socket2`] to\n configure socket options that are not available on `TcpSocket`.","sig":null,"attributes":[{"value":"/ Converts a [`std::net::TcpStream`] into a `TcpSocket`. The provided","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441068,"byte_end":10441139,"line_start":486,"line_end":486,"column_start":5,"column_end":76}},{"value":"/ socket must not have been connected prior to calling this function. This","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441144,"byte_end":10441220,"line_start":487,"line_end":487,"column_start":5,"column_end":81}},{"value":"/ function is typically used together with crates such as [`socket2`] to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441225,"byte_end":10441299,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/ configure socket options that are not available on `TcpSocket`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441304,"byte_end":10441371,"line_start":489,"line_end":489,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441376,"byte_end":10441379,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ [`std::net::TcpStream`]: struct@std::net::TcpStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441384,"byte_end":10441439,"line_start":491,"line_end":491,"column_start":5,"column_end":60}},{"value":"/ [`socket2`]: https://docs.rs/socket2/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441444,"byte_end":10441485,"line_start":492,"line_end":492,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441490,"byte_end":10441493,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441498,"byte_end":10441512,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441517,"byte_end":10441520,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441525,"byte_end":10441532,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441537,"byte_end":10441567,"line_start":497,"line_end":497,"column_start":5,"column_end":35}},{"value":"/ use socket2::{Domain, Socket, Type};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441572,"byte_end":10441612,"line_start":498,"line_end":498,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441617,"byte_end":10441620,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441625,"byte_end":10441643,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441648,"byte_end":10441692,"line_start":501,"line_end":501,"column_start":5,"column_end":49}},{"value":"/     ","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441697,"byte_end":10441705,"line_start":502,"line_end":502,"column_start":5,"column_end":13}},{"value":"/     let socket2_socket = Socket::new(Domain::IPV4, Type::STREAM, None)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441710,"byte_end":10441786,"line_start":503,"line_end":503,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441791,"byte_end":10441794,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::from_std_stream(socket2_socket.into());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441799,"byte_end":10441870,"line_start":505,"line_end":505,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441875,"byte_end":10441878,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441883,"byte_end":10441897,"line_start":507,"line_end":507,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441902,"byte_end":10441907,"line_start":508,"line_end":508,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10441912,"byte_end":10441919,"line_start":509,"line_end":509,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4874},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10444779,"byte_end":10444787,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10444446,"byte_end":10444510,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10444511,"byte_end":10444514,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10444515,"byte_end":10444603,"line_start":22,"line_end":22,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10444604,"byte_end":10444631,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10444632,"byte_end":10444635,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10444636,"byte_end":10444664,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10444665,"byte_end":10444698,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10444699,"byte_end":10444750,"line_start":27,"line_end":27,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4881},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445401,"byte_end":10445410,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10444809,"byte_end":10444874,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10444875,"byte_end":10444878,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10444879,"byte_end":10444965,"line_start":33,"line_end":33,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10444966,"byte_end":10445018,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445019,"byte_end":10445022,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445023,"byte_end":10445104,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445105,"byte_end":10445140,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445141,"byte_end":10445144,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445145,"byte_end":10445173,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445174,"byte_end":10445207,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445208,"byte_end":10445255,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445256,"byte_end":10445318,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445319,"byte_end":10445372,"line_start":43,"line_end":43,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4396},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446726,"byte_end":10446735,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445584,"byte_end":10445658,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445663,"byte_end":10445736,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445741,"byte_end":10445755,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445760,"byte_end":10445763,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445768,"byte_end":10445839,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445844,"byte_end":10445918,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445923,"byte_end":10445947,"line_start":58,"line_end":58,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445952,"byte_end":10445955,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445960,"byte_end":10446033,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446038,"byte_end":10446041,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446046,"byte_end":10446060,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446065,"byte_end":10446068,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446073,"byte_end":10446086,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446091,"byte_end":10446126,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446131,"byte_end":10446161,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446166,"byte_end":10446169,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446174,"byte_end":10446207,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446212,"byte_end":10446215,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446220,"byte_end":10446238,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446243,"byte_end":10446282,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446287,"byte_end":10446356,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446361,"byte_end":10446409,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446414,"byte_end":10446444,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446449,"byte_end":10446494,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446499,"byte_end":10446502,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446507,"byte_end":10446529,"line_start":77,"line_end":77,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446534,"byte_end":10446579,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446584,"byte_end":10446602,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446607,"byte_end":10446610,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446615,"byte_end":10446629,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446634,"byte_end":10446639,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446644,"byte_end":10446651,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446656,"byte_end":10446659,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446664,"byte_end":10446714,"line_start":85,"line_end":85,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4397},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10448195,"byte_end":10448199,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446897,"byte_end":10446967,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10446972,"byte_end":10447041,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447046,"byte_end":10447085,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447090,"byte_end":10447093,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447098,"byte_end":10447166,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447171,"byte_end":10447174,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447179,"byte_end":10447219,"line_start":100,"line_end":100,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447224,"byte_end":10447227,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447232,"byte_end":10447246,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447251,"byte_end":10447254,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447259,"byte_end":10447272,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447277,"byte_end":10447307,"line_start":105,"line_end":105,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447312,"byte_end":10447344,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447349,"byte_end":10447375,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447380,"byte_end":10447383,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447388,"byte_end":10447406,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447411,"byte_end":10447462,"line_start":110,"line_end":110,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447467,"byte_end":10447495,"line_start":111,"line_end":111,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447500,"byte_end":10447569,"line_start":112,"line_end":112,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447574,"byte_end":10447622,"line_start":113,"line_end":113,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447627,"byte_end":10447630,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447635,"byte_end":10447664,"line_start":115,"line_end":115,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447669,"byte_end":10447698,"line_start":116,"line_end":116,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447703,"byte_end":10447706,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447711,"byte_end":10447738,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447743,"byte_end":10447790,"line_start":119,"line_end":119,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447795,"byte_end":10447798,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447803,"byte_end":10447827,"line_start":121,"line_end":121,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447832,"byte_end":10447891,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447896,"byte_end":10447935,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447940,"byte_end":10447943,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447948,"byte_end":10447962,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447967,"byte_end":10447972,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447977,"byte_end":10447984,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447989,"byte_end":10447992,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10447997,"byte_end":10448062,"line_start":129,"line_end":129,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10448067,"byte_end":10448070,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10448075,"byte_end":10448121,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10448126,"byte_end":10448177,"line_start":132,"line_end":132,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4888},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10450729,"byte_end":10450742,"line_start":31,"line_end":31,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":4889}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10450378,"byte_end":10450444,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10450445,"byte_end":10450448,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10450449,"byte_end":10450536,"line_start":24,"line_end":24,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10450537,"byte_end":10450571,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10450572,"byte_end":10450575,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10450576,"byte_end":10450604,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10450605,"byte_end":10450648,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10450649,"byte_end":10450700,"line_start":29,"line_end":29,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4892},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10451468,"byte_end":10451482,"line_start":50,"line_end":50,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":4893},{"krate":0,"index":4894}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10450775,"byte_end":10450842,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10450843,"byte_end":10450846,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type, [`poll_shutdown`] will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10450847,"byte_end":10450934,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/ shut down the TCP stream in the write direction.  Dropping the write half","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10450935,"byte_end":10451012,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ will also shut down the write half of the TCP stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10451013,"byte_end":10451070,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10451071,"byte_end":10451074,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10451075,"byte_end":10451161,"line_start":41,"line_end":41,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10451162,"byte_end":10451197,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10451198,"byte_end":10451201,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10451202,"byte_end":10451230,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10451231,"byte_end":10451274,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10451275,"byte_end":10451322,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10451323,"byte_end":10451385,"line_start":47,"line_end":47,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10451386,"byte_end":10451439,"line_start":48,"line_end":48,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":4897},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10452447,"byte_end":10452459,"line_start":84,"line_end":84,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10452315,"byte_end":10452397,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10452398,"byte_end":10452418,"line_start":82,"line_end":82,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":4899},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10452460,"byte_end":10452477,"line_start":84,"line_end":84,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":4897},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4900},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10452479,"byte_end":10452497,"line_start":84,"line_end":84,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":4897},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4469},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453043,"byte_end":10453050,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10452780,"byte_end":10452849,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10452854,"byte_end":10452918,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10452923,"byte_end":10452975,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10452980,"byte_end":10452983,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10452988,"byte_end":10453031,"line_start":102,"line_end":102,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4470},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454300,"byte_end":10454309,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453157,"byte_end":10453231,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453236,"byte_end":10453309,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453314,"byte_end":10453328,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453333,"byte_end":10453336,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453341,"byte_end":10453412,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453417,"byte_end":10453491,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453496,"byte_end":10453520,"line_start":113,"line_end":113,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453525,"byte_end":10453528,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453533,"byte_end":10453606,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453611,"byte_end":10453614,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453619,"byte_end":10453633,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453638,"byte_end":10453641,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453646,"byte_end":10453659,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453664,"byte_end":10453699,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453704,"byte_end":10453734,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453739,"byte_end":10453742,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453747,"byte_end":10453780,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453785,"byte_end":10453788,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453793,"byte_end":10453811,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453816,"byte_end":10453855,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453860,"byte_end":10453925,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453930,"byte_end":10453983,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10453988,"byte_end":10454018,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454023,"byte_end":10454068,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454073,"byte_end":10454076,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454081,"byte_end":10454103,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454108,"byte_end":10454153,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454158,"byte_end":10454176,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454181,"byte_end":10454184,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454189,"byte_end":10454203,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454208,"byte_end":10454213,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454218,"byte_end":10454225,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454230,"byte_end":10454233,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454238,"byte_end":10454288,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4471},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455774,"byte_end":10455778,"line_start":188,"line_end":188,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454475,"byte_end":10454545,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454550,"byte_end":10454619,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454624,"byte_end":10454663,"line_start":151,"line_end":151,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454668,"byte_end":10454671,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454676,"byte_end":10454744,"line_start":153,"line_end":153,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454749,"byte_end":10454752,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454757,"byte_end":10454797,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454802,"byte_end":10454805,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454810,"byte_end":10454824,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454829,"byte_end":10454832,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454837,"byte_end":10454850,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454855,"byte_end":10454885,"line_start":160,"line_end":160,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454890,"byte_end":10454922,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454927,"byte_end":10454953,"line_start":162,"line_end":162,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454958,"byte_end":10454961,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454966,"byte_end":10454984,"line_start":164,"line_end":164,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10454989,"byte_end":10455040,"line_start":165,"line_end":165,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455045,"byte_end":10455073,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455078,"byte_end":10455143,"line_start":167,"line_end":167,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455148,"byte_end":10455201,"line_start":168,"line_end":168,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455206,"byte_end":10455209,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455214,"byte_end":10455243,"line_start":170,"line_end":170,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455248,"byte_end":10455277,"line_start":171,"line_end":171,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455282,"byte_end":10455285,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455290,"byte_end":10455317,"line_start":173,"line_end":173,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455322,"byte_end":10455369,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455374,"byte_end":10455377,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455382,"byte_end":10455406,"line_start":176,"line_end":176,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455411,"byte_end":10455470,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455475,"byte_end":10455514,"line_start":178,"line_end":178,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455519,"byte_end":10455522,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455527,"byte_end":10455541,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455546,"byte_end":10455551,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455556,"byte_end":10455563,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455568,"byte_end":10455571,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455576,"byte_end":10455641,"line_start":184,"line_end":184,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455646,"byte_end":10455649,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455654,"byte_end":10455700,"line_start":186,"line_end":186,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455705,"byte_end":10455756,"line_start":187,"line_end":187,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4478},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10456453,"byte_end":10456460,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10456190,"byte_end":10456259,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10456264,"byte_end":10456328,"line_start":206,"line_end":206,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10456333,"byte_end":10456385,"line_start":207,"line_end":207,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10456390,"byte_end":10456393,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10456398,"byte_end":10456441,"line_start":209,"line_end":209,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4479},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10456765,"byte_end":10456771,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10456566,"byte_end":10456638,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10456643,"byte_end":10456712,"line_start":215,"line_end":215,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10456717,"byte_end":10456753,"line_start":216,"line_end":216,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4906},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10460686,"byte_end":10460695,"line_start":67,"line_end":67,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":4907}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21942,"byte_end":21965,"line_start":168,"line_end":168,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4582},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10462216,"byte_end":10462223,"line_start":111,"line_end":111,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10460774,"byte_end":10460818,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10460823,"byte_end":10460826,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10460831,"byte_end":10460905,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address.  If `addr`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10460910,"byte_end":10460980,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ yields multiple addresses, connect will be attempted with each of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10460985,"byte_end":10461058,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/ addresses until a connection is successful. If none of the addresses","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461063,"byte_end":10461135,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ result in a successful connection, the error returned from the last","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461140,"byte_end":10461211,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ connection attempt (the last address) is returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461216,"byte_end":10461270,"line_start":80,"line_end":80,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461275,"byte_end":10461278,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ To configure the socket before connecting, you can use the [`TcpSocket`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461283,"byte_end":10461359,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461364,"byte_end":10461373,"line_start":83,"line_end":83,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461378,"byte_end":10461381,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461386,"byte_end":10461440,"line_start":85,"line_end":85,"column_start":5,"column_end":59}},{"value":"/ [`TcpSocket`]: struct@crate::net::TcpSocket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461445,"byte_end":10461492,"line_start":86,"line_end":86,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461497,"byte_end":10461500,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461505,"byte_end":10461519,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461524,"byte_end":10461527,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461532,"byte_end":10461545,"line_start":90,"line_end":90,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461550,"byte_end":10461580,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461585,"byte_end":10461618,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461623,"byte_end":10461649,"line_start":93,"line_end":93,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461654,"byte_end":10461657,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461662,"byte_end":10461680,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461685,"byte_end":10461736,"line_start":96,"line_end":96,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461741,"byte_end":10461769,"line_start":97,"line_end":97,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461774,"byte_end":10461843,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461848,"byte_end":10461851,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461856,"byte_end":10461883,"line_start":100,"line_end":100,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461888,"byte_end":10461937,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461942,"byte_end":10461945,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461950,"byte_end":10461964,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461969,"byte_end":10461974,"line_start":104,"line_end":104,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461979,"byte_end":10461986,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461991,"byte_end":10461994,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10461999,"byte_end":10462070,"line_start":107,"line_end":107,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10462075,"byte_end":10462078,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10462083,"byte_end":10462140,"line_start":109,"line_end":109,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10462145,"byte_end":10462198,"line_start":110,"line_end":110,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4595},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464947,"byte_end":10464955,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(std::net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10463830,"byte_end":10463887,"line_start":160,"line_end":160,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10463892,"byte_end":10463895,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10463900,"byte_end":10463970,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10463975,"byte_end":10464051,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464056,"byte_end":10464127,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464132,"byte_end":10464154,"line_start":165,"line_end":165,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464159,"byte_end":10464162,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464167,"byte_end":10464181,"line_start":167,"line_end":167,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464186,"byte_end":10464189,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464194,"byte_end":10464212,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464217,"byte_end":10464243,"line_start":170,"line_end":170,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464248,"byte_end":10464278,"line_start":171,"line_end":171,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464283,"byte_end":10464286,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464291,"byte_end":10464309,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464314,"byte_end":10464365,"line_start":174,"line_end":174,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464370,"byte_end":10464444,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/     std_stream.set_nonblocking(true)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464449,"byte_end":10464491,"line_start":176,"line_end":176,"column_start":5,"column_end":47}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464496,"byte_end":10464550,"line_start":177,"line_end":177,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464555,"byte_end":10464569,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464574,"byte_end":10464579,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464584,"byte_end":10464591,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464596,"byte_end":10464599,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464604,"byte_end":10464616,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464621,"byte_end":10464624,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464629,"byte_end":10464689,"line_start":184,"line_end":184,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464694,"byte_end":10464697,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464702,"byte_end":10464772,"line_start":186,"line_end":186,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464777,"byte_end":10464850,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10464855,"byte_end":10464935,"line_start":188,"line_end":188,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4596},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10466595,"byte_end":10466603,"line_start":229,"line_end":229,"column_start":12,"column_end":20},"name":"into_std","qualname":"<TcpStream>::into_std","value":"pub fn into_std(Self) -> io::Result<std::net::TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465148,"byte_end":10465216,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465221,"byte_end":10465224,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::net::TcpStream`] will have nonblocking mode set as `true`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465229,"byte_end":10465311,"line_start":197,"line_end":197,"column_start":5,"column_end":87}},{"value":"/ Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465316,"byte_end":10465382,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465387,"byte_end":10465390,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465395,"byte_end":10465409,"line_start":200,"line_end":200,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465414,"byte_end":10465417,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465422,"byte_end":10465429,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465434,"byte_end":10465460,"line_start":203,"line_end":203,"column_start":5,"column_end":31}},{"value":"/ use std::io::Read;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465465,"byte_end":10465487,"line_start":204,"line_end":204,"column_start":5,"column_end":27}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465492,"byte_end":10465524,"line_start":205,"line_end":205,"column_start":5,"column_end":37}},{"value":"/ # use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465529,"byte_end":10465561,"line_start":206,"line_end":206,"column_start":5,"column_end":37}},{"value":"/ # use tokio::io::AsyncWriteExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465566,"byte_end":10465601,"line_start":207,"line_end":207,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465606,"byte_end":10465609,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465614,"byte_end":10465632,"line_start":209,"line_end":209,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465637,"byte_end":10465688,"line_start":210,"line_end":210,"column_start":5,"column_end":56}},{"value":"/     let mut data = [0u8; 12];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465693,"byte_end":10465726,"line_start":211,"line_end":211,"column_start":5,"column_end":38}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465731,"byte_end":10465798,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/ #   let handle = tokio::spawn(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465803,"byte_end":10465844,"line_start":213,"line_end":213,"column_start":5,"column_end":46}},{"value":"/ #       let mut stream: TcpStream = TcpStream::connect(\"127.0.0.1:34254\").await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465849,"byte_end":10465942,"line_start":214,"line_end":214,"column_start":5,"column_end":98}},{"value":"/ #       stream.write(b\"Hello world!\").await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10465947,"byte_end":10466004,"line_start":215,"line_end":215,"column_start":5,"column_end":62}},{"value":"/ #   });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10466009,"byte_end":10466020,"line_start":216,"line_end":216,"column_start":5,"column_end":16}},{"value":"/     let (tokio_tcp_stream, _) = listener.accept().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10466025,"byte_end":10466086,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/     let mut std_tcp_stream = tokio_tcp_stream.into_std()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10466091,"byte_end":10466153,"line_start":218,"line_end":218,"column_start":5,"column_end":67}},{"value":"/ #   handle.await.expect(\"The task being joined has panicked\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10466158,"byte_end":10466224,"line_start":219,"line_end":219,"column_start":5,"column_end":71}},{"value":"/     std_tcp_stream.set_nonblocking(false)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10466229,"byte_end":10466276,"line_start":220,"line_end":220,"column_start":5,"column_end":52}},{"value":"/     std_tcp_stream.read_exact(&mut data)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10466281,"byte_end":10466327,"line_start":221,"line_end":221,"column_start":5,"column_end":51}},{"value":"/ #   assert_eq!(b\"Hello world!\", &data);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10466332,"byte_end":10466375,"line_start":222,"line_end":222,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10466380,"byte_end":10466394,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10466399,"byte_end":10466404,"line_start":224,"line_end":224,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10466409,"byte_end":10466416,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ [`tokio::net::TcpStream`]: TcpStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10466421,"byte_end":10466461,"line_start":226,"line_end":226,"column_start":5,"column_end":45}},{"value":"/ [`std::net::TcpStream`]: std::net::TcpStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10466466,"byte_end":10466514,"line_start":227,"line_end":227,"column_start":5,"column_end":53}},{"value":"/ [`set_nonblocking`]: fn@std::net::TcpStream::set_nonblocking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10466519,"byte_end":10466583,"line_start":228,"line_end":228,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4606},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467642,"byte_end":10467652,"line_start":263,"line_end":263,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467243,"byte_end":10467302,"line_start":249,"line_end":249,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467307,"byte_end":10467310,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467315,"byte_end":10467329,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467334,"byte_end":10467337,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467342,"byte_end":10467355,"line_start":253,"line_end":253,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467360,"byte_end":10467390,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467395,"byte_end":10467398,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467403,"byte_end":10467467,"line_start":256,"line_end":256,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467472,"byte_end":10467533,"line_start":257,"line_end":257,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467538,"byte_end":10467541,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467546,"byte_end":10467589,"line_start":259,"line_end":259,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467594,"byte_end":10467606,"line_start":260,"line_end":260,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467611,"byte_end":10467618,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467623,"byte_end":10467630,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4607},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468131,"byte_end":10468140,"line_start":281,"line_end":281,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467728,"byte_end":10467792,"line_start":267,"line_end":267,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467797,"byte_end":10467800,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467805,"byte_end":10467819,"line_start":269,"line_end":269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467824,"byte_end":10467827,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467832,"byte_end":10467845,"line_start":271,"line_end":271,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467850,"byte_end":10467880,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467885,"byte_end":10467888,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467893,"byte_end":10467957,"line_start":274,"line_end":274,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10467962,"byte_end":10468023,"line_start":275,"line_end":275,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468028,"byte_end":10468031,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468036,"byte_end":10468078,"line_start":277,"line_end":277,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468083,"byte_end":10468095,"line_start":278,"line_end":278,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468100,"byte_end":10468107,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468112,"byte_end":10468119,"line_start":280,"line_end":280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4608},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469631,"byte_end":10469640,"line_start":327,"line_end":327,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468215,"byte_end":10468290,"line_start":285,"line_end":285,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468295,"byte_end":10468368,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468373,"byte_end":10468387,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468392,"byte_end":10468395,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek`, `poll_read` or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468400,"byte_end":10468462,"line_start":289,"line_end":289,"column_start":5,"column_end":67}},{"value":"/ `poll_read_ready`, only the `Waker` from the `Context` passed to the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468467,"byte_end":10468539,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468544,"byte_end":10468608,"line_start":291,"line_end":291,"column_start":5,"column_end":69}},{"value":"/ `poll_write` retains a second, independent waker.)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468613,"byte_end":10468667,"line_start":292,"line_end":292,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468672,"byte_end":10468675,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468680,"byte_end":10468698,"line_start":294,"line_end":294,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468703,"byte_end":10468706,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468711,"byte_end":10468736,"line_start":296,"line_end":296,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468741,"byte_end":10468744,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468749,"byte_end":10468800,"line_start":298,"line_end":298,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468805,"byte_end":10468888,"line_start":299,"line_end":299,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468893,"byte_end":10468948,"line_start":300,"line_end":300,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468953,"byte_end":10468956,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468961,"byte_end":10468973,"line_start":302,"line_end":302,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468978,"byte_end":10468981,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10468986,"byte_end":10469061,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469066,"byte_end":10469069,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469074,"byte_end":10469088,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469093,"byte_end":10469096,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469101,"byte_end":10469114,"line_start":308,"line_end":308,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469119,"byte_end":10469154,"line_start":309,"line_end":309,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469159,"byte_end":10469189,"line_start":310,"line_end":310,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469194,"byte_end":10469197,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469202,"byte_end":10469235,"line_start":312,"line_end":312,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469240,"byte_end":10469243,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469248,"byte_end":10469266,"line_start":314,"line_end":314,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469271,"byte_end":10469310,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469315,"byte_end":10469380,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469385,"byte_end":10469415,"line_start":317,"line_end":317,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469420,"byte_end":10469465,"line_start":318,"line_end":318,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469470,"byte_end":10469473,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469478,"byte_end":10469500,"line_start":320,"line_end":320,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469505,"byte_end":10469547,"line_start":321,"line_end":321,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469552,"byte_end":10469570,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469575,"byte_end":10469578,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469583,"byte_end":10469597,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469602,"byte_end":10469607,"line_start":325,"line_end":325,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10469612,"byte_end":10469619,"line_start":326,"line_end":326,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4609},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472712,"byte_end":10472717,"line_start":413,"line_end":413,"column_start":18,"column_end":23},"name":"ready","qualname":"<TcpStream>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10470447,"byte_end":10470494,"line_start":353,"line_end":353,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10470499,"byte_end":10470502,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_read()` or `try_write()`. It","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10470507,"byte_end":10470581,"line_start":355,"line_end":355,"column_start":5,"column_end":79}},{"value":"/ can be used to concurrently read / write to the same socket on a single","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10470586,"byte_end":10470661,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ task without splitting the socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10470666,"byte_end":10470704,"line_start":357,"line_end":357,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10470709,"byte_end":10470712,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10470717,"byte_end":10470731,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10470736,"byte_end":10470739,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Concurrently read and write to the stream on the same task without","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10470744,"byte_end":10470814,"line_start":361,"line_end":361,"column_start":5,"column_end":75}},{"value":"/ splitting.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10470819,"byte_end":10470833,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10470838,"byte_end":10470841,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10470846,"byte_end":10470859,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10470864,"byte_end":10470892,"line_start":365,"line_end":365,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10470897,"byte_end":10470927,"line_start":366,"line_end":366,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10470932,"byte_end":10470958,"line_start":367,"line_end":367,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10470963,"byte_end":10470979,"line_start":368,"line_end":368,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10470984,"byte_end":10470987,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10470992,"byte_end":10471010,"line_start":370,"line_end":370,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471015,"byte_end":10471066,"line_start":371,"line_end":371,"column_start":5,"column_end":56}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471071,"byte_end":10471136,"line_start":372,"line_end":372,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471141,"byte_end":10471144,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471149,"byte_end":10471163,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/         let ready = stream.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471168,"byte_end":10471253,"line_start":375,"line_end":375,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471258,"byte_end":10471261,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471266,"byte_end":10471302,"line_start":377,"line_end":377,"column_start":5,"column_end":41}},{"value":"/             let mut data = vec![0; 1024];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471307,"byte_end":10471352,"line_start":378,"line_end":378,"column_start":5,"column_end":50}},{"value":"/             // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471357,"byte_end":10471431,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471436,"byte_end":10471498,"line_start":380,"line_end":380,"column_start":5,"column_end":67}},{"value":"/             match stream.try_read(&mut data) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471503,"byte_end":10471553,"line_start":381,"line_end":381,"column_start":5,"column_end":55}},{"value":"/                 Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471558,"byte_end":10471588,"line_start":382,"line_end":382,"column_start":5,"column_end":35}},{"value":"/                     println!(\"read {} bytes\", n);        ","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471593,"byte_end":10471654,"line_start":383,"line_end":383,"column_start":5,"column_end":66}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471659,"byte_end":10471680,"line_start":384,"line_end":384,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471685,"byte_end":10471761,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471766,"byte_end":10471799,"line_start":386,"line_end":386,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471804,"byte_end":10471825,"line_start":387,"line_end":387,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471830,"byte_end":10471861,"line_start":388,"line_end":388,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471866,"byte_end":10471911,"line_start":389,"line_end":389,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471916,"byte_end":10471937,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471942,"byte_end":10471959,"line_start":391,"line_end":391,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471964,"byte_end":10471967,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471972,"byte_end":10471985,"line_start":393,"line_end":393,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471990,"byte_end":10471993,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10471998,"byte_end":10472034,"line_start":395,"line_end":395,"column_start":5,"column_end":41}},{"value":"/             // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472039,"byte_end":10472114,"line_start":396,"line_end":396,"column_start":5,"column_end":80}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472119,"byte_end":10472181,"line_start":397,"line_end":397,"column_start":5,"column_end":67}},{"value":"/             match stream.try_write(b\"hello world\") {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472186,"byte_end":10472242,"line_start":398,"line_end":398,"column_start":5,"column_end":61}},{"value":"/                 Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472247,"byte_end":10472277,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/                     println!(\"write {} bytes\", n);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472282,"byte_end":10472336,"line_start":400,"line_end":400,"column_start":5,"column_end":59}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472341,"byte_end":10472362,"line_start":401,"line_end":401,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472367,"byte_end":10472443,"line_start":402,"line_end":402,"column_start":5,"column_end":81}},{"value":"/                     continue","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472448,"byte_end":10472480,"line_start":403,"line_end":403,"column_start":5,"column_end":37}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472485,"byte_end":10472506,"line_start":404,"line_end":404,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472511,"byte_end":10472542,"line_start":405,"line_end":405,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472547,"byte_end":10472592,"line_start":406,"line_end":406,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472597,"byte_end":10472618,"line_start":407,"line_end":407,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472623,"byte_end":10472640,"line_start":408,"line_end":408,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472645,"byte_end":10472658,"line_start":409,"line_end":409,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472663,"byte_end":10472672,"line_start":410,"line_end":410,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472677,"byte_end":10472682,"line_start":411,"line_end":411,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472687,"byte_end":10472694,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4612},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474237,"byte_end":10474245,"line_start":461,"line_end":461,"column_start":18,"column_end":26},"name":"readable","qualname":"<TcpStream>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472874,"byte_end":10472917,"line_start":418,"line_end":418,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472922,"byte_end":10472925,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10472930,"byte_end":10473007,"line_start":420,"line_end":420,"column_start":5,"column_end":82}},{"value":"/ paired with `try_read()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473012,"byte_end":10473041,"line_start":421,"line_end":421,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473046,"byte_end":10473049,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473054,"byte_end":10473068,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473073,"byte_end":10473076,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473081,"byte_end":10473094,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473099,"byte_end":10473129,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473134,"byte_end":10473160,"line_start":427,"line_end":427,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473165,"byte_end":10473181,"line_start":428,"line_end":428,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473186,"byte_end":10473189,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473194,"byte_end":10473212,"line_start":430,"line_end":430,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473217,"byte_end":10473268,"line_start":431,"line_end":431,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473273,"byte_end":10473301,"line_start":432,"line_end":432,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473306,"byte_end":10473371,"line_start":433,"line_end":433,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473376,"byte_end":10473379,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/     let mut msg = vec![0; 1024];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473384,"byte_end":10473420,"line_start":435,"line_end":435,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473425,"byte_end":10473428,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473433,"byte_end":10473447,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473452,"byte_end":10473501,"line_start":438,"line_end":438,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473506,"byte_end":10473543,"line_start":439,"line_end":439,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473548,"byte_end":10473551,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473556,"byte_end":10473626,"line_start":441,"line_end":441,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473631,"byte_end":10473689,"line_start":442,"line_end":442,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut msg) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473694,"byte_end":10473739,"line_start":443,"line_end":443,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473744,"byte_end":10473770,"line_start":444,"line_end":444,"column_start":5,"column_end":31}},{"value":"/                 msg.truncate(n);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473775,"byte_end":10473811,"line_start":445,"line_end":445,"column_start":5,"column_end":41}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473816,"byte_end":10473842,"line_start":446,"line_end":446,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473847,"byte_end":10473864,"line_start":447,"line_end":447,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473869,"byte_end":10473941,"line_start":448,"line_end":448,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473946,"byte_end":10473975,"line_start":449,"line_end":449,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10473980,"byte_end":10473997,"line_start":450,"line_end":450,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474002,"byte_end":10474029,"line_start":451,"line_end":451,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474034,"byte_end":10474075,"line_start":452,"line_end":452,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474080,"byte_end":10474097,"line_start":453,"line_end":453,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474102,"byte_end":10474115,"line_start":454,"line_end":454,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474120,"byte_end":10474129,"line_start":455,"line_end":455,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474134,"byte_end":10474137,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     println!(\"GOT = {:?}\", msg);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474142,"byte_end":10474178,"line_start":457,"line_end":457,"column_start":5,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474183,"byte_end":10474197,"line_start":458,"line_end":458,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474202,"byte_end":10474207,"line_start":459,"line_end":459,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474212,"byte_end":10474219,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4615},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475617,"byte_end":10475632,"line_start":495,"line_end":495,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<TcpStream>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474346,"byte_end":10474375,"line_start":466,"line_end":466,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474380,"byte_end":10474383,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for reading, this method will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474388,"byte_end":10474462,"line_start":468,"line_end":468,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474467,"byte_end":10474541,"line_start":469,"line_end":469,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for reading, `Waker::wake` will be called on the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474546,"byte_end":10474619,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474624,"byte_end":10474634,"line_start":471,"line_end":471,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474639,"byte_end":10474642,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_read_ready`, `poll_read` or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474647,"byte_end":10474715,"line_start":473,"line_end":473,"column_start":5,"column_end":73}},{"value":"/ `poll_peek`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474720,"byte_end":10474791,"line_start":474,"line_end":474,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474796,"byte_end":10474855,"line_start":475,"line_end":475,"column_start":5,"column_end":64}},{"value":"/ `poll_write_ready` retains a second, independent waker.)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474860,"byte_end":10474920,"line_start":476,"line_end":476,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474925,"byte_end":10474928,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10474933,"byte_end":10475008,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475013,"byte_end":10475088,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475093,"byte_end":10475161,"line_start":480,"line_end":480,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475166,"byte_end":10475169,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475174,"byte_end":10475192,"line_start":482,"line_end":482,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475197,"byte_end":10475200,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475205,"byte_end":10475230,"line_start":484,"line_end":484,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475235,"byte_end":10475238,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for reading.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475243,"byte_end":10475308,"line_start":486,"line_end":486,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for reading.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475313,"byte_end":10475380,"line_start":487,"line_end":487,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475385,"byte_end":10475440,"line_start":488,"line_end":488,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475445,"byte_end":10475448,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475453,"byte_end":10475465,"line_start":490,"line_end":490,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475470,"byte_end":10475473,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475478,"byte_end":10475553,"line_start":492,"line_end":492,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475558,"byte_end":10475561,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475566,"byte_end":10475605,"line_start":494,"line_end":494,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4617},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477968,"byte_end":10477976,"line_start":558,"line_end":558,"column_start":12,"column_end":20},"name":"try_read","qualname":"<TcpStream>::try_read","value":"pub fn try_read(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, returning how\n many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffer, returning how","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475765,"byte_end":10475841,"line_start":499,"line_end":499,"column_start":5,"column_end":81}},{"value":"/ many bytes were read.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475846,"byte_end":10475871,"line_start":500,"line_end":500,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475876,"byte_end":10475879,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475884,"byte_end":10475960,"line_start":502,"line_end":502,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10475965,"byte_end":10476033,"line_start":503,"line_end":503,"column_start":5,"column_end":73}},{"value":"/ `try_read()` is non-blocking, the buffer does not have to be stored by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476038,"byte_end":10476112,"line_start":504,"line_end":504,"column_start":5,"column_end":79}},{"value":"/ the async task and can exist entirely on the stack.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476117,"byte_end":10476172,"line_start":505,"line_end":505,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476177,"byte_end":10476180,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476185,"byte_end":10476255,"line_start":507,"line_end":507,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476260,"byte_end":10476263,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ [`readable()`]: TcpStream::readable()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476268,"byte_end":10476309,"line_start":509,"line_end":509,"column_start":5,"column_end":46}},{"value":"/ [`ready()`]: TcpStream::ready()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476314,"byte_end":10476349,"line_start":510,"line_end":510,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476354,"byte_end":10476357,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476362,"byte_end":10476374,"line_start":512,"line_end":512,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476379,"byte_end":10476382,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476387,"byte_end":10476458,"line_start":514,"line_end":514,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476463,"byte_end":10476539,"line_start":515,"line_end":515,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476544,"byte_end":10476618,"line_start":516,"line_end":516,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476623,"byte_end":10476672,"line_start":517,"line_end":517,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476677,"byte_end":10476680,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476685,"byte_end":10476699,"line_start":519,"line_end":519,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476704,"byte_end":10476707,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476712,"byte_end":10476725,"line_start":521,"line_end":521,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476730,"byte_end":10476760,"line_start":522,"line_end":522,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476765,"byte_end":10476791,"line_start":523,"line_end":523,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476796,"byte_end":10476812,"line_start":524,"line_end":524,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476817,"byte_end":10476820,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476825,"byte_end":10476843,"line_start":526,"line_end":526,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476848,"byte_end":10476899,"line_start":527,"line_end":527,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476904,"byte_end":10476932,"line_start":528,"line_end":528,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10476937,"byte_end":10477002,"line_start":529,"line_end":529,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477007,"byte_end":10477010,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477015,"byte_end":10477029,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477034,"byte_end":10477083,"line_start":532,"line_end":532,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477088,"byte_end":10477125,"line_start":533,"line_end":533,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477130,"byte_end":10477133,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477138,"byte_end":10477211,"line_start":535,"line_end":535,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477216,"byte_end":10477262,"line_start":536,"line_end":536,"column_start":5,"column_end":51}},{"value":"/         let mut buf = [0; 4096];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477267,"byte_end":10477303,"line_start":537,"line_end":537,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477308,"byte_end":10477311,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477316,"byte_end":10477386,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477391,"byte_end":10477449,"line_start":540,"line_end":540,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut buf) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477454,"byte_end":10477499,"line_start":541,"line_end":541,"column_start":5,"column_end":50}},{"value":"/             Ok(0) => break,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477504,"byte_end":10477535,"line_start":542,"line_end":542,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477540,"byte_end":10477566,"line_start":543,"line_end":543,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477571,"byte_end":10477620,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477625,"byte_end":10477642,"line_start":545,"line_end":545,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477647,"byte_end":10477719,"line_start":546,"line_end":546,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477724,"byte_end":10477753,"line_start":547,"line_end":547,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477758,"byte_end":10477775,"line_start":548,"line_end":548,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477780,"byte_end":10477807,"line_start":549,"line_end":549,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477812,"byte_end":10477853,"line_start":550,"line_end":550,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477858,"byte_end":10477875,"line_start":551,"line_end":551,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477880,"byte_end":10477893,"line_start":552,"line_end":552,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477898,"byte_end":10477907,"line_start":553,"line_end":553,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477912,"byte_end":10477915,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477920,"byte_end":10477934,"line_start":555,"line_end":555,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477939,"byte_end":10477944,"line_start":556,"line_end":556,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10477949,"byte_end":10477956,"line_start":557,"line_end":557,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4622},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480906,"byte_end":10480923,"line_start":636,"line_end":636,"column_start":12,"column_end":29},"name":"try_read_vectored","qualname":"<TcpStream>::try_read_vectored","value":"pub fn try_read_vectored(&Self, &mut [io::IoSliceMut]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffers, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffers, returning","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10478172,"byte_end":10478245,"line_start":566,"line_end":566,"column_start":5,"column_end":78}},{"value":"/ how many bytes were read.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10478250,"byte_end":10478279,"line_start":567,"line_end":567,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10478284,"byte_end":10478287,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Data is copied to fill each buffer in order, with the final buffer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10478292,"byte_end":10478362,"line_start":569,"line_end":569,"column_start":5,"column_end":75}},{"value":"/ written to possibly being only partially filled. This method behaves","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10478367,"byte_end":10478439,"line_start":570,"line_end":570,"column_start":5,"column_end":77}},{"value":"/ equivalently to a single call to [`try_read()`] with concatenated","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10478444,"byte_end":10478513,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ buffers.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10478518,"byte_end":10478530,"line_start":572,"line_end":572,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10478535,"byte_end":10478538,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10478543,"byte_end":10478619,"line_start":574,"line_end":574,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10478624,"byte_end":10478692,"line_start":575,"line_end":575,"column_start":5,"column_end":73}},{"value":"/ `try_read_vectored()` is non-blocking, the buffer does not have to be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10478697,"byte_end":10478770,"line_start":576,"line_end":576,"column_start":5,"column_end":78}},{"value":"/ stored by the async task and can exist entirely on the stack.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10478775,"byte_end":10478840,"line_start":577,"line_end":577,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10478845,"byte_end":10478848,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10478853,"byte_end":10478923,"line_start":579,"line_end":579,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10478928,"byte_end":10478931,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ [`try_read()`]: TcpStream::try_read()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10478936,"byte_end":10478977,"line_start":581,"line_end":581,"column_start":5,"column_end":46}},{"value":"/ [`readable()`]: TcpStream::readable()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10478982,"byte_end":10479023,"line_start":582,"line_end":582,"column_start":5,"column_end":46}},{"value":"/ [`ready()`]: TcpStream::ready()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479028,"byte_end":10479063,"line_start":583,"line_end":583,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479068,"byte_end":10479071,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479076,"byte_end":10479088,"line_start":585,"line_end":585,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479093,"byte_end":10479096,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479101,"byte_end":10479172,"line_start":587,"line_end":587,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479177,"byte_end":10479253,"line_start":588,"line_end":588,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479258,"byte_end":10479332,"line_start":589,"line_end":589,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479337,"byte_end":10479386,"line_start":590,"line_end":590,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479391,"byte_end":10479394,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479399,"byte_end":10479413,"line_start":592,"line_end":592,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479418,"byte_end":10479421,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479426,"byte_end":10479439,"line_start":594,"line_end":594,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479444,"byte_end":10479474,"line_start":595,"line_end":595,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479479,"byte_end":10479505,"line_start":596,"line_end":596,"column_start":5,"column_end":31}},{"value":"/ use std::io::{self, IoSliceMut};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479510,"byte_end":10479546,"line_start":597,"line_end":597,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479551,"byte_end":10479554,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479559,"byte_end":10479577,"line_start":599,"line_end":599,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479582,"byte_end":10479633,"line_start":600,"line_end":600,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479638,"byte_end":10479666,"line_start":601,"line_end":601,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479671,"byte_end":10479736,"line_start":602,"line_end":602,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479741,"byte_end":10479744,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479749,"byte_end":10479763,"line_start":604,"line_end":604,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479768,"byte_end":10479817,"line_start":605,"line_end":605,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479822,"byte_end":10479859,"line_start":606,"line_end":606,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479864,"byte_end":10479867,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479872,"byte_end":10479945,"line_start":608,"line_end":608,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10479950,"byte_end":10479996,"line_start":609,"line_end":609,"column_start":5,"column_end":51}},{"value":"/         let mut buf_a = [0; 512];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480001,"byte_end":10480038,"line_start":610,"line_end":610,"column_start":5,"column_end":42}},{"value":"/         let mut buf_b = [0; 1024];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480043,"byte_end":10480081,"line_start":611,"line_end":611,"column_start":5,"column_end":43}},{"value":"/         let mut bufs = [","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480086,"byte_end":10480114,"line_start":612,"line_end":612,"column_start":5,"column_end":33}},{"value":"/             IoSliceMut::new(&mut buf_a),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480119,"byte_end":10480163,"line_start":613,"line_end":613,"column_start":5,"column_end":49}},{"value":"/             IoSliceMut::new(&mut buf_b),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480168,"byte_end":10480212,"line_start":614,"line_end":614,"column_start":5,"column_end":49}},{"value":"/         ];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480217,"byte_end":10480231,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480236,"byte_end":10480239,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480244,"byte_end":10480314,"line_start":617,"line_end":617,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480319,"byte_end":10480377,"line_start":618,"line_end":618,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read_vectored(&mut bufs) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480382,"byte_end":10480437,"line_start":619,"line_end":619,"column_start":5,"column_end":60}},{"value":"/             Ok(0) => break,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480442,"byte_end":10480473,"line_start":620,"line_end":620,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480478,"byte_end":10480504,"line_start":621,"line_end":621,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480509,"byte_end":10480558,"line_start":622,"line_end":622,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480563,"byte_end":10480580,"line_start":623,"line_end":623,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480585,"byte_end":10480657,"line_start":624,"line_end":624,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480662,"byte_end":10480691,"line_start":625,"line_end":625,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480696,"byte_end":10480713,"line_start":626,"line_end":626,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480718,"byte_end":10480745,"line_start":627,"line_end":627,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480750,"byte_end":10480791,"line_start":628,"line_end":628,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480796,"byte_end":10480813,"line_start":629,"line_end":629,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480818,"byte_end":10480831,"line_start":630,"line_end":630,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480836,"byte_end":10480845,"line_start":631,"line_end":631,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480850,"byte_end":10480853,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480858,"byte_end":10480872,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480877,"byte_end":10480882,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10480887,"byte_end":10480894,"line_start":635,"line_end":635,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4908},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10483534,"byte_end":10483546,"line_start":702,"line_end":702,"column_start":16,"column_end":28},"name":"try_read_buf","qualname":"<TcpStream>::try_read_buf","value":"pub fn try_read_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4627},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485425,"byte_end":10485433,"line_start":762,"line_end":762,"column_start":18,"column_end":26},"name":"writable","qualname":"<TcpStream>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484184,"byte_end":10484227,"line_start":723,"line_end":723,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484232,"byte_end":10484235,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is usually","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484240,"byte_end":10484317,"line_start":725,"line_end":725,"column_start":5,"column_end":82}},{"value":"/ paired with `try_write()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484322,"byte_end":10484352,"line_start":726,"line_end":726,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484357,"byte_end":10484360,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484365,"byte_end":10484379,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484384,"byte_end":10484387,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484392,"byte_end":10484405,"line_start":730,"line_end":730,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484410,"byte_end":10484440,"line_start":731,"line_end":731,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484445,"byte_end":10484471,"line_start":732,"line_end":732,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484476,"byte_end":10484492,"line_start":733,"line_end":733,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484497,"byte_end":10484500,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484505,"byte_end":10484523,"line_start":735,"line_end":735,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484528,"byte_end":10484579,"line_start":736,"line_end":736,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484584,"byte_end":10484612,"line_start":737,"line_end":737,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484617,"byte_end":10484682,"line_start":738,"line_end":738,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484687,"byte_end":10484690,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484695,"byte_end":10484709,"line_start":740,"line_end":740,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484714,"byte_end":10484763,"line_start":741,"line_end":741,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484768,"byte_end":10484805,"line_start":742,"line_end":742,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484810,"byte_end":10484813,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484818,"byte_end":10484889,"line_start":744,"line_end":744,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484894,"byte_end":10484952,"line_start":745,"line_end":745,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10484957,"byte_end":10485009,"line_start":746,"line_end":746,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485014,"byte_end":10485040,"line_start":747,"line_end":747,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485045,"byte_end":10485071,"line_start":748,"line_end":748,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485076,"byte_end":10485093,"line_start":749,"line_end":749,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485098,"byte_end":10485170,"line_start":750,"line_end":750,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485175,"byte_end":10485204,"line_start":751,"line_end":751,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485209,"byte_end":10485226,"line_start":752,"line_end":752,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485231,"byte_end":10485258,"line_start":753,"line_end":753,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485263,"byte_end":10485304,"line_start":754,"line_end":754,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485309,"byte_end":10485326,"line_start":755,"line_end":755,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485331,"byte_end":10485344,"line_start":756,"line_end":756,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485349,"byte_end":10485358,"line_start":757,"line_end":757,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485363,"byte_end":10485366,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485371,"byte_end":10485385,"line_start":759,"line_end":759,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485390,"byte_end":10485395,"line_start":760,"line_end":760,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485400,"byte_end":10485407,"line_start":761,"line_end":761,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4630},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486794,"byte_end":10486810,"line_start":796,"line_end":796,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<TcpStream>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485534,"byte_end":10485564,"line_start":767,"line_end":767,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485569,"byte_end":10485572,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for writing, this method will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485577,"byte_end":10485651,"line_start":769,"line_end":769,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485656,"byte_end":10485730,"line_start":770,"line_end":770,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for writing, `Waker::wake` will be called on the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485735,"byte_end":10485808,"line_start":771,"line_end":771,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485813,"byte_end":10485823,"line_start":772,"line_end":772,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485828,"byte_end":10485831,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_write_ready` or `poll_write`, only","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485836,"byte_end":10485911,"line_start":774,"line_end":774,"column_start":5,"column_end":80}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485916,"byte_end":10485984,"line_start":775,"line_end":775,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_read_ready` retains a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10485989,"byte_end":10486061,"line_start":776,"line_end":776,"column_start":5,"column_end":77}},{"value":"/ second, independent waker.)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486066,"byte_end":10486097,"line_start":777,"line_end":777,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486102,"byte_end":10486105,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486110,"byte_end":10486185,"line_start":779,"line_end":779,"column_start":5,"column_end":80}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486190,"byte_end":10486265,"line_start":780,"line_end":780,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486270,"byte_end":10486338,"line_start":781,"line_end":781,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486343,"byte_end":10486346,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486351,"byte_end":10486369,"line_start":783,"line_end":783,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486374,"byte_end":10486377,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486382,"byte_end":10486407,"line_start":785,"line_end":785,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486412,"byte_end":10486415,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for writing.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486420,"byte_end":10486485,"line_start":787,"line_end":787,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for writing.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486490,"byte_end":10486557,"line_start":788,"line_end":788,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486562,"byte_end":10486617,"line_start":789,"line_end":789,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486622,"byte_end":10486625,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486630,"byte_end":10486642,"line_start":791,"line_end":791,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486647,"byte_end":10486650,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486655,"byte_end":10486730,"line_start":793,"line_end":793,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486735,"byte_end":10486738,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486743,"byte_end":10486782,"line_start":795,"line_end":795,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4632},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488539,"byte_end":10488548,"line_start":848,"line_end":848,"column_start":12,"column_end":21},"name":"try_write","qualname":"<TcpStream>::try_write","value":"pub fn try_write(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write a buffer to the stream, returning how many bytes were\n written.","sig":null,"attributes":[{"value":"/ Try to write a buffer to the stream, returning how many bytes were","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10486944,"byte_end":10487014,"line_start":800,"line_end":800,"column_start":5,"column_end":75}},{"value":"/ written.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487019,"byte_end":10487031,"line_start":801,"line_end":801,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487036,"byte_end":10487039,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ The function will attempt to write the entire contents of `buf`, but","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487044,"byte_end":10487116,"line_start":803,"line_end":803,"column_start":5,"column_end":77}},{"value":"/ only part of the buffer may be written.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487121,"byte_end":10487164,"line_start":804,"line_end":804,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487169,"byte_end":10487172,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487177,"byte_end":10487231,"line_start":806,"line_end":806,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487236,"byte_end":10487239,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487244,"byte_end":10487256,"line_start":808,"line_end":808,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487261,"byte_end":10487264,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487269,"byte_end":10487343,"line_start":810,"line_end":810,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487348,"byte_end":10487418,"line_start":811,"line_end":811,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487423,"byte_end":10487472,"line_start":812,"line_end":812,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487477,"byte_end":10487480,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487485,"byte_end":10487499,"line_start":814,"line_end":814,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487504,"byte_end":10487507,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487512,"byte_end":10487525,"line_start":816,"line_end":816,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487530,"byte_end":10487560,"line_start":817,"line_end":817,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487565,"byte_end":10487591,"line_start":818,"line_end":818,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487596,"byte_end":10487612,"line_start":819,"line_end":819,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487617,"byte_end":10487620,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487625,"byte_end":10487643,"line_start":821,"line_end":821,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487648,"byte_end":10487699,"line_start":822,"line_end":822,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487704,"byte_end":10487732,"line_start":823,"line_end":823,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487737,"byte_end":10487802,"line_start":824,"line_end":824,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487807,"byte_end":10487810,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487815,"byte_end":10487829,"line_start":826,"line_end":826,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487834,"byte_end":10487883,"line_start":827,"line_end":827,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487888,"byte_end":10487925,"line_start":828,"line_end":828,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487930,"byte_end":10487933,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10487938,"byte_end":10488009,"line_start":830,"line_end":830,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488014,"byte_end":10488072,"line_start":831,"line_end":831,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488077,"byte_end":10488129,"line_start":832,"line_end":832,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488134,"byte_end":10488160,"line_start":833,"line_end":833,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488165,"byte_end":10488191,"line_start":834,"line_end":834,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488196,"byte_end":10488213,"line_start":835,"line_end":835,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488218,"byte_end":10488290,"line_start":836,"line_end":836,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488295,"byte_end":10488324,"line_start":837,"line_end":837,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488329,"byte_end":10488346,"line_start":838,"line_end":838,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488351,"byte_end":10488378,"line_start":839,"line_end":839,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488383,"byte_end":10488424,"line_start":840,"line_end":840,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488429,"byte_end":10488446,"line_start":841,"line_end":841,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488451,"byte_end":10488464,"line_start":842,"line_end":842,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488469,"byte_end":10488478,"line_start":843,"line_end":843,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488483,"byte_end":10488486,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488491,"byte_end":10488505,"line_start":845,"line_end":845,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488510,"byte_end":10488515,"line_start":846,"line_end":846,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488520,"byte_end":10488527,"line_start":847,"line_end":847,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4637},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490608,"byte_end":10490626,"line_start":910,"line_end":910,"column_start":12,"column_end":30},"name":"try_write_vectored","qualname":"<TcpStream>::try_write_vectored","value":"pub fn try_write_vectored(&Self, &[io::IoSlice]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write several buffers to the stream, returning how many bytes\n were written.","sig":null,"attributes":[{"value":"/ Try to write several buffers to the stream, returning how many bytes","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488742,"byte_end":10488814,"line_start":856,"line_end":856,"column_start":5,"column_end":77}},{"value":"/ were written.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488819,"byte_end":10488836,"line_start":857,"line_end":857,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488841,"byte_end":10488844,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ Data is written from each buffer in order, with the final buffer read","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488849,"byte_end":10488922,"line_start":859,"line_end":859,"column_start":5,"column_end":78}},{"value":"/ from possible being only partially consumed. This method behaves","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10488927,"byte_end":10488995,"line_start":860,"line_end":860,"column_start":5,"column_end":73}},{"value":"/ equivalently to a single call to [`try_write()`] with concatenated","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489000,"byte_end":10489070,"line_start":861,"line_end":861,"column_start":5,"column_end":75}},{"value":"/ buffers.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489075,"byte_end":10489087,"line_start":862,"line_end":862,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489092,"byte_end":10489095,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489100,"byte_end":10489154,"line_start":864,"line_end":864,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489159,"byte_end":10489162,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ [`try_write()`]: TcpStream::try_write()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489167,"byte_end":10489210,"line_start":866,"line_end":866,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489215,"byte_end":10489218,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489223,"byte_end":10489235,"line_start":868,"line_end":868,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489240,"byte_end":10489243,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489248,"byte_end":10489322,"line_start":870,"line_end":870,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489327,"byte_end":10489397,"line_start":871,"line_end":871,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489402,"byte_end":10489451,"line_start":872,"line_end":872,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489456,"byte_end":10489459,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489464,"byte_end":10489478,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489483,"byte_end":10489486,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489491,"byte_end":10489504,"line_start":876,"line_end":876,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489509,"byte_end":10489539,"line_start":877,"line_end":877,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489544,"byte_end":10489570,"line_start":878,"line_end":878,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489575,"byte_end":10489591,"line_start":879,"line_end":879,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489596,"byte_end":10489599,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489604,"byte_end":10489622,"line_start":881,"line_end":881,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489627,"byte_end":10489678,"line_start":882,"line_end":882,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489683,"byte_end":10489711,"line_start":883,"line_end":883,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489716,"byte_end":10489781,"line_start":884,"line_end":884,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489786,"byte_end":10489789,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/     let bufs = [io::IoSlice::new(b\"hello \"), io::IoSlice::new(b\"world\")];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489794,"byte_end":10489871,"line_start":886,"line_end":886,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489876,"byte_end":10489879,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489884,"byte_end":10489898,"line_start":888,"line_end":888,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489903,"byte_end":10489952,"line_start":889,"line_end":889,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489957,"byte_end":10489994,"line_start":890,"line_end":890,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10489999,"byte_end":10490002,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490007,"byte_end":10490078,"line_start":892,"line_end":892,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490083,"byte_end":10490141,"line_start":893,"line_end":893,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write_vectored(&bufs) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490146,"byte_end":10490198,"line_start":894,"line_end":894,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490203,"byte_end":10490229,"line_start":895,"line_end":895,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490234,"byte_end":10490260,"line_start":896,"line_end":896,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490265,"byte_end":10490282,"line_start":897,"line_end":897,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490287,"byte_end":10490359,"line_start":898,"line_end":898,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490364,"byte_end":10490393,"line_start":899,"line_end":899,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490398,"byte_end":10490415,"line_start":900,"line_end":900,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490420,"byte_end":10490447,"line_start":901,"line_end":901,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490452,"byte_end":10490493,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490498,"byte_end":10490515,"line_start":903,"line_end":903,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490520,"byte_end":10490533,"line_start":904,"line_end":904,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490538,"byte_end":10490547,"line_start":905,"line_end":905,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490552,"byte_end":10490555,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490560,"byte_end":10490574,"line_start":907,"line_end":907,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490579,"byte_end":10490584,"line_start":908,"line_end":908,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490589,"byte_end":10490596,"line_start":909,"line_end":909,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4642},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10492101,"byte_end":10492105,"line_start":955,"line_end":955,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490844,"byte_end":10490914,"line_start":918,"line_end":918,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490919,"byte_end":10490988,"line_start":919,"line_end":919,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10490993,"byte_end":10491032,"line_start":920,"line_end":920,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491037,"byte_end":10491040,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491045,"byte_end":10491119,"line_start":922,"line_end":922,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491124,"byte_end":10491184,"line_start":923,"line_end":923,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491189,"byte_end":10491192,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491197,"byte_end":10491211,"line_start":925,"line_end":925,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491216,"byte_end":10491219,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491224,"byte_end":10491237,"line_start":927,"line_end":927,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491242,"byte_end":10491272,"line_start":928,"line_end":928,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491277,"byte_end":10491309,"line_start":929,"line_end":929,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491314,"byte_end":10491340,"line_start":930,"line_end":930,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491345,"byte_end":10491348,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491353,"byte_end":10491371,"line_start":932,"line_end":932,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491376,"byte_end":10491427,"line_start":933,"line_end":933,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491432,"byte_end":10491460,"line_start":934,"line_end":934,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491465,"byte_end":10491534,"line_start":935,"line_end":935,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491539,"byte_end":10491542,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491547,"byte_end":10491576,"line_start":937,"line_end":937,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491581,"byte_end":10491610,"line_start":938,"line_end":938,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491615,"byte_end":10491618,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491623,"byte_end":10491650,"line_start":940,"line_end":940,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491655,"byte_end":10491699,"line_start":941,"line_end":941,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491704,"byte_end":10491707,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491712,"byte_end":10491736,"line_start":943,"line_end":943,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491741,"byte_end":10491797,"line_start":944,"line_end":944,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491802,"byte_end":10491841,"line_start":945,"line_end":945,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491846,"byte_end":10491849,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491854,"byte_end":10491868,"line_start":947,"line_end":947,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491873,"byte_end":10491878,"line_start":948,"line_end":948,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491883,"byte_end":10491890,"line_start":949,"line_end":949,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491895,"byte_end":10491898,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491903,"byte_end":10491968,"line_start":951,"line_end":951,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491973,"byte_end":10491976,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10491981,"byte_end":10492027,"line_start":953,"line_end":953,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10492032,"byte_end":10492083,"line_start":954,"line_end":954,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4647},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493200,"byte_end":10493207,"line_start":989,"line_end":989,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10492668,"byte_end":10492730,"line_start":971,"line_end":971,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10492735,"byte_end":10492738,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10492743,"byte_end":10492807,"line_start":973,"line_end":973,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10492812,"byte_end":10492815,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10492820,"byte_end":10492863,"line_start":975,"line_end":975,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10492868,"byte_end":10492871,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10492876,"byte_end":10492890,"line_start":977,"line_end":977,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10492895,"byte_end":10492898,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10492903,"byte_end":10492916,"line_start":979,"line_end":979,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10492921,"byte_end":10492951,"line_start":980,"line_end":980,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10492956,"byte_end":10492959,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10492964,"byte_end":10493028,"line_start":982,"line_end":982,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493033,"byte_end":10493094,"line_start":983,"line_end":983,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493099,"byte_end":10493102,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493107,"byte_end":10493147,"line_start":985,"line_end":985,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493152,"byte_end":10493164,"line_start":986,"line_end":986,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493169,"byte_end":10493176,"line_start":987,"line_end":987,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493181,"byte_end":10493188,"line_start":988,"line_end":988,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4648},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494004,"byte_end":10494015,"line_start":1013,"line_end":1013,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493274,"byte_end":10493336,"line_start":993,"line_end":993,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493341,"byte_end":10493344,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493349,"byte_end":10493418,"line_start":995,"line_end":995,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493423,"byte_end":10493496,"line_start":996,"line_end":996,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493501,"byte_end":10493574,"line_start":997,"line_end":997,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493579,"byte_end":10493654,"line_start":998,"line_end":998,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493659,"byte_end":10493677,"line_start":999,"line_end":999,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493682,"byte_end":10493685,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493690,"byte_end":10493704,"line_start":1001,"line_end":1001,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493709,"byte_end":10493712,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493717,"byte_end":10493730,"line_start":1003,"line_end":1003,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493735,"byte_end":10493765,"line_start":1004,"line_end":1004,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493770,"byte_end":10493773,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493778,"byte_end":10493842,"line_start":1006,"line_end":1006,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493847,"byte_end":10493908,"line_start":1007,"line_end":1007,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493913,"byte_end":10493916,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493921,"byte_end":10493951,"line_start":1009,"line_end":1009,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493956,"byte_end":10493968,"line_start":1010,"line_end":1010,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493973,"byte_end":10493980,"line_start":1011,"line_end":1011,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10493985,"byte_end":10493992,"line_start":1012,"line_end":1012,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4649},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494660,"byte_end":10494666,"line_start":1036,"line_end":1036,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494106,"byte_end":10494178,"line_start":1017,"line_end":1017,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494183,"byte_end":10494194,"line_start":1018,"line_end":1018,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494199,"byte_end":10494202,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494207,"byte_end":10494270,"line_start":1020,"line_end":1020,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494275,"byte_end":10494278,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494283,"byte_end":10494324,"line_start":1022,"line_end":1022,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494329,"byte_end":10494332,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494337,"byte_end":10494351,"line_start":1024,"line_end":1024,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494356,"byte_end":10494359,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494364,"byte_end":10494377,"line_start":1026,"line_end":1026,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494382,"byte_end":10494412,"line_start":1027,"line_end":1027,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494417,"byte_end":10494420,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494425,"byte_end":10494489,"line_start":1029,"line_end":1029,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494494,"byte_end":10494555,"line_start":1030,"line_end":1030,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494560,"byte_end":10494563,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494568,"byte_end":10494607,"line_start":1032,"line_end":1032,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494612,"byte_end":10494624,"line_start":1033,"line_end":1033,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494629,"byte_end":10494636,"line_start":1034,"line_end":1034,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494641,"byte_end":10494648,"line_start":1035,"line_end":1035,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4650},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10495645,"byte_end":10495655,"line_start":1063,"line_end":1063,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the SO_LINGER option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the SO_LINGER option.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494821,"byte_end":10494897,"line_start":1042,"line_end":1042,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494902,"byte_end":10494905,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages and the stream is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10494910,"byte_end":10495003,"line_start":1044,"line_end":1044,"column_start":5,"column_end":98}},{"value":"/ closed. If SO_LINGER is set, the system shall block the process until it can transmit the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10495008,"byte_end":10495101,"line_start":1045,"line_end":1045,"column_start":5,"column_end":98}},{"value":"/ data or until the time expires.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10495106,"byte_end":10495141,"line_start":1046,"line_end":1046,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10495146,"byte_end":10495149,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ If SO_LINGER is not specified, and the stream is closed, the system handles the call in a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10495154,"byte_end":10495247,"line_start":1048,"line_end":1048,"column_start":5,"column_end":98}},{"value":"/ way that allows the process to continue as quickly as possible.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10495252,"byte_end":10495319,"line_start":1049,"line_end":1049,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10495324,"byte_end":10495327,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10495332,"byte_end":10495346,"line_start":1051,"line_end":1051,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10495351,"byte_end":10495354,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10495359,"byte_end":10495372,"line_start":1053,"line_end":1053,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10495377,"byte_end":10495407,"line_start":1054,"line_end":1054,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10495412,"byte_end":10495415,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10495420,"byte_end":10495484,"line_start":1056,"line_end":1056,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10495489,"byte_end":10495550,"line_start":1057,"line_end":1057,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10495555,"byte_end":10495558,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10495563,"byte_end":10495592,"line_start":1059,"line_end":1059,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10495597,"byte_end":10495609,"line_start":1060,"line_end":1060,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10495614,"byte_end":10495621,"line_start":1061,"line_end":1061,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10495626,"byte_end":10495633,"line_start":1062,"line_end":1062,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4659},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496754,"byte_end":10496757,"line_start":1101,"line_end":1101,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496242,"byte_end":10496300,"line_start":1083,"line_end":1083,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496305,"byte_end":10496308,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496313,"byte_end":10496373,"line_start":1085,"line_end":1085,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496378,"byte_end":10496381,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496386,"byte_end":10496421,"line_start":1087,"line_end":1087,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496426,"byte_end":10496429,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496434,"byte_end":10496448,"line_start":1089,"line_end":1089,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496453,"byte_end":10496456,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496461,"byte_end":10496474,"line_start":1091,"line_end":1091,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496479,"byte_end":10496509,"line_start":1092,"line_end":1092,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496514,"byte_end":10496517,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496522,"byte_end":10496586,"line_start":1094,"line_end":1094,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496591,"byte_end":10496652,"line_start":1095,"line_end":1095,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496657,"byte_end":10496660,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496665,"byte_end":10496701,"line_start":1097,"line_end":1097,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496706,"byte_end":10496718,"line_start":1098,"line_end":1098,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496723,"byte_end":10496730,"line_start":1099,"line_end":1099,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496735,"byte_end":10496742,"line_start":1100,"line_end":1100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4660},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497314,"byte_end":10497321,"line_start":1122,"line_end":1122,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496819,"byte_end":10496877,"line_start":1105,"line_end":1105,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496882,"byte_end":10496885,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496890,"byte_end":10496966,"line_start":1107,"line_end":1107,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496971,"byte_end":10496992,"line_start":1108,"line_end":1108,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10496997,"byte_end":10497000,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497005,"byte_end":10497019,"line_start":1110,"line_end":1110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497024,"byte_end":10497027,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497032,"byte_end":10497045,"line_start":1112,"line_end":1112,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497050,"byte_end":10497080,"line_start":1113,"line_end":1113,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497085,"byte_end":10497088,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497093,"byte_end":10497157,"line_start":1115,"line_end":1115,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497162,"byte_end":10497223,"line_start":1116,"line_end":1116,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497228,"byte_end":10497231,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497236,"byte_end":10497261,"line_start":1118,"line_end":1118,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497266,"byte_end":10497278,"line_start":1119,"line_end":1119,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497283,"byte_end":10497290,"line_start":1120,"line_end":1120,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497295,"byte_end":10497302,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4661},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497913,"byte_end":10497918,"line_start":1136,"line_end":1136,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497536,"byte_end":10497572,"line_start":1128,"line_end":1128,"column_start":5,"column_end":41}},{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497577,"byte_end":10497654,"line_start":1129,"line_end":1129,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497659,"byte_end":10497705,"line_start":1130,"line_end":1130,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497710,"byte_end":10497713,"line_start":1131,"line_end":1131,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497718,"byte_end":10497797,"line_start":1132,"line_end":1132,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497802,"byte_end":10497845,"line_start":1133,"line_end":1133,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497850,"byte_end":10497853,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10497858,"byte_end":10497901,"line_start":1135,"line_end":1135,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4663},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10498567,"byte_end":10498577,"line_start":1151,"line_end":1151,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10498003,"byte_end":10498080,"line_start":1140,"line_end":1140,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10498085,"byte_end":10498131,"line_start":1141,"line_end":1141,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10498136,"byte_end":10498139,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10498144,"byte_end":10498222,"line_start":1143,"line_end":1143,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10498227,"byte_end":10498275,"line_start":1144,"line_end":1144,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10498280,"byte_end":10498283,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the TCP","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10498288,"byte_end":10498366,"line_start":1146,"line_end":1146,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling [`shutdown()`] on the `TcpStream`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10498371,"byte_end":10498447,"line_start":1147,"line_end":1147,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10498452,"byte_end":10498455,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10498460,"byte_end":10498493,"line_start":1149,"line_end":1149,"column_start":5,"column_end":38}},{"value":"/ [`shutdown()`]: fn@crate::io::AsyncWriteExt::shutdown","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10498498,"byte_end":10498555,"line_start":1150,"line_end":1150,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4917},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506095,"byte_end":10506104,"line_start":122,"line_end":122,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":4918}],"decl_id":null,"docs":" A UDP socket","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21942,"byte_end":21965,"line_start":168,"line_end":168,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4750},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506641,"byte_end":10506645,"line_start":145,"line_end":145,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506183,"byte_end":10506255,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506260,"byte_end":10506284,"line_start":129,"line_end":129,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506289,"byte_end":10506292,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506297,"byte_end":10506310,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506315,"byte_end":10506318,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506323,"byte_end":10506336,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506341,"byte_end":10506371,"line_start":134,"line_end":134,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506376,"byte_end":10506392,"line_start":135,"line_end":135,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506397,"byte_end":10506400,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506405,"byte_end":10506423,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506428,"byte_end":10506467,"line_start":138,"line_end":138,"column_start":5,"column_end":44}},{"value":"/     let sock = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506472,"byte_end":10506530,"line_start":139,"line_end":139,"column_start":5,"column_end":63}},{"value":"/     // use `sock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506535,"byte_end":10506556,"line_start":140,"line_end":140,"column_start":5,"column_end":26}},{"value":"/ #   let _ = sock;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506561,"byte_end":10506582,"line_start":141,"line_end":141,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506587,"byte_end":10506601,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506606,"byte_end":10506611,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506616,"byte_end":10506623,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4757},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508884,"byte_end":10508892,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10507478,"byte_end":10507552,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10507557,"byte_end":10507560,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10507565,"byte_end":10507635,"line_start":176,"line_end":176,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10507640,"byte_end":10507716,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10507721,"byte_end":10507792,"line_start":178,"line_end":178,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10507797,"byte_end":10507819,"line_start":179,"line_end":179,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10507824,"byte_end":10507827,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with socket2's `Socket` interface to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10507832,"byte_end":10507904,"line_start":181,"line_end":181,"column_start":5,"column_end":77}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10507909,"byte_end":10507984,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10507989,"byte_end":10508042,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508047,"byte_end":10508050,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508055,"byte_end":10508067,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508072,"byte_end":10508075,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508080,"byte_end":10508140,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508145,"byte_end":10508148,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508153,"byte_end":10508223,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508228,"byte_end":10508301,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508306,"byte_end":10508386,"line_start":191,"line_end":191,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508391,"byte_end":10508394,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508399,"byte_end":10508412,"line_start":193,"line_end":193,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508417,"byte_end":10508420,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508425,"byte_end":10508438,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508443,"byte_end":10508473,"line_start":196,"line_end":196,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508478,"byte_end":10508515,"line_start":197,"line_end":197,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508520,"byte_end":10508523,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508528,"byte_end":10508548,"line_start":199,"line_end":199,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508553,"byte_end":10508594,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508599,"byte_end":10508660,"line_start":201,"line_end":201,"column_start":5,"column_end":66}},{"value":"/ let std_sock = std::net::UdpSocket::bind(addr)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508665,"byte_end":10508717,"line_start":202,"line_end":202,"column_start":5,"column_end":57}},{"value":"/ std_sock.set_nonblocking(true)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508722,"byte_end":10508758,"line_start":203,"line_end":203,"column_start":5,"column_end":41}},{"value":"/ let sock = UdpSocket::from_std(std_sock)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508763,"byte_end":10508809,"line_start":204,"line_end":204,"column_start":5,"column_end":51}},{"value":"/ // use `sock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508814,"byte_end":10508831,"line_start":205,"line_end":205,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508836,"byte_end":10508848,"line_start":206,"line_end":206,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508853,"byte_end":10508860,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10508865,"byte_end":10508872,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4758},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509862,"byte_end":10509870,"line_start":236,"line_end":236,"column_start":12,"column_end":20},"name":"into_std","qualname":"<UdpSocket>::into_std","value":"pub fn into_std(Self) -> io::Result<std::net::UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::UdpSocket`] into a [`std::net::UdpSocket`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::UdpSocket`] into a [`std::net::UdpSocket`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509038,"byte_end":10509106,"line_start":214,"line_end":214,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509111,"byte_end":10509114,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::net::UdpSocket`] will have nonblocking mode set as","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509119,"byte_end":10509193,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ `true`.  Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509198,"byte_end":10509273,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509278,"byte_end":10509281,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509286,"byte_end":10509300,"line_start":219,"line_end":219,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509305,"byte_end":10509308,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509313,"byte_end":10509331,"line_start":221,"line_end":221,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509336,"byte_end":10509362,"line_start":222,"line_end":222,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509367,"byte_end":10509370,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509375,"byte_end":10509393,"line_start":224,"line_end":224,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509398,"byte_end":10509449,"line_start":225,"line_end":225,"column_start":5,"column_end":56}},{"value":"/     let tokio_socket = tokio::net::UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509454,"byte_end":10509531,"line_start":226,"line_end":226,"column_start":5,"column_end":82}},{"value":"/     let std_socket = tokio_socket.into_std()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509536,"byte_end":10509586,"line_start":227,"line_end":227,"column_start":5,"column_end":55}},{"value":"/     std_socket.set_nonblocking(false)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509591,"byte_end":10509634,"line_start":228,"line_end":228,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509639,"byte_end":10509653,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509658,"byte_end":10509663,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509668,"byte_end":10509675,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509680,"byte_end":10509683,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ [`tokio::net::UdpSocket`]: UdpSocket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509688,"byte_end":10509728,"line_start":233,"line_end":233,"column_start":5,"column_end":45}},{"value":"/ [`std::net::UdpSocket`]: std::net::UdpSocket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509733,"byte_end":10509781,"line_start":234,"line_end":234,"column_start":5,"column_end":53}},{"value":"/ [`set_nonblocking`]: fn@std::net::UdpSocket::set_nonblocking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10509786,"byte_end":10509850,"line_start":235,"line_end":235,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4768},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511036,"byte_end":10511046,"line_start":273,"line_end":273,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10510510,"byte_end":10510569,"line_start":256,"line_end":256,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10510574,"byte_end":10510577,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10510582,"byte_end":10510595,"line_start":258,"line_end":258,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10510600,"byte_end":10510603,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10510608,"byte_end":10510621,"line_start":260,"line_end":260,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10510626,"byte_end":10510656,"line_start":261,"line_end":261,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10510661,"byte_end":10510698,"line_start":262,"line_end":262,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10510703,"byte_end":10510706,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10510711,"byte_end":10510731,"line_start":264,"line_end":264,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10510736,"byte_end":10510777,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10510782,"byte_end":10510843,"line_start":266,"line_end":266,"column_start":5,"column_end":66}},{"value":"/ let sock = UdpSocket::bind(addr).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10510848,"byte_end":10510892,"line_start":267,"line_end":267,"column_start":5,"column_end":49}},{"value":"/ // the address the socket is bound to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10510897,"byte_end":10510938,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ let local_addr = sock.local_addr()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10510943,"byte_end":10510983,"line_start":269,"line_end":269,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10510988,"byte_end":10511000,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511005,"byte_end":10511012,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511017,"byte_end":10511024,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4769},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511966,"byte_end":10511973,"line_start":301,"line_end":301,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511122,"byte_end":10511196,"line_start":277,"line_end":277,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511201,"byte_end":10511274,"line_start":278,"line_end":278,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511279,"byte_end":10511290,"line_start":279,"line_end":279,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511295,"byte_end":10511298,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511303,"byte_end":10511316,"line_start":281,"line_end":281,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511321,"byte_end":10511324,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511329,"byte_end":10511342,"line_start":283,"line_end":283,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511347,"byte_end":10511377,"line_start":284,"line_end":284,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511382,"byte_end":10511419,"line_start":285,"line_end":285,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511424,"byte_end":10511427,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511432,"byte_end":10511452,"line_start":287,"line_end":287,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511457,"byte_end":10511498,"line_start":288,"line_end":288,"column_start":5,"column_end":46}},{"value":"/ let sock = UdpSocket::bind(\"0.0.0.0:8080\".parse::<SocketAddr>().unwrap()).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511503,"byte_end":10511588,"line_start":289,"line_end":289,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511593,"byte_end":10511596,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let remote_addr = \"127.0.0.1:59600\".parse::<SocketAddr>().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511601,"byte_end":10511672,"line_start":291,"line_end":291,"column_start":5,"column_end":76}},{"value":"/ sock.connect(remote_addr).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511677,"byte_end":10511714,"line_start":292,"line_end":292,"column_start":5,"column_end":42}},{"value":"/ let mut buf = [0u8; 32];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511719,"byte_end":10511747,"line_start":293,"line_end":293,"column_start":5,"column_end":33}},{"value":"/ // recv from remote_addr","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511752,"byte_end":10511780,"line_start":294,"line_end":294,"column_start":5,"column_end":33}},{"value":"/ let len = sock.recv(&mut buf).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511785,"byte_end":10511826,"line_start":295,"line_end":295,"column_start":5,"column_end":46}},{"value":"/ // send to remote_addr","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511831,"byte_end":10511857,"line_start":296,"line_end":296,"column_start":5,"column_end":31}},{"value":"/ let _len = sock.send(&buf[..len]).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511862,"byte_end":10511907,"line_start":297,"line_end":297,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511912,"byte_end":10511924,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511929,"byte_end":10511936,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10511941,"byte_end":10511948,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4774},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514780,"byte_end":10514785,"line_start":379,"line_end":379,"column_start":18,"column_end":23},"name":"ready","qualname":"<UdpSocket>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10512496,"byte_end":10512543,"line_start":320,"line_end":320,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10512548,"byte_end":10512551,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_recv()` or `try_send()`. It","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10512556,"byte_end":10512629,"line_start":322,"line_end":322,"column_start":5,"column_end":78}},{"value":"/ can be used to concurrently recv / send to the same socket on a single","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10512634,"byte_end":10512708,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ task without splitting the socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10512713,"byte_end":10512751,"line_start":324,"line_end":324,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10512756,"byte_end":10512759,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being ready. This is a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10512764,"byte_end":10512835,"line_start":326,"line_end":326,"column_start":5,"column_end":76}},{"value":"/ false-positive and attempting an operation will return with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10512840,"byte_end":10512903,"line_start":327,"line_end":327,"column_start":5,"column_end":68}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10512908,"byte_end":10512940,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10512945,"byte_end":10512948,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10512953,"byte_end":10512967,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10512972,"byte_end":10512975,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Concurrently receive from and send to the socket on the same task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10512980,"byte_end":10513049,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/ without splitting.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513054,"byte_end":10513076,"line_start":333,"line_end":333,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513081,"byte_end":10513084,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513089,"byte_end":10513102,"line_start":335,"line_end":335,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, Interest};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513107,"byte_end":10513143,"line_start":336,"line_end":336,"column_start":5,"column_end":41}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513148,"byte_end":10513178,"line_start":337,"line_end":337,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513183,"byte_end":10513186,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513191,"byte_end":10513209,"line_start":339,"line_end":339,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513214,"byte_end":10513253,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513258,"byte_end":10513320,"line_start":341,"line_end":341,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513325,"byte_end":10513373,"line_start":342,"line_end":342,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513378,"byte_end":10513381,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513386,"byte_end":10513400,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/         let ready = socket.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513405,"byte_end":10513490,"line_start":345,"line_end":345,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513495,"byte_end":10513498,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513503,"byte_end":10513539,"line_start":347,"line_end":347,"column_start":5,"column_end":41}},{"value":"/             // The buffer is **not** included in the async task and will only exist","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513544,"byte_end":10513631,"line_start":348,"line_end":348,"column_start":5,"column_end":92}},{"value":"/             // on the stack.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513636,"byte_end":10513668,"line_start":349,"line_end":349,"column_start":5,"column_end":37}},{"value":"/             let mut data = [0; 1024];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513673,"byte_end":10513714,"line_start":350,"line_end":350,"column_start":5,"column_end":46}},{"value":"/             match socket.try_recv(&mut data[..]) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513719,"byte_end":10513773,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/                 Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513778,"byte_end":10513808,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/                     println!(\"received {:?}\", &data[..n]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513813,"byte_end":10513875,"line_start":353,"line_end":353,"column_start":5,"column_end":67}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513880,"byte_end":10513901,"line_start":354,"line_end":354,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513906,"byte_end":10513953,"line_start":355,"line_end":355,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10513958,"byte_end":10514035,"line_start":356,"line_end":356,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514040,"byte_end":10514071,"line_start":357,"line_end":357,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514076,"byte_end":10514114,"line_start":358,"line_end":358,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514119,"byte_end":10514140,"line_start":359,"line_end":359,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514145,"byte_end":10514162,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514167,"byte_end":10514180,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514185,"byte_end":10514188,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514193,"byte_end":10514229,"line_start":363,"line_end":363,"column_start":5,"column_end":41}},{"value":"/             // Write some data","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514234,"byte_end":10514268,"line_start":364,"line_end":364,"column_start":5,"column_end":39}},{"value":"/             match socket.try_send(b\"hello world\") {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514273,"byte_end":10514328,"line_start":365,"line_end":365,"column_start":5,"column_end":60}},{"value":"/                 Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514333,"byte_end":10514363,"line_start":366,"line_end":366,"column_start":5,"column_end":35}},{"value":"/                     println!(\"sent {} bytes\", n);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514368,"byte_end":10514421,"line_start":367,"line_end":367,"column_start":5,"column_end":58}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514426,"byte_end":10514447,"line_start":368,"line_end":368,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514452,"byte_end":10514499,"line_start":369,"line_end":369,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514504,"byte_end":10514581,"line_start":370,"line_end":370,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514586,"byte_end":10514617,"line_start":371,"line_end":371,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514622,"byte_end":10514660,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514665,"byte_end":10514686,"line_start":373,"line_end":373,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514691,"byte_end":10514708,"line_start":374,"line_end":374,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514713,"byte_end":10514726,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514731,"byte_end":10514740,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514745,"byte_end":10514750,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514755,"byte_end":10514762,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4777},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516387,"byte_end":10516395,"line_start":427,"line_end":427,"column_start":18,"column_end":26},"name":"writable","qualname":"<UdpSocket>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514942,"byte_end":10514985,"line_start":384,"line_end":384,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514990,"byte_end":10514993,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10514998,"byte_end":10515067,"line_start":386,"line_end":386,"column_start":5,"column_end":74}},{"value":"/ usually paired with `try_send()` or `try_send_to()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515072,"byte_end":10515128,"line_start":387,"line_end":387,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515133,"byte_end":10515136,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being writable. This is a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515141,"byte_end":10515215,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_send()` will return with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515220,"byte_end":10515285,"line_start":390,"line_end":390,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515290,"byte_end":10515322,"line_start":391,"line_end":391,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515327,"byte_end":10515330,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515335,"byte_end":10515349,"line_start":393,"line_end":393,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515354,"byte_end":10515357,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515362,"byte_end":10515375,"line_start":395,"line_end":395,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515380,"byte_end":10515410,"line_start":396,"line_end":396,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515415,"byte_end":10515431,"line_start":397,"line_end":397,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515436,"byte_end":10515439,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515444,"byte_end":10515462,"line_start":399,"line_end":399,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515467,"byte_end":10515506,"line_start":400,"line_end":400,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515511,"byte_end":10515533,"line_start":401,"line_end":401,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515538,"byte_end":10515600,"line_start":402,"line_end":402,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515605,"byte_end":10515653,"line_start":403,"line_end":403,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515658,"byte_end":10515661,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515666,"byte_end":10515680,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515685,"byte_end":10515734,"line_start":406,"line_end":406,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515739,"byte_end":10515776,"line_start":407,"line_end":407,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515781,"byte_end":10515784,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515789,"byte_end":10515859,"line_start":409,"line_end":409,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515864,"byte_end":10515922,"line_start":410,"line_end":410,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515927,"byte_end":10515978,"line_start":411,"line_end":411,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10515983,"byte_end":10516009,"line_start":412,"line_end":412,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516014,"byte_end":10516040,"line_start":413,"line_end":413,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516045,"byte_end":10516062,"line_start":414,"line_end":414,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516067,"byte_end":10516139,"line_start":415,"line_end":415,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516144,"byte_end":10516173,"line_start":416,"line_end":416,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516178,"byte_end":10516195,"line_start":417,"line_end":417,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516200,"byte_end":10516227,"line_start":418,"line_end":418,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516232,"byte_end":10516266,"line_start":419,"line_end":419,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516271,"byte_end":10516288,"line_start":420,"line_end":420,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516293,"byte_end":10516306,"line_start":421,"line_end":421,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516311,"byte_end":10516320,"line_start":422,"line_end":422,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516325,"byte_end":10516328,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516333,"byte_end":10516347,"line_start":424,"line_end":424,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516352,"byte_end":10516357,"line_start":425,"line_end":425,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516362,"byte_end":10516369,"line_start":426,"line_end":426,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4780},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517415,"byte_end":10517419,"line_start":463,"line_end":463,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address that the socket is\n connected to.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address that the socket is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516496,"byte_end":10516565,"line_start":432,"line_end":432,"column_start":5,"column_end":74}},{"value":"/ connected to.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516570,"byte_end":10516587,"line_start":433,"line_end":433,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516592,"byte_end":10516595,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516600,"byte_end":10516672,"line_start":435,"line_end":435,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516677,"byte_end":10516734,"line_start":436,"line_end":436,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516739,"byte_end":10516742,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516747,"byte_end":10516784,"line_start":438,"line_end":438,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516789,"byte_end":10516792,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516797,"byte_end":10516809,"line_start":440,"line_end":440,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516814,"byte_end":10516817,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ On success, the number of bytes sent is returned, otherwise, the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516822,"byte_end":10516890,"line_start":442,"line_end":442,"column_start":5,"column_end":73}},{"value":"/ encountered error is returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516895,"byte_end":10516929,"line_start":443,"line_end":443,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516934,"byte_end":10516937,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516942,"byte_end":10516956,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516961,"byte_end":10516964,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516969,"byte_end":10516982,"line_start":447,"line_end":447,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10516987,"byte_end":10517005,"line_start":448,"line_end":448,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517010,"byte_end":10517040,"line_start":449,"line_end":449,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517045,"byte_end":10517048,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517053,"byte_end":10517071,"line_start":451,"line_end":451,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517076,"byte_end":10517115,"line_start":452,"line_end":452,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517120,"byte_end":10517142,"line_start":453,"line_end":453,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517147,"byte_end":10517209,"line_start":454,"line_end":454,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517214,"byte_end":10517262,"line_start":455,"line_end":455,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517267,"byte_end":10517270,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     // Send a message","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517275,"byte_end":10517300,"line_start":457,"line_end":457,"column_start":5,"column_end":30}},{"value":"/     socket.send(b\"hello world\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517305,"byte_end":10517348,"line_start":458,"line_end":458,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517353,"byte_end":10517356,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517361,"byte_end":10517375,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517380,"byte_end":10517385,"line_start":461,"line_end":461,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517390,"byte_end":10517397,"line_start":462,"line_end":462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4784},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518507,"byte_end":10518516,"line_start":493,"line_end":493,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to the remote address to which it\n was previously `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to the remote address to which it","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517600,"byte_end":10517673,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ was previously `connect`ed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517678,"byte_end":10517709,"line_start":471,"line_end":471,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517714,"byte_end":10517717,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517722,"byte_end":10517794,"line_start":473,"line_end":473,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517799,"byte_end":10517856,"line_start":474,"line_end":474,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517861,"byte_end":10517864,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517869,"byte_end":10517944,"line_start":476,"line_end":476,"column_start":5,"column_end":80}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10517949,"byte_end":10518024,"line_start":477,"line_end":477,"column_start":5,"column_end":80}},{"value":"/ be scheduled to receive a wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518029,"byte_end":10518066,"line_start":478,"line_end":478,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518071,"byte_end":10518074,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518079,"byte_end":10518097,"line_start":480,"line_end":480,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518102,"byte_end":10518105,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518110,"byte_end":10518135,"line_start":482,"line_end":482,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518140,"byte_end":10518143,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not available to write","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518148,"byte_end":10518209,"line_start":484,"line_end":484,"column_start":5,"column_end":66}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518214,"byte_end":10518272,"line_start":485,"line_end":485,"column_start":5,"column_end":63}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518277,"byte_end":10518332,"line_start":486,"line_end":486,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518337,"byte_end":10518340,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518345,"byte_end":10518357,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518362,"byte_end":10518365,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518370,"byte_end":10518445,"line_start":490,"line_end":490,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518450,"byte_end":10518453,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518458,"byte_end":10518495,"line_start":492,"line_end":492,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4786},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520260,"byte_end":10520268,"line_start":547,"line_end":547,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UdpSocket>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the remote address to which it is\n connected.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the remote address to which it is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518695,"byte_end":10518766,"line_start":499,"line_end":499,"column_start":5,"column_end":76}},{"value":"/ connected.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518771,"byte_end":10518785,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518790,"byte_end":10518793,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ When the socket buffer is full, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518798,"byte_end":10518869,"line_start":502,"line_end":502,"column_start":5,"column_end":76}},{"value":"/ returned. This function is usually paired with `writable()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518874,"byte_end":10518938,"line_start":503,"line_end":503,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518943,"byte_end":10518946,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518951,"byte_end":10518964,"line_start":505,"line_end":505,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518969,"byte_end":10518972,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ If successful, `Ok(n)` is returned, where `n` is the number of bytes","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10518977,"byte_end":10519049,"line_start":507,"line_end":507,"column_start":5,"column_end":77}},{"value":"/ sent. If the socket is not ready to send data,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519054,"byte_end":10519104,"line_start":508,"line_end":508,"column_start":5,"column_end":55}},{"value":"/ `Err(ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519109,"byte_end":10519154,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519159,"byte_end":10519162,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519167,"byte_end":10519181,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519186,"byte_end":10519189,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519194,"byte_end":10519207,"line_start":513,"line_end":513,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519212,"byte_end":10519242,"line_start":514,"line_end":514,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519247,"byte_end":10519263,"line_start":515,"line_end":515,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519268,"byte_end":10519271,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519276,"byte_end":10519294,"line_start":517,"line_end":517,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519299,"byte_end":10519338,"line_start":518,"line_end":518,"column_start":5,"column_end":44}},{"value":"/     // Bind a UDP socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519343,"byte_end":10519371,"line_start":519,"line_end":519,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519376,"byte_end":10519438,"line_start":520,"line_end":520,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519443,"byte_end":10519446,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519451,"byte_end":10519479,"line_start":522,"line_end":522,"column_start":5,"column_end":33}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519484,"byte_end":10519532,"line_start":523,"line_end":523,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519537,"byte_end":10519540,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519545,"byte_end":10519559,"line_start":525,"line_end":525,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519564,"byte_end":10519613,"line_start":526,"line_end":526,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519618,"byte_end":10519655,"line_start":527,"line_end":527,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519660,"byte_end":10519663,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519668,"byte_end":10519738,"line_start":529,"line_end":529,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519743,"byte_end":10519801,"line_start":530,"line_end":530,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519806,"byte_end":10519857,"line_start":531,"line_end":531,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519862,"byte_end":10519888,"line_start":532,"line_end":532,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519893,"byte_end":10519919,"line_start":533,"line_end":533,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519924,"byte_end":10519941,"line_start":534,"line_end":534,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10519946,"byte_end":10520018,"line_start":535,"line_end":535,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520023,"byte_end":10520052,"line_start":536,"line_end":536,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520057,"byte_end":10520074,"line_start":537,"line_end":537,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520079,"byte_end":10520106,"line_start":538,"line_end":538,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520111,"byte_end":10520145,"line_start":539,"line_end":539,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520150,"byte_end":10520167,"line_start":540,"line_end":540,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520172,"byte_end":10520185,"line_start":541,"line_end":541,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520190,"byte_end":10520199,"line_start":542,"line_end":542,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520204,"byte_end":10520207,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520212,"byte_end":10520226,"line_start":544,"line_end":544,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520231,"byte_end":10520236,"line_start":545,"line_end":545,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520241,"byte_end":10520248,"line_start":546,"line_end":546,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4788},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522081,"byte_end":10522089,"line_start":601,"line_end":601,"column_start":18,"column_end":26},"name":"readable","qualname":"<UdpSocket>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520428,"byte_end":10520471,"line_start":553,"line_end":553,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520476,"byte_end":10520479,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520484,"byte_end":10520561,"line_start":555,"line_end":555,"column_start":5,"column_end":82}},{"value":"/ paired with `try_recv()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520566,"byte_end":10520595,"line_start":556,"line_end":556,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520600,"byte_end":10520603,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being readable. This is a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520608,"byte_end":10520682,"line_start":558,"line_end":558,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_recv()` will return with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520687,"byte_end":10520752,"line_start":559,"line_end":559,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520757,"byte_end":10520789,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520794,"byte_end":10520797,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520802,"byte_end":10520816,"line_start":562,"line_end":562,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520821,"byte_end":10520824,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520829,"byte_end":10520842,"line_start":564,"line_end":564,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520847,"byte_end":10520877,"line_start":565,"line_end":565,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520882,"byte_end":10520898,"line_start":566,"line_end":566,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520903,"byte_end":10520906,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520911,"byte_end":10520929,"line_start":568,"line_end":568,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520934,"byte_end":10520973,"line_start":569,"line_end":569,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10520978,"byte_end":10521006,"line_start":570,"line_end":570,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521011,"byte_end":10521073,"line_start":571,"line_end":571,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521078,"byte_end":10521126,"line_start":572,"line_end":572,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521131,"byte_end":10521134,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521139,"byte_end":10521153,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521158,"byte_end":10521207,"line_start":575,"line_end":575,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521212,"byte_end":10521249,"line_start":576,"line_end":576,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521254,"byte_end":10521257,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521262,"byte_end":10521334,"line_start":578,"line_end":578,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521339,"byte_end":10521378,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521383,"byte_end":10521419,"line_start":580,"line_end":580,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521424,"byte_end":10521427,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521432,"byte_end":10521502,"line_start":582,"line_end":582,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521507,"byte_end":10521565,"line_start":583,"line_end":583,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521570,"byte_end":10521615,"line_start":584,"line_end":584,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521620,"byte_end":10521646,"line_start":585,"line_end":585,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521651,"byte_end":10521703,"line_start":586,"line_end":586,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521708,"byte_end":10521734,"line_start":587,"line_end":587,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521739,"byte_end":10521756,"line_start":588,"line_end":588,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521761,"byte_end":10521833,"line_start":589,"line_end":589,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521838,"byte_end":10521867,"line_start":590,"line_end":590,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521872,"byte_end":10521889,"line_start":591,"line_end":591,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521894,"byte_end":10521921,"line_start":592,"line_end":592,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521926,"byte_end":10521960,"line_start":593,"line_end":593,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521965,"byte_end":10521982,"line_start":594,"line_end":594,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10521987,"byte_end":10522000,"line_start":595,"line_end":595,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522005,"byte_end":10522014,"line_start":596,"line_end":596,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522019,"byte_end":10522022,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522027,"byte_end":10522041,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522046,"byte_end":10522051,"line_start":599,"line_end":599,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522056,"byte_end":10522063,"line_start":600,"line_end":600,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4791},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523302,"byte_end":10523306,"line_start":636,"line_end":636,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket from the remote address\n to which it is connected. On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket from the remote address","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522190,"byte_end":10522266,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/ to which it is connected. On success, returns the number of bytes read.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522271,"byte_end":10522346,"line_start":607,"line_end":607,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522351,"byte_end":10522354,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522359,"byte_end":10522432,"line_start":609,"line_end":609,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522437,"byte_end":10522511,"line_start":610,"line_end":610,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522516,"byte_end":10522567,"line_start":611,"line_end":611,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522572,"byte_end":10522575,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522580,"byte_end":10522652,"line_start":613,"line_end":613,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522657,"byte_end":10522714,"line_start":614,"line_end":614,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522719,"byte_end":10522722,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522727,"byte_end":10522764,"line_start":616,"line_end":616,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522769,"byte_end":10522772,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522777,"byte_end":10522790,"line_start":618,"line_end":618,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522795,"byte_end":10522825,"line_start":619,"line_end":619,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522830,"byte_end":10522846,"line_start":620,"line_end":620,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522851,"byte_end":10522854,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522859,"byte_end":10522877,"line_start":622,"line_end":622,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522882,"byte_end":10522921,"line_start":623,"line_end":623,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522926,"byte_end":10522948,"line_start":624,"line_end":624,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10522953,"byte_end":10523015,"line_start":625,"line_end":625,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523020,"byte_end":10523068,"line_start":626,"line_end":626,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523073,"byte_end":10523076,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0; 10];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523081,"byte_end":10523115,"line_start":628,"line_end":628,"column_start":5,"column_end":39}},{"value":"/     let n = socket.recv(&mut buf).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523120,"byte_end":10523165,"line_start":629,"line_end":629,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523170,"byte_end":10523173,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {} bytes {:?}\", n, &buf[..n]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523178,"byte_end":10523235,"line_start":631,"line_end":631,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523240,"byte_end":10523243,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523248,"byte_end":10523262,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523267,"byte_end":10523272,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523277,"byte_end":10523284,"line_start":635,"line_end":635,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4795},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10524431,"byte_end":10524440,"line_start":666,"line_end":666,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram message on the socket from the remote\n address to which it is `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram message on the socket from the remote","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523491,"byte_end":10523570,"line_start":643,"line_end":643,"column_start":5,"column_end":84}},{"value":"/ address to which it is `connect`ed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523575,"byte_end":10523614,"line_start":644,"line_end":644,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523619,"byte_end":10523622,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. This method","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523627,"byte_end":10523711,"line_start":646,"line_end":646,"column_start":5,"column_end":89}},{"value":"/ resolves to an error if the socket is not connected.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523716,"byte_end":10523772,"line_start":647,"line_end":647,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523777,"byte_end":10523780,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523785,"byte_end":10523869,"line_start":649,"line_end":649,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523874,"byte_end":10523956,"line_start":650,"line_end":650,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523961,"byte_end":10523982,"line_start":651,"line_end":651,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523987,"byte_end":10523990,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10523995,"byte_end":10524013,"line_start":653,"line_end":653,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10524018,"byte_end":10524021,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10524026,"byte_end":10524051,"line_start":655,"line_end":655,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10524056,"byte_end":10524059,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10524064,"byte_end":10524120,"line_start":657,"line_end":657,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(()))` reads data `ReadBuf` if the socket is ready","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10524125,"byte_end":10524196,"line_start":658,"line_end":658,"column_start":5,"column_end":76}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10524201,"byte_end":10524256,"line_start":659,"line_end":659,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10524261,"byte_end":10524264,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10524269,"byte_end":10524281,"line_start":661,"line_end":661,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10524286,"byte_end":10524289,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10524294,"byte_end":10524369,"line_start":663,"line_end":663,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10524374,"byte_end":10524377,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10524382,"byte_end":10524419,"line_start":665,"line_end":665,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4796},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526861,"byte_end":10526869,"line_start":734,"line_end":734,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UdpSocket>::try_recv","value":"pub fn try_recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket from the remote\n address to which it is connected. On success, returns the number of\n bytes read.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket from the remote","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525034,"byte_end":10525108,"line_start":684,"line_end":684,"column_start":5,"column_end":79}},{"value":"/ address to which it is connected. On success, returns the number of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525113,"byte_end":10525184,"line_start":685,"line_end":685,"column_start":5,"column_end":76}},{"value":"/ bytes read.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525189,"byte_end":10525204,"line_start":686,"line_end":686,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525209,"byte_end":10525212,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525217,"byte_end":10525293,"line_start":688,"line_end":688,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525298,"byte_end":10525367,"line_start":689,"line_end":689,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525372,"byte_end":10525423,"line_start":690,"line_end":690,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525428,"byte_end":10525431,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525436,"byte_end":10525506,"line_start":692,"line_end":692,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525511,"byte_end":10525575,"line_start":693,"line_end":693,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525580,"byte_end":10525583,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525588,"byte_end":10525602,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525607,"byte_end":10525610,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525615,"byte_end":10525628,"line_start":697,"line_end":697,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525633,"byte_end":10525663,"line_start":698,"line_end":698,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525668,"byte_end":10525684,"line_start":699,"line_end":699,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525689,"byte_end":10525692,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525697,"byte_end":10525715,"line_start":701,"line_end":701,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525720,"byte_end":10525759,"line_start":702,"line_end":702,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525764,"byte_end":10525792,"line_start":703,"line_end":703,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525797,"byte_end":10525859,"line_start":704,"line_end":704,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525864,"byte_end":10525912,"line_start":705,"line_end":705,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525917,"byte_end":10525920,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525925,"byte_end":10525939,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525944,"byte_end":10525993,"line_start":708,"line_end":708,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10525998,"byte_end":10526035,"line_start":709,"line_end":709,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526040,"byte_end":10526043,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526048,"byte_end":10526120,"line_start":711,"line_end":711,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526125,"byte_end":10526164,"line_start":712,"line_end":712,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526169,"byte_end":10526205,"line_start":713,"line_end":713,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526210,"byte_end":10526213,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526218,"byte_end":10526288,"line_start":715,"line_end":715,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526293,"byte_end":10526351,"line_start":716,"line_end":716,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526356,"byte_end":10526401,"line_start":717,"line_end":717,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526406,"byte_end":10526432,"line_start":718,"line_end":718,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526437,"byte_end":10526489,"line_start":719,"line_end":719,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526494,"byte_end":10526520,"line_start":720,"line_end":720,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526525,"byte_end":10526542,"line_start":721,"line_end":721,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526547,"byte_end":10526619,"line_start":722,"line_end":722,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526624,"byte_end":10526653,"line_start":723,"line_end":723,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526658,"byte_end":10526675,"line_start":724,"line_end":724,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526680,"byte_end":10526707,"line_start":725,"line_end":725,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526712,"byte_end":10526746,"line_start":726,"line_end":726,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526751,"byte_end":10526768,"line_start":727,"line_end":727,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526773,"byte_end":10526786,"line_start":728,"line_end":728,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526791,"byte_end":10526800,"line_start":729,"line_end":729,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526805,"byte_end":10526808,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526813,"byte_end":10526827,"line_start":731,"line_end":731,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526832,"byte_end":10526837,"line_start":732,"line_end":732,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10526842,"byte_end":10526849,"line_start":733,"line_end":733,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4920},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10528948,"byte_end":10528960,"line_start":788,"line_end":788,"column_start":16,"column_end":28},"name":"try_recv_buf","qualname":"<UdpSocket>::try_recv_buf","value":"pub fn try_recv_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4923},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10531388,"byte_end":10531405,"line_start":852,"line_end":852,"column_start":16,"column_end":33},"name":"try_recv_buf_from","qualname":"<UdpSocket>::try_recv_buf_from","value":"pub fn try_recv_buf_from<B: BufMut>(&Self, &mut B)\n-> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket. On success,\n returns the number of bytes read and the origin.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4798},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10533092,"byte_end":10533099,"line_start":901,"line_end":901,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532047,"byte_end":10532121,"line_start":871,"line_end":871,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532126,"byte_end":10532154,"line_start":872,"line_end":872,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532159,"byte_end":10532162,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of [`ToSocketAddrs`] trait. See its","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532167,"byte_end":10532242,"line_start":874,"line_end":874,"column_start":5,"column_end":80}},{"value":"/ documentation for concrete examples.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532247,"byte_end":10532287,"line_start":875,"line_end":875,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532292,"byte_end":10532295,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ It is possible for `addr` to yield multiple addresses, but `send_to`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532300,"byte_end":10532372,"line_start":877,"line_end":877,"column_start":5,"column_end":77}},{"value":"/ will only send data to the first address yielded by `addr`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532377,"byte_end":10532440,"line_start":878,"line_end":878,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532445,"byte_end":10532448,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ This will return an error when the IP version of the local socket does","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532453,"byte_end":10532527,"line_start":880,"line_end":880,"column_start":5,"column_end":79}},{"value":"/ not match that returned from [`ToSocketAddrs`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532532,"byte_end":10532583,"line_start":881,"line_end":881,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532588,"byte_end":10532591,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: crate::net::ToSocketAddrs","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532596,"byte_end":10532644,"line_start":883,"line_end":883,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532649,"byte_end":10532652,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532657,"byte_end":10532670,"line_start":885,"line_end":885,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532675,"byte_end":10532678,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532683,"byte_end":10532696,"line_start":887,"line_end":887,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532701,"byte_end":10532731,"line_start":888,"line_end":888,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532736,"byte_end":10532752,"line_start":889,"line_end":889,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532757,"byte_end":10532760,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532765,"byte_end":10532783,"line_start":891,"line_end":891,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532788,"byte_end":10532827,"line_start":892,"line_end":892,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532832,"byte_end":10532894,"line_start":893,"line_end":893,"column_start":5,"column_end":67}},{"value":"/     let len = socket.send_to(b\"hello world\", \"127.0.0.1:8081\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532899,"byte_end":10532973,"line_start":894,"line_end":894,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532978,"byte_end":10532981,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/     println!(\"Sent {} bytes\", len);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10532986,"byte_end":10533025,"line_start":896,"line_end":896,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10533030,"byte_end":10533033,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10533038,"byte_end":10533052,"line_start":898,"line_end":898,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10533057,"byte_end":10533062,"line_start":899,"line_end":899,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10533067,"byte_end":10533074,"line_start":900,"line_end":900,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4802},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534150,"byte_end":10534162,"line_start":930,"line_end":930,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to a given address.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to a given address.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10533493,"byte_end":10533552,"line_start":913,"line_end":913,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10533557,"byte_end":10533560,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction, only the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10533565,"byte_end":10533649,"line_start":915,"line_end":915,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10533654,"byte_end":10533736,"line_start":916,"line_end":916,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10533741,"byte_end":10533762,"line_start":917,"line_end":917,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10533767,"byte_end":10533770,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10533775,"byte_end":10533793,"line_start":919,"line_end":919,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10533798,"byte_end":10533801,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10533806,"byte_end":10533831,"line_start":921,"line_end":921,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10533836,"byte_end":10533839,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to write","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10533844,"byte_end":10533901,"line_start":923,"line_end":923,"column_start":5,"column_end":62}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10533906,"byte_end":10533965,"line_start":924,"line_end":924,"column_start":5,"column_end":64}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10533970,"byte_end":10534025,"line_start":925,"line_end":925,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534030,"byte_end":10534033,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534038,"byte_end":10534050,"line_start":927,"line_end":927,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534055,"byte_end":10534058,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534063,"byte_end":10534138,"line_start":929,"line_end":929,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":4804},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535962,"byte_end":10535973,"line_start":988,"line_end":988,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UdpSocket>::try_send_to","value":"pub fn try_send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the given address, but if the send is\n blocked this will return right away.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the given address, but if the send is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534411,"byte_end":10534486,"line_start":941,"line_end":941,"column_start":5,"column_end":80}},{"value":"/ blocked this will return right away.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534491,"byte_end":10534531,"line_start":942,"line_end":942,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534536,"byte_end":10534539,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534544,"byte_end":10534598,"line_start":944,"line_end":944,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534603,"byte_end":10534606,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534611,"byte_end":10534624,"line_start":946,"line_end":946,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534629,"byte_end":10534632,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ If successfull, returns the number of bytes sent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534637,"byte_end":10534689,"line_start":948,"line_end":948,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534694,"byte_end":10534697,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ Users should ensure that when the remote cannot receive, the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534702,"byte_end":10534766,"line_start":950,"line_end":950,"column_start":5,"column_end":69}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled. An error can also occur","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534771,"byte_end":10534845,"line_start":951,"line_end":951,"column_start":5,"column_end":79}},{"value":"/ if the IP version of the socket does not match that of `target`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534850,"byte_end":10534918,"line_start":952,"line_end":952,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534923,"byte_end":10534926,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534931,"byte_end":10534992,"line_start":954,"line_end":954,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10534997,"byte_end":10535000,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535005,"byte_end":10535018,"line_start":956,"line_end":956,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535023,"byte_end":10535026,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535031,"byte_end":10535044,"line_start":958,"line_end":958,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535049,"byte_end":10535079,"line_start":959,"line_end":959,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535084,"byte_end":10535110,"line_start":960,"line_end":960,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535115,"byte_end":10535131,"line_start":961,"line_end":961,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535136,"byte_end":10535139,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535144,"byte_end":10535162,"line_start":963,"line_end":963,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535167,"byte_end":10535218,"line_start":964,"line_end":964,"column_start":5,"column_end":56}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535223,"byte_end":10535285,"line_start":965,"line_end":965,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535290,"byte_end":10535293,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/     let dst = \"127.0.0.1:8081\".parse()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535298,"byte_end":10535342,"line_start":967,"line_end":967,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535347,"byte_end":10535350,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535355,"byte_end":10535369,"line_start":969,"line_end":969,"column_start":5,"column_end":19}},{"value":"/         socket.writable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535374,"byte_end":10535411,"line_start":970,"line_end":970,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535416,"byte_end":10535419,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/         match socket.try_send_to(&b\"hello world\"[..], dst) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535424,"byte_end":10535488,"line_start":972,"line_end":972,"column_start":5,"column_end":69}},{"value":"/             Ok(sent) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535493,"byte_end":10535522,"line_start":973,"line_end":973,"column_start":5,"column_end":34}},{"value":"/                 println!(\"sent {} bytes\", sent);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535527,"byte_end":10535579,"line_start":974,"line_end":974,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535584,"byte_end":10535610,"line_start":975,"line_end":975,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535615,"byte_end":10535632,"line_start":976,"line_end":976,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535637,"byte_end":10535709,"line_start":977,"line_end":977,"column_start":5,"column_end":77}},{"value":"/                 // Writable false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535714,"byte_end":10535761,"line_start":978,"line_end":978,"column_start":5,"column_end":52}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535766,"byte_end":10535795,"line_start":979,"line_end":979,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535800,"byte_end":10535817,"line_start":980,"line_end":980,"column_start":5,"column_end":22}},{"value":"/             Err(e) => return Err(e.into()),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535822,"byte_end":10535869,"line_start":981,"line_end":981,"column_start":5,"column_end":52}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535874,"byte_end":10535887,"line_start":982,"line_end":982,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535892,"byte_end":10535901,"line_start":983,"line_end":983,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535906,"byte_end":10535909,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535914,"byte_end":10535928,"line_start":985,"line_end":985,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535933,"byte_end":10535938,"line_start":986,"line_end":986,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10535943,"byte_end":10535950,"line_start":987,"line_end":987,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4810},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537245,"byte_end":10537254,"line_start":1026,"line_end":1026,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket. On success, returns\n the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket. On success, returns","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10536397,"byte_end":10536470,"line_start":1001,"line_end":1001,"column_start":5,"column_end":78}},{"value":"/ the number of bytes read and the origin.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10536475,"byte_end":10536519,"line_start":1002,"line_end":1002,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10536524,"byte_end":10536527,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10536532,"byte_end":10536605,"line_start":1004,"line_end":1004,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10536610,"byte_end":10536684,"line_start":1005,"line_end":1005,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10536689,"byte_end":10536740,"line_start":1006,"line_end":1006,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10536745,"byte_end":10536748,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10536753,"byte_end":10536766,"line_start":1008,"line_end":1008,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10536771,"byte_end":10536774,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10536779,"byte_end":10536792,"line_start":1010,"line_end":1010,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10536797,"byte_end":10536827,"line_start":1011,"line_end":1011,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10536832,"byte_end":10536848,"line_start":1012,"line_end":1012,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10536853,"byte_end":10536856,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10536861,"byte_end":10536879,"line_start":1014,"line_end":1014,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10536884,"byte_end":10536923,"line_start":1015,"line_end":1015,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10536928,"byte_end":10536990,"line_start":1016,"line_end":1016,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10536995,"byte_end":10536998,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537003,"byte_end":10537039,"line_start":1018,"line_end":1018,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537044,"byte_end":10537104,"line_start":1019,"line_end":1019,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537109,"byte_end":10537112,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {:?} bytes from {:?}\", len, addr);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537117,"byte_end":10537178,"line_start":1021,"line_end":1021,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537183,"byte_end":10537186,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537191,"byte_end":10537205,"line_start":1023,"line_end":1023,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537210,"byte_end":10537215,"line_start":1024,"line_end":1024,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537220,"byte_end":10537227,"line_start":1025,"line_end":1025,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4814},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10538142,"byte_end":10538156,"line_start":1050,"line_end":1050,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram on the socket.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram on the socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537458,"byte_end":10537514,"line_start":1033,"line_end":1033,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537519,"byte_end":10537522,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537527,"byte_end":10537611,"line_start":1035,"line_end":1035,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537616,"byte_end":10537698,"line_start":1036,"line_end":1036,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537703,"byte_end":10537724,"line_start":1037,"line_end":1037,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537729,"byte_end":10537732,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537737,"byte_end":10537755,"line_start":1039,"line_end":1039,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537760,"byte_end":10537763,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537768,"byte_end":10537793,"line_start":1041,"line_end":1041,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537798,"byte_end":10537801,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537806,"byte_end":10537862,"line_start":1043,"line_end":1043,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537867,"byte_end":10537957,"line_start":1044,"line_end":1044,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10537962,"byte_end":10538017,"line_start":1045,"line_end":1045,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10538022,"byte_end":10538025,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10538030,"byte_end":10538042,"line_start":1047,"line_end":1047,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10538047,"byte_end":10538050,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10538055,"byte_end":10538130,"line_start":1049,"line_end":1049,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":4815},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540550,"byte_end":10540563,"line_start":1120,"line_end":1120,"column_start":12,"column_end":25},"name":"try_recv_from","qualname":"<UdpSocket>::try_recv_from","value":"pub fn try_recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket. On success,\n returns the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket. On success,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10538804,"byte_end":10538875,"line_start":1072,"line_end":1072,"column_start":5,"column_end":76}},{"value":"/ returns the number of bytes read and the origin.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10538880,"byte_end":10538932,"line_start":1073,"line_end":1073,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10538937,"byte_end":10538940,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10538945,"byte_end":10539021,"line_start":1075,"line_end":1075,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539026,"byte_end":10539095,"line_start":1076,"line_end":1076,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539100,"byte_end":10539151,"line_start":1077,"line_end":1077,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539156,"byte_end":10539159,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539164,"byte_end":10539234,"line_start":1079,"line_end":1079,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539239,"byte_end":10539303,"line_start":1080,"line_end":1080,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539308,"byte_end":10539311,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539316,"byte_end":10539330,"line_start":1082,"line_end":1082,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539335,"byte_end":10539338,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539343,"byte_end":10539356,"line_start":1084,"line_end":1084,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539361,"byte_end":10539391,"line_start":1085,"line_end":1085,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539396,"byte_end":10539412,"line_start":1086,"line_end":1086,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539417,"byte_end":10539420,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539425,"byte_end":10539443,"line_start":1088,"line_end":1088,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539448,"byte_end":10539487,"line_start":1089,"line_end":1089,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539492,"byte_end":10539520,"line_start":1090,"line_end":1090,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539525,"byte_end":10539587,"line_start":1091,"line_end":1091,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539592,"byte_end":10539595,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539600,"byte_end":10539614,"line_start":1093,"line_end":1093,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539619,"byte_end":10539668,"line_start":1094,"line_end":1094,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539673,"byte_end":10539710,"line_start":1095,"line_end":1095,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539715,"byte_end":10539718,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539723,"byte_end":10539795,"line_start":1097,"line_end":1097,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539800,"byte_end":10539839,"line_start":1098,"line_end":1098,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539844,"byte_end":10539880,"line_start":1099,"line_end":1099,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539885,"byte_end":10539888,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539893,"byte_end":10539963,"line_start":1101,"line_end":1101,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10539968,"byte_end":10540026,"line_start":1102,"line_end":1102,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv_from(&mut buf) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540031,"byte_end":10540081,"line_start":1103,"line_end":1103,"column_start":5,"column_end":55}},{"value":"/             Ok((n, _addr)) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540086,"byte_end":10540121,"line_start":1104,"line_end":1104,"column_start":5,"column_end":40}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540126,"byte_end":10540178,"line_start":1105,"line_end":1105,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540183,"byte_end":10540209,"line_start":1106,"line_end":1106,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540214,"byte_end":10540231,"line_start":1107,"line_end":1107,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540236,"byte_end":10540308,"line_start":1108,"line_end":1108,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540313,"byte_end":10540342,"line_start":1109,"line_end":1109,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540347,"byte_end":10540364,"line_start":1110,"line_end":1110,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540369,"byte_end":10540396,"line_start":1111,"line_end":1111,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540401,"byte_end":10540435,"line_start":1112,"line_end":1112,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540440,"byte_end":10540457,"line_start":1113,"line_end":1113,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540462,"byte_end":10540475,"line_start":1114,"line_end":1114,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540480,"byte_end":10540489,"line_start":1115,"line_end":1115,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540494,"byte_end":10540497,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540502,"byte_end":10540516,"line_start":1117,"line_end":1117,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540521,"byte_end":10540526,"line_start":1118,"line_end":1118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540531,"byte_end":10540538,"line_start":1119,"line_end":1119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4817},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541823,"byte_end":10541832,"line_start":1156,"line_end":1156,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540746,"byte_end":10540822,"line_start":1126,"line_end":1126,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540827,"byte_end":10540903,"line_start":1127,"line_end":1127,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540908,"byte_end":10540926,"line_start":1128,"line_end":1128,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540931,"byte_end":10540934,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540939,"byte_end":10540950,"line_start":1130,"line_end":1130,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540955,"byte_end":10540958,"line_start":1131,"line_end":1131,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10540963,"byte_end":10541038,"line_start":1132,"line_end":1132,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541043,"byte_end":10541121,"line_start":1133,"line_end":1133,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541126,"byte_end":10541174,"line_start":1134,"line_end":1134,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541179,"byte_end":10541246,"line_start":1135,"line_end":1135,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541251,"byte_end":10541319,"line_start":1136,"line_end":1136,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541324,"byte_end":10541327,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541332,"byte_end":10541346,"line_start":1138,"line_end":1138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541351,"byte_end":10541354,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541359,"byte_end":10541372,"line_start":1140,"line_end":1140,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541377,"byte_end":10541407,"line_start":1141,"line_end":1141,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541412,"byte_end":10541428,"line_start":1142,"line_end":1142,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541433,"byte_end":10541436,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541441,"byte_end":10541459,"line_start":1144,"line_end":1144,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541464,"byte_end":10541503,"line_start":1145,"line_end":1145,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541508,"byte_end":10541570,"line_start":1146,"line_end":1146,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541575,"byte_end":10541578,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541583,"byte_end":10541619,"line_start":1148,"line_end":1148,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.peek_from(&mut buf).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541624,"byte_end":10541684,"line_start":1149,"line_end":1149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541689,"byte_end":10541692,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/     println!(\"peeked {:?} bytes from {:?}\", len, addr);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541697,"byte_end":10541756,"line_start":1151,"line_end":1151,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541761,"byte_end":10541764,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541769,"byte_end":10541783,"line_start":1153,"line_end":1153,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541788,"byte_end":10541793,"line_start":1154,"line_end":1154,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10541798,"byte_end":10541805,"line_start":1155,"line_end":1155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4821},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10543181,"byte_end":10543195,"line_start":1189,"line_end":1189,"column_start":12,"column_end":26},"name":"poll_peek_from","qualname":"<UdpSocket>::poll_peek_from","value":"pub fn poll_peek_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542036,"byte_end":10542112,"line_start":1163,"line_end":1163,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542117,"byte_end":10542166,"line_start":1164,"line_end":1164,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542171,"byte_end":10542174,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542179,"byte_end":10542190,"line_start":1166,"line_end":1166,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542195,"byte_end":10542198,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542203,"byte_end":10542287,"line_start":1168,"line_end":1168,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542292,"byte_end":10542374,"line_start":1169,"line_end":1169,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542379,"byte_end":10542399,"line_start":1170,"line_end":1170,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542404,"byte_end":10542407,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542412,"byte_end":10542487,"line_start":1172,"line_end":1172,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542492,"byte_end":10542565,"line_start":1173,"line_end":1173,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542570,"byte_end":10542618,"line_start":1174,"line_end":1174,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542623,"byte_end":10542690,"line_start":1175,"line_end":1175,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542695,"byte_end":10542763,"line_start":1176,"line_end":1176,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542768,"byte_end":10542771,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542776,"byte_end":10542794,"line_start":1178,"line_end":1178,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542799,"byte_end":10542802,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542807,"byte_end":10542832,"line_start":1180,"line_end":1180,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542837,"byte_end":10542840,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542845,"byte_end":10542901,"line_start":1182,"line_end":1182,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10542906,"byte_end":10542996,"line_start":1183,"line_end":1183,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10543001,"byte_end":10543056,"line_start":1184,"line_end":1184,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10543061,"byte_end":10543064,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10543069,"byte_end":10543081,"line_start":1186,"line_end":1186,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10543086,"byte_end":10543089,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10543094,"byte_end":10543169,"line_start":1188,"line_end":1188,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":4822},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10544060,"byte_end":10544069,"line_start":1216,"line_end":1216,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10543843,"byte_end":10543907,"line_start":1211,"line_end":1211,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10543912,"byte_end":10543915,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10543920,"byte_end":10543986,"line_start":1213,"line_end":1213,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10543991,"byte_end":10543994,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10543999,"byte_end":10544048,"line_start":1215,"line_end":1215,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4823},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10544315,"byte_end":10544328,"line_start":1224,"line_end":1224,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10544138,"byte_end":10544202,"line_start":1220,"line_end":1220,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10544207,"byte_end":10544210,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10544215,"byte_end":10544286,"line_start":1222,"line_end":1222,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10544291,"byte_end":10544303,"line_start":1223,"line_end":1223,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4824},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10544657,"byte_end":10544674,"line_start":1233,"line_end":1233,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10544411,"byte_end":10544480,"line_start":1228,"line_end":1228,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10544485,"byte_end":10544488,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10544493,"byte_end":10544567,"line_start":1230,"line_end":1230,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10544572,"byte_end":10544575,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10544580,"byte_end":10544645,"line_start":1232,"line_end":1232,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4825},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10545004,"byte_end":10545025,"line_start":1244,"line_end":1244,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10544751,"byte_end":10544820,"line_start":1237,"line_end":1237,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10544825,"byte_end":10544828,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10544833,"byte_end":10544907,"line_start":1239,"line_end":1239,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10544912,"byte_end":10544915,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10544920,"byte_end":10544930,"line_start":1241,"line_end":1241,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10544935,"byte_end":10544938,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10544943,"byte_end":10544992,"line_start":1243,"line_end":1243,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4826},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10545358,"byte_end":10545374,"line_start":1253,"line_end":1253,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10545116,"byte_end":10545184,"line_start":1248,"line_end":1248,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10545189,"byte_end":10545192,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10545197,"byte_end":10545270,"line_start":1250,"line_end":1250,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10545275,"byte_end":10545278,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10545283,"byte_end":10545346,"line_start":1252,"line_end":1252,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4827},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10545843,"byte_end":10545863,"line_start":1266,"line_end":1266,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10545449,"byte_end":10545517,"line_start":1257,"line_end":1257,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10545522,"byte_end":10545525,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10545530,"byte_end":10545600,"line_start":1259,"line_end":1259,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10545605,"byte_end":10545679,"line_start":1260,"line_end":1260,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10545684,"byte_end":10545746,"line_start":1261,"line_end":1261,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10545751,"byte_end":10545754,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10545759,"byte_end":10545769,"line_start":1263,"line_end":1263,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10545774,"byte_end":10545777,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10545782,"byte_end":10545831,"line_start":1265,"line_end":1265,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4828},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546202,"byte_end":10546219,"line_start":1275,"line_end":1275,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10545954,"byte_end":10546025,"line_start":1270,"line_end":1270,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546030,"byte_end":10546033,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546038,"byte_end":10546112,"line_start":1272,"line_end":1272,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546117,"byte_end":10546120,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546125,"byte_end":10546190,"line_start":1274,"line_end":1274,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4829},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546553,"byte_end":10546574,"line_start":1286,"line_end":1286,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546296,"byte_end":10546367,"line_start":1279,"line_end":1279,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546372,"byte_end":10546375,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546380,"byte_end":10546456,"line_start":1281,"line_end":1281,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546461,"byte_end":10546464,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546469,"byte_end":10546479,"line_start":1283,"line_end":1283,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546484,"byte_end":10546487,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546492,"byte_end":10546541,"line_start":1285,"line_end":1285,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4830},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547171,"byte_end":10547174,"line_start":1309,"line_end":1309,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546665,"byte_end":10546723,"line_start":1290,"line_end":1290,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546728,"byte_end":10546731,"line_start":1291,"line_end":1291,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546736,"byte_end":10546796,"line_start":1292,"line_end":1292,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546801,"byte_end":10546804,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546809,"byte_end":10546846,"line_start":1294,"line_end":1294,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546851,"byte_end":10546854,"line_start":1295,"line_end":1295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546859,"byte_end":10546873,"line_start":1296,"line_end":1296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546878,"byte_end":10546881,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546886,"byte_end":10546899,"line_start":1298,"line_end":1298,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546904,"byte_end":10546934,"line_start":1299,"line_end":1299,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546939,"byte_end":10546957,"line_start":1300,"line_end":1300,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546962,"byte_end":10546965,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10546970,"byte_end":10547010,"line_start":1302,"line_end":1302,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547015,"byte_end":10547071,"line_start":1303,"line_end":1303,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547076,"byte_end":10547079,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", sock.ttl()?);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547084,"byte_end":10547118,"line_start":1305,"line_end":1305,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547123,"byte_end":10547135,"line_start":1306,"line_end":1306,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547140,"byte_end":10547147,"line_start":1307,"line_end":1307,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547152,"byte_end":10547159,"line_start":1308,"line_end":1308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4831},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547722,"byte_end":10547729,"line_start":1331,"line_end":1331,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547236,"byte_end":10547294,"line_start":1313,"line_end":1313,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547299,"byte_end":10547302,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547307,"byte_end":10547383,"line_start":1315,"line_end":1315,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547388,"byte_end":10547409,"line_start":1316,"line_end":1316,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547414,"byte_end":10547417,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547422,"byte_end":10547436,"line_start":1318,"line_end":1318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547441,"byte_end":10547444,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547449,"byte_end":10547462,"line_start":1320,"line_end":1320,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547467,"byte_end":10547497,"line_start":1321,"line_end":1321,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547502,"byte_end":10547520,"line_start":1322,"line_end":1322,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547525,"byte_end":10547528,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547533,"byte_end":10547573,"line_start":1324,"line_end":1324,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547578,"byte_end":10547634,"line_start":1325,"line_end":1325,"column_start":5,"column_end":61}},{"value":"/ sock.set_ttl(60)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547639,"byte_end":10547661,"line_start":1326,"line_end":1326,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547666,"byte_end":10547669,"line_start":1327,"line_end":1327,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547674,"byte_end":10547686,"line_start":1328,"line_end":1328,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547691,"byte_end":10547698,"line_start":1329,"line_end":1329,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547703,"byte_end":10547710,"line_start":1330,"line_end":1330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4832},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10548237,"byte_end":10548254,"line_start":1342,"line_end":1342,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547807,"byte_end":10547865,"line_start":1335,"line_end":1335,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547870,"byte_end":10547873,"line_start":1336,"line_end":1336,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547878,"byte_end":10547952,"line_start":1337,"line_end":1337,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10547957,"byte_end":10548030,"line_start":1338,"line_end":1338,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10548035,"byte_end":10548107,"line_start":1339,"line_end":1339,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10548112,"byte_end":10548182,"line_start":1340,"line_end":1340,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10548187,"byte_end":10548225,"line_start":1341,"line_end":1341,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4833},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10548709,"byte_end":10548726,"line_start":1351,"line_end":1351,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10548393,"byte_end":10548453,"line_start":1346,"line_end":1346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10548458,"byte_end":10548461,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10548466,"byte_end":10548540,"line_start":1348,"line_end":1348,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10548545,"byte_end":10548618,"line_start":1349,"line_end":1349,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10548623,"byte_end":10548697,"line_start":1350,"line_end":1350,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4834},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549083,"byte_end":10549101,"line_start":1360,"line_end":1360,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10548859,"byte_end":10548918,"line_start":1355,"line_end":1355,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10548923,"byte_end":10548926,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10548931,"byte_end":10549001,"line_start":1357,"line_end":1357,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549006,"byte_end":10549009,"line_start":1358,"line_end":1358,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549014,"byte_end":10549071,"line_start":1359,"line_end":1359,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4835},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549467,"byte_end":10549485,"line_start":1369,"line_end":1369,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549241,"byte_end":10549302,"line_start":1364,"line_end":1364,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549307,"byte_end":10549310,"line_start":1365,"line_end":1365,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549315,"byte_end":10549385,"line_start":1366,"line_end":1366,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549390,"byte_end":10549393,"line_start":1367,"line_end":1367,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549398,"byte_end":10549455,"line_start":1368,"line_end":1368,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4836},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10550122,"byte_end":10550132,"line_start":1392,"line_end":1392,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549619,"byte_end":10549666,"line_start":1373,"line_end":1373,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549671,"byte_end":10549674,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549679,"byte_end":10549693,"line_start":1375,"line_end":1375,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549698,"byte_end":10549705,"line_start":1376,"line_end":1376,"column_start":5,"column_end":12}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549710,"byte_end":10549740,"line_start":1377,"line_end":1377,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549745,"byte_end":10549761,"line_start":1378,"line_end":1378,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549766,"byte_end":10549769,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549774,"byte_end":10549792,"line_start":1380,"line_end":1380,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549797,"byte_end":10549836,"line_start":1381,"line_end":1381,"column_start":5,"column_end":44}},{"value":"/     // Create a socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549841,"byte_end":10549867,"line_start":1382,"line_end":1382,"column_start":5,"column_end":31}},{"value":"/     let socket = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549872,"byte_end":10549932,"line_start":1383,"line_end":1383,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549937,"byte_end":10549940,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/     if let Ok(Some(err)) = socket.take_error() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10549945,"byte_end":10549997,"line_start":1385,"line_end":1385,"column_start":5,"column_end":57}},{"value":"/         println!(\"Got error: {:?}\", err);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10550002,"byte_end":10550047,"line_start":1386,"line_end":1386,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10550052,"byte_end":10550061,"line_start":1387,"line_end":1387,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10550066,"byte_end":10550069,"line_start":1388,"line_end":1388,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10550074,"byte_end":10550088,"line_start":1389,"line_end":1389,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10550093,"byte_end":10550098,"line_start":1390,"line_end":1390,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10550103,"byte_end":10550110,"line_start":1391,"line_end":1391,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4928},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::net::unix","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/mod.rs","parent":null,"children":[{"krate":0,"index":4929},{"krate":0,"index":5050},{"krate":0,"index":5121},{"krate":0,"index":5164},{"krate":0,"index":5165},{"krate":0,"index":5168},{"krate":0,"index":5171},{"krate":0,"index":5235},{"krate":0,"index":5236},{"krate":0,"index":5239},{"krate":0,"index":5242},{"krate":0,"index":5243},{"krate":0,"index":5245},{"krate":0,"index":5260},{"krate":0,"index":5261},{"krate":0,"index":5263},{"krate":0,"index":5424},{"krate":0,"index":5427},{"krate":0,"index":5481}],"decl_id":null,"docs":" Unix domain socket utility types\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":22140,"byte_end":22174,"line_start":178,"line_end":178,"column_start":13,"column_end":47}},{"value":"/ Unix domain socket utility types","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/mod.rs","byte_start":10551135,"byte_end":10551171,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":4929},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"datagram","qualname":"::net::unix::datagram","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/mod.rs","parent":null,"children":[{"krate":0,"index":4930}],"decl_id":null,"docs":" Unix datagram types.\n","sig":null,"attributes":[{"value":"/ Unix datagram types.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/mod.rs","byte_start":10551723,"byte_end":10551747,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":5496},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10554801,"byte_end":10554813,"line_start":93,"line_end":93,"column_start":16,"column_end":28},"name":"UnixDatagram","qualname":"::net::unix::datagram::socket::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":5497}],"decl_id":null,"docs":" An I/O object representing a Unix datagram socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":22140,"byte_end":22174,"line_start":178,"line_end":178,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4986},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557228,"byte_end":10557233,"line_start":160,"line_end":160,"column_start":18,"column_end":23},"name":"ready","qualname":"<UnixDatagram>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10554898,"byte_end":10554945,"line_start":99,"line_end":99,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10554950,"byte_end":10554953,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_recv()` or `try_send()`. It","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10554958,"byte_end":10555031,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ can be used to concurrently recv / send to the same socket on a single","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555036,"byte_end":10555110,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ task without splitting the socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555115,"byte_end":10555153,"line_start":103,"line_end":103,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555158,"byte_end":10555161,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being ready. This is a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555166,"byte_end":10555237,"line_start":105,"line_end":105,"column_start":5,"column_end":76}},{"value":"/ false-positive and attempting an operation will return with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555242,"byte_end":10555305,"line_start":106,"line_end":106,"column_start":5,"column_end":68}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555310,"byte_end":10555342,"line_start":107,"line_end":107,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555347,"byte_end":10555350,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555355,"byte_end":10555369,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555374,"byte_end":10555377,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Concurrently receive from and send to the socket on the same task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555382,"byte_end":10555451,"line_start":111,"line_end":111,"column_start":5,"column_end":74}},{"value":"/ without splitting.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555456,"byte_end":10555478,"line_start":112,"line_end":112,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555483,"byte_end":10555486,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555491,"byte_end":10555504,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555509,"byte_end":10555537,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555542,"byte_end":10555575,"line_start":116,"line_end":116,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555580,"byte_end":10555596,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555601,"byte_end":10555604,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555609,"byte_end":10555627,"line_start":119,"line_end":119,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555632,"byte_end":10555671,"line_start":120,"line_end":120,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555676,"byte_end":10555723,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555728,"byte_end":10555785,"line_start":122,"line_end":122,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555790,"byte_end":10555847,"line_start":123,"line_end":123,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555852,"byte_end":10555907,"line_start":124,"line_end":124,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555912,"byte_end":10555950,"line_start":125,"line_end":125,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555955,"byte_end":10555958,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555963,"byte_end":10555977,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/         let ready = socket.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10555982,"byte_end":10556067,"line_start":128,"line_end":128,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556072,"byte_end":10556075,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556080,"byte_end":10556116,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/             let mut data = [0; 1024];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556121,"byte_end":10556162,"line_start":131,"line_end":131,"column_start":5,"column_end":46}},{"value":"/             match socket.try_recv(&mut data[..]) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556167,"byte_end":10556221,"line_start":132,"line_end":132,"column_start":5,"column_end":59}},{"value":"/                 Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556226,"byte_end":10556256,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/                     println!(\"received {:?}\", &data[..n]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556261,"byte_end":10556323,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556328,"byte_end":10556349,"line_start":135,"line_end":135,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556354,"byte_end":10556401,"line_start":136,"line_end":136,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556406,"byte_end":10556483,"line_start":137,"line_end":137,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556488,"byte_end":10556519,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556524,"byte_end":10556562,"line_start":139,"line_end":139,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556567,"byte_end":10556588,"line_start":140,"line_end":140,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556593,"byte_end":10556610,"line_start":141,"line_end":141,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556615,"byte_end":10556628,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556633,"byte_end":10556636,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556641,"byte_end":10556677,"line_start":144,"line_end":144,"column_start":5,"column_end":41}},{"value":"/             // Write some data","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556682,"byte_end":10556716,"line_start":145,"line_end":145,"column_start":5,"column_end":39}},{"value":"/             match socket.try_send(b\"hello world\") {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556721,"byte_end":10556776,"line_start":146,"line_end":146,"column_start":5,"column_end":60}},{"value":"/                 Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556781,"byte_end":10556811,"line_start":147,"line_end":147,"column_start":5,"column_end":35}},{"value":"/                     println!(\"sent {} bytes\", n);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556816,"byte_end":10556869,"line_start":148,"line_end":148,"column_start":5,"column_end":58}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556874,"byte_end":10556895,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556900,"byte_end":10556947,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10556952,"byte_end":10557029,"line_start":151,"line_end":151,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557034,"byte_end":10557065,"line_start":152,"line_end":152,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557070,"byte_end":10557108,"line_start":153,"line_end":153,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557113,"byte_end":10557134,"line_start":154,"line_end":154,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557139,"byte_end":10557156,"line_start":155,"line_end":155,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557161,"byte_end":10557174,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557179,"byte_end":10557188,"line_start":157,"line_end":157,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557193,"byte_end":10557198,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557203,"byte_end":10557210,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4989},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558970,"byte_end":10558978,"line_start":210,"line_end":210,"column_start":18,"column_end":26},"name":"writable","qualname":"<UnixDatagram>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557390,"byte_end":10557433,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557438,"byte_end":10557441,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557446,"byte_end":10557515,"line_start":167,"line_end":167,"column_start":5,"column_end":74}},{"value":"/ usually paired with `try_send()` or `try_send_to()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557520,"byte_end":10557576,"line_start":168,"line_end":168,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557581,"byte_end":10557584,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being writable. This is a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557589,"byte_end":10557663,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_send()` will return with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557668,"byte_end":10557733,"line_start":171,"line_end":171,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557738,"byte_end":10557770,"line_start":172,"line_end":172,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557775,"byte_end":10557778,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557783,"byte_end":10557797,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557802,"byte_end":10557805,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557810,"byte_end":10557823,"line_start":176,"line_end":176,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557828,"byte_end":10557861,"line_start":177,"line_end":177,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557866,"byte_end":10557882,"line_start":178,"line_end":178,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557887,"byte_end":10557890,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557895,"byte_end":10557913,"line_start":180,"line_end":180,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557918,"byte_end":10557957,"line_start":181,"line_end":181,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10557962,"byte_end":10558009,"line_start":182,"line_end":182,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558014,"byte_end":10558071,"line_start":183,"line_end":183,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558076,"byte_end":10558133,"line_start":184,"line_end":184,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558138,"byte_end":10558193,"line_start":185,"line_end":185,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558198,"byte_end":10558236,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558241,"byte_end":10558244,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558249,"byte_end":10558263,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558268,"byte_end":10558317,"line_start":189,"line_end":189,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558322,"byte_end":10558359,"line_start":190,"line_end":190,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558364,"byte_end":10558367,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558372,"byte_end":10558442,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558447,"byte_end":10558505,"line_start":193,"line_end":193,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558510,"byte_end":10558561,"line_start":194,"line_end":194,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558566,"byte_end":10558592,"line_start":195,"line_end":195,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558597,"byte_end":10558623,"line_start":196,"line_end":196,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558628,"byte_end":10558645,"line_start":197,"line_end":197,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558650,"byte_end":10558722,"line_start":198,"line_end":198,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558727,"byte_end":10558756,"line_start":199,"line_end":199,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558761,"byte_end":10558778,"line_start":200,"line_end":200,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558783,"byte_end":10558810,"line_start":201,"line_end":201,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558815,"byte_end":10558849,"line_start":202,"line_end":202,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558854,"byte_end":10558871,"line_start":203,"line_end":203,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558876,"byte_end":10558889,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558894,"byte_end":10558903,"line_start":205,"line_end":205,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558908,"byte_end":10558911,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558916,"byte_end":10558930,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558935,"byte_end":10558940,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10558945,"byte_end":10558952,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4992},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560894,"byte_end":10560902,"line_start":266,"line_end":266,"column_start":18,"column_end":26},"name":"readable","qualname":"<UnixDatagram>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559079,"byte_end":10559122,"line_start":215,"line_end":215,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559127,"byte_end":10559130,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559135,"byte_end":10559212,"line_start":217,"line_end":217,"column_start":5,"column_end":82}},{"value":"/ paired with `try_recv()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559217,"byte_end":10559246,"line_start":218,"line_end":218,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559251,"byte_end":10559254,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being readable. This is a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559259,"byte_end":10559333,"line_start":220,"line_end":220,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_recv()` will return with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559338,"byte_end":10559403,"line_start":221,"line_end":221,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559408,"byte_end":10559440,"line_start":222,"line_end":222,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559445,"byte_end":10559448,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559453,"byte_end":10559467,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559472,"byte_end":10559475,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559480,"byte_end":10559493,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559498,"byte_end":10559531,"line_start":227,"line_end":227,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559536,"byte_end":10559552,"line_start":228,"line_end":228,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559557,"byte_end":10559560,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559565,"byte_end":10559583,"line_start":230,"line_end":230,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559588,"byte_end":10559627,"line_start":231,"line_end":231,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559632,"byte_end":10559660,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559665,"byte_end":10559712,"line_start":233,"line_end":233,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559717,"byte_end":10559774,"line_start":234,"line_end":234,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559779,"byte_end":10559836,"line_start":235,"line_end":235,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559841,"byte_end":10559896,"line_start":236,"line_end":236,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559901,"byte_end":10559939,"line_start":237,"line_end":237,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559944,"byte_end":10559947,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559952,"byte_end":10559966,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10559971,"byte_end":10560020,"line_start":240,"line_end":240,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560025,"byte_end":10560062,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560067,"byte_end":10560070,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560075,"byte_end":10560147,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560152,"byte_end":10560191,"line_start":244,"line_end":244,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560196,"byte_end":10560232,"line_start":245,"line_end":245,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560237,"byte_end":10560240,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560245,"byte_end":10560315,"line_start":247,"line_end":247,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560320,"byte_end":10560378,"line_start":248,"line_end":248,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560383,"byte_end":10560428,"line_start":249,"line_end":249,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560433,"byte_end":10560459,"line_start":250,"line_end":250,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560464,"byte_end":10560516,"line_start":251,"line_end":251,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560521,"byte_end":10560547,"line_start":252,"line_end":252,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560552,"byte_end":10560569,"line_start":253,"line_end":253,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560574,"byte_end":10560646,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560651,"byte_end":10560680,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560685,"byte_end":10560702,"line_start":256,"line_end":256,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560707,"byte_end":10560734,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560739,"byte_end":10560773,"line_start":258,"line_end":258,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560778,"byte_end":10560795,"line_start":259,"line_end":259,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560800,"byte_end":10560813,"line_start":260,"line_end":260,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560818,"byte_end":10560827,"line_start":261,"line_end":261,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560832,"byte_end":10560835,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560840,"byte_end":10560854,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560859,"byte_end":10560864,"line_start":264,"line_end":264,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10560869,"byte_end":10560876,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4995},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561675,"byte_end":10561679,"line_start":292,"line_end":292,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixDatagram> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` bound to the specified path.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561003,"byte_end":10561064,"line_start":271,"line_end":271,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561069,"byte_end":10561072,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561077,"byte_end":10561091,"line_start":273,"line_end":273,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561096,"byte_end":10561103,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561108,"byte_end":10561136,"line_start":275,"line_end":275,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561141,"byte_end":10561161,"line_start":276,"line_end":276,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561166,"byte_end":10561219,"line_start":277,"line_end":277,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561224,"byte_end":10561257,"line_start":278,"line_end":278,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561262,"byte_end":10561288,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561293,"byte_end":10561296,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561301,"byte_end":10561355,"line_start":281,"line_end":281,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561360,"byte_end":10561419,"line_start":282,"line_end":282,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561424,"byte_end":10561449,"line_start":283,"line_end":283,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561454,"byte_end":10561457,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ // Bind the socket to a filesystem path","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561462,"byte_end":10561505,"line_start":285,"line_end":285,"column_start":5,"column_end":48}},{"value":"/ let socket_path = tmp.path().join(\"socket\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561510,"byte_end":10561558,"line_start":286,"line_end":286,"column_start":5,"column_end":53}},{"value":"/ let socket = UnixDatagram::bind(&socket_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561563,"byte_end":10561614,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561619,"byte_end":10561622,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561627,"byte_end":10561639,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561644,"byte_end":10561651,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561656,"byte_end":10561663,"line_start":291,"line_end":291,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4997},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562749,"byte_end":10562753,"line_start":329,"line_end":329,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561863,"byte_end":10561912,"line_start":300,"line_end":300,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561917,"byte_end":10561920,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10561925,"byte_end":10561996,"line_start":302,"line_end":302,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562001,"byte_end":10562054,"line_start":303,"line_end":303,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562059,"byte_end":10562062,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562067,"byte_end":10562081,"line_start":305,"line_end":305,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562086,"byte_end":10562093,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562098,"byte_end":10562126,"line_start":307,"line_end":307,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562131,"byte_end":10562151,"line_start":308,"line_end":308,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562156,"byte_end":10562209,"line_start":309,"line_end":309,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562214,"byte_end":10562247,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562252,"byte_end":10562255,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562260,"byte_end":10562293,"line_start":312,"line_end":312,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562298,"byte_end":10562345,"line_start":313,"line_end":313,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562350,"byte_end":10562353,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ // Since the sockets are paired, the paired send/recv","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562358,"byte_end":10562415,"line_start":315,"line_end":315,"column_start":5,"column_end":62}},{"value":"/ // functions can be used","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562420,"byte_end":10562448,"line_start":316,"line_end":316,"column_start":5,"column_end":33}},{"value":"/ let bytes = b\"hail eris\";","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562453,"byte_end":10562482,"line_start":317,"line_end":317,"column_start":5,"column_end":34}},{"value":"/ sock1.send(bytes).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562487,"byte_end":10562516,"line_start":318,"line_end":318,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562521,"byte_end":10562524,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ let mut buff = vec![0u8; 24];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562529,"byte_end":10562562,"line_start":320,"line_end":320,"column_start":5,"column_end":38}},{"value":"/ let size = sock2.recv(&mut buff).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562567,"byte_end":10562611,"line_start":321,"line_end":321,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562616,"byte_end":10562619,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buff[..size];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562624,"byte_end":10562654,"line_start":323,"line_end":323,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562659,"byte_end":10562688,"line_start":324,"line_end":324,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562693,"byte_end":10562696,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562701,"byte_end":10562713,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562718,"byte_end":10562725,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562730,"byte_end":10562737,"line_start":328,"line_end":328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4998},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564417,"byte_end":10564425,"line_start":373,"line_end":373,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"pub fn from_std(net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UnixDatagram` from a `std::os::unix::net::UnixDatagram`.","sig":null,"attributes":[{"value":"/ Creates new `UnixDatagram` from a `std::os::unix::net::UnixDatagram`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10562965,"byte_end":10563038,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563043,"byte_end":10563046,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UnixDatagram from the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563051,"byte_end":10563123,"line_start":339,"line_end":339,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563128,"byte_end":10563196,"line_start":340,"line_end":340,"column_start":5,"column_end":73}},{"value":"/ nothing about the underlying datagram; it is left up to the user to set","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563201,"byte_end":10563276,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/ it in non-blocking mode.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563281,"byte_end":10563309,"line_start":342,"line_end":342,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563314,"byte_end":10563317,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563322,"byte_end":10563334,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563339,"byte_end":10563342,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563347,"byte_end":10563407,"line_start":346,"line_end":346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563412,"byte_end":10563415,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563420,"byte_end":10563490,"line_start":348,"line_end":348,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a Tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563495,"byte_end":10563568,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563573,"byte_end":10563653,"line_start":350,"line_end":350,"column_start":5,"column_end":85}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563658,"byte_end":10563672,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563677,"byte_end":10563684,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563689,"byte_end":10563717,"line_start":353,"line_end":353,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563722,"byte_end":10563742,"line_start":354,"line_end":354,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563747,"byte_end":10563800,"line_start":355,"line_end":355,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563805,"byte_end":10563838,"line_start":356,"line_end":356,"column_start":5,"column_end":38}},{"value":"/ use std::os::unix::net::UnixDatagram as StdUDS;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563843,"byte_end":10563894,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563899,"byte_end":10563925,"line_start":358,"line_end":358,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563930,"byte_end":10563933,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563938,"byte_end":10563992,"line_start":360,"line_end":360,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10563997,"byte_end":10564056,"line_start":361,"line_end":361,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564061,"byte_end":10564086,"line_start":362,"line_end":362,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564091,"byte_end":10564094,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ // Bind the socket to a filesystem path","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564099,"byte_end":10564142,"line_start":364,"line_end":364,"column_start":5,"column_end":48}},{"value":"/ let socket_path = tmp.path().join(\"socket\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564147,"byte_end":10564195,"line_start":365,"line_end":365,"column_start":5,"column_end":53}},{"value":"/ let std_socket = StdUDS::bind(&socket_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564200,"byte_end":10564249,"line_start":366,"line_end":366,"column_start":5,"column_end":54}},{"value":"/ std_socket.set_nonblocking(true)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564254,"byte_end":10564292,"line_start":367,"line_end":367,"column_start":5,"column_end":43}},{"value":"/ let tokio_socket = UnixDatagram::from_std(std_socket)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564297,"byte_end":10564356,"line_start":368,"line_end":368,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564361,"byte_end":10564364,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564369,"byte_end":10564381,"line_start":370,"line_end":370,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564386,"byte_end":10564393,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564398,"byte_end":10564405,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4999},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10565540,"byte_end":10565548,"line_start":402,"line_end":402,"column_start":12,"column_end":20},"name":"into_std","qualname":"<UnixDatagram>::into_std","value":"pub fn into_std(Self) -> io::Result<std::os::unix::net::UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::UnixDatagram`] into a [`std::os::unix::net::UnixDatagram`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::UnixDatagram`] into a [`std::os::unix::net::UnixDatagram`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564637,"byte_end":10564721,"line_start":379,"line_end":379,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564726,"byte_end":10564729,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::os::unix::net::UnixDatagram`] will have nonblocking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564734,"byte_end":10564809,"line_start":381,"line_end":381,"column_start":5,"column_end":80}},{"value":"/ mode set as `true`.  Use [`set_nonblocking`] to change the blocking mode","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564814,"byte_end":10564890,"line_start":382,"line_end":382,"column_start":5,"column_end":81}},{"value":"/ if needed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564895,"byte_end":10564909,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564914,"byte_end":10564917,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564922,"byte_end":10564936,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564941,"byte_end":10564944,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564949,"byte_end":10564967,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10564972,"byte_end":10564998,"line_start":388,"line_end":388,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10565003,"byte_end":10565006,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10565011,"byte_end":10565029,"line_start":390,"line_end":390,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10565034,"byte_end":10565085,"line_start":391,"line_end":391,"column_start":5,"column_end":56}},{"value":"/     let tokio_socket = tokio::net::UnixDatagram::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10565090,"byte_end":10565164,"line_start":392,"line_end":392,"column_start":5,"column_end":79}},{"value":"/     let std_socket = tokio_socket.into_std()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10565169,"byte_end":10565219,"line_start":393,"line_end":393,"column_start":5,"column_end":55}},{"value":"/     std_socket.set_nonblocking(false)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10565224,"byte_end":10565267,"line_start":394,"line_end":394,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10565272,"byte_end":10565286,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10565291,"byte_end":10565296,"line_start":396,"line_end":396,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10565301,"byte_end":10565308,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10565313,"byte_end":10565316,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ [`tokio::net::UnixDatagram`]: UnixDatagram","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10565321,"byte_end":10565367,"line_start":399,"line_end":399,"column_start":5,"column_end":51}},{"value":"/ [`std::os::unix::net::UnixDatagram`]: std::os::unix::net::UnixDatagram","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10565372,"byte_end":10565446,"line_start":400,"line_end":400,"column_start":5,"column_end":79}},{"value":"/ [`set_nonblocking`]: fn@std::os::unix::net::UnixDatagram::set_nonblocking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10565451,"byte_end":10565528,"line_start":401,"line_end":401,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":5003},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566859,"byte_end":10566866,"line_start":445,"line_end":445,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` which is not bound to any address.","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` which is not bound to any address.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10565946,"byte_end":10566013,"line_start":414,"line_end":414,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566018,"byte_end":10566021,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566026,"byte_end":10566040,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566045,"byte_end":10566052,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566057,"byte_end":10566085,"line_start":418,"line_end":418,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566090,"byte_end":10566110,"line_start":419,"line_end":419,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566115,"byte_end":10566168,"line_start":420,"line_end":420,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566173,"byte_end":10566206,"line_start":421,"line_end":421,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566211,"byte_end":10566237,"line_start":422,"line_end":422,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566242,"byte_end":10566245,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566250,"byte_end":10566281,"line_start":424,"line_end":424,"column_start":5,"column_end":36}},{"value":"/ let tx = UnixDatagram::unbound()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566286,"byte_end":10566324,"line_start":425,"line_end":425,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566329,"byte_end":10566332,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ // Create another, bound socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566337,"byte_end":10566372,"line_start":427,"line_end":427,"column_start":5,"column_end":40}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566377,"byte_end":10566402,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566407,"byte_end":10566447,"line_start":429,"line_end":429,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566452,"byte_end":10566495,"line_start":430,"line_end":430,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566500,"byte_end":10566503,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ // Send to the bound socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566508,"byte_end":10566539,"line_start":432,"line_end":432,"column_start":5,"column_end":36}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566544,"byte_end":10566575,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ tx.send_to(bytes, &rx_path).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566580,"byte_end":10566619,"line_start":434,"line_end":434,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566624,"byte_end":10566627,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566632,"byte_end":10566664,"line_start":436,"line_end":436,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566669,"byte_end":10566722,"line_start":437,"line_end":437,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566727,"byte_end":10566730,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566735,"byte_end":10566764,"line_start":439,"line_end":439,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566769,"byte_end":10566798,"line_start":440,"line_end":440,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566803,"byte_end":10566806,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566811,"byte_end":10566823,"line_start":442,"line_end":442,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566828,"byte_end":10566835,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10566840,"byte_end":10566847,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5004},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568119,"byte_end":10568126,"line_start":487,"line_end":487,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567001,"byte_end":10567050,"line_start":450,"line_end":450,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567055,"byte_end":10567058,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ The `send` method may be used to send data to the specified address.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567063,"byte_end":10567135,"line_start":452,"line_end":452,"column_start":5,"column_end":77}},{"value":"/ `recv` and `recv_from` will only receive data from that address.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567140,"byte_end":10567208,"line_start":453,"line_end":453,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567213,"byte_end":10567216,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567221,"byte_end":10567235,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567240,"byte_end":10567247,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567252,"byte_end":10567280,"line_start":457,"line_end":457,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567285,"byte_end":10567305,"line_start":458,"line_end":458,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567310,"byte_end":10567363,"line_start":459,"line_end":459,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567368,"byte_end":10567401,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567406,"byte_end":10567432,"line_start":461,"line_end":461,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567437,"byte_end":10567440,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567445,"byte_end":10567476,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ let tx = UnixDatagram::unbound()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567481,"byte_end":10567519,"line_start":464,"line_end":464,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567524,"byte_end":10567527,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ // Create another, bound socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567532,"byte_end":10567567,"line_start":466,"line_end":466,"column_start":5,"column_end":40}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567572,"byte_end":10567597,"line_start":467,"line_end":467,"column_start":5,"column_end":30}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567602,"byte_end":10567642,"line_start":468,"line_end":468,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567647,"byte_end":10567690,"line_start":469,"line_end":469,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567695,"byte_end":10567698,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ // Connect to the bound socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567703,"byte_end":10567737,"line_start":471,"line_end":471,"column_start":5,"column_end":39}},{"value":"/ tx.connect(&rx_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567742,"byte_end":10567768,"line_start":472,"line_end":472,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567773,"byte_end":10567776,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ // Send to the bound socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567781,"byte_end":10567812,"line_start":474,"line_end":474,"column_start":5,"column_end":36}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567817,"byte_end":10567848,"line_start":475,"line_end":475,"column_start":5,"column_end":36}},{"value":"/ tx.send(bytes).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567853,"byte_end":10567879,"line_start":476,"line_end":476,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567884,"byte_end":10567887,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567892,"byte_end":10567924,"line_start":478,"line_end":478,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567929,"byte_end":10567982,"line_start":479,"line_end":479,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567987,"byte_end":10567990,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10567995,"byte_end":10568024,"line_start":481,"line_end":481,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568029,"byte_end":10568058,"line_start":482,"line_end":482,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568063,"byte_end":10568066,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568071,"byte_end":10568083,"line_start":484,"line_end":484,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568088,"byte_end":10568095,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568100,"byte_end":10568107,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5006},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568973,"byte_end":10568977,"line_start":517,"line_end":517,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568220,"byte_end":10568270,"line_start":491,"line_end":491,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568275,"byte_end":10568278,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568283,"byte_end":10568297,"line_start":493,"line_end":493,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568302,"byte_end":10568309,"line_start":494,"line_end":494,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568314,"byte_end":10568342,"line_start":495,"line_end":495,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568347,"byte_end":10568367,"line_start":496,"line_end":496,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568372,"byte_end":10568425,"line_start":497,"line_end":497,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568430,"byte_end":10568463,"line_start":498,"line_end":498,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568468,"byte_end":10568471,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568476,"byte_end":10568509,"line_start":500,"line_end":500,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568514,"byte_end":10568561,"line_start":501,"line_end":501,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568566,"byte_end":10568569,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ // Since the sockets are paired, the paired send/recv","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568574,"byte_end":10568631,"line_start":503,"line_end":503,"column_start":5,"column_end":62}},{"value":"/ // functions can be used","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568636,"byte_end":10568664,"line_start":504,"line_end":504,"column_start":5,"column_end":33}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568669,"byte_end":10568700,"line_start":505,"line_end":505,"column_start":5,"column_end":36}},{"value":"/ sock1.send(bytes).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568705,"byte_end":10568734,"line_start":506,"line_end":506,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568739,"byte_end":10568742,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ let mut buff = vec![0u8; 24];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568747,"byte_end":10568780,"line_start":508,"line_end":508,"column_start":5,"column_end":38}},{"value":"/ let size = sock2.recv(&mut buff).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568785,"byte_end":10568829,"line_start":509,"line_end":509,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568834,"byte_end":10568837,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buff[..size];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568842,"byte_end":10568872,"line_start":511,"line_end":511,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568877,"byte_end":10568906,"line_start":512,"line_end":512,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568911,"byte_end":10568914,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568919,"byte_end":10568931,"line_start":514,"line_end":514,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568936,"byte_end":10568943,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10568948,"byte_end":10568955,"line_start":516,"line_end":516,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5010},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570407,"byte_end":10570415,"line_start":562,"line_end":562,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UnixDatagram>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send a datagram to the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to send a datagram to the peer without waiting.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569158,"byte_end":10569213,"line_start":524,"line_end":524,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569218,"byte_end":10569221,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569226,"byte_end":10569240,"line_start":526,"line_end":526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569245,"byte_end":10569248,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569253,"byte_end":10569266,"line_start":528,"line_end":528,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569271,"byte_end":10569304,"line_start":529,"line_end":529,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569309,"byte_end":10569325,"line_start":530,"line_end":530,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569330,"byte_end":10569333,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569338,"byte_end":10569356,"line_start":532,"line_end":532,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569361,"byte_end":10569400,"line_start":533,"line_end":533,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569405,"byte_end":10569452,"line_start":534,"line_end":534,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569457,"byte_end":10569514,"line_start":535,"line_end":535,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569519,"byte_end":10569576,"line_start":536,"line_end":536,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569581,"byte_end":10569636,"line_start":537,"line_end":537,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569641,"byte_end":10569679,"line_start":538,"line_end":538,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569684,"byte_end":10569687,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569692,"byte_end":10569706,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569711,"byte_end":10569760,"line_start":541,"line_end":541,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569765,"byte_end":10569802,"line_start":542,"line_end":542,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569807,"byte_end":10569810,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569815,"byte_end":10569885,"line_start":544,"line_end":544,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569890,"byte_end":10569948,"line_start":545,"line_end":545,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10569953,"byte_end":10570004,"line_start":546,"line_end":546,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570009,"byte_end":10570035,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570040,"byte_end":10570066,"line_start":548,"line_end":548,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570071,"byte_end":10570088,"line_start":549,"line_end":549,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570093,"byte_end":10570165,"line_start":550,"line_end":550,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570170,"byte_end":10570199,"line_start":551,"line_end":551,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570204,"byte_end":10570221,"line_start":552,"line_end":552,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570226,"byte_end":10570253,"line_start":553,"line_end":553,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570258,"byte_end":10570292,"line_start":554,"line_end":554,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570297,"byte_end":10570314,"line_start":555,"line_end":555,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570319,"byte_end":10570332,"line_start":556,"line_end":556,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570337,"byte_end":10570346,"line_start":557,"line_end":557,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570351,"byte_end":10570354,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570359,"byte_end":10570373,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570378,"byte_end":10570383,"line_start":560,"line_end":560,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570388,"byte_end":10570395,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5012},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571798,"byte_end":10571809,"line_start":605,"line_end":605,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UnixDatagram>::try_send_to","value":"pub fn try_send_to<P>(&Self, &[u8], P) -> io::Result<usize> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Try to send a datagram to the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to send a datagram to the peer without waiting.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570575,"byte_end":10570630,"line_start":568,"line_end":568,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570635,"byte_end":10570638,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570643,"byte_end":10570657,"line_start":570,"line_end":570,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570662,"byte_end":10570665,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570670,"byte_end":10570683,"line_start":572,"line_end":572,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570688,"byte_end":10570721,"line_start":573,"line_end":573,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570726,"byte_end":10570742,"line_start":574,"line_end":574,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570747,"byte_end":10570750,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570755,"byte_end":10570773,"line_start":576,"line_end":576,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570778,"byte_end":10570817,"line_start":577,"line_end":577,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570822,"byte_end":10570869,"line_start":578,"line_end":578,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570874,"byte_end":10570931,"line_start":579,"line_end":579,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570936,"byte_end":10570993,"line_start":580,"line_end":580,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10570998,"byte_end":10571053,"line_start":581,"line_end":581,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571058,"byte_end":10571061,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571066,"byte_end":10571080,"line_start":583,"line_end":583,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571085,"byte_end":10571134,"line_start":584,"line_end":584,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571139,"byte_end":10571176,"line_start":585,"line_end":585,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571181,"byte_end":10571184,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571189,"byte_end":10571259,"line_start":587,"line_end":587,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571264,"byte_end":10571322,"line_start":588,"line_end":588,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send_to(b\"hello world\", &server_path) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571327,"byte_end":10571395,"line_start":589,"line_end":589,"column_start":5,"column_end":73}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571400,"byte_end":10571426,"line_start":590,"line_end":590,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571431,"byte_end":10571457,"line_start":591,"line_end":591,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571462,"byte_end":10571479,"line_start":592,"line_end":592,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571484,"byte_end":10571556,"line_start":593,"line_end":593,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571561,"byte_end":10571590,"line_start":594,"line_end":594,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571595,"byte_end":10571612,"line_start":595,"line_end":595,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571617,"byte_end":10571644,"line_start":596,"line_end":596,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571649,"byte_end":10571683,"line_start":597,"line_end":597,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571688,"byte_end":10571705,"line_start":598,"line_end":598,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571710,"byte_end":10571723,"line_start":599,"line_end":599,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571728,"byte_end":10571737,"line_start":600,"line_end":600,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571742,"byte_end":10571745,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571750,"byte_end":10571764,"line_start":602,"line_end":602,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571769,"byte_end":10571774,"line_start":603,"line_end":603,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10571779,"byte_end":10571786,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5015},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572769,"byte_end":10572773,"line_start":640,"line_end":640,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572032,"byte_end":10572066,"line_start":614,"line_end":614,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572071,"byte_end":10572074,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572079,"byte_end":10572093,"line_start":616,"line_end":616,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572098,"byte_end":10572105,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572110,"byte_end":10572138,"line_start":618,"line_end":618,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572143,"byte_end":10572163,"line_start":619,"line_end":619,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572168,"byte_end":10572221,"line_start":620,"line_end":620,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572226,"byte_end":10572259,"line_start":621,"line_end":621,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572264,"byte_end":10572267,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572272,"byte_end":10572305,"line_start":623,"line_end":623,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572310,"byte_end":10572357,"line_start":624,"line_end":624,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572362,"byte_end":10572365,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ // Since the sockets are paired, the paired send/recv","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572370,"byte_end":10572427,"line_start":626,"line_end":626,"column_start":5,"column_end":62}},{"value":"/ // functions can be used","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572432,"byte_end":10572460,"line_start":627,"line_end":627,"column_start":5,"column_end":33}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572465,"byte_end":10572496,"line_start":628,"line_end":628,"column_start":5,"column_end":36}},{"value":"/ sock1.send(bytes).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572501,"byte_end":10572530,"line_start":629,"line_end":629,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572535,"byte_end":10572538,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ let mut buff = vec![0u8; 24];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572543,"byte_end":10572576,"line_start":631,"line_end":631,"column_start":5,"column_end":38}},{"value":"/ let size = sock2.recv(&mut buff).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572581,"byte_end":10572625,"line_start":632,"line_end":632,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572630,"byte_end":10572633,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buff[..size];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572638,"byte_end":10572668,"line_start":634,"line_end":634,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572673,"byte_end":10572702,"line_start":635,"line_end":635,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572707,"byte_end":10572710,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572715,"byte_end":10572727,"line_start":637,"line_end":637,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572732,"byte_end":10572739,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572744,"byte_end":10572751,"line_start":639,"line_end":639,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5019},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10574466,"byte_end":10574474,"line_start":691,"line_end":691,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnixDatagram>::try_recv","value":"pub fn try_recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a datagram from the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to receive a datagram from the peer without waiting.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10572958,"byte_end":10573018,"line_start":647,"line_end":647,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573023,"byte_end":10573026,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573031,"byte_end":10573045,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573050,"byte_end":10573053,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573058,"byte_end":10573071,"line_start":651,"line_end":651,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573076,"byte_end":10573109,"line_start":652,"line_end":652,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573114,"byte_end":10573130,"line_start":653,"line_end":653,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573135,"byte_end":10573138,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573143,"byte_end":10573161,"line_start":655,"line_end":655,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573166,"byte_end":10573205,"line_start":656,"line_end":656,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573210,"byte_end":10573238,"line_start":657,"line_end":657,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573243,"byte_end":10573290,"line_start":658,"line_end":658,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573295,"byte_end":10573352,"line_start":659,"line_end":659,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573357,"byte_end":10573414,"line_start":660,"line_end":660,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573419,"byte_end":10573474,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573479,"byte_end":10573517,"line_start":662,"line_end":662,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573522,"byte_end":10573525,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573530,"byte_end":10573544,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573549,"byte_end":10573598,"line_start":665,"line_end":665,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573603,"byte_end":10573640,"line_start":666,"line_end":666,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573645,"byte_end":10573648,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573653,"byte_end":10573725,"line_start":668,"line_end":668,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573730,"byte_end":10573769,"line_start":669,"line_end":669,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573774,"byte_end":10573810,"line_start":670,"line_end":670,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573815,"byte_end":10573818,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573823,"byte_end":10573893,"line_start":672,"line_end":672,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573898,"byte_end":10573956,"line_start":673,"line_end":673,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10573961,"byte_end":10574006,"line_start":674,"line_end":674,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10574011,"byte_end":10574037,"line_start":675,"line_end":675,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10574042,"byte_end":10574094,"line_start":676,"line_end":676,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10574099,"byte_end":10574125,"line_start":677,"line_end":677,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10574130,"byte_end":10574147,"line_start":678,"line_end":678,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10574152,"byte_end":10574224,"line_start":679,"line_end":679,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10574229,"byte_end":10574258,"line_start":680,"line_end":680,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10574263,"byte_end":10574280,"line_start":681,"line_end":681,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10574285,"byte_end":10574312,"line_start":682,"line_end":682,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10574317,"byte_end":10574351,"line_start":683,"line_end":683,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10574356,"byte_end":10574373,"line_start":684,"line_end":684,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10574378,"byte_end":10574391,"line_start":685,"line_end":685,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10574396,"byte_end":10574405,"line_start":686,"line_end":686,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10574410,"byte_end":10574413,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10574418,"byte_end":10574432,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10574437,"byte_end":10574442,"line_start":689,"line_end":689,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10574447,"byte_end":10574454,"line_start":690,"line_end":690,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5498},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10576198,"byte_end":10576215,"line_start":739,"line_end":739,"column_start":16,"column_end":33},"name":"try_recv_buf_from","qualname":"<UnixDatagram>::try_recv_buf_from","value":"pub fn try_recv_buf_from<B: BufMut>(&Self, &mut B)\n-> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the socket without waiting.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5501},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10578579,"byte_end":10578591,"line_start":802,"line_end":802,"column_start":16,"column_end":28},"name":"try_recv_buf","qualname":"<UnixDatagram>::try_recv_buf","value":"pub fn try_recv_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5021},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580271,"byte_end":10580278,"line_start":854,"line_end":854,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ Self, &'_ [u8], P) -> /*impl Trait*/ where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579196,"byte_end":10579250,"line_start":821,"line_end":821,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579255,"byte_end":10579258,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579263,"byte_end":10579277,"line_start":823,"line_end":823,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579282,"byte_end":10579289,"line_start":824,"line_end":824,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579294,"byte_end":10579322,"line_start":825,"line_end":825,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579327,"byte_end":10579347,"line_start":826,"line_end":826,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579352,"byte_end":10579405,"line_start":827,"line_end":827,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579410,"byte_end":10579443,"line_start":828,"line_end":828,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579448,"byte_end":10579474,"line_start":829,"line_end":829,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579479,"byte_end":10579482,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579487,"byte_end":10579541,"line_start":831,"line_end":831,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579546,"byte_end":10579605,"line_start":832,"line_end":832,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579610,"byte_end":10579635,"line_start":833,"line_end":833,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579640,"byte_end":10579643,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ // Bind each socket to a filesystem path","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579648,"byte_end":10579692,"line_start":835,"line_end":835,"column_start":5,"column_end":49}},{"value":"/ let tx_path = tmp.path().join(\"tx\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579697,"byte_end":10579737,"line_start":836,"line_end":836,"column_start":5,"column_end":45}},{"value":"/ let tx = UnixDatagram::bind(&tx_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579742,"byte_end":10579785,"line_start":837,"line_end":837,"column_start":5,"column_end":48}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579790,"byte_end":10579830,"line_start":838,"line_end":838,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579835,"byte_end":10579878,"line_start":839,"line_end":839,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579883,"byte_end":10579886,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579891,"byte_end":10579922,"line_start":841,"line_end":841,"column_start":5,"column_end":36}},{"value":"/ tx.send_to(bytes, &rx_path).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579927,"byte_end":10579966,"line_start":842,"line_end":842,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579971,"byte_end":10579974,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10579979,"byte_end":10580011,"line_start":844,"line_end":844,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580016,"byte_end":10580069,"line_start":845,"line_end":845,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580074,"byte_end":10580077,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580082,"byte_end":10580111,"line_start":847,"line_end":847,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580116,"byte_end":10580145,"line_start":848,"line_end":848,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(addr.as_pathname().unwrap(), &tx_path);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580150,"byte_end":10580204,"line_start":849,"line_end":849,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580209,"byte_end":10580212,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580217,"byte_end":10580229,"line_start":851,"line_end":851,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580234,"byte_end":10580241,"line_start":852,"line_end":852,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580246,"byte_end":10580253,"line_start":853,"line_end":853,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5026},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581586,"byte_end":10581595,"line_start":897,"line_end":897,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580531,"byte_end":10580565,"line_start":864,"line_end":864,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580570,"byte_end":10580573,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580578,"byte_end":10580592,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580597,"byte_end":10580604,"line_start":867,"line_end":867,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580609,"byte_end":10580637,"line_start":868,"line_end":868,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580642,"byte_end":10580662,"line_start":869,"line_end":869,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580667,"byte_end":10580720,"line_start":870,"line_end":870,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580725,"byte_end":10580758,"line_start":871,"line_end":871,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580763,"byte_end":10580789,"line_start":872,"line_end":872,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580794,"byte_end":10580797,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580802,"byte_end":10580856,"line_start":874,"line_end":874,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580861,"byte_end":10580920,"line_start":875,"line_end":875,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580925,"byte_end":10580950,"line_start":876,"line_end":876,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580955,"byte_end":10580958,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ // Bind each socket to a filesystem path","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10580963,"byte_end":10581007,"line_start":878,"line_end":878,"column_start":5,"column_end":49}},{"value":"/ let tx_path = tmp.path().join(\"tx\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581012,"byte_end":10581052,"line_start":879,"line_end":879,"column_start":5,"column_end":45}},{"value":"/ let tx = UnixDatagram::bind(&tx_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581057,"byte_end":10581100,"line_start":880,"line_end":880,"column_start":5,"column_end":48}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581105,"byte_end":10581145,"line_start":881,"line_end":881,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581150,"byte_end":10581193,"line_start":882,"line_end":882,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581198,"byte_end":10581201,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581206,"byte_end":10581237,"line_start":884,"line_end":884,"column_start":5,"column_end":36}},{"value":"/ tx.send_to(bytes, &rx_path).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581242,"byte_end":10581281,"line_start":885,"line_end":885,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581286,"byte_end":10581289,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581294,"byte_end":10581326,"line_start":887,"line_end":887,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581331,"byte_end":10581384,"line_start":888,"line_end":888,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581389,"byte_end":10581392,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581397,"byte_end":10581426,"line_start":890,"line_end":890,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581431,"byte_end":10581460,"line_start":891,"line_end":891,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(addr.as_pathname().unwrap(), &tx_path);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581465,"byte_end":10581519,"line_start":892,"line_end":892,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581524,"byte_end":10581527,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581532,"byte_end":10581544,"line_start":894,"line_end":894,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581549,"byte_end":10581556,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581561,"byte_end":10581568,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5030},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10582560,"byte_end":10582574,"line_start":924,"line_end":924,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UnixDatagram>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram on the specified address.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram on the specified address.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581865,"byte_end":10581932,"line_start":907,"line_end":907,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581937,"byte_end":10581940,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10581945,"byte_end":10582029,"line_start":909,"line_end":909,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10582034,"byte_end":10582116,"line_start":910,"line_end":910,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10582121,"byte_end":10582142,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10582147,"byte_end":10582150,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10582155,"byte_end":10582173,"line_start":913,"line_end":913,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10582178,"byte_end":10582181,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10582186,"byte_end":10582211,"line_start":915,"line_end":915,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10582216,"byte_end":10582219,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10582224,"byte_end":10582280,"line_start":917,"line_end":917,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10582285,"byte_end":10582375,"line_start":918,"line_end":918,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10582380,"byte_end":10582435,"line_start":919,"line_end":919,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10582440,"byte_end":10582443,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10582448,"byte_end":10582460,"line_start":921,"line_end":921,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10582465,"byte_end":10582468,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10582473,"byte_end":10582548,"line_start":923,"line_end":923,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":5031},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10583883,"byte_end":10583895,"line_start":963,"line_end":963,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UnixDatagram>::poll_send_to","value":"pub fn poll_send_to<P>(&Self, &mut Context, &[u8], P)\n-> Poll<io::Result<usize>> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data to the specified address.","sig":null,"attributes":[{"value":"/ Attempts to send data to the specified address.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10583234,"byte_end":10583285,"line_start":946,"line_end":946,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10583290,"byte_end":10583293,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction, only the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10583298,"byte_end":10583382,"line_start":948,"line_end":948,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10583387,"byte_end":10583469,"line_start":949,"line_end":949,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10583474,"byte_end":10583495,"line_start":950,"line_end":950,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10583500,"byte_end":10583503,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10583508,"byte_end":10583526,"line_start":952,"line_end":952,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10583531,"byte_end":10583534,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10583539,"byte_end":10583564,"line_start":954,"line_end":954,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10583569,"byte_end":10583572,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to write","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10583577,"byte_end":10583634,"line_start":956,"line_end":956,"column_start":5,"column_end":62}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10583639,"byte_end":10583698,"line_start":957,"line_end":957,"column_start":5,"column_end":64}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10583703,"byte_end":10583758,"line_start":958,"line_end":958,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10583763,"byte_end":10583766,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10583771,"byte_end":10583783,"line_start":960,"line_end":960,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10583788,"byte_end":10583791,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10583796,"byte_end":10583871,"line_start":962,"line_end":962,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":5034},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585092,"byte_end":10585101,"line_start":1000,"line_end":1000,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UnixDatagram>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to the remote address to which it\n was previously `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to the remote address to which it","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584185,"byte_end":10584258,"line_start":977,"line_end":977,"column_start":5,"column_end":78}},{"value":"/ was previously `connect`ed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584263,"byte_end":10584294,"line_start":978,"line_end":978,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584299,"byte_end":10584302,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584307,"byte_end":10584379,"line_start":980,"line_end":980,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584384,"byte_end":10584441,"line_start":981,"line_end":981,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584446,"byte_end":10584449,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584454,"byte_end":10584529,"line_start":983,"line_end":983,"column_start":5,"column_end":80}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584534,"byte_end":10584609,"line_start":984,"line_end":984,"column_start":5,"column_end":80}},{"value":"/ be scheduled to receive a wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584614,"byte_end":10584651,"line_start":985,"line_end":985,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584656,"byte_end":10584659,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584664,"byte_end":10584682,"line_start":987,"line_end":987,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584687,"byte_end":10584690,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584695,"byte_end":10584720,"line_start":989,"line_end":989,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584725,"byte_end":10584728,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not available to write","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584733,"byte_end":10584794,"line_start":991,"line_end":991,"column_start":5,"column_end":66}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584799,"byte_end":10584857,"line_start":992,"line_end":992,"column_start":5,"column_end":63}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584862,"byte_end":10584917,"line_start":993,"line_end":993,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584922,"byte_end":10584925,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584930,"byte_end":10584942,"line_start":995,"line_end":995,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584947,"byte_end":10584950,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10584955,"byte_end":10585030,"line_start":997,"line_end":997,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585035,"byte_end":10585038,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585043,"byte_end":10585080,"line_start":999,"line_end":999,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5036},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10586220,"byte_end":10586229,"line_start":1029,"line_end":1029,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnixDatagram>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram message on the socket from the remote\n address to which it is `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram message on the socket from the remote","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585280,"byte_end":10585359,"line_start":1006,"line_end":1006,"column_start":5,"column_end":84}},{"value":"/ address to which it is `connect`ed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585364,"byte_end":10585403,"line_start":1007,"line_end":1007,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585408,"byte_end":10585411,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. This method","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585416,"byte_end":10585500,"line_start":1009,"line_end":1009,"column_start":5,"column_end":89}},{"value":"/ resolves to an error if the socket is not connected.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585505,"byte_end":10585561,"line_start":1010,"line_end":1010,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585566,"byte_end":10585569,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585574,"byte_end":10585658,"line_start":1012,"line_end":1012,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585663,"byte_end":10585745,"line_start":1013,"line_end":1013,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585750,"byte_end":10585771,"line_start":1014,"line_end":1014,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585776,"byte_end":10585779,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585784,"byte_end":10585802,"line_start":1016,"line_end":1016,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585807,"byte_end":10585810,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585815,"byte_end":10585840,"line_start":1018,"line_end":1018,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585845,"byte_end":10585848,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585853,"byte_end":10585909,"line_start":1020,"line_end":1020,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(()))` reads data `ReadBuf` if the socket is ready","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585914,"byte_end":10585985,"line_start":1021,"line_end":1021,"column_start":5,"column_end":76}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10585990,"byte_end":10586045,"line_start":1022,"line_end":1022,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10586050,"byte_end":10586053,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10586058,"byte_end":10586070,"line_start":1024,"line_end":1024,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10586075,"byte_end":10586078,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10586083,"byte_end":10586158,"line_start":1026,"line_end":1026,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10586163,"byte_end":10586166,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10586171,"byte_end":10586208,"line_start":1028,"line_end":1028,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5037},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588298,"byte_end":10588311,"line_start":1090,"line_end":1090,"column_start":12,"column_end":25},"name":"try_recv_from","qualname":"<UnixDatagram>::try_recv_from","value":"pub fn try_recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the socket without waiting.","sig":null,"attributes":[{"value":"/ Try to receive data from the socket without waiting.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10586823,"byte_end":10586879,"line_start":1047,"line_end":1047,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10586884,"byte_end":10586887,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10586892,"byte_end":10586906,"line_start":1049,"line_end":1049,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10586911,"byte_end":10586914,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10586919,"byte_end":10586932,"line_start":1051,"line_end":1051,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10586937,"byte_end":10586970,"line_start":1052,"line_end":1052,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10586975,"byte_end":10586991,"line_start":1053,"line_end":1053,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10586996,"byte_end":10586999,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587004,"byte_end":10587022,"line_start":1055,"line_end":1055,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587027,"byte_end":10587066,"line_start":1056,"line_end":1056,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587071,"byte_end":10587099,"line_start":1057,"line_end":1057,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587104,"byte_end":10587151,"line_start":1058,"line_end":1058,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587156,"byte_end":10587213,"line_start":1059,"line_end":1059,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587218,"byte_end":10587275,"line_start":1060,"line_end":1060,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587280,"byte_end":10587335,"line_start":1061,"line_end":1061,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587340,"byte_end":10587343,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587348,"byte_end":10587362,"line_start":1063,"line_end":1063,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587367,"byte_end":10587416,"line_start":1064,"line_end":1064,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587421,"byte_end":10587458,"line_start":1065,"line_end":1065,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587463,"byte_end":10587466,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587471,"byte_end":10587543,"line_start":1067,"line_end":1067,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587548,"byte_end":10587587,"line_start":1068,"line_end":1068,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587592,"byte_end":10587628,"line_start":1069,"line_end":1069,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587633,"byte_end":10587636,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587641,"byte_end":10587711,"line_start":1071,"line_end":1071,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587716,"byte_end":10587774,"line_start":1072,"line_end":1072,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv_from(&mut buf) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587779,"byte_end":10587829,"line_start":1073,"line_end":1073,"column_start":5,"column_end":55}},{"value":"/             Ok((n, _addr)) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587834,"byte_end":10587869,"line_start":1074,"line_end":1074,"column_start":5,"column_end":40}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587874,"byte_end":10587926,"line_start":1075,"line_end":1075,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587931,"byte_end":10587957,"line_start":1076,"line_end":1076,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587962,"byte_end":10587979,"line_start":1077,"line_end":1077,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10587984,"byte_end":10588056,"line_start":1078,"line_end":1078,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588061,"byte_end":10588090,"line_start":1079,"line_end":1079,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588095,"byte_end":10588112,"line_start":1080,"line_end":1080,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588117,"byte_end":10588144,"line_start":1081,"line_end":1081,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588149,"byte_end":10588183,"line_start":1082,"line_end":1082,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588188,"byte_end":10588205,"line_start":1083,"line_end":1083,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588210,"byte_end":10588223,"line_start":1084,"line_end":1084,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588228,"byte_end":10588237,"line_start":1085,"line_end":1085,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588242,"byte_end":10588245,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588250,"byte_end":10588264,"line_start":1087,"line_end":1087,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588269,"byte_end":10588274,"line_start":1088,"line_end":1088,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588279,"byte_end":10588286,"line_start":1089,"line_end":1089,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5039},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589760,"byte_end":10589770,"line_start":1139,"line_end":1139,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588560,"byte_end":10588619,"line_start":1099,"line_end":1099,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588624,"byte_end":10588627,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588632,"byte_end":10588646,"line_start":1101,"line_end":1101,"column_start":5,"column_end":19}},{"value":"/ For a socket bound to a local path","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588651,"byte_end":10588689,"line_start":1102,"line_end":1102,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588694,"byte_end":10588701,"line_start":1103,"line_end":1103,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588706,"byte_end":10588734,"line_start":1104,"line_end":1104,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588739,"byte_end":10588759,"line_start":1105,"line_end":1105,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588764,"byte_end":10588817,"line_start":1106,"line_end":1106,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588822,"byte_end":10588855,"line_start":1107,"line_end":1107,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588860,"byte_end":10588886,"line_start":1108,"line_end":1108,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588891,"byte_end":10588894,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588899,"byte_end":10588953,"line_start":1110,"line_end":1110,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10588958,"byte_end":10589017,"line_start":1111,"line_end":1111,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589022,"byte_end":10589047,"line_start":1112,"line_end":1112,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589052,"byte_end":10589055,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ // Bind socket to a filesystem path","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589060,"byte_end":10589099,"line_start":1114,"line_end":1114,"column_start":5,"column_end":44}},{"value":"/ let socket_path = tmp.path().join(\"socket\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589104,"byte_end":10589152,"line_start":1115,"line_end":1115,"column_start":5,"column_end":53}},{"value":"/ let socket = UnixDatagram::bind(&socket_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589157,"byte_end":10589208,"line_start":1116,"line_end":1116,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589213,"byte_end":10589216,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.local_addr()?.as_pathname().unwrap(), &socket_path);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589221,"byte_end":10589295,"line_start":1118,"line_end":1118,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589300,"byte_end":10589303,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589308,"byte_end":10589320,"line_start":1120,"line_end":1120,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589325,"byte_end":10589332,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589337,"byte_end":10589344,"line_start":1122,"line_end":1122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589349,"byte_end":10589352,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ For an unbound socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589357,"byte_end":10589382,"line_start":1124,"line_end":1124,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589387,"byte_end":10589394,"line_start":1125,"line_end":1125,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589399,"byte_end":10589427,"line_start":1126,"line_end":1126,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589432,"byte_end":10589452,"line_start":1127,"line_end":1127,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589457,"byte_end":10589510,"line_start":1128,"line_end":1128,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589515,"byte_end":10589548,"line_start":1129,"line_end":1129,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589553,"byte_end":10589556,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589561,"byte_end":10589592,"line_start":1131,"line_end":1131,"column_start":5,"column_end":36}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589597,"byte_end":10589639,"line_start":1132,"line_end":1132,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589644,"byte_end":10589647,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ assert!(socket.local_addr()?.is_unnamed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589652,"byte_end":10589699,"line_start":1134,"line_end":1134,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589704,"byte_end":10589707,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589712,"byte_end":10589724,"line_start":1136,"line_end":1136,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589729,"byte_end":10589736,"line_start":1137,"line_end":1137,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589741,"byte_end":10589748,"line_start":1138,"line_end":1138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5040},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591123,"byte_end":10591132,"line_start":1188,"line_end":1188,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589862,"byte_end":10589908,"line_start":1143,"line_end":1143,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589913,"byte_end":10589916,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589921,"byte_end":10589980,"line_start":1145,"line_end":1145,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589985,"byte_end":10589988,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10589993,"byte_end":10590007,"line_start":1147,"line_end":1147,"column_start":5,"column_end":19}},{"value":"/ For a peer with a local path","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590012,"byte_end":10590044,"line_start":1148,"line_end":1148,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590049,"byte_end":10590056,"line_start":1149,"line_end":1149,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590061,"byte_end":10590089,"line_start":1150,"line_end":1150,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590094,"byte_end":10590114,"line_start":1151,"line_end":1151,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590119,"byte_end":10590172,"line_start":1152,"line_end":1152,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590177,"byte_end":10590210,"line_start":1153,"line_end":1153,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590215,"byte_end":10590241,"line_start":1154,"line_end":1154,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590246,"byte_end":10590249,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590254,"byte_end":10590285,"line_start":1156,"line_end":1156,"column_start":5,"column_end":36}},{"value":"/ let tx = UnixDatagram::unbound()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590290,"byte_end":10590328,"line_start":1157,"line_end":1157,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590333,"byte_end":10590336,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8}},{"value":"/ // Create another, bound socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590341,"byte_end":10590376,"line_start":1159,"line_end":1159,"column_start":5,"column_end":40}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590381,"byte_end":10590406,"line_start":1160,"line_end":1160,"column_start":5,"column_end":30}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590411,"byte_end":10590451,"line_start":1161,"line_end":1161,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590456,"byte_end":10590499,"line_start":1162,"line_end":1162,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590504,"byte_end":10590507,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ // Connect to the bound socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590512,"byte_end":10590546,"line_start":1164,"line_end":1164,"column_start":5,"column_end":39}},{"value":"/ tx.connect(&rx_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590551,"byte_end":10590577,"line_start":1165,"line_end":1165,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590582,"byte_end":10590585,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(tx.peer_addr()?.as_pathname().unwrap(), &rx_path);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590590,"byte_end":10590655,"line_start":1167,"line_end":1167,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590660,"byte_end":10590663,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590668,"byte_end":10590680,"line_start":1169,"line_end":1169,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590685,"byte_end":10590692,"line_start":1170,"line_end":1170,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590697,"byte_end":10590704,"line_start":1171,"line_end":1171,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590709,"byte_end":10590712,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ For an unbound peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590717,"byte_end":10590740,"line_start":1173,"line_end":1173,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590745,"byte_end":10590752,"line_start":1174,"line_end":1174,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590757,"byte_end":10590785,"line_start":1175,"line_end":1175,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590790,"byte_end":10590810,"line_start":1176,"line_end":1176,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590815,"byte_end":10590868,"line_start":1177,"line_end":1177,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590873,"byte_end":10590906,"line_start":1178,"line_end":1178,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590911,"byte_end":10590914,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590919,"byte_end":10590952,"line_start":1180,"line_end":1180,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10590957,"byte_end":10591004,"line_start":1181,"line_end":1181,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591009,"byte_end":10591012,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ assert!(sock1.peer_addr()?.is_unnamed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591017,"byte_end":10591062,"line_start":1183,"line_end":1183,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591067,"byte_end":10591070,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591075,"byte_end":10591087,"line_start":1185,"line_end":1185,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591092,"byte_end":10591099,"line_start":1186,"line_end":1186,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591104,"byte_end":10591111,"line_start":1187,"line_end":1187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5041},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591732,"byte_end":10591742,"line_start":1211,"line_end":1211,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591223,"byte_end":10591270,"line_start":1192,"line_end":1192,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591275,"byte_end":10591278,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591283,"byte_end":10591297,"line_start":1194,"line_end":1194,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591302,"byte_end":10591309,"line_start":1195,"line_end":1195,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591314,"byte_end":10591342,"line_start":1196,"line_end":1196,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591347,"byte_end":10591367,"line_start":1197,"line_end":1197,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591372,"byte_end":10591425,"line_start":1198,"line_end":1198,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591430,"byte_end":10591463,"line_start":1199,"line_end":1199,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591468,"byte_end":10591471,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591476,"byte_end":10591507,"line_start":1201,"line_end":1201,"column_start":5,"column_end":36}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591512,"byte_end":10591554,"line_start":1202,"line_end":1202,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591559,"byte_end":10591562,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ if let Ok(Some(err)) = socket.take_error() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591567,"byte_end":10591615,"line_start":1204,"line_end":1204,"column_start":5,"column_end":53}},{"value":"/     println!(\"Got error: {:?}\", err);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591620,"byte_end":10591661,"line_start":1205,"line_end":1205,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591666,"byte_end":10591671,"line_start":1206,"line_end":1206,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591676,"byte_end":10591679,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591684,"byte_end":10591696,"line_start":1208,"line_end":1208,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591701,"byte_end":10591708,"line_start":1209,"line_end":1209,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591713,"byte_end":10591720,"line_start":1210,"line_end":1210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5042},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592983,"byte_end":10592991,"line_start":1247,"line_end":1247,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591825,"byte_end":10591891,"line_start":1215,"line_end":1215,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591896,"byte_end":10591899,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591904,"byte_end":10591972,"line_start":1217,"line_end":1217,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10591977,"byte_end":10592047,"line_start":1218,"line_end":1218,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592052,"byte_end":10592094,"line_start":1219,"line_end":1219,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592099,"byte_end":10592102,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592107,"byte_end":10592121,"line_start":1221,"line_end":1221,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592126,"byte_end":10592133,"line_start":1222,"line_end":1222,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592138,"byte_end":10592166,"line_start":1223,"line_end":1223,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592171,"byte_end":10592191,"line_start":1224,"line_end":1224,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592196,"byte_end":10592249,"line_start":1225,"line_end":1225,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592254,"byte_end":10592287,"line_start":1226,"line_end":1226,"column_start":5,"column_end":38}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592292,"byte_end":10592319,"line_start":1227,"line_end":1227,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592324,"byte_end":10592327,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592332,"byte_end":10592363,"line_start":1229,"line_end":1229,"column_start":5,"column_end":36}},{"value":"/ let (socket, other) = UnixDatagram::pair()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592368,"byte_end":10592416,"line_start":1230,"line_end":1230,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592421,"byte_end":10592424,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ socket.shutdown(Shutdown::Both)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592429,"byte_end":10592466,"line_start":1232,"line_end":1232,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592471,"byte_end":10592474,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ // NOTE: the following commented out code does NOT work as expected.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592479,"byte_end":10592551,"line_start":1234,"line_end":1234,"column_start":5,"column_end":77}},{"value":"/ // Due to an underlying issue, the recv call will block indefinitely.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592556,"byte_end":10592629,"line_start":1235,"line_end":1235,"column_start":5,"column_end":78}},{"value":"/ // See: https://github.com/tokio-rs/tokio/issues/1679","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592634,"byte_end":10592691,"line_start":1236,"line_end":1236,"column_start":5,"column_end":62}},{"value":"/ //let mut buff = vec![0u8; 24];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592696,"byte_end":10592731,"line_start":1237,"line_end":1237,"column_start":5,"column_end":40}},{"value":"/ //let size = socket.recv(&mut buff).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592736,"byte_end":10592783,"line_start":1238,"line_end":1238,"column_start":5,"column_end":52}},{"value":"/ //assert_eq!(size, 0);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592788,"byte_end":10592814,"line_start":1239,"line_end":1239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592819,"byte_end":10592822,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ let send_result = socket.send(b\"hello world\").await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592827,"byte_end":10592883,"line_start":1241,"line_end":1241,"column_start":5,"column_end":61}},{"value":"/ assert!(send_result.is_err());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592888,"byte_end":10592922,"line_start":1242,"line_end":1242,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592927,"byte_end":10592930,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592935,"byte_end":10592947,"line_start":1244,"line_end":1244,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592952,"byte_end":10592959,"line_start":1245,"line_end":1245,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10592964,"byte_end":10592971,"line_start":1246,"line_end":1246,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5506},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10595294,"byte_end":10595306,"line_start":47,"line_end":47,"column_start":16,"column_end":28},"name":"UnixListener","qualname":"::net::unix::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":5507}],"decl_id":null,"docs":" A Unix socket which can accept connections from other Unix sockets.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":22140,"byte_end":22174,"line_start":178,"line_end":178,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":5101},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10595808,"byte_end":10595812,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixListener> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified path.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10595391,"byte_end":10595452,"line_start":53,"line_end":53,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10595457,"byte_end":10595460,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10595465,"byte_end":10595477,"line_start":55,"line_end":55,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10595482,"byte_end":10595485,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10595490,"byte_end":10595550,"line_start":57,"line_end":57,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10595555,"byte_end":10595558,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10595563,"byte_end":10595633,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10595638,"byte_end":10595711,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10595716,"byte_end":10595796,"line_start":61,"line_end":61,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":5103},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10596743,"byte_end":10596751,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"pub fn from_std(net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UnixListener` from a `std::os::unix::net::UnixListener `.","sig":null,"attributes":[{"value":"/ Creates new `UnixListener` from a `std::os::unix::net::UnixListener `.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10596042,"byte_end":10596116,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10596121,"byte_end":10596124,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UnixListener from the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10596129,"byte_end":10596201,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10596206,"byte_end":10596274,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"/ nothing about the underlying listener; it is left up to the user to set","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10596279,"byte_end":10596354,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ it in non-blocking mode.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10596359,"byte_end":10596387,"line_start":76,"line_end":76,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10596392,"byte_end":10596395,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10596400,"byte_end":10596412,"line_start":78,"line_end":78,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10596417,"byte_end":10596420,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10596425,"byte_end":10596485,"line_start":80,"line_end":80,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10596490,"byte_end":10596493,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10596498,"byte_end":10596568,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10596573,"byte_end":10596646,"line_start":83,"line_end":83,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10596651,"byte_end":10596731,"line_start":84,"line_end":84,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":5104},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597870,"byte_end":10597878,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"into_std","qualname":"<UnixListener>::into_std","value":"pub fn into_std(Self) -> io::Result<std::os::unix::net::UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::UnixListener`] into a [`std::os::unix::net::UnixListener`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::UnixListener`] into a [`std::os::unix::net::UnixListener`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10596967,"byte_end":10597051,"line_start":91,"line_end":91,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597056,"byte_end":10597059,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::os::unix::net::UnixListener`] will have nonblocking mode","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597064,"byte_end":10597144,"line_start":93,"line_end":93,"column_start":5,"column_end":85}},{"value":"/ set as `true`.  Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597149,"byte_end":10597231,"line_start":94,"line_end":94,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597236,"byte_end":10597239,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597244,"byte_end":10597258,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597263,"byte_end":10597266,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597271,"byte_end":10597289,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597294,"byte_end":10597320,"line_start":99,"line_end":99,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597325,"byte_end":10597328,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597333,"byte_end":10597351,"line_start":101,"line_end":101,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597356,"byte_end":10597407,"line_start":102,"line_end":102,"column_start":5,"column_end":56}},{"value":"/     let tokio_listener = tokio::net::UnixListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597412,"byte_end":10597488,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/     let std_listener = tokio_listener.into_std()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597493,"byte_end":10597547,"line_start":104,"line_end":104,"column_start":5,"column_end":59}},{"value":"/     std_listener.set_nonblocking(false)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597552,"byte_end":10597597,"line_start":105,"line_end":105,"column_start":5,"column_end":50}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597602,"byte_end":10597616,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597621,"byte_end":10597626,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597631,"byte_end":10597638,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597643,"byte_end":10597646,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [`tokio::net::UnixListener`]: UnixListener","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597651,"byte_end":10597697,"line_start":110,"line_end":110,"column_start":5,"column_end":51}},{"value":"/ [`std::os::unix::net::UnixListener`]: std::os::unix::net::UnixListener","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597702,"byte_end":10597776,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ [`set_nonblocking`]: fn@std::os::unix::net::UnixListener::set_nonblocking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10597781,"byte_end":10597858,"line_start":112,"line_end":112,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":5107},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10598171,"byte_end":10598181,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10598105,"byte_end":10598159,"line_start":120,"line_end":120,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5108},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10598332,"byte_end":10598342,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10598273,"byte_end":10598320,"line_start":125,"line_end":125,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5109},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10598498,"byte_end":10598504,"line_start":131,"line_end":131,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10598425,"byte_end":10598480,"line_start":130,"line_end":130,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5113},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10599211,"byte_end":10599222,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<UnixListener>::poll_accept","value":"pub fn poll_accept(&Self, &mut Context)\n-> Poll<io::Result<(UnixStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10598833,"byte_end":10598896,"line_start":143,"line_end":143,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10598901,"byte_end":10598904,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10598909,"byte_end":10598985,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.  Note that on multiple calls","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10598990,"byte_end":10599064,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ to `poll_accept`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10599069,"byte_end":10599145,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10599150,"byte_end":10599199,"line_start":148,"line_end":148,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":5509},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10601033,"byte_end":10601041,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::unix::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`UnixStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`UnixStream`], created by [`split`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10600696,"byte_end":10600761,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10600762,"byte_end":10600765,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10600766,"byte_end":10600854,"line_start":21,"line_end":21,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10600855,"byte_end":10600882,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10600883,"byte_end":10600886,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10600887,"byte_end":10600917,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ [`split`]: UnixStream::split()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10600918,"byte_end":10600952,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10600953,"byte_end":10601004,"line_start":26,"line_end":26,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5516},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10601667,"byte_end":10601676,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::unix::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`UnixStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`UnixStream`], created by [`split`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10601064,"byte_end":10601130,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10601131,"byte_end":10601134,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10601135,"byte_end":10601221,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ shut down the UnixStream stream in the write direction.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10601222,"byte_end":10601281,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10601282,"byte_end":10601285,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10601286,"byte_end":10601367,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10601368,"byte_end":10601403,"line_start":36,"line_end":36,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10601404,"byte_end":10601407,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10601408,"byte_end":10601438,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ [`split`]: UnixStream::split()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10601439,"byte_end":10601473,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10601474,"byte_end":10601521,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10601522,"byte_end":10601584,"line_start":41,"line_end":41,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10601585,"byte_end":10601638,"line_start":42,"line_end":42,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":5523},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10604072,"byte_end":10604085,"line_start":30,"line_end":30,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::unix::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":5524}],"decl_id":null,"docs":" Owned read half of a [`UnixStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`UnixStream`], created by [`into_split`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10603693,"byte_end":10603760,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10603761,"byte_end":10603764,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10603765,"byte_end":10603852,"line_start":23,"line_end":23,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10603853,"byte_end":10603887,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10603888,"byte_end":10603891,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: crate::net::UnixStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10603892,"byte_end":10603934,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10603935,"byte_end":10603991,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10603992,"byte_end":10604043,"line_start":28,"line_end":28,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5527},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10604831,"byte_end":10604845,"line_start":49,"line_end":49,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::unix::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":5528},{"krate":0,"index":5529}],"decl_id":null,"docs":" Owned write half of a [`UnixStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`UnixStream`], created by [`into_split`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10604119,"byte_end":10604187,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10604188,"byte_end":10604191,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10604192,"byte_end":10604256,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/ [`poll_shutdown`] will shut down the stream in the write direction.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10604257,"byte_end":10604328,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ Dropping the write half will also shut down the write half of the stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10604329,"byte_end":10604406,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10604407,"byte_end":10604410,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10604411,"byte_end":10604491,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/ found on the [`AsyncWriteExt`] trait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10604492,"byte_end":10604533,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10604534,"byte_end":10604537,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: crate::net::UnixStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10604538,"byte_end":10604580,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10604581,"byte_end":10604637,"line_start":44,"line_end":44,"column_start":1,"column_end":57}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10604638,"byte_end":10604685,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10604686,"byte_end":10604748,"line_start":46,"line_end":46,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10604749,"byte_end":10604802,"line_start":47,"line_end":47,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":5532},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10605814,"byte_end":10605826,"line_start":83,"line_end":83,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::unix::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10605682,"byte_end":10605764,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10605765,"byte_end":10605785,"line_start":81,"line_end":81,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":5534},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10605827,"byte_end":10605844,"line_start":83,"line_end":83,"column_start":25,"column_end":42},"name":"0","qualname":"::net::unix::split_owned::ReuniteError::0","value":"net::unix::split_owned::OwnedReadHalf","parent":{"krate":0,"index":5532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5535},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10605846,"byte_end":10605864,"line_start":83,"line_end":83,"column_start":44,"column_end":62},"name":"1","qualname":"::net::unix::split_owned::ReuniteError::1","value":"net::unix::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":5532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5217},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10606424,"byte_end":10606431,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<UnixStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `UnixStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `UnixStream` back together and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10606147,"byte_end":10606217,"line_start":97,"line_end":97,"column_start":5,"column_end":75}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10606222,"byte_end":10606286,"line_start":98,"line_end":98,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10606291,"byte_end":10606343,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10606348,"byte_end":10606351,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10606356,"byte_end":10606412,"line_start":101,"line_end":101,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5221},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10607068,"byte_end":10607075,"line_start":123,"line_end":123,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<UnixStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `UnixStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `UnixStream` back together and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10606791,"byte_end":10606861,"line_start":118,"line_end":118,"column_start":5,"column_end":75}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10606866,"byte_end":10606930,"line_start":119,"line_end":119,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10606935,"byte_end":10606987,"line_start":120,"line_end":120,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10606992,"byte_end":10606995,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10607000,"byte_end":10607056,"line_start":122,"line_end":122,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5222},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10607381,"byte_end":10607387,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10607182,"byte_end":10607254,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10607259,"byte_end":10607328,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10607333,"byte_end":10607369,"line_start":129,"line_end":129,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5252},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/socketaddr.rs","byte_start":10609013,"byte_end":10609023,"line_start":5,"line_end":5,"column_start":12,"column_end":22},"name":"SocketAddr","qualname":"::net::unix::socketaddr::SocketAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":" An address associated with a Tokio Unix socket.\n","sig":null,"attributes":[{"value":"/ An address associated with a Tokio Unix socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/socketaddr.rs","byte_start":10608950,"byte_end":10609001,"line_start":4,"line_end":4,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5256},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/socketaddr.rs","byte_start":10609259,"byte_end":10609269,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"is_unnamed","qualname":"<SocketAddr>::is_unnamed","value":"pub fn is_unnamed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the address is unnamed.","sig":null,"attributes":[{"value":"/ Returns `true` if the address is unnamed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/socketaddr.rs","byte_start":10609081,"byte_end":10609126,"line_start":8,"line_end":8,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/socketaddr.rs","byte_start":10609131,"byte_end":10609134,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ Documentation reflected in [`SocketAddr`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/socketaddr.rs","byte_start":10609139,"byte_end":10609184,"line_start":10,"line_end":10,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/socketaddr.rs","byte_start":10609189,"byte_end":10609192,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ [`SocketAddr`]: std::os::unix::net::SocketAddr","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/socketaddr.rs","byte_start":10609197,"byte_end":10609247,"line_start":12,"line_end":12,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5257},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/socketaddr.rs","byte_start":10609530,"byte_end":10609541,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"as_pathname","qualname":"<SocketAddr>::as_pathname","value":"pub fn as_pathname(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this address if it is a `pathname` address.","sig":null,"attributes":[{"value":"/ Returns the contents of this address if it is a `pathname` address.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/socketaddr.rs","byte_start":10609326,"byte_end":10609397,"line_start":17,"line_end":17,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/socketaddr.rs","byte_start":10609402,"byte_end":10609405,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Documentation reflected in [`SocketAddr`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/socketaddr.rs","byte_start":10609410,"byte_end":10609455,"line_start":19,"line_end":19,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/socketaddr.rs","byte_start":10609460,"byte_end":10609463,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ [`SocketAddr`]: std::os::unix::net::SocketAddr","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/socketaddr.rs","byte_start":10609468,"byte_end":10609518,"line_start":21,"line_end":21,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":5541},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10611044,"byte_end":10611054,"line_start":35,"line_end":35,"column_start":16,"column_end":26},"name":"UnixStream","qualname":"::net::unix::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":5542}],"decl_id":null,"docs":" A structure representing a connected Unix socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":22140,"byte_end":22174,"line_start":178,"line_end":178,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":5365},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10611377,"byte_end":10611384,"line_start":46,"line_end":46,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"pub async fn connect<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10611135,"byte_end":10611178,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10611183,"byte_end":10611186,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function will create a new Unix socket and connect to the path","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10611191,"byte_end":10611262,"line_start":43,"line_end":43,"column_start":5,"column_end":76}},{"value":"/ specified, associating the returned stream with the default event loop's","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10611267,"byte_end":10611343,"line_start":44,"line_end":44,"column_start":5,"column_end":81}},{"value":"/ handle.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10611348,"byte_end":10611359,"line_start":45,"line_end":45,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5370},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614047,"byte_end":10614052,"line_start":119,"line_end":119,"column_start":18,"column_end":23},"name":"ready","qualname":"<UnixStream>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10611676,"byte_end":10611723,"line_start":57,"line_end":57,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10611728,"byte_end":10611731,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_read()` or `try_write()`. It","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10611736,"byte_end":10611810,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ can be used to concurrently read / write to the same socket on a single","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10611815,"byte_end":10611890,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/ task without splitting the socket.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10611895,"byte_end":10611933,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10611938,"byte_end":10611941,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10611946,"byte_end":10611960,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10611965,"byte_end":10611968,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Concurrently read and write to the stream on the same task without","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10611973,"byte_end":10612043,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ splitting.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612048,"byte_end":10612062,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612067,"byte_end":10612070,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612075,"byte_end":10612088,"line_start":68,"line_end":68,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612093,"byte_end":10612121,"line_start":69,"line_end":69,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612126,"byte_end":10612157,"line_start":70,"line_end":70,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612162,"byte_end":10612188,"line_start":71,"line_end":71,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612193,"byte_end":10612209,"line_start":72,"line_end":72,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612214,"byte_end":10612217,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612222,"byte_end":10612240,"line_start":74,"line_end":74,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612245,"byte_end":10612296,"line_start":75,"line_end":75,"column_start":5,"column_end":56}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612301,"byte_end":10612348,"line_start":76,"line_end":76,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612353,"byte_end":10612406,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612411,"byte_end":10612470,"line_start":78,"line_end":78,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612475,"byte_end":10612478,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612483,"byte_end":10612497,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/         let ready = stream.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612502,"byte_end":10612587,"line_start":81,"line_end":81,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612592,"byte_end":10612595,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612600,"byte_end":10612636,"line_start":83,"line_end":83,"column_start":5,"column_end":41}},{"value":"/             let mut data = vec![0; 1024];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612641,"byte_end":10612686,"line_start":84,"line_end":84,"column_start":5,"column_end":50}},{"value":"/             // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612691,"byte_end":10612765,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612770,"byte_end":10612832,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/             match stream.try_read(&mut data) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612837,"byte_end":10612887,"line_start":87,"line_end":87,"column_start":5,"column_end":55}},{"value":"/                 Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612892,"byte_end":10612922,"line_start":88,"line_end":88,"column_start":5,"column_end":35}},{"value":"/                     println!(\"read {} bytes\", n);        ","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612927,"byte_end":10612988,"line_start":89,"line_end":89,"column_start":5,"column_end":66}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10612993,"byte_end":10613014,"line_start":90,"line_end":90,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613019,"byte_end":10613095,"line_start":91,"line_end":91,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613100,"byte_end":10613133,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613138,"byte_end":10613159,"line_start":93,"line_end":93,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613164,"byte_end":10613195,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613200,"byte_end":10613245,"line_start":95,"line_end":95,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613250,"byte_end":10613271,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613276,"byte_end":10613293,"line_start":97,"line_end":97,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613298,"byte_end":10613301,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613306,"byte_end":10613319,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613324,"byte_end":10613327,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613332,"byte_end":10613368,"line_start":101,"line_end":101,"column_start":5,"column_end":41}},{"value":"/             // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613373,"byte_end":10613448,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613453,"byte_end":10613515,"line_start":103,"line_end":103,"column_start":5,"column_end":67}},{"value":"/             match stream.try_write(b\"hello world\") {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613520,"byte_end":10613576,"line_start":104,"line_end":104,"column_start":5,"column_end":61}},{"value":"/                 Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613581,"byte_end":10613611,"line_start":105,"line_end":105,"column_start":5,"column_end":35}},{"value":"/                     println!(\"write {} bytes\", n);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613616,"byte_end":10613670,"line_start":106,"line_end":106,"column_start":5,"column_end":59}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613675,"byte_end":10613696,"line_start":107,"line_end":107,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613701,"byte_end":10613777,"line_start":108,"line_end":108,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613782,"byte_end":10613815,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613820,"byte_end":10613841,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613846,"byte_end":10613877,"line_start":111,"line_end":111,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613882,"byte_end":10613927,"line_start":112,"line_end":112,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613932,"byte_end":10613953,"line_start":113,"line_end":113,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613958,"byte_end":10613975,"line_start":114,"line_end":114,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613980,"byte_end":10613993,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10613998,"byte_end":10614007,"line_start":116,"line_end":116,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614012,"byte_end":10614017,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614022,"byte_end":10614029,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5373},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615677,"byte_end":10615685,"line_start":169,"line_end":169,"column_start":18,"column_end":26},"name":"readable","qualname":"<UnixStream>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614209,"byte_end":10614252,"line_start":124,"line_end":124,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614257,"byte_end":10614260,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614265,"byte_end":10614342,"line_start":126,"line_end":126,"column_start":5,"column_end":82}},{"value":"/ paired with `try_read()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614347,"byte_end":10614376,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614381,"byte_end":10614384,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614389,"byte_end":10614403,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614408,"byte_end":10614411,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614416,"byte_end":10614429,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614434,"byte_end":10614465,"line_start":132,"line_end":132,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614470,"byte_end":10614496,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614501,"byte_end":10614517,"line_start":134,"line_end":134,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614522,"byte_end":10614525,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614530,"byte_end":10614548,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614553,"byte_end":10614604,"line_start":137,"line_end":137,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614609,"byte_end":10614637,"line_start":138,"line_end":138,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614642,"byte_end":10614689,"line_start":139,"line_end":139,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614694,"byte_end":10614747,"line_start":140,"line_end":140,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614752,"byte_end":10614811,"line_start":141,"line_end":141,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614816,"byte_end":10614819,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     let mut msg = vec![0; 1024];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614824,"byte_end":10614860,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614865,"byte_end":10614868,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614873,"byte_end":10614887,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614892,"byte_end":10614941,"line_start":146,"line_end":146,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614946,"byte_end":10614983,"line_start":147,"line_end":147,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614988,"byte_end":10614991,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10614996,"byte_end":10615066,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615071,"byte_end":10615129,"line_start":150,"line_end":150,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut msg) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615134,"byte_end":10615179,"line_start":151,"line_end":151,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615184,"byte_end":10615210,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/                 msg.truncate(n);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615215,"byte_end":10615251,"line_start":153,"line_end":153,"column_start":5,"column_end":41}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615256,"byte_end":10615282,"line_start":154,"line_end":154,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615287,"byte_end":10615304,"line_start":155,"line_end":155,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615309,"byte_end":10615381,"line_start":156,"line_end":156,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615386,"byte_end":10615415,"line_start":157,"line_end":157,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615420,"byte_end":10615437,"line_start":158,"line_end":158,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615442,"byte_end":10615469,"line_start":159,"line_end":159,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615474,"byte_end":10615515,"line_start":160,"line_end":160,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615520,"byte_end":10615537,"line_start":161,"line_end":161,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615542,"byte_end":10615555,"line_start":162,"line_end":162,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615560,"byte_end":10615569,"line_start":163,"line_end":163,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615574,"byte_end":10615577,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/     println!(\"GOT = {:?}\", msg);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615582,"byte_end":10615618,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615623,"byte_end":10615637,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615642,"byte_end":10615647,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615652,"byte_end":10615659,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5376},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10617048,"byte_end":10617063,"line_start":203,"line_end":203,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<UnixStream>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615786,"byte_end":10615815,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615820,"byte_end":10615823,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ If the unix stream is not currently ready for reading, this method will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615828,"byte_end":10615903,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the unix","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615908,"byte_end":10615983,"line_start":177,"line_end":177,"column_start":5,"column_end":80}},{"value":"/ stream becomes ready for reading, `Waker::wake` will be called on the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10615988,"byte_end":10616061,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616066,"byte_end":10616076,"line_start":179,"line_end":179,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616081,"byte_end":10616084,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_read_ready` or `poll_read`, only","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616089,"byte_end":10616162,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616167,"byte_end":10616235,"line_start":182,"line_end":182,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_write_ready` retains a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616240,"byte_end":10616313,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ second, independent waker.)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616318,"byte_end":10616349,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616354,"byte_end":10616357,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616362,"byte_end":10616437,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616442,"byte_end":10616517,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616522,"byte_end":10616590,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616595,"byte_end":10616598,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616603,"byte_end":10616621,"line_start":190,"line_end":190,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616626,"byte_end":10616629,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616634,"byte_end":10616659,"line_start":192,"line_end":192,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616664,"byte_end":10616667,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the unix stream is not ready for reading.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616672,"byte_end":10616738,"line_start":194,"line_end":194,"column_start":5,"column_end":71}},{"value":"/ * `Poll::Ready(Ok(()))` if the unix stream is ready for reading.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616743,"byte_end":10616811,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616816,"byte_end":10616871,"line_start":196,"line_end":196,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616876,"byte_end":10616879,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616884,"byte_end":10616896,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616901,"byte_end":10616904,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616909,"byte_end":10616984,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616989,"byte_end":10616992,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10616997,"byte_end":10617036,"line_start":202,"line_end":202,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5378},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619506,"byte_end":10619514,"line_start":268,"line_end":268,"column_start":12,"column_end":20},"name":"try_read","qualname":"<UnixStream>::try_read","value":"pub fn try_read(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, returning how\n many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffer, returning how","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10617196,"byte_end":10617272,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ many bytes were read.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10617277,"byte_end":10617302,"line_start":208,"line_end":208,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10617307,"byte_end":10617310,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10617315,"byte_end":10617391,"line_start":210,"line_end":210,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10617396,"byte_end":10617464,"line_start":211,"line_end":211,"column_start":5,"column_end":73}},{"value":"/ `try_read()` is non-blocking, the buffer does not have to be stored by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10617469,"byte_end":10617543,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ the async task and can exist entirely on the stack.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10617548,"byte_end":10617603,"line_start":213,"line_end":213,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10617608,"byte_end":10617611,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10617616,"byte_end":10617686,"line_start":215,"line_end":215,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10617691,"byte_end":10617694,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ [`readable()`]: UnixStream::readable()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10617699,"byte_end":10617741,"line_start":217,"line_end":217,"column_start":5,"column_end":47}},{"value":"/ [`ready()`]: UnixStream::ready()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10617746,"byte_end":10617782,"line_start":218,"line_end":218,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10617787,"byte_end":10617790,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10617795,"byte_end":10617807,"line_start":220,"line_end":220,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10617812,"byte_end":10617815,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10617820,"byte_end":10617891,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10617896,"byte_end":10617972,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10617977,"byte_end":10618051,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618056,"byte_end":10618105,"line_start":225,"line_end":225,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618110,"byte_end":10618113,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618118,"byte_end":10618132,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618137,"byte_end":10618140,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618145,"byte_end":10618158,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618163,"byte_end":10618194,"line_start":230,"line_end":230,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618199,"byte_end":10618225,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618230,"byte_end":10618246,"line_start":232,"line_end":232,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618251,"byte_end":10618254,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618259,"byte_end":10618277,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618282,"byte_end":10618333,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618338,"byte_end":10618366,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618371,"byte_end":10618418,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618423,"byte_end":10618476,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618481,"byte_end":10618540,"line_start":239,"line_end":239,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618545,"byte_end":10618548,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618553,"byte_end":10618567,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618572,"byte_end":10618621,"line_start":242,"line_end":242,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618626,"byte_end":10618663,"line_start":243,"line_end":243,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618668,"byte_end":10618671,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618676,"byte_end":10618749,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618754,"byte_end":10618800,"line_start":246,"line_end":246,"column_start":5,"column_end":51}},{"value":"/         let mut buf = [0; 4096];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618805,"byte_end":10618841,"line_start":247,"line_end":247,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618846,"byte_end":10618849,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618854,"byte_end":10618924,"line_start":249,"line_end":249,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618929,"byte_end":10618987,"line_start":250,"line_end":250,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut buf) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10618992,"byte_end":10619037,"line_start":251,"line_end":251,"column_start":5,"column_end":50}},{"value":"/             Ok(0) => break,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619042,"byte_end":10619073,"line_start":252,"line_end":252,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619078,"byte_end":10619104,"line_start":253,"line_end":253,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619109,"byte_end":10619158,"line_start":254,"line_end":254,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619163,"byte_end":10619180,"line_start":255,"line_end":255,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619185,"byte_end":10619257,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619262,"byte_end":10619291,"line_start":257,"line_end":257,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619296,"byte_end":10619313,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619318,"byte_end":10619345,"line_start":259,"line_end":259,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619350,"byte_end":10619391,"line_start":260,"line_end":260,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619396,"byte_end":10619413,"line_start":261,"line_end":261,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619418,"byte_end":10619431,"line_start":262,"line_end":262,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619436,"byte_end":10619445,"line_start":263,"line_end":263,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619450,"byte_end":10619453,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619458,"byte_end":10619472,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619477,"byte_end":10619482,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619487,"byte_end":10619494,"line_start":267,"line_end":267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5380},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10622524,"byte_end":10622541,"line_start":346,"line_end":346,"column_start":12,"column_end":29},"name":"try_read_vectored","qualname":"<UnixStream>::try_read_vectored","value":"pub fn try_read_vectored(&Self, &mut [io::IoSliceMut]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffers, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffers, returning","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619682,"byte_end":10619755,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ how many bytes were read.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619760,"byte_end":10619789,"line_start":275,"line_end":275,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619794,"byte_end":10619797,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Data is copied to fill each buffer in order, with the final buffer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619802,"byte_end":10619872,"line_start":277,"line_end":277,"column_start":5,"column_end":75}},{"value":"/ written to possibly being only partially filled. This method behaves","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619877,"byte_end":10619949,"line_start":278,"line_end":278,"column_start":5,"column_end":77}},{"value":"/ equivalently to a single call to [`try_read()`] with concatenated","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10619954,"byte_end":10620023,"line_start":279,"line_end":279,"column_start":5,"column_end":74}},{"value":"/ buffers.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620028,"byte_end":10620040,"line_start":280,"line_end":280,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620045,"byte_end":10620048,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620053,"byte_end":10620129,"line_start":282,"line_end":282,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620134,"byte_end":10620202,"line_start":283,"line_end":283,"column_start":5,"column_end":73}},{"value":"/ `try_read_vectored()` is non-blocking, the buffer does not have to be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620207,"byte_end":10620280,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/ stored by the async task and can exist entirely on the stack.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620285,"byte_end":10620350,"line_start":285,"line_end":285,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620355,"byte_end":10620358,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620363,"byte_end":10620433,"line_start":287,"line_end":287,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620438,"byte_end":10620441,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ [`try_read()`]: UnixStream::try_read()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620446,"byte_end":10620488,"line_start":289,"line_end":289,"column_start":5,"column_end":47}},{"value":"/ [`readable()`]: UnixStream::readable()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620493,"byte_end":10620535,"line_start":290,"line_end":290,"column_start":5,"column_end":47}},{"value":"/ [`ready()`]: UnixStream::ready()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620540,"byte_end":10620576,"line_start":291,"line_end":291,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620581,"byte_end":10620584,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620589,"byte_end":10620601,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620606,"byte_end":10620609,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620614,"byte_end":10620685,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620690,"byte_end":10620766,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620771,"byte_end":10620845,"line_start":297,"line_end":297,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620850,"byte_end":10620899,"line_start":298,"line_end":298,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620904,"byte_end":10620907,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620912,"byte_end":10620926,"line_start":300,"line_end":300,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620931,"byte_end":10620934,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620939,"byte_end":10620952,"line_start":302,"line_end":302,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620957,"byte_end":10620988,"line_start":303,"line_end":303,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10620993,"byte_end":10621019,"line_start":304,"line_end":304,"column_start":5,"column_end":31}},{"value":"/ use std::io::{self, IoSliceMut};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621024,"byte_end":10621060,"line_start":305,"line_end":305,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621065,"byte_end":10621068,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621073,"byte_end":10621091,"line_start":307,"line_end":307,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621096,"byte_end":10621147,"line_start":308,"line_end":308,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621152,"byte_end":10621180,"line_start":309,"line_end":309,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621185,"byte_end":10621232,"line_start":310,"line_end":310,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621237,"byte_end":10621290,"line_start":311,"line_end":311,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621295,"byte_end":10621354,"line_start":312,"line_end":312,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621359,"byte_end":10621362,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621367,"byte_end":10621381,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621386,"byte_end":10621435,"line_start":315,"line_end":315,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621440,"byte_end":10621477,"line_start":316,"line_end":316,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621482,"byte_end":10621485,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621490,"byte_end":10621563,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621568,"byte_end":10621614,"line_start":319,"line_end":319,"column_start":5,"column_end":51}},{"value":"/         let mut buf_a = [0; 512];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621619,"byte_end":10621656,"line_start":320,"line_end":320,"column_start":5,"column_end":42}},{"value":"/         let mut buf_b = [0; 1024];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621661,"byte_end":10621699,"line_start":321,"line_end":321,"column_start":5,"column_end":43}},{"value":"/         let mut bufs = [","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621704,"byte_end":10621732,"line_start":322,"line_end":322,"column_start":5,"column_end":33}},{"value":"/             IoSliceMut::new(&mut buf_a),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621737,"byte_end":10621781,"line_start":323,"line_end":323,"column_start":5,"column_end":49}},{"value":"/             IoSliceMut::new(&mut buf_b),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621786,"byte_end":10621830,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/         ];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621835,"byte_end":10621849,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621854,"byte_end":10621857,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621862,"byte_end":10621932,"line_start":327,"line_end":327,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10621937,"byte_end":10621995,"line_start":328,"line_end":328,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read_vectored(&mut bufs) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10622000,"byte_end":10622055,"line_start":329,"line_end":329,"column_start":5,"column_end":60}},{"value":"/             Ok(0) => break,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10622060,"byte_end":10622091,"line_start":330,"line_end":330,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10622096,"byte_end":10622122,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10622127,"byte_end":10622176,"line_start":332,"line_end":332,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10622181,"byte_end":10622198,"line_start":333,"line_end":333,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10622203,"byte_end":10622275,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10622280,"byte_end":10622309,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10622314,"byte_end":10622331,"line_start":336,"line_end":336,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10622336,"byte_end":10622363,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10622368,"byte_end":10622409,"line_start":338,"line_end":338,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10622414,"byte_end":10622431,"line_start":339,"line_end":339,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10622436,"byte_end":10622449,"line_start":340,"line_end":340,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10622454,"byte_end":10622463,"line_start":341,"line_end":341,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10622468,"byte_end":10622471,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10622476,"byte_end":10622490,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10622495,"byte_end":10622500,"line_start":344,"line_end":344,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10622505,"byte_end":10622512,"line_start":345,"line_end":345,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5543},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10625239,"byte_end":10625251,"line_start":412,"line_end":412,"column_start":16,"column_end":28},"name":"try_read_buf","qualname":"<UnixStream>::try_read_buf","value":"pub fn try_read_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":21227,"byte_end":21254,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5382},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627236,"byte_end":10627244,"line_start":474,"line_end":474,"column_start":18,"column_end":26},"name":"writable","qualname":"<UnixStream>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10625890,"byte_end":10625933,"line_start":433,"line_end":433,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10625938,"byte_end":10625941,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is usually","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10625946,"byte_end":10626023,"line_start":435,"line_end":435,"column_start":5,"column_end":82}},{"value":"/ paired with `try_write()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626028,"byte_end":10626058,"line_start":436,"line_end":436,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626063,"byte_end":10626066,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626071,"byte_end":10626085,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626090,"byte_end":10626093,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626098,"byte_end":10626111,"line_start":440,"line_end":440,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626116,"byte_end":10626147,"line_start":441,"line_end":441,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626152,"byte_end":10626178,"line_start":442,"line_end":442,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626183,"byte_end":10626199,"line_start":443,"line_end":443,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626204,"byte_end":10626207,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626212,"byte_end":10626230,"line_start":445,"line_end":445,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626235,"byte_end":10626286,"line_start":446,"line_end":446,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626291,"byte_end":10626319,"line_start":447,"line_end":447,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626324,"byte_end":10626371,"line_start":448,"line_end":448,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626376,"byte_end":10626429,"line_start":449,"line_end":449,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626434,"byte_end":10626493,"line_start":450,"line_end":450,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626498,"byte_end":10626501,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626506,"byte_end":10626520,"line_start":452,"line_end":452,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626525,"byte_end":10626574,"line_start":453,"line_end":453,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626579,"byte_end":10626616,"line_start":454,"line_end":454,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626621,"byte_end":10626624,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626629,"byte_end":10626700,"line_start":456,"line_end":456,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626705,"byte_end":10626763,"line_start":457,"line_end":457,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626768,"byte_end":10626820,"line_start":458,"line_end":458,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626825,"byte_end":10626851,"line_start":459,"line_end":459,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626856,"byte_end":10626882,"line_start":460,"line_end":460,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626887,"byte_end":10626904,"line_start":461,"line_end":461,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626909,"byte_end":10626981,"line_start":462,"line_end":462,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10626986,"byte_end":10627015,"line_start":463,"line_end":463,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627020,"byte_end":10627037,"line_start":464,"line_end":464,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627042,"byte_end":10627069,"line_start":465,"line_end":465,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627074,"byte_end":10627115,"line_start":466,"line_end":466,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627120,"byte_end":10627137,"line_start":467,"line_end":467,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627142,"byte_end":10627155,"line_start":468,"line_end":468,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627160,"byte_end":10627169,"line_start":469,"line_end":469,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627174,"byte_end":10627177,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627182,"byte_end":10627196,"line_start":471,"line_end":471,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627201,"byte_end":10627206,"line_start":472,"line_end":472,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627211,"byte_end":10627218,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5385},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628609,"byte_end":10628625,"line_start":508,"line_end":508,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<UnixStream>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627345,"byte_end":10627375,"line_start":479,"line_end":479,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627380,"byte_end":10627383,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ If the unix stream is not currently ready for writing, this method will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627388,"byte_end":10627463,"line_start":481,"line_end":481,"column_start":5,"column_end":80}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the unix","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627468,"byte_end":10627543,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ stream becomes ready for writing, `Waker::wake` will be called on the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627548,"byte_end":10627621,"line_start":483,"line_end":483,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627626,"byte_end":10627636,"line_start":484,"line_end":484,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627641,"byte_end":10627644,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_write_ready` or `poll_write`, only","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627649,"byte_end":10627724,"line_start":486,"line_end":486,"column_start":5,"column_end":80}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627729,"byte_end":10627797,"line_start":487,"line_end":487,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_read_ready` retains a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627802,"byte_end":10627874,"line_start":488,"line_end":488,"column_start":5,"column_end":77}},{"value":"/ second, independent waker.)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627879,"byte_end":10627910,"line_start":489,"line_end":489,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627915,"byte_end":10627918,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10627923,"byte_end":10627998,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628003,"byte_end":10628078,"line_start":492,"line_end":492,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628083,"byte_end":10628151,"line_start":493,"line_end":493,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628156,"byte_end":10628159,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628164,"byte_end":10628182,"line_start":495,"line_end":495,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628187,"byte_end":10628190,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628195,"byte_end":10628220,"line_start":497,"line_end":497,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628225,"byte_end":10628228,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the unix stream is not ready for writing.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628233,"byte_end":10628299,"line_start":499,"line_end":499,"column_start":5,"column_end":71}},{"value":"/ * `Poll::Ready(Ok(()))` if the unix stream is ready for writing.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628304,"byte_end":10628372,"line_start":500,"line_end":500,"column_start":5,"column_end":73}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628377,"byte_end":10628432,"line_start":501,"line_end":501,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628437,"byte_end":10628440,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628445,"byte_end":10628457,"line_start":503,"line_end":503,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628462,"byte_end":10628465,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628470,"byte_end":10628545,"line_start":505,"line_end":505,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628550,"byte_end":10628553,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628558,"byte_end":10628597,"line_start":507,"line_end":507,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5387},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630459,"byte_end":10630468,"line_start":562,"line_end":562,"column_start":12,"column_end":21},"name":"try_write","qualname":"<UnixStream>::try_write","value":"pub fn try_write(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write a buffer to the stream, returning how many bytes were\n written.","sig":null,"attributes":[{"value":"/ Try to write a buffer to the stream, returning how many bytes were","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628759,"byte_end":10628829,"line_start":512,"line_end":512,"column_start":5,"column_end":75}},{"value":"/ written.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628834,"byte_end":10628846,"line_start":513,"line_end":513,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628851,"byte_end":10628854,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ The function will attempt to write the entire contents of `buf`, but","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628859,"byte_end":10628931,"line_start":515,"line_end":515,"column_start":5,"column_end":77}},{"value":"/ only part of the buffer may be written.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628936,"byte_end":10628979,"line_start":516,"line_end":516,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628984,"byte_end":10628987,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10628992,"byte_end":10629046,"line_start":518,"line_end":518,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629051,"byte_end":10629054,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629059,"byte_end":10629071,"line_start":520,"line_end":520,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629076,"byte_end":10629079,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629084,"byte_end":10629158,"line_start":522,"line_end":522,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629163,"byte_end":10629233,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629238,"byte_end":10629287,"line_start":524,"line_end":524,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629292,"byte_end":10629295,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629300,"byte_end":10629314,"line_start":526,"line_end":526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629319,"byte_end":10629322,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629327,"byte_end":10629340,"line_start":528,"line_end":528,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629345,"byte_end":10629376,"line_start":529,"line_end":529,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629381,"byte_end":10629407,"line_start":530,"line_end":530,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629412,"byte_end":10629428,"line_start":531,"line_end":531,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629433,"byte_end":10629436,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629441,"byte_end":10629459,"line_start":533,"line_end":533,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629464,"byte_end":10629515,"line_start":534,"line_end":534,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629520,"byte_end":10629548,"line_start":535,"line_end":535,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629553,"byte_end":10629600,"line_start":536,"line_end":536,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629605,"byte_end":10629658,"line_start":537,"line_end":537,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629663,"byte_end":10629722,"line_start":538,"line_end":538,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629727,"byte_end":10629730,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629735,"byte_end":10629749,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629754,"byte_end":10629803,"line_start":541,"line_end":541,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629808,"byte_end":10629845,"line_start":542,"line_end":542,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629850,"byte_end":10629853,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629858,"byte_end":10629929,"line_start":544,"line_end":544,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629934,"byte_end":10629992,"line_start":545,"line_end":545,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10629997,"byte_end":10630049,"line_start":546,"line_end":546,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630054,"byte_end":10630080,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630085,"byte_end":10630111,"line_start":548,"line_end":548,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630116,"byte_end":10630133,"line_start":549,"line_end":549,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630138,"byte_end":10630210,"line_start":550,"line_end":550,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630215,"byte_end":10630244,"line_start":551,"line_end":551,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630249,"byte_end":10630266,"line_start":552,"line_end":552,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630271,"byte_end":10630298,"line_start":553,"line_end":553,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630303,"byte_end":10630344,"line_start":554,"line_end":554,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630349,"byte_end":10630366,"line_start":555,"line_end":555,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630371,"byte_end":10630384,"line_start":556,"line_end":556,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630389,"byte_end":10630398,"line_start":557,"line_end":557,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630403,"byte_end":10630406,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630411,"byte_end":10630425,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630430,"byte_end":10630435,"line_start":560,"line_end":560,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630440,"byte_end":10630447,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5389},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632605,"byte_end":10632623,"line_start":624,"line_end":624,"column_start":12,"column_end":30},"name":"try_write_vectored","qualname":"<UnixStream>::try_write_vectored","value":"pub fn try_write_vectored(&Self, &[io::IoSlice]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write several buffers to the stream, returning how many bytes\n were written.","sig":null,"attributes":[{"value":"/ Try to write several buffers to the stream, returning how many bytes","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630633,"byte_end":10630705,"line_start":568,"line_end":568,"column_start":5,"column_end":77}},{"value":"/ were written.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630710,"byte_end":10630727,"line_start":569,"line_end":569,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630732,"byte_end":10630735,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ Data is written from each buffer in order, with the final buffer read","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630740,"byte_end":10630813,"line_start":571,"line_end":571,"column_start":5,"column_end":78}},{"value":"/ from possible being only partially consumed. This method behaves","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630818,"byte_end":10630886,"line_start":572,"line_end":572,"column_start":5,"column_end":73}},{"value":"/ equivalently to a single call to [`try_write()`] with concatenated","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630891,"byte_end":10630961,"line_start":573,"line_end":573,"column_start":5,"column_end":75}},{"value":"/ buffers.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630966,"byte_end":10630978,"line_start":574,"line_end":574,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630983,"byte_end":10630986,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10630991,"byte_end":10631045,"line_start":576,"line_end":576,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631050,"byte_end":10631053,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ [`try_write()`]: UnixStream::try_write()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631058,"byte_end":10631102,"line_start":578,"line_end":578,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631107,"byte_end":10631110,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631115,"byte_end":10631127,"line_start":580,"line_end":580,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631132,"byte_end":10631135,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631140,"byte_end":10631214,"line_start":582,"line_end":582,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631219,"byte_end":10631289,"line_start":583,"line_end":583,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631294,"byte_end":10631343,"line_start":584,"line_end":584,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631348,"byte_end":10631351,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631356,"byte_end":10631370,"line_start":586,"line_end":586,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631375,"byte_end":10631378,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631383,"byte_end":10631396,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631401,"byte_end":10631432,"line_start":589,"line_end":589,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631437,"byte_end":10631463,"line_start":590,"line_end":590,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631468,"byte_end":10631484,"line_start":591,"line_end":591,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631489,"byte_end":10631492,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631497,"byte_end":10631515,"line_start":593,"line_end":593,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631520,"byte_end":10631571,"line_start":594,"line_end":594,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631576,"byte_end":10631604,"line_start":595,"line_end":595,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631609,"byte_end":10631656,"line_start":596,"line_end":596,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631661,"byte_end":10631714,"line_start":597,"line_end":597,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631719,"byte_end":10631778,"line_start":598,"line_end":598,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631783,"byte_end":10631786,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/     let bufs = [io::IoSlice::new(b\"hello \"), io::IoSlice::new(b\"world\")];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631791,"byte_end":10631868,"line_start":600,"line_end":600,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631873,"byte_end":10631876,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631881,"byte_end":10631895,"line_start":602,"line_end":602,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631900,"byte_end":10631949,"line_start":603,"line_end":603,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631954,"byte_end":10631991,"line_start":604,"line_end":604,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10631996,"byte_end":10631999,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632004,"byte_end":10632075,"line_start":606,"line_end":606,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632080,"byte_end":10632138,"line_start":607,"line_end":607,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write_vectored(&bufs) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632143,"byte_end":10632195,"line_start":608,"line_end":608,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632200,"byte_end":10632226,"line_start":609,"line_end":609,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632231,"byte_end":10632257,"line_start":610,"line_end":610,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632262,"byte_end":10632279,"line_start":611,"line_end":611,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632284,"byte_end":10632356,"line_start":612,"line_end":612,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632361,"byte_end":10632390,"line_start":613,"line_end":613,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632395,"byte_end":10632412,"line_start":614,"line_end":614,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632417,"byte_end":10632444,"line_start":615,"line_end":615,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632449,"byte_end":10632490,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632495,"byte_end":10632512,"line_start":617,"line_end":617,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632517,"byte_end":10632530,"line_start":618,"line_end":618,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632535,"byte_end":10632544,"line_start":619,"line_end":619,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632549,"byte_end":10632552,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632557,"byte_end":10632571,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632576,"byte_end":10632581,"line_start":622,"line_end":622,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632586,"byte_end":10632593,"line_start":623,"line_end":623,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5391},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10633502,"byte_end":10633510,"line_start":644,"line_end":644,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"pub fn from_std(net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UnixStream` from a `std::os::unix::net::UnixStream`.","sig":null,"attributes":[{"value":"/ Creates new `UnixStream` from a `std::os::unix::net::UnixStream`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632810,"byte_end":10632879,"line_start":630,"line_end":630,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632884,"byte_end":10632887,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UnixStream from the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632892,"byte_end":10632962,"line_start":632,"line_end":632,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10632967,"byte_end":10633035,"line_start":633,"line_end":633,"column_start":5,"column_end":73}},{"value":"/ nothing about the underlying stream; it is left up to the user to set","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10633040,"byte_end":10633113,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ it in non-blocking mode.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10633118,"byte_end":10633146,"line_start":635,"line_end":635,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10633151,"byte_end":10633154,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10633159,"byte_end":10633171,"line_start":637,"line_end":637,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10633176,"byte_end":10633179,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10633184,"byte_end":10633244,"line_start":639,"line_end":639,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10633249,"byte_end":10633252,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10633257,"byte_end":10633327,"line_start":641,"line_end":641,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10633332,"byte_end":10633405,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10633410,"byte_end":10633490,"line_start":643,"line_end":643,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":5392},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10635320,"byte_end":10635328,"line_start":689,"line_end":689,"column_start":12,"column_end":20},"name":"into_std","qualname":"<UnixStream>::into_std","value":"pub fn into_std(Self) -> io::Result<std::os::unix::net::UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::UnixStream`] into a [`std::os::unix::net::UnixStream`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::UnixStream`] into a [`std::os::unix::net::UnixStream`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10633711,"byte_end":10633791,"line_start":651,"line_end":651,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10633796,"byte_end":10633799,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::os::unix::net::UnixStream`] will have nonblocking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10633804,"byte_end":10633877,"line_start":653,"line_end":653,"column_start":5,"column_end":78}},{"value":"/ mode set as `true`.  Use [`set_nonblocking`] to change the blocking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10633882,"byte_end":10633953,"line_start":654,"line_end":654,"column_start":5,"column_end":76}},{"value":"/ mode if needed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10633958,"byte_end":10633977,"line_start":655,"line_end":655,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10633982,"byte_end":10633985,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10633990,"byte_end":10634004,"line_start":657,"line_end":657,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634009,"byte_end":10634012,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634017,"byte_end":10634024,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634029,"byte_end":10634055,"line_start":660,"line_end":660,"column_start":5,"column_end":31}},{"value":"/ use std::io::Read;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634060,"byte_end":10634082,"line_start":661,"line_end":661,"column_start":5,"column_end":27}},{"value":"/ use tokio::net::UnixListener;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634087,"byte_end":10634120,"line_start":662,"line_end":662,"column_start":5,"column_end":38}},{"value":"/ # use tokio::net::UnixStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634125,"byte_end":10634158,"line_start":663,"line_end":663,"column_start":5,"column_end":38}},{"value":"/ # use tokio::io::AsyncWriteExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634163,"byte_end":10634198,"line_start":664,"line_end":664,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634203,"byte_end":10634206,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634211,"byte_end":10634229,"line_start":666,"line_end":666,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634234,"byte_end":10634285,"line_start":667,"line_end":667,"column_start":5,"column_end":56}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634290,"byte_end":10634337,"line_start":668,"line_end":668,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634342,"byte_end":10634395,"line_start":669,"line_end":669,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634400,"byte_end":10634403,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/     let mut data = [0u8; 12];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634408,"byte_end":10634441,"line_start":671,"line_end":671,"column_start":5,"column_end":38}},{"value":"/     let listener = UnixListener::bind(&bind_path)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634446,"byte_end":10634501,"line_start":672,"line_end":672,"column_start":5,"column_end":60}},{"value":"/ #   let handle = tokio::spawn(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634506,"byte_end":10634547,"line_start":673,"line_end":673,"column_start":5,"column_end":46}},{"value":"/ #       let mut stream = UnixStream::connect(bind_path).await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634552,"byte_end":10634627,"line_start":674,"line_end":674,"column_start":5,"column_end":80}},{"value":"/ #       stream.write(b\"Hello world!\").await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634632,"byte_end":10634689,"line_start":675,"line_end":675,"column_start":5,"column_end":62}},{"value":"/ #   });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634694,"byte_end":10634705,"line_start":676,"line_end":676,"column_start":5,"column_end":16}},{"value":"/     let (tokio_unix_stream, _) = listener.accept().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634710,"byte_end":10634772,"line_start":677,"line_end":677,"column_start":5,"column_end":67}},{"value":"/     let mut std_unix_stream = tokio_unix_stream.into_std()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634777,"byte_end":10634841,"line_start":678,"line_end":678,"column_start":5,"column_end":69}},{"value":"/ #   handle.await.expect(\"The task being joined has panicked\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634846,"byte_end":10634912,"line_start":679,"line_end":679,"column_start":5,"column_end":71}},{"value":"/     std_unix_stream.set_nonblocking(false)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634917,"byte_end":10634965,"line_start":680,"line_end":680,"column_start":5,"column_end":53}},{"value":"/     std_unix_stream.read_exact(&mut data)?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10634970,"byte_end":10635017,"line_start":681,"line_end":681,"column_start":5,"column_end":52}},{"value":"/ #   assert_eq!(b\"Hello world!\", &data);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10635022,"byte_end":10635065,"line_start":682,"line_end":682,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10635070,"byte_end":10635084,"line_start":683,"line_end":683,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10635089,"byte_end":10635094,"line_start":684,"line_end":684,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10635099,"byte_end":10635106,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/ [`tokio::net::UnixStream`]: UnixStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10635111,"byte_end":10635153,"line_start":686,"line_end":686,"column_start":5,"column_end":47}},{"value":"/ [`std::os::unix::net::UnixStream`]: std::os::unix::net::UnixStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10635158,"byte_end":10635228,"line_start":687,"line_end":687,"column_start":5,"column_end":75}},{"value":"/ [`set_nonblocking`]: fn@std::os::unix::net::UnixStream::set_nonblocking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10635233,"byte_end":10635308,"line_start":688,"line_end":688,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":5395},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10635846,"byte_end":10635850,"line_start":701,"line_end":701,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10635566,"byte_end":10635615,"line_start":696,"line_end":696,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10635620,"byte_end":10635623,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10635628,"byte_end":10635699,"line_start":698,"line_end":698,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10635704,"byte_end":10635774,"line_start":699,"line_end":699,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10635779,"byte_end":10635834,"line_start":700,"line_end":700,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5397},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10636293,"byte_end":10636303,"line_start":715,"line_end":715,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10636213,"byte_end":10636281,"line_start":714,"line_end":714,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5398},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10636476,"byte_end":10636485,"line_start":720,"line_end":720,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10636395,"byte_end":10636464,"line_start":719,"line_end":719,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":5399},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10636670,"byte_end":10636679,"line_start":725,"line_end":725,"column_start":12,"column_end":21},"name":"peer_cred","qualname":"<UnixStream>::peer_cred","value":"pub fn peer_cred(&Self) -> io::Result<UCred>","parent":null,"children":[],"decl_id":null,"docs":" Returns effective credentials of the process which called `connect` or `pair`.\n","sig":null,"attributes":[{"value":"/ Returns effective credentials of the process which called `connect` or `pair`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10636576,"byte_end":10636658,"line_start":724,"line_end":724,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":5400},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10636815,"byte_end":10636825,"line_start":730,"line_end":730,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10636756,"byte_end":10636803,"line_start":729,"line_end":729,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5402},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10637801,"byte_end":10637806,"line_start":753,"line_end":753,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10637429,"byte_end":10637465,"line_start":745,"line_end":745,"column_start":5,"column_end":41}},{"value":"/ Split a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10637470,"byte_end":10637547,"line_start":746,"line_end":746,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10637552,"byte_end":10637598,"line_start":747,"line_end":747,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10637603,"byte_end":10637606,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10637611,"byte_end":10637690,"line_start":749,"line_end":749,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10637695,"byte_end":10637738,"line_start":750,"line_end":750,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10637743,"byte_end":10637746,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: Self::into_split()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10637751,"byte_end":10637789,"line_start":752,"line_end":752,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5404},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10638448,"byte_end":10638458,"line_start":768,"line_end":768,"column_start":12,"column_end":22},"name":"into_split","qualname":"<UnixStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10637891,"byte_end":10637969,"line_start":757,"line_end":757,"column_start":5,"column_end":83}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10637974,"byte_end":10638020,"line_start":758,"line_end":758,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10638025,"byte_end":10638028,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10638033,"byte_end":10638111,"line_start":760,"line_end":760,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10638116,"byte_end":10638164,"line_start":761,"line_end":761,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10638169,"byte_end":10638172,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10638177,"byte_end":10638251,"line_start":763,"line_end":763,"column_start":5,"column_end":79}},{"value":"/ stream. This is equivalent to calling [`shutdown()`] on the `UnixStream`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10638256,"byte_end":10638333,"line_start":764,"line_end":764,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10638338,"byte_end":10638341,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ [`split`]: Self::split()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10638346,"byte_end":10638374,"line_start":766,"line_end":766,"column_start":5,"column_end":33}},{"value":"/ [`shutdown()`]: fn@crate::io::AsyncWriteExt::shutdown","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10638379,"byte_end":10638436,"line_start":767,"line_end":767,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":5549},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/ucred.rs","byte_start":10641497,"byte_end":10641502,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"UCred","qualname":"::net::unix::ucred::UCred","value":"UCred {  }","parent":null,"children":[{"krate":0,"index":5550},{"krate":0,"index":5551},{"krate":0,"index":5552}],"decl_id":null,"docs":" Credentials of a process\n","sig":null,"attributes":[{"value":"/ Credentials of a process","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/ucred.rs","byte_start":10641406,"byte_end":10641434,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5439},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/ucred.rs","byte_start":10641746,"byte_end":10641749,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"uid","qualname":"<UCred>::uid","value":"pub fn uid(&Self) -> uid_t","parent":null,"children":[],"decl_id":null,"docs":" Gets UID (user ID) of the process.\n","sig":null,"attributes":[{"value":"/ Gets UID (user ID) of the process.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/ucred.rs","byte_start":10641696,"byte_end":10641734,"line_start":15,"line_end":15,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5440},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/ucred.rs","byte_start":10641847,"byte_end":10641850,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"gid","qualname":"<UCred>::gid","value":"pub fn gid(&Self) -> gid_t","parent":null,"children":[],"decl_id":null,"docs":" Gets GID (group ID) of the process.\n","sig":null,"attributes":[{"value":"/ Gets GID (group ID) of the process.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/ucred.rs","byte_start":10641796,"byte_end":10641835,"line_start":20,"line_end":20,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5441},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/ucred.rs","byte_start":10642104,"byte_end":10642107,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"pid","qualname":"<UCred>::pid","value":"pub fn pid(&Self) -> Option<pid_t>","parent":null,"children":[],"decl_id":null,"docs":" Gets PID (process ID) of the process.","sig":null,"attributes":[{"value":"/ Gets PID (process ID) of the process.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/ucred.rs","byte_start":10641897,"byte_end":10641938,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/ucred.rs","byte_start":10641943,"byte_end":10641946,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This is only implemented under Linux, Android, iOS, macOS, Solaris and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/ucred.rs","byte_start":10641951,"byte_end":10642025,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ Illumos. On other plaforms this will always return `None`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/ucred.rs","byte_start":10642030,"byte_end":10642092,"line_start":28,"line_end":28,"column_start":5,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":842},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/mod.rs","byte_start":104893,"byte_end":104899,"line_start":51,"line_end":51,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/mod.rs","byte_start":104830,"byte_end":104883,"line_start":50,"line_end":50,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":843},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/mod.rs","byte_start":104952,"byte_end":104957,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error: Debug;","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/mod.rs","byte_start":104914,"byte_end":104942,"line_start":53,"line_end":53,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":5652},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":5653},{"krate":0,"index":5676},{"krate":0,"index":6408},{"krate":0,"index":6595},{"krate":0,"index":6598},{"krate":0,"index":6774},{"krate":0,"index":6777},{"krate":0,"index":6780},{"krate":0,"index":6857},{"krate":0,"index":6860},{"krate":0,"index":6874},{"krate":0,"index":6907},{"krate":0,"index":6910},{"krate":0,"index":6967},{"krate":0,"index":6968},{"krate":0,"index":6971},{"krate":0,"index":6974},{"krate":0,"index":6977},{"krate":0,"index":7085},{"krate":0,"index":7088},{"krate":0,"index":7091},{"krate":0,"index":7107},{"krate":0,"index":7111},{"krate":0,"index":7113},{"krate":0,"index":7117},{"krate":0,"index":7094},{"krate":0,"index":7095}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":24125,"byte_end":24147,"line_start":272,"line_end":272,"column_start":13,"column_end":35}},{"value":"/ The Tokio runtime.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649016,"byte_end":10649038,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649039,"byte_end":10649042,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require runtime","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649043,"byte_end":10649116,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ support. In particular, the following runtime services are necessary:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649117,"byte_end":10649190,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649191,"byte_end":10649194,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649195,"byte_end":10649273,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649274,"byte_end":10649331,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649332,"byte_end":10649402,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649403,"byte_end":10649475,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649476,"byte_end":10649479,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649480,"byte_end":10649560,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, often it is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649561,"byte_end":10649641,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ not required to configure a [`Runtime`] manually, and a user may just use the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649642,"byte_end":10649723,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/ [`tokio::main`] attribute macro, which creates a [`Runtime`] under the hood.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649724,"byte_end":10649804,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649805,"byte_end":10649808,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649809,"byte_end":10649820,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649821,"byte_end":10649824,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When no fine tuning is required, the [`tokio::main`] attribute macro can be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649825,"byte_end":10649904,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ used.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649905,"byte_end":10649914,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649915,"byte_end":10649918,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649919,"byte_end":10649932,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649933,"byte_end":10649965,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10649966,"byte_end":10650015,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650016,"byte_end":10650019,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650020,"byte_end":10650038,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650039,"byte_end":10650102,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650103,"byte_end":10650169,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650170,"byte_end":10650173,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650174,"byte_end":10650188,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650189,"byte_end":10650248,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650249,"byte_end":10650252,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650253,"byte_end":10650290,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650291,"byte_end":10650331,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650332,"byte_end":10650335,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650336,"byte_end":10650416,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650417,"byte_end":10650439,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650440,"byte_end":10650503,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650504,"byte_end":10650544,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650545,"byte_end":10650595,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650596,"byte_end":10650631,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650632,"byte_end":10650667,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650668,"byte_end":10650750,"line_start":42,"line_end":42,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650751,"byte_end":10650786,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650787,"byte_end":10650812,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650813,"byte_end":10650835,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650836,"byte_end":10650839,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650840,"byte_end":10650882,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650883,"byte_end":10650955,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10650956,"byte_end":10651033,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651034,"byte_end":10651065,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651066,"byte_end":10651087,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651088,"byte_end":10651105,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651106,"byte_end":10651121,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651122,"byte_end":10651131,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651132,"byte_end":10651137,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651138,"byte_end":10651145,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651146,"byte_end":10651149,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651150,"byte_end":10651228,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651229,"byte_end":10651307,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651308,"byte_end":10651369,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651370,"byte_end":10651373,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651374,"byte_end":10651427,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651428,"byte_end":10651431,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651432,"byte_end":10651445,"line_start":64,"line_end":64,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651446,"byte_end":10651478,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651479,"byte_end":10651528,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651529,"byte_end":10651561,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651562,"byte_end":10651565,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651566,"byte_end":10651623,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651624,"byte_end":10651653,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/     let rt  = Runtime::new()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651654,"byte_end":10651688,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651689,"byte_end":10651692,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651693,"byte_end":10651723,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651724,"byte_end":10651751,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/         let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651752,"byte_end":10651822,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651823,"byte_end":10651826,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651827,"byte_end":10651845,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651846,"byte_end":10651909,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651910,"byte_end":10651913,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651914,"byte_end":10651955,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10651956,"byte_end":10652000,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652001,"byte_end":10652004,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652005,"byte_end":10652089,"line_start":83,"line_end":83,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652090,"byte_end":10652116,"line_start":84,"line_end":84,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652117,"byte_end":10652184,"line_start":85,"line_end":85,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652185,"byte_end":10652229,"line_start":86,"line_end":86,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652230,"byte_end":10652284,"line_start":87,"line_end":87,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652285,"byte_end":10652324,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652325,"byte_end":10652364,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652365,"byte_end":10652451,"line_start":90,"line_end":90,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652452,"byte_end":10652491,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652492,"byte_end":10652521,"line_start":92,"line_end":92,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652522,"byte_end":10652548,"line_start":93,"line_end":93,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652549,"byte_end":10652552,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652553,"byte_end":10652599,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652600,"byte_end":10652676,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652677,"byte_end":10652758,"line_start":97,"line_end":97,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652759,"byte_end":10652794,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652795,"byte_end":10652820,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652821,"byte_end":10652842,"line_start":100,"line_end":100,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652843,"byte_end":10652862,"line_start":101,"line_end":101,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652863,"byte_end":10652876,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652877,"byte_end":10652887,"line_start":103,"line_end":103,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652888,"byte_end":10652893,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652894,"byte_end":10652901,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652902,"byte_end":10652905,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652906,"byte_end":10652935,"line_start":107,"line_end":107,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652936,"byte_end":10652939,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10652940,"byte_end":10653018,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653019,"byte_end":10653095,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653096,"byte_end":10653138,"line_start":111,"line_end":111,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653139,"byte_end":10653142,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ #### Multi-Thread Scheduler","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653143,"byte_end":10653174,"line_start":113,"line_end":113,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653175,"byte_end":10653178,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ The multi-thread scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653179,"byte_end":10653254,"line_start":115,"line_end":115,"column_start":1,"column_end":76}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653255,"byte_end":10653333,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configuration","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653334,"byte_end":10653412,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ for most applications. The multi-thread scheduler requires the `rt-multi-thread`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653413,"byte_end":10653497,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/ feature flag, and is selected by default:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653498,"byte_end":10653543,"line_start":119,"line_end":119,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653544,"byte_end":10653551,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653552,"byte_end":10653575,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653576,"byte_end":10653579,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653580,"byte_end":10653639,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Runtime::new()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653640,"byte_end":10653687,"line_start":124,"line_end":124,"column_start":1,"column_end":48}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653688,"byte_end":10653702,"line_start":125,"line_end":125,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653703,"byte_end":10653710,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653711,"byte_end":10653714,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the multi-thread scheduler, except in some","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653715,"byte_end":10653790,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ niche use-cases, such as when running only a single thread is required.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653791,"byte_end":10653866,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653867,"byte_end":10653870,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ #### Current-Thread Scheduler","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653871,"byte_end":10653904,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653905,"byte_end":10653908,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The current-thread scheduler provides a _single-threaded_ future executor.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653909,"byte_end":10653987,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/ All tasks will be created and executed on the current thread. This requires","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10653988,"byte_end":10654067,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ the `rt` feature flag.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654068,"byte_end":10654094,"line_start":135,"line_end":135,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654095,"byte_end":10654102,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654103,"byte_end":10654126,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654127,"byte_end":10654130,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654131,"byte_end":10654190,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new_current_thread()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654191,"byte_end":10654248,"line_start":140,"line_end":140,"column_start":1,"column_end":58}},{"value":"/     .build()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654249,"byte_end":10654267,"line_start":141,"line_end":141,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654268,"byte_end":10654282,"line_start":142,"line_end":142,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654283,"byte_end":10654290,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654291,"byte_end":10654294,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654295,"byte_end":10654320,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654321,"byte_end":10654324,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654325,"byte_end":10654399,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654400,"byte_end":10654480,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654481,"byte_end":10654560,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654561,"byte_end":10654640,"line_start":150,"line_end":150,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654641,"byte_end":10654710,"line_start":151,"line_end":151,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654711,"byte_end":10654714,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654715,"byte_end":10654749,"line_start":153,"line_end":153,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654750,"byte_end":10654753,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654754,"byte_end":10654833,"line_start":155,"line_end":155,"column_start":1,"column_end":80}},{"value":"/ multi-thread scheduler spawns threads to schedule tasks and for `spawn_blocking`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654834,"byte_end":10654918,"line_start":156,"line_end":156,"column_start":1,"column_end":85}},{"value":"/ calls.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654919,"byte_end":10654929,"line_start":157,"line_end":157,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654930,"byte_end":10654933,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10654934,"byte_end":10655012,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10655013,"byte_end":10655092,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10655093,"byte_end":10655151,"line_start":161,"line_end":161,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10655152,"byte_end":10655155,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10655156,"byte_end":10655180,"line_start":163,"line_end":163,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10655181,"byte_end":10655205,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10655206,"byte_end":10655240,"line_start":165,"line_end":165,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10655241,"byte_end":10655279,"line_start":166,"line_end":166,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10655280,"byte_end":10655326,"line_start":167,"line_end":167,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10655327,"byte_end":10655377,"line_start":168,"line_end":168,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10655378,"byte_end":10655452,"line_start":169,"line_end":169,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10655453,"byte_end":10655533,"line_start":170,"line_end":170,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10655534,"byte_end":10655596,"line_start":171,"line_end":171,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10655597,"byte_end":10655663,"line_start":172,"line_end":172,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10655664,"byte_end":10655728,"line_start":173,"line_end":173,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":6389},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10691217,"byte_end":10691226,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":6390}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":24125,"byte_end":24147,"line_start":272,"line_end":272,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5833},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10691715,"byte_end":10691727,"line_start":32,"line_end":32,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10691635,"byte_end":10691703,"line_start":31,"line_end":31,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5834},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692181,"byte_end":10692189,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10691802,"byte_end":10691864,"line_start":36,"line_end":36,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10691869,"byte_end":10691872,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10691877,"byte_end":10691891,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10691896,"byte_end":10691899,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10691904,"byte_end":10691911,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10691916,"byte_end":10691935,"line_start":41,"line_end":41,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10691940,"byte_end":10691943,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10691948,"byte_end":10691966,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10691971,"byte_end":10691992,"line_start":44,"line_end":44,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10691997,"byte_end":10692035,"line_start":45,"line_end":45,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692040,"byte_end":10692067,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692072,"byte_end":10692102,"line_start":47,"line_end":47,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692107,"byte_end":10692110,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692115,"byte_end":10692147,"line_start":49,"line_end":49,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692152,"byte_end":10692157,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692162,"byte_end":10692169,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5835},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693044,"byte_end":10693054,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<dyn Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692263,"byte_end":10692342,"line_start":56,"line_end":56,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692347,"byte_end":10692350,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692355,"byte_end":10692367,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692372,"byte_end":10692375,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692380,"byte_end":10692454,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692459,"byte_end":10692534,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692539,"byte_end":10692597,"line_start":62,"line_end":62,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692602,"byte_end":10692605,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692610,"byte_end":10692624,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692629,"byte_end":10692632,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692637,"byte_end":10692656,"line_start":66,"line_end":66,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692661,"byte_end":10692680,"line_start":67,"line_end":67,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692685,"byte_end":10692688,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692693,"byte_end":10692711,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692716,"byte_end":10692737,"line_start":70,"line_end":70,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692742,"byte_end":10692780,"line_start":71,"line_end":71,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692785,"byte_end":10692812,"line_start":72,"line_end":72,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692817,"byte_end":10692847,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692852,"byte_end":10692855,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692860,"byte_end":10692887,"line_start":75,"line_end":75,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692892,"byte_end":10692940,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10692945,"byte_end":10692996,"line_start":77,"line_end":77,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693001,"byte_end":10693010,"line_start":78,"line_end":78,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693015,"byte_end":10693020,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693025,"byte_end":10693032,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5836},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693819,"byte_end":10693833,"line_start":107,"line_end":107,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self)\n-> Result<Box<dyn Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693195,"byte_end":10693264,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693269,"byte_end":10693341,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693346,"byte_end":10693359,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693364,"byte_end":10693367,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693372,"byte_end":10693386,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693391,"byte_end":10693394,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693399,"byte_end":10693418,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693423,"byte_end":10693442,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693447,"byte_end":10693450,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693455,"byte_end":10693473,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693478,"byte_end":10693499,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693504,"byte_end":10693542,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693547,"byte_end":10693574,"line_start":98,"line_end":98,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693579,"byte_end":10693609,"line_start":99,"line_end":99,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693614,"byte_end":10693617,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693622,"byte_end":10693672,"line_start":101,"line_end":101,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693677,"byte_end":10693725,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693730,"byte_end":10693771,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693776,"byte_end":10693785,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693790,"byte_end":10693795,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10693800,"byte_end":10693807,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6391},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10713967,"byte_end":10713977,"line_start":144,"line_end":144,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":6393},{"krate":0,"index":6394}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":24125,"byte_end":24147,"line_start":272,"line_end":272,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":6014},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10715280,"byte_end":10715285,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"abort","qualname":"<JoinHandle<T>>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the task associated with the handle.","sig":null,"attributes":[{"value":"/ Abort the task associated with the handle.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714323,"byte_end":10714369,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714374,"byte_end":10714377,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Awaiting a cancelled task might complete as usual if the task was","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714382,"byte_end":10714451,"line_start":163,"line_end":163,"column_start":5,"column_end":74}},{"value":"/ already completed at the time it was cancelled, but most likely it","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714456,"byte_end":10714526,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ will complete with a `Err(JoinError::Cancelled)`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714531,"byte_end":10714584,"line_start":165,"line_end":165,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714589,"byte_end":10714592,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714597,"byte_end":10714608,"line_start":167,"line_end":167,"column_start":5,"column_end":16}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714613,"byte_end":10714633,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714638,"byte_end":10714641,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714646,"byte_end":10714664,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714669,"byte_end":10714690,"line_start":171,"line_end":171,"column_start":5,"column_end":26}},{"value":"/    let mut handles = Vec::new();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714695,"byte_end":10714731,"line_start":172,"line_end":172,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714736,"byte_end":10714739,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714744,"byte_end":10714784,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714789,"byte_end":10714848,"line_start":175,"line_end":175,"column_start":5,"column_end":64}},{"value":"/       true","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714853,"byte_end":10714867,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/    }));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714872,"byte_end":10714883,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714888,"byte_end":10714891,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714896,"byte_end":10714936,"line_start":179,"line_end":179,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714941,"byte_end":10715000,"line_start":180,"line_end":180,"column_start":5,"column_end":64}},{"value":"/       false","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10715005,"byte_end":10715020,"line_start":181,"line_end":181,"column_start":5,"column_end":20}},{"value":"/    }));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10715025,"byte_end":10715036,"line_start":182,"line_end":182,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10715041,"byte_end":10715044,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/    for handle in &handles {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10715049,"byte_end":10715080,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/        handle.abort();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10715085,"byte_end":10715111,"line_start":185,"line_end":185,"column_start":5,"column_end":31}},{"value":"/    }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10715116,"byte_end":10715124,"line_start":186,"line_end":186,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10715129,"byte_end":10715132,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/    for handle in handles {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10715137,"byte_end":10715167,"line_start":188,"line_end":188,"column_start":5,"column_end":35}},{"value":"/        assert!(handle.await.unwrap_err().is_cancelled());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10715172,"byte_end":10715233,"line_start":189,"line_end":189,"column_start":5,"column_end":66}},{"value":"/    }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10715238,"byte_end":10715246,"line_start":190,"line_end":190,"column_start":5,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10715251,"byte_end":10715256,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10715261,"byte_end":10715268,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6809},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772735,"byte_end":10772742,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":6810},{"krate":0,"index":6811},{"krate":0,"index":6812},{"krate":0,"index":6813},{"krate":0,"index":6814},{"krate":0,"index":6815},{"krate":0,"index":6816},{"krate":0,"index":6817},{"krate":0,"index":6818},{"krate":0,"index":6819},{"krate":0,"index":6820}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10771779,"byte_end":10771837,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10771838,"byte_end":10771841,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10771842,"byte_end":10771914,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10771915,"byte_end":10771963,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10771964,"byte_end":10771967,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new_multi_thread`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10771968,"byte_end":10772045,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ or [`Builder::new_current_thread`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772046,"byte_end":10772085,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772086,"byte_end":10772089,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772090,"byte_end":10772167,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772168,"byte_end":10772181,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772182,"byte_end":10772185,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772186,"byte_end":10772219,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new_multi_thread`]: method@Self::new_multi_thread","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772220,"byte_end":10772284,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ [`Builder::new_current_thread`]: method@Self::new_current_thread","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772285,"byte_end":10772353,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772354,"byte_end":10772357,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772358,"byte_end":10772372,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772373,"byte_end":10772376,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772377,"byte_end":10772384,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772385,"byte_end":10772417,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772418,"byte_end":10772421,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772422,"byte_end":10772437,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772438,"byte_end":10772462,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new_multi_thread()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772463,"byte_end":10772512,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/         .worker_threads(4)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772513,"byte_end":10772543,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772544,"byte_end":10772586,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772587,"byte_end":10772634,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772635,"byte_end":10772655,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772656,"byte_end":10772678,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772679,"byte_end":10772682,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772683,"byte_end":10772709,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772710,"byte_end":10772715,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10772716,"byte_end":10772723,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6826},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10774263,"byte_end":10774281,"line_start":94,"line_end":94,"column_start":12,"column_end":30},"name":"new_current_thread","qualname":"<Builder>::new_current_thread","value":"pub fn new_current_thread() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with the current thread scheduler selected.","sig":null,"attributes":[{"value":"/ Returns a new builder with the current thread scheduler selected.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10773948,"byte_end":10774017,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10774022,"byte_end":10774025,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10774030,"byte_end":10774091,"line_start":88,"line_end":88,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10774096,"byte_end":10774099,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ To spawn non-`Send` tasks on the resulting runtime, combine it with a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10774104,"byte_end":10774177,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ [`LocalSet`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10774182,"byte_end":10774199,"line_start":91,"line_end":91,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10774204,"byte_end":10774207,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`LocalSet`]: crate::task::LocalSet","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10774212,"byte_end":10774251,"line_start":93,"line_end":93,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":6829},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776152,"byte_end":10776162,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10775659,"byte_end":10775697,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10775702,"byte_end":10775705,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10775710,"byte_end":10775781,"line_start":145,"line_end":145,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10775786,"byte_end":10775862,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10775867,"byte_end":10775921,"line_start":147,"line_end":147,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10775926,"byte_end":10775929,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10775934,"byte_end":10775948,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10775953,"byte_end":10775956,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10775961,"byte_end":10775968,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10775973,"byte_end":10775996,"line_start":152,"line_end":152,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776001,"byte_end":10776004,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776009,"byte_end":10776058,"line_start":154,"line_end":154,"column_start":5,"column_end":54}},{"value":"/     .enable_all()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776063,"byte_end":10776084,"line_start":155,"line_end":155,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776089,"byte_end":10776105,"line_start":156,"line_end":156,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776110,"byte_end":10776128,"line_start":157,"line_end":157,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776133,"byte_end":10776140,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6830},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777839,"byte_end":10777853,"line_start":217,"line_end":217,"column_start":12,"column_end":26},"name":"worker_threads","qualname":"<Builder>::worker_threads","value":"pub fn worker_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of worker threads the `Runtime` will use.","sig":null,"attributes":[{"value":"/ Sets the number of worker threads the `Runtime` will use.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776390,"byte_end":10776451,"line_start":168,"line_end":168,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776456,"byte_end":10776459,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This can be any number above 0 though it is advised to keep this value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776464,"byte_end":10776538,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ on the smaller side.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776543,"byte_end":10776567,"line_start":171,"line_end":171,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776572,"byte_end":10776575,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776580,"byte_end":10776593,"line_start":173,"line_end":173,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776598,"byte_end":10776601,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776606,"byte_end":10776675,"line_start":175,"line_end":175,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776680,"byte_end":10776683,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776688,"byte_end":10776699,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776704,"byte_end":10776707,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ When using the `current_thread` runtime this method will panic, since","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776712,"byte_end":10776785,"line_start":179,"line_end":179,"column_start":5,"column_end":78}},{"value":"/ those variants do not allow setting worker thread counts.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776790,"byte_end":10776851,"line_start":180,"line_end":180,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776856,"byte_end":10776859,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776864,"byte_end":10776867,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776872,"byte_end":10776886,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776891,"byte_end":10776894,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ## Multi threaded runtime with 4 threads","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776899,"byte_end":10776943,"line_start":185,"line_end":185,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776948,"byte_end":10776951,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776956,"byte_end":10776963,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776968,"byte_end":10776991,"line_start":188,"line_end":188,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10776996,"byte_end":10776999,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ // This will spawn a work-stealing runtime with 4 worker threads.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777004,"byte_end":10777073,"line_start":190,"line_end":190,"column_start":5,"column_end":74}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777078,"byte_end":10777127,"line_start":191,"line_end":191,"column_start":5,"column_end":54}},{"value":"/     .worker_threads(4)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777132,"byte_end":10777158,"line_start":192,"line_end":192,"column_start":5,"column_end":31}},{"value":"/     .build()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777163,"byte_end":10777179,"line_start":193,"line_end":193,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777184,"byte_end":10777202,"line_start":194,"line_end":194,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777207,"byte_end":10777210,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ rt.spawn(async move {});","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777215,"byte_end":10777243,"line_start":196,"line_end":196,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777248,"byte_end":10777255,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777260,"byte_end":10777263,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ## Current thread runtime (will only run on the current thread via `Runtime::block_on`)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777268,"byte_end":10777359,"line_start":199,"line_end":199,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777364,"byte_end":10777367,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777372,"byte_end":10777379,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777384,"byte_end":10777407,"line_start":202,"line_end":202,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777412,"byte_end":10777415,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ // Create a runtime that _must_ be driven from a call","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777420,"byte_end":10777477,"line_start":204,"line_end":204,"column_start":5,"column_end":62}},{"value":"/ // to `Runtime::block_on`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777482,"byte_end":10777512,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/ let rt = runtime::Builder::new_current_thread()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777517,"byte_end":10777568,"line_start":206,"line_end":206,"column_start":5,"column_end":56}},{"value":"/     .build()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777573,"byte_end":10777589,"line_start":207,"line_end":207,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777594,"byte_end":10777612,"line_start":208,"line_end":208,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777617,"byte_end":10777620,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ // This will run the runtime and future on the current thread","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777625,"byte_end":10777690,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/ rt.block_on(async move {});","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777695,"byte_end":10777726,"line_start":211,"line_end":211,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777731,"byte_end":10777738,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777743,"byte_end":10777746,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777751,"byte_end":10777762,"line_start":214,"line_end":214,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777767,"byte_end":10777770,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10777775,"byte_end":10777827,"line_start":216,"line_end":216,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6831},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778978,"byte_end":10778998,"line_start":245,"line_end":245,"column_start":12,"column_end":32},"name":"max_blocking_threads","qualname":"<Builder>::max_blocking_threads","value":"pub fn max_blocking_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the limit for additional threads spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies the limit for additional threads spawned by the Runtime.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778020,"byte_end":10778090,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778095,"byte_end":10778098,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ These threads are used for blocking operations like tasks spawned","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778103,"byte_end":10778172,"line_start":225,"line_end":225,"column_start":5,"column_end":74}},{"value":"/ through [`spawn_blocking`]. Unlike the [`worker_threads`], they are not","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778177,"byte_end":10778252,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ always active and will exit if left idle for too long. You can change","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778257,"byte_end":10778330,"line_start":227,"line_end":227,"column_start":5,"column_end":78}},{"value":"/ this timeout duration with [`thread_keep_alive`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778335,"byte_end":10778388,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778393,"byte_end":10778396,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778401,"byte_end":10778430,"line_start":230,"line_end":230,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778435,"byte_end":10778438,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778443,"byte_end":10778454,"line_start":232,"line_end":232,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778459,"byte_end":10778462,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778467,"byte_end":10778519,"line_start":234,"line_end":234,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778524,"byte_end":10778527,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Upgrading from 0.x","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778532,"byte_end":10778556,"line_start":236,"line_end":236,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778561,"byte_end":10778564,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ In old versions `max_threads` limited both blocking and worker threads, but the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778569,"byte_end":10778652,"line_start":238,"line_end":238,"column_start":5,"column_end":88}},{"value":"/ current `max_blocking_threads` does not include async worker threads in the count.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778657,"byte_end":10778743,"line_start":239,"line_end":239,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778748,"byte_end":10778751,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778756,"byte_end":10778810,"line_start":241,"line_end":241,"column_start":5,"column_end":59}},{"value":"/ [`worker_threads`]: Self::worker_threads","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778815,"byte_end":10778859,"line_start":242,"line_end":242,"column_start":5,"column_end":49}},{"value":"/ [`thread_keep_alive`]: Self::thread_keep_alive","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10778864,"byte_end":10778914,"line_start":243,"line_end":243,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6832},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779554,"byte_end":10779565,"line_start":266,"line_end":266,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779171,"byte_end":10779235,"line_start":251,"line_end":251,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779240,"byte_end":10779243,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779248,"byte_end":10779295,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779300,"byte_end":10779303,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779308,"byte_end":10779322,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779327,"byte_end":10779330,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779335,"byte_end":10779342,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779347,"byte_end":10779372,"line_start":258,"line_end":258,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779377,"byte_end":10779380,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779385,"byte_end":10779406,"line_start":260,"line_end":260,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779411,"byte_end":10779460,"line_start":261,"line_end":261,"column_start":5,"column_end":54}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779465,"byte_end":10779496,"line_start":262,"line_end":262,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779501,"byte_end":10779518,"line_start":263,"line_end":263,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779523,"byte_end":10779530,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779535,"byte_end":10779542,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6835},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780414,"byte_end":10780428,"line_start":292,"line_end":292,"column_start":12,"column_end":26},"name":"thread_name_fn","qualname":"<Builder>::thread_name_fn","value":"pub fn thread_name_fn<F>(&mut Self, F) -> &mut Self where F: Fn() -> String +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779739,"byte_end":10779835,"line_start":272,"line_end":272,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779840,"byte_end":10779843,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The default name fn is `|| \"tokio-runtime-worker\".into()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779848,"byte_end":10779910,"line_start":274,"line_end":274,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779915,"byte_end":10779918,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779923,"byte_end":10779937,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779942,"byte_end":10779945,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779950,"byte_end":10779957,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779962,"byte_end":10779987,"line_start":279,"line_end":279,"column_start":5,"column_end":30}},{"value":"/ # use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10779992,"byte_end":10780045,"line_start":280,"line_end":280,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780050,"byte_end":10780053,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780058,"byte_end":10780079,"line_start":282,"line_end":282,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780084,"byte_end":10780133,"line_start":283,"line_end":283,"column_start":5,"column_end":54}},{"value":"/     .thread_name_fn(|| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780138,"byte_end":10780166,"line_start":284,"line_end":284,"column_start":5,"column_end":33}},{"value":"/        static ATOMIC_ID: AtomicUsize = AtomicUsize::new(0);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780171,"byte_end":10780234,"line_start":285,"line_end":285,"column_start":5,"column_end":68}},{"value":"/        let id = ATOMIC_ID.fetch_add(1, Ordering::SeqCst);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780239,"byte_end":10780300,"line_start":286,"line_end":286,"column_start":5,"column_end":66}},{"value":"/        format!(\"my-pool-{}\", id)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780305,"byte_end":10780341,"line_start":287,"line_end":287,"column_start":5,"column_end":41}},{"value":"/     })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780346,"byte_end":10780356,"line_start":288,"line_end":288,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780361,"byte_end":10780378,"line_start":289,"line_end":289,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780383,"byte_end":10780390,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780395,"byte_end":10780402,"line_start":291,"line_end":291,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6837},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781193,"byte_end":10781210,"line_start":319,"line_end":319,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780604,"byte_end":10780658,"line_start":300,"line_end":300,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780663,"byte_end":10780666,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780671,"byte_end":10780743,"line_start":302,"line_end":302,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780748,"byte_end":10780781,"line_start":303,"line_end":303,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780786,"byte_end":10780789,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780794,"byte_end":10780862,"line_start":305,"line_end":305,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780867,"byte_end":10780928,"line_start":306,"line_end":306,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780933,"byte_end":10780936,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780941,"byte_end":10780955,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780960,"byte_end":10780963,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780968,"byte_end":10780975,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10780980,"byte_end":10781005,"line_start":311,"line_end":311,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781010,"byte_end":10781013,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781018,"byte_end":10781039,"line_start":313,"line_end":313,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781044,"byte_end":10781093,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781098,"byte_end":10781135,"line_start":315,"line_end":315,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781140,"byte_end":10781157,"line_start":316,"line_end":316,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781162,"byte_end":10781169,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781174,"byte_end":10781181,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6838},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781830,"byte_end":10781845,"line_start":343,"line_end":343,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781317,"byte_end":10781392,"line_start":324,"line_end":324,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781397,"byte_end":10781412,"line_start":325,"line_end":325,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781417,"byte_end":10781420,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781425,"byte_end":10781487,"line_start":327,"line_end":327,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781492,"byte_end":10781495,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781500,"byte_end":10781514,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781519,"byte_end":10781522,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781527,"byte_end":10781534,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781539,"byte_end":10781564,"line_start":332,"line_end":332,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781569,"byte_end":10781572,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781577,"byte_end":10781598,"line_start":334,"line_end":334,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781603,"byte_end":10781657,"line_start":335,"line_end":335,"column_start":5,"column_end":59}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781662,"byte_end":10781691,"line_start":336,"line_end":336,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781696,"byte_end":10781735,"line_start":337,"line_end":337,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781740,"byte_end":10781750,"line_start":338,"line_end":338,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781755,"byte_end":10781772,"line_start":339,"line_end":339,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781777,"byte_end":10781784,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781789,"byte_end":10781796,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10781801,"byte_end":10781818,"line_start":342,"line_end":342,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6840},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782486,"byte_end":10782500,"line_start":369,"line_end":369,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782017,"byte_end":10782068,"line_start":351,"line_end":351,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782073,"byte_end":10782076,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782081,"byte_end":10782143,"line_start":353,"line_end":353,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782148,"byte_end":10782151,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782156,"byte_end":10782170,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782175,"byte_end":10782178,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782183,"byte_end":10782190,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782195,"byte_end":10782220,"line_start":358,"line_end":358,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782225,"byte_end":10782228,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782233,"byte_end":10782254,"line_start":360,"line_end":360,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782259,"byte_end":10782313,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782318,"byte_end":10782346,"line_start":362,"line_end":362,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782351,"byte_end":10782391,"line_start":363,"line_end":363,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782396,"byte_end":10782406,"line_start":364,"line_end":364,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782411,"byte_end":10782428,"line_start":365,"line_end":365,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782433,"byte_end":10782440,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782445,"byte_end":10782452,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782457,"byte_end":10782474,"line_start":368,"line_end":368,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6842},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10783064,"byte_end":10783069,"line_start":392,"line_end":392,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782672,"byte_end":10782709,"line_start":377,"line_end":377,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782714,"byte_end":10782717,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The returned `Runtime` instance is ready to spawn tasks.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782722,"byte_end":10782782,"line_start":379,"line_end":379,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782787,"byte_end":10782790,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782795,"byte_end":10782809,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782814,"byte_end":10782817,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782822,"byte_end":10782829,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782834,"byte_end":10782866,"line_start":384,"line_end":384,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782871,"byte_end":10782874,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let rt  = Builder::new_multi_thread().build().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782879,"byte_end":10782938,"line_start":386,"line_end":386,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782943,"byte_end":10782946,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782951,"byte_end":10782974,"line_start":388,"line_end":388,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10782979,"byte_end":10783028,"line_start":389,"line_end":389,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10783033,"byte_end":10783040,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10783045,"byte_end":10783052,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6844},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10784248,"byte_end":10784265,"line_start":430,"line_end":430,"column_start":12,"column_end":29},"name":"thread_keep_alive","qualname":"<Builder>::thread_keep_alive","value":"pub fn thread_keep_alive(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom timeout for a thread in the blocking pool.","sig":null,"attributes":[{"value":"/ Sets a custom timeout for a thread in the blocking pool.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10783739,"byte_end":10783799,"line_start":413,"line_end":413,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10783804,"byte_end":10783807,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ By default, the timeout for a thread is set to 10 seconds. This can","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10783812,"byte_end":10783883,"line_start":415,"line_end":415,"column_start":5,"column_end":76}},{"value":"/ be overriden using .thread_keep_alive().","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10783888,"byte_end":10783932,"line_start":416,"line_end":416,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10783937,"byte_end":10783940,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10783945,"byte_end":10783958,"line_start":418,"line_end":418,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10783963,"byte_end":10783966,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10783971,"byte_end":10783978,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10783983,"byte_end":10784008,"line_start":421,"line_end":421,"column_start":5,"column_end":30}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10784013,"byte_end":10784043,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10784048,"byte_end":10784051,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10784056,"byte_end":10784077,"line_start":424,"line_end":424,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10784082,"byte_end":10784131,"line_start":425,"line_end":425,"column_start":5,"column_end":54}},{"value":"/     .thread_keep_alive(Duration::from_millis(100))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10784136,"byte_end":10784190,"line_start":426,"line_end":426,"column_start":5,"column_end":59}},{"value":"/     .build();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10784195,"byte_end":10784212,"line_start":427,"line_end":427,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10784217,"byte_end":10784224,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10784229,"byte_end":10784236,"line_start":429,"line_end":429,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7004},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10786012,"byte_end":10786021,"line_start":483,"line_end":483,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7006},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10786545,"byte_end":10786556,"line_start":506,"line_end":506,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7047},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10797327,"byte_end":10797333,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":7048},{"krate":0,"index":7049},{"krate":0,"index":7050},{"krate":0,"index":7051},{"krate":0,"index":7052},{"krate":0,"index":7053}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10797058,"byte_end":10797084,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10797085,"byte_end":10797088,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10797089,"byte_end":10797177,"line_start":11,"line_end":11,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10797178,"byte_end":10797228,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10797229,"byte_end":10797232,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10797233,"byte_end":10797291,"line_start":14,"line_end":14,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":7058},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10798079,"byte_end":10798089,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"EnterGuard","qualname":"::runtime::handle::EnterGuard","value":"EnterGuard {  }","parent":null,"children":[{"krate":0,"index":7060},{"krate":0,"index":7061}],"decl_id":null,"docs":" Runtime context guard.","sig":null,"attributes":[{"value":"/ Runtime context guard.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10797784,"byte_end":10797810,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10797811,"byte_end":10797814,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Returned by [`Runtime::enter`] and [`Handle::enter`], the context guard exits","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10797815,"byte_end":10797896,"line_start":37,"line_end":37,"column_start":1,"column_end":82}},{"value":"/ the runtime context on drop.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10797897,"byte_end":10797929,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10797930,"byte_end":10797933,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10797934,"byte_end":10797991,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"must_use = \"Creating and dropping a guard does nothing\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10798009,"byte_end":10798067,"line_start":42,"line_end":42,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6948},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10798563,"byte_end":10798568,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Sleep`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10798173,"byte_end":10798248,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Sleep`] or [`TcpStream`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10798253,"byte_end":10798331,"line_start":50,"line_end":50,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10798336,"byte_end":10798404,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10798409,"byte_end":10798412,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`Sleep`]: struct@crate::time::Sleep","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10798417,"byte_end":10798457,"line_start":53,"line_end":53,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10798462,"byte_end":10798509,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10798514,"byte_end":10798551,"line_start":55,"line_end":55,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":6949},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800062,"byte_end":10800069,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10798713,"byte_end":10798777,"line_start":63,"line_end":63,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10798782,"byte_end":10798785,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10798790,"byte_end":10798801,"line_start":65,"line_end":65,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10798806,"byte_end":10798809,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10798814,"byte_end":10798908,"line_start":67,"line_end":67,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10798913,"byte_end":10799005,"line_start":68,"line_end":68,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799010,"byte_end":10799086,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799091,"byte_end":10799094,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799099,"byte_end":10799113,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799118,"byte_end":10799121,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799126,"byte_end":10799208,"line_start":73,"line_end":73,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799213,"byte_end":10799259,"line_start":74,"line_end":74,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799264,"byte_end":10799267,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799272,"byte_end":10799279,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799284,"byte_end":10799306,"line_start":77,"line_end":77,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799311,"byte_end":10799345,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799350,"byte_end":10799366,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799371,"byte_end":10799410,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799415,"byte_end":10799437,"line_start":81,"line_end":81,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799442,"byte_end":10799473,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799478,"byte_end":10799481,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799486,"byte_end":10799527,"line_start":84,"line_end":84,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799532,"byte_end":10799567,"line_start":85,"line_end":85,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799572,"byte_end":10799596,"line_start":86,"line_end":86,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799601,"byte_end":10799657,"line_start":87,"line_end":87,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799662,"byte_end":10799669,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799674,"byte_end":10799677,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799682,"byte_end":10799700,"line_start":90,"line_end":90,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799705,"byte_end":10799732,"line_start":91,"line_end":91,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799737,"byte_end":10799822,"line_start":92,"line_end":92,"column_start":5,"column_end":90}},{"value":"/     handle.spawn(async { /* ... */ })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799827,"byte_end":10799868,"line_start":93,"line_end":93,"column_start":5,"column_end":46}},{"value":"/     // This next line would cause a panic","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799873,"byte_end":10799918,"line_start":94,"line_end":94,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799923,"byte_end":10799966,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799971,"byte_end":10799978,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10799983,"byte_end":10800012,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800017,"byte_end":10800026,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800031,"byte_end":10800038,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800043,"byte_end":10800050,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6950},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800343,"byte_end":10800354,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800150,"byte_end":10800210,"line_start":105,"line_end":105,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800215,"byte_end":10800218,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800223,"byte_end":10800274,"line_start":107,"line_end":107,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800279,"byte_end":10800282,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800287,"byte_end":10800331,"line_start":109,"line_end":109,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6951},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801309,"byte_end":10801314,"line_start":142,"line_end":142,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800457,"byte_end":10800499,"line_start":114,"line_end":114,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800504,"byte_end":10800507,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800512,"byte_end":10800583,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800588,"byte_end":10800663,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800668,"byte_end":10800691,"line_start":118,"line_end":118,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800696,"byte_end":10800699,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800704,"byte_end":10800763,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800768,"byte_end":10800771,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800776,"byte_end":10800797,"line_start":122,"line_end":122,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800802,"byte_end":10800805,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800810,"byte_end":10800824,"line_start":124,"line_end":124,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800829,"byte_end":10800832,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800837,"byte_end":10800844,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800849,"byte_end":10800881,"line_start":127,"line_end":127,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800886,"byte_end":10800889,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800894,"byte_end":10800910,"line_start":129,"line_end":129,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800915,"byte_end":10800940,"line_start":130,"line_end":130,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800945,"byte_end":10800982,"line_start":131,"line_end":131,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10800987,"byte_end":10801024,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801029,"byte_end":10801058,"line_start":133,"line_end":133,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801063,"byte_end":10801066,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime using the handle","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801071,"byte_end":10801126,"line_start":135,"line_end":135,"column_start":5,"column_end":60}},{"value":"/ handle.spawn(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801131,"byte_end":10801155,"line_start":136,"line_end":136,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801160,"byte_end":10801211,"line_start":137,"line_end":137,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801216,"byte_end":10801223,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801228,"byte_end":10801235,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801240,"byte_end":10801247,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801283,"byte_end":10801295,"line_start":141,"line_end":141,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":6953},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10802217,"byte_end":10802231,"line_start":172,"line_end":172,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking\n operations.","sig":null,"attributes":[{"value":"/ Run the provided function on an executor dedicated to blocking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801614,"byte_end":10801680,"line_start":152,"line_end":152,"column_start":5,"column_end":71}},{"value":"/ operations.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801685,"byte_end":10801700,"line_start":153,"line_end":153,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801705,"byte_end":10801708,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801713,"byte_end":10801727,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801732,"byte_end":10801735,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801740,"byte_end":10801747,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801752,"byte_end":10801784,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801789,"byte_end":10801792,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801797,"byte_end":10801813,"line_start":160,"line_end":160,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801818,"byte_end":10801843,"line_start":161,"line_end":161,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801848,"byte_end":10801885,"line_start":162,"line_end":162,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801890,"byte_end":10801927,"line_start":163,"line_end":163,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801932,"byte_end":10801961,"line_start":164,"line_end":164,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801966,"byte_end":10801969,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ // Spawn a blocking function onto the runtime using the handle","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10801974,"byte_end":10802040,"line_start":166,"line_end":166,"column_start":5,"column_end":71}},{"value":"/ handle.spawn_blocking(|| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10802045,"byte_end":10802075,"line_start":167,"line_end":167,"column_start":5,"column_end":35}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10802080,"byte_end":10802131,"line_start":168,"line_end":168,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10802136,"byte_end":10802143,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10802148,"byte_end":10802155,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10802191,"byte_end":10802203,"line_start":171,"line_end":171,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":6956},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10806244,"byte_end":10806252,"line_start":276,"line_end":276,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Handle>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on this `Handle`'s associated `Runtime`.","sig":null,"attributes":[{"value":"/ Run a future to completion on this `Handle`'s associated `Runtime`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10803417,"byte_end":10803488,"line_start":206,"line_end":206,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10803493,"byte_end":10803496,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the current thread, blocking until it is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10803501,"byte_end":10803575,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10803580,"byte_end":10803653,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10803658,"byte_end":10803723,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10803728,"byte_end":10803731,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ When this is used on a `current_thread` runtime, only the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10803736,"byte_end":10803797,"line_start":212,"line_end":212,"column_start":5,"column_end":66}},{"value":"/ [`Runtime::block_on`] method can drive the IO and timer drivers, but the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10803802,"byte_end":10803878,"line_start":213,"line_end":213,"column_start":5,"column_end":81}},{"value":"/ `Handle::block_on` method cannot drive them. This means that, when using","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10803883,"byte_end":10803959,"line_start":214,"line_end":214,"column_start":5,"column_end":81}},{"value":"/ this method on a current_thread runtime, anything that relies on IO or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10803964,"byte_end":10804038,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ timers will not work unless there is another thread currently calling","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804043,"byte_end":10804116,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/ [`Runtime::block_on`] on the same runtime.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804121,"byte_end":10804167,"line_start":217,"line_end":217,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804172,"byte_end":10804175,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # If the runtime has been shut down","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804180,"byte_end":10804219,"line_start":219,"line_end":219,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804224,"byte_end":10804227,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ If the `Handle`'s associated `Runtime` has been shut down (through","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804232,"byte_end":10804302,"line_start":221,"line_end":221,"column_start":5,"column_end":75}},{"value":"/ [`Runtime::shutdown_background`], [`Runtime::shutdown_timeout`], or by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804307,"byte_end":10804381,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ dropping it) and `Handle::block_on` is used it might return an error or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804386,"byte_end":10804461,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ panic. Specifically IO resources will return an error and timers will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804466,"byte_end":10804539,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ panic. Runtime independent futures will run as normal.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804544,"byte_end":10804602,"line_start":225,"line_end":225,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804607,"byte_end":10804610,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804615,"byte_end":10804627,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804632,"byte_end":10804635,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, if called within an","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804640,"byte_end":10804715,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ asynchronous execution context, or if a timer future is executed on a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804720,"byte_end":10804793,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ runtime that has been shut down.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804798,"byte_end":10804834,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804839,"byte_end":10804842,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804847,"byte_end":10804861,"line_start":233,"line_end":233,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804866,"byte_end":10804869,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804874,"byte_end":10804881,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804886,"byte_end":10804918,"line_start":236,"line_end":236,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804923,"byte_end":10804926,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804931,"byte_end":10804956,"line_start":238,"line_end":238,"column_start":5,"column_end":30}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10804961,"byte_end":10804999,"line_start":239,"line_end":239,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805004,"byte_end":10805007,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805012,"byte_end":10805049,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805054,"byte_end":10805083,"line_start":242,"line_end":242,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805088,"byte_end":10805091,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805096,"byte_end":10805167,"line_start":244,"line_end":244,"column_start":5,"column_end":76}},{"value":"/ handle.block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805172,"byte_end":10805199,"line_start":245,"line_end":245,"column_start":5,"column_end":32}},{"value":"/     println!(\"hello\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805204,"byte_end":10805230,"line_start":246,"line_end":246,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805235,"byte_end":10805242,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805247,"byte_end":10805254,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805259,"byte_end":10805262,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Or using `Handle::current`:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805267,"byte_end":10805298,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805303,"byte_end":10805306,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805311,"byte_end":10805318,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805323,"byte_end":10805354,"line_start":253,"line_end":253,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805359,"byte_end":10805362,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805367,"byte_end":10805385,"line_start":255,"line_end":255,"column_start":5,"column_end":23}},{"value":"/ async fn main () {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805390,"byte_end":10805412,"line_start":256,"line_end":256,"column_start":5,"column_end":27}},{"value":"/     let handle = Handle::current();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805417,"byte_end":10805456,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/     std::thread::spawn(move || {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805461,"byte_end":10805497,"line_start":258,"line_end":258,"column_start":5,"column_end":41}},{"value":"/         // Using Handle::block_on to run async code in the new thread.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805502,"byte_end":10805576,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/         handle.block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805581,"byte_end":10805616,"line_start":260,"line_end":260,"column_start":5,"column_end":40}},{"value":"/             println!(\"hello\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805621,"byte_end":10805655,"line_start":261,"line_end":261,"column_start":5,"column_end":39}},{"value":"/         });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805660,"byte_end":10805675,"line_start":262,"line_end":262,"column_start":5,"column_end":20}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805680,"byte_end":10805691,"line_start":263,"line_end":263,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805696,"byte_end":10805701,"line_start":264,"line_end":264,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805706,"byte_end":10805713,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805718,"byte_end":10805721,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [`JoinError`]: struct@crate::task::JoinError","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805726,"byte_end":10805774,"line_start":267,"line_end":267,"column_start":5,"column_end":53}},{"value":"/ [`JoinHandle`]: struct@crate::task::JoinHandle","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805779,"byte_end":10805829,"line_start":268,"line_end":268,"column_start":5,"column_end":55}},{"value":"/ [`Runtime::block_on`]: fn@crate::runtime::Runtime::block_on","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805834,"byte_end":10805897,"line_start":269,"line_end":269,"column_start":5,"column_end":68}},{"value":"/ [`Runtime::shutdown_background`]: fn@crate::runtime::Runtime::shutdown_background","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805902,"byte_end":10805987,"line_start":270,"line_end":270,"column_start":5,"column_end":90}},{"value":"/ [`Runtime::shutdown_timeout`]: fn@crate::runtime::Runtime::shutdown_timeout","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10805992,"byte_end":10806071,"line_start":271,"line_end":271,"column_start":5,"column_end":84}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10806076,"byte_end":10806127,"line_start":272,"line_end":272,"column_start":5,"column_end":56}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10806132,"byte_end":10806160,"line_start":273,"line_end":273,"column_start":5,"column_end":33}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10806165,"byte_end":10806195,"line_start":274,"line_end":274,"column_start":5,"column_end":35}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10806200,"byte_end":10806232,"line_start":275,"line_end":275,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":6959},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10806872,"byte_end":10806887,"line_start":295,"line_end":295,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10806792,"byte_end":10806860,"line_start":294,"line_end":294,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":7107},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10658104,"byte_end":10658111,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":7108},{"krate":0,"index":7109},{"krate":0,"index":7110}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":24125,"byte_end":24147,"line_start":272,"line_end":272,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":7096},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10660735,"byte_end":10660741,"line_start":342,"line_end":342,"column_start":16,"column_end":22},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7097},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10661665,"byte_end":10661670,"line_start":372,"line_end":372,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10661635,"byte_end":10661647,"line_start":371,"line_end":371,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":7099},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10662443,"byte_end":10662457,"line_start":397,"line_end":397,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Runtime>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking operations.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10662413,"byte_end":10662425,"line_start":396,"line_end":396,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":7102},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10664389,"byte_end":10664397,"line_start":446,"line_end":446,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the\n runtime's entry point.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7104},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10665885,"byte_end":10665890,"line_start":488,"line_end":488,"column_start":16,"column_end":21},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7105},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10667460,"byte_end":10667476,"line_start":527,"line_end":527,"column_start":16,"column_end":32},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7106},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10668897,"byte_end":10668916,"line_start":559,"line_end":559,"column_start":16,"column_end":35},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":7153},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":7154},{"krate":0,"index":7158},{"krate":0,"index":7172},{"krate":0,"index":7173},{"krate":0,"index":7176},{"krate":0,"index":7179},{"krate":0,"index":7380},{"krate":0,"index":7967},{"krate":0,"index":8128},{"krate":0,"index":8129},{"krate":0,"index":8132},{"krate":0,"index":8135},{"krate":0,"index":8136},{"krate":0,"index":8138},{"krate":0,"index":8141},{"krate":0,"index":8144},{"krate":0,"index":8229},{"krate":0,"index":8232},{"krate":0,"index":8383},{"krate":0,"index":8505},{"krate":0,"index":8506},{"krate":0,"index":8509},{"krate":0,"index":8512},{"krate":0,"index":8558},{"krate":0,"index":8559},{"krate":0,"index":8562},{"krate":0,"index":8565},{"krate":0,"index":8568},{"krate":0,"index":9011},{"krate":0,"index":9014},{"krate":0,"index":9017},{"krate":0,"index":9020},{"krate":0,"index":9023},{"krate":0,"index":9026},{"krate":0,"index":9029},{"krate":0,"index":9032},{"krate":0,"index":9095},{"krate":0,"index":9098},{"krate":0,"index":9194},{"krate":0,"index":9195},{"krate":0,"index":9198},{"krate":0,"index":9201}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":23818,"byte_end":23842,"line_start":256,"line_end":256,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10808426,"byte_end":10808490,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10808491,"byte_end":10808494,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10808495,"byte_end":10808570,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10808571,"byte_end":10808651,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10808652,"byte_end":10808731,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10808732,"byte_end":10808766,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10808767,"byte_end":10808770,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10808771,"byte_end":10808795,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10808796,"byte_end":10808799,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10808800,"byte_end":10808821,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10808822,"byte_end":10808825,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10808826,"byte_end":10808899,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10808900,"byte_end":10808979,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10808980,"byte_end":10809049,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809050,"byte_end":10809053,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809054,"byte_end":10809133,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809134,"byte_end":10809211,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809212,"byte_end":10809287,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809288,"byte_end":10809360,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809361,"byte_end":10809433,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports multiple consumers, many different separate tasks may **receive**","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809434,"byte_end":10809512,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ messages.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809513,"byte_end":10809526,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809527,"byte_end":10809530,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809531,"byte_end":10809609,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809610,"byte_end":10809671,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809672,"byte_end":10809675,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809676,"byte_end":10809700,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809701,"byte_end":10809704,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809705,"byte_end":10809784,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809785,"byte_end":10809863,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809864,"byte_end":10809908,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809909,"byte_end":10809912,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809913,"byte_end":10809993,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10809994,"byte_end":10810010,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810011,"byte_end":10810014,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810015,"byte_end":10810022,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810023,"byte_end":10810052,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810053,"byte_end":10810056,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810057,"byte_end":10810100,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810101,"byte_end":10810163,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810164,"byte_end":10810169,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810170,"byte_end":10810173,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810174,"byte_end":10810192,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810193,"byte_end":10810214,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810215,"byte_end":10810257,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810258,"byte_end":10810261,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810262,"byte_end":10810295,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810296,"byte_end":10810343,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810344,"byte_end":10810378,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810379,"byte_end":10810390,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810391,"byte_end":10810394,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810395,"byte_end":10810472,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810473,"byte_end":10810476,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810477,"byte_end":10810519,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810520,"byte_end":10810556,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810557,"byte_end":10810562,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810563,"byte_end":10810570,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810571,"byte_end":10810574,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810575,"byte_end":10810639,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810640,"byte_end":10810704,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810705,"byte_end":10810767,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810768,"byte_end":10810838,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810839,"byte_end":10810904,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810905,"byte_end":10810915,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810916,"byte_end":10810919,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810920,"byte_end":10810936,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810937,"byte_end":10810940,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810941,"byte_end":10810948,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810949,"byte_end":10810992,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10810993,"byte_end":10811044,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811045,"byte_end":10811050,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811051,"byte_end":10811054,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811055,"byte_end":10811073,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811074,"byte_end":10811095,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811096,"byte_end":10811147,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811148,"byte_end":10811184,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811185,"byte_end":10811196,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811197,"byte_end":10811200,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811201,"byte_end":10811278,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811279,"byte_end":10811282,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811283,"byte_end":10811325,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811326,"byte_end":10811371,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811372,"byte_end":10811377,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811378,"byte_end":10811385,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811386,"byte_end":10811389,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811390,"byte_end":10811412,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811413,"byte_end":10811456,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811457,"byte_end":10811460,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811461,"byte_end":10811482,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811483,"byte_end":10811486,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811487,"byte_end":10811564,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811565,"byte_end":10811645,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811646,"byte_end":10811701,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811702,"byte_end":10811705,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811706,"byte_end":10811784,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811785,"byte_end":10811805,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811806,"byte_end":10811809,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811810,"byte_end":10811817,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811818,"byte_end":10811844,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811845,"byte_end":10811848,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811849,"byte_end":10811902,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811903,"byte_end":10811957,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811958,"byte_end":10811963,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811964,"byte_end":10811967,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811968,"byte_end":10811986,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10811987,"byte_end":10812008,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812009,"byte_end":10812055,"line_start":109,"line_end":109,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812056,"byte_end":10812059,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812060,"byte_end":10812093,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812094,"byte_end":10812122,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812123,"byte_end":10812175,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812176,"byte_end":10812220,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812221,"byte_end":10812234,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812235,"byte_end":10812246,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812247,"byte_end":10812250,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812251,"byte_end":10812298,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812299,"byte_end":10812337,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812338,"byte_end":10812347,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812348,"byte_end":10812353,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812354,"byte_end":10812361,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812362,"byte_end":10812365,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812366,"byte_end":10812446,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812447,"byte_end":10812524,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812525,"byte_end":10812598,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812599,"byte_end":10812674,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812675,"byte_end":10812688,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812689,"byte_end":10812692,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812693,"byte_end":10812768,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812769,"byte_end":10812848,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812849,"byte_end":10812927,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10812928,"byte_end":10813007,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813008,"byte_end":10813088,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813089,"byte_end":10813154,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813155,"byte_end":10813158,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813159,"byte_end":10813239,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813240,"byte_end":10813252,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813253,"byte_end":10813256,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813257,"byte_end":10813270,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813271,"byte_end":10813312,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813313,"byte_end":10813343,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813344,"byte_end":10813370,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813371,"byte_end":10813374,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813375,"byte_end":10813393,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813394,"byte_end":10813433,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813434,"byte_end":10813509,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813510,"byte_end":10813556,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813557,"byte_end":10813560,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813561,"byte_end":10813585,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813586,"byte_end":10813665,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813666,"byte_end":10813697,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let tx = tx.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813698,"byte_end":10813730,"line_start":153,"line_end":153,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813731,"byte_end":10813734,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813735,"byte_end":10813772,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813773,"byte_end":10813835,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813836,"byte_end":10813851,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813852,"byte_end":10813861,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813862,"byte_end":10813865,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813866,"byte_end":10813945,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10813946,"byte_end":10814021,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814022,"byte_end":10814100,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814101,"byte_end":10814148,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814149,"byte_end":10814166,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814167,"byte_end":10814170,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814171,"byte_end":10814218,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814219,"byte_end":10814260,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814261,"byte_end":10814270,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814271,"byte_end":10814274,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814275,"byte_end":10814289,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814290,"byte_end":10814295,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814296,"byte_end":10814303,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814304,"byte_end":10814307,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814308,"byte_end":10814383,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814384,"byte_end":10814459,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814460,"byte_end":10814539,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814540,"byte_end":10814605,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814606,"byte_end":10814683,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814684,"byte_end":10814687,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814688,"byte_end":10814766,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814767,"byte_end":10814847,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814848,"byte_end":10814893,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814894,"byte_end":10814897,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814898,"byte_end":10814905,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814906,"byte_end":10814943,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814944,"byte_end":10814971,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814972,"byte_end":10814975,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814976,"byte_end":10814994,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10814995,"byte_end":10815013,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815014,"byte_end":10815057,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815058,"byte_end":10815063,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815064,"byte_end":10815067,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815068,"byte_end":10815086,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815087,"byte_end":10815108,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815109,"byte_end":10815198,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815199,"byte_end":10815202,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815203,"byte_end":10815248,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815249,"byte_end":10815282,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815283,"byte_end":10815320,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815321,"byte_end":10815324,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815325,"byte_end":10815392,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815393,"byte_end":10815420,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815421,"byte_end":10815455,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815456,"byte_end":10815499,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815500,"byte_end":10815537,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815538,"byte_end":10815591,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815592,"byte_end":10815613,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815614,"byte_end":10815631,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815632,"byte_end":10815645,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815646,"byte_end":10815657,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815658,"byte_end":10815661,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815662,"byte_end":10815700,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815701,"byte_end":10815704,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815705,"byte_end":10815765,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815766,"byte_end":10815790,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let cmd_tx = cmd_tx.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815791,"byte_end":10815831,"line_start":216,"line_end":216,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815832,"byte_end":10815835,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815836,"byte_end":10815891,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815892,"byte_end":10815952,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815953,"byte_end":10815956,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10815957,"byte_end":10816027,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816028,"byte_end":10816077,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816078,"byte_end":10816081,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816082,"byte_end":10816135,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816136,"byte_end":10816152,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816153,"byte_end":10816162,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816163,"byte_end":10816166,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816167,"byte_end":10816208,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816209,"byte_end":10816260,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816261,"byte_end":10816300,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816301,"byte_end":10816310,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816311,"byte_end":10816316,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816317,"byte_end":10816324,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816325,"byte_end":10816328,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816329,"byte_end":10816345,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816346,"byte_end":10816349,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816350,"byte_end":10816376,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816377,"byte_end":10816380,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816381,"byte_end":10816448,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816449,"byte_end":10816521,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816522,"byte_end":10816595,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816596,"byte_end":10816649,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816650,"byte_end":10816653,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816654,"byte_end":10816734,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816735,"byte_end":10816757,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816758,"byte_end":10816761,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816762,"byte_end":10816777,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816778,"byte_end":10816781,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816782,"byte_end":10816789,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816790,"byte_end":10816821,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816822,"byte_end":10816825,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816826,"byte_end":10816844,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816845,"byte_end":10816866,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816867,"byte_end":10816918,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816919,"byte_end":10816956,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816957,"byte_end":10816960,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816961,"byte_end":10816994,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10816995,"byte_end":10817049,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817050,"byte_end":10817104,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817105,"byte_end":10817116,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817117,"byte_end":10817120,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817121,"byte_end":10817154,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817155,"byte_end":10817209,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817210,"byte_end":10817264,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817265,"byte_end":10817276,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817277,"byte_end":10817280,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817281,"byte_end":10817310,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817311,"byte_end":10817340,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817341,"byte_end":10817346,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817347,"byte_end":10817354,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817355,"byte_end":10817358,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817359,"byte_end":10817408,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817409,"byte_end":10817412,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817413,"byte_end":10817435,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817436,"byte_end":10817439,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817440,"byte_end":10817516,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817517,"byte_end":10817595,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817596,"byte_end":10817675,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817676,"byte_end":10817741,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817742,"byte_end":10817745,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817746,"byte_end":10817826,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817827,"byte_end":10817830,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817831,"byte_end":10817905,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817906,"byte_end":10817979,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817980,"byte_end":10817993,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817994,"byte_end":10817997,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10817998,"byte_end":10818071,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818072,"byte_end":10818152,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818153,"byte_end":10818228,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818229,"byte_end":10818232,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818233,"byte_end":10818240,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818241,"byte_end":10818268,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818269,"byte_end":10818316,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818317,"byte_end":10818320,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818321,"byte_end":10818337,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818338,"byte_end":10818341,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818342,"byte_end":10818384,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818385,"byte_end":10818404,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818405,"byte_end":10818431,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818432,"byte_end":10818437,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818438,"byte_end":10818441,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818442,"byte_end":10818459,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818460,"byte_end":10818517,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818518,"byte_end":10818576,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818577,"byte_end":10818629,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818630,"byte_end":10818639,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818640,"byte_end":10818645,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818646,"byte_end":10818649,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818650,"byte_end":10818685,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818686,"byte_end":10818714,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818715,"byte_end":10818720,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818721,"byte_end":10818724,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818725,"byte_end":10818743,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818744,"byte_end":10818765,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818766,"byte_end":10818809,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818810,"byte_end":10818875,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818876,"byte_end":10818879,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818880,"byte_end":10818958,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10818959,"byte_end":10819013,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819014,"byte_end":10819017,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819018,"byte_end":10819062,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819063,"byte_end":10819096,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819097,"byte_end":10819115,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819116,"byte_end":10819165,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::sleep(Duration::from_secs(10)).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819166,"byte_end":10819225,"line_start":325,"line_end":325,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819226,"byte_end":10819229,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819230,"byte_end":10819276,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819277,"byte_end":10819350,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819351,"byte_end":10819354,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819355,"byte_end":10819429,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819430,"byte_end":10819470,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819471,"byte_end":10819512,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.send(new_config.clone()).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819513,"byte_end":10819570,"line_start":333,"line_end":333,"column_start":1,"column_end":58}},{"value":"/                 config = new_config;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819571,"byte_end":10819611,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819612,"byte_end":10819629,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819630,"byte_end":10819643,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819644,"byte_end":10819655,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819656,"byte_end":10819659,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819660,"byte_end":10819693,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819694,"byte_end":10819697,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819698,"byte_end":10819776,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819777,"byte_end":10819831,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819832,"byte_end":10819842,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819843,"byte_end":10819920,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10819921,"byte_end":10819999,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820000,"byte_end":10820035,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820036,"byte_end":10820059,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820060,"byte_end":10820123,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820124,"byte_end":10820160,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820161,"byte_end":10820164,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820165,"byte_end":10820215,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820216,"byte_end":10820295,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820296,"byte_end":10820371,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820372,"byte_end":10820425,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820426,"byte_end":10820472,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820473,"byte_end":10820505,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820506,"byte_end":10820509,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Get the initial config value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820510,"byte_end":10820557,"line_start":358,"line_end":358,"column_start":1,"column_end":48}},{"value":"/             let mut conf = rx.borrow().clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820558,"byte_end":10820609,"line_start":359,"line_end":359,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820610,"byte_end":10820613,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820614,"byte_end":10820664,"line_start":361,"line_end":361,"column_start":1,"column_end":51}},{"value":"/             let sleep = time::sleep_until(op_start + conf.timeout);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820665,"byte_end":10820736,"line_start":362,"line_end":362,"column_start":1,"column_end":72}},{"value":"/             tokio::pin!(sleep);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820737,"byte_end":10820772,"line_start":363,"line_end":363,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820773,"byte_end":10820776,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820777,"byte_end":10820799,"line_start":365,"line_end":365,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820800,"byte_end":10820836,"line_start":366,"line_end":366,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut sleep => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820837,"byte_end":10820880,"line_start":367,"line_end":367,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820881,"byte_end":10820945,"line_start":368,"line_end":368,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10820946,"byte_end":10821003,"line_start":369,"line_end":369,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821004,"byte_end":10821007,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821008,"byte_end":10821063,"line_start":371,"line_end":371,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821064,"byte_end":10821118,"line_start":372,"line_end":372,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821119,"byte_end":10821122,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821123,"byte_end":10821173,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/                         sleep.set(time::sleep_until(op_start + conf.timeout));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821174,"byte_end":10821256,"line_start":375,"line_end":375,"column_start":1,"column_end":83}},{"value":"/                     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821257,"byte_end":10821282,"line_start":376,"line_end":376,"column_start":1,"column_end":26}},{"value":"/                     _ = rx.changed() => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821283,"byte_end":10821328,"line_start":377,"line_end":377,"column_start":1,"column_end":46}},{"value":"/                         conf = rx.borrow().clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821329,"byte_end":10821384,"line_start":378,"line_end":378,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821385,"byte_end":10821388,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821389,"byte_end":10821466,"line_start":380,"line_end":380,"column_start":1,"column_end":78}},{"value":"/                         // `sleep` using the new `timeout` value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821467,"byte_end":10821536,"line_start":381,"line_end":381,"column_start":1,"column_end":70}},{"value":"/                         sleep.as_mut().reset(op_start + conf.timeout);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821537,"byte_end":10821611,"line_start":382,"line_end":382,"column_start":1,"column_end":75}},{"value":"/                     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821612,"byte_end":10821637,"line_start":383,"line_end":383,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821638,"byte_end":10821678,"line_start":384,"line_end":384,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821679,"byte_end":10821734,"line_start":385,"line_end":385,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821735,"byte_end":10821769,"line_start":386,"line_end":386,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821770,"byte_end":10821795,"line_start":387,"line_end":387,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821796,"byte_end":10821817,"line_start":388,"line_end":388,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821818,"byte_end":10821835,"line_start":389,"line_end":389,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821836,"byte_end":10821851,"line_start":390,"line_end":390,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821852,"byte_end":10821855,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821856,"byte_end":10821889,"line_start":392,"line_end":392,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821890,"byte_end":10821899,"line_start":393,"line_end":393,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821900,"byte_end":10821903,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821904,"byte_end":10821945,"line_start":395,"line_end":395,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821946,"byte_end":10821980,"line_start":396,"line_end":396,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821981,"byte_end":10821990,"line_start":397,"line_end":397,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821991,"byte_end":10821996,"line_start":398,"line_end":398,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10821997,"byte_end":10822004,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822005,"byte_end":10822008,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822009,"byte_end":10822054,"line_start":401,"line_end":401,"column_start":1,"column_end":46}},{"value":"/ [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822055,"byte_end":10822108,"line_start":402,"line_end":402,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822109,"byte_end":10822112,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822113,"byte_end":10822140,"line_start":404,"line_end":404,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822141,"byte_end":10822144,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822145,"byte_end":10822219,"line_start":406,"line_end":406,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822220,"byte_end":10822294,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts but will wait","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822295,"byte_end":10822365,"line_start":408,"line_end":408,"column_start":1,"column_end":71}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822366,"byte_end":10822416,"line_start":409,"line_end":409,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822417,"byte_end":10822420,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822421,"byte_end":10822498,"line_start":411,"line_end":411,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822499,"byte_end":10822576,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822577,"byte_end":10822580,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822581,"byte_end":10822658,"line_start":414,"line_end":414,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822659,"byte_end":10822714,"line_start":415,"line_end":415,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822715,"byte_end":10822718,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822719,"byte_end":10822798,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822799,"byte_end":10822877,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822878,"byte_end":10822903,"line_start":419,"line_end":419,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822904,"byte_end":10822907,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822908,"byte_end":10822983,"line_start":421,"line_end":421,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10822984,"byte_end":10823060,"line_start":422,"line_end":422,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823061,"byte_end":10823128,"line_start":423,"line_end":423,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823129,"byte_end":10823132,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823133,"byte_end":10823209,"line_start":425,"line_end":425,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823210,"byte_end":10823286,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823287,"byte_end":10823361,"line_start":427,"line_end":427,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823362,"byte_end":10823389,"line_start":428,"line_end":428,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":7154},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823443,"byte_end":10823450,"line_start":432,"line_end":432,"column_start":13,"column_end":20},"name":"futures","qualname":"::sync::futures","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":7155}],"decl_id":null,"docs":" Named future types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":23818,"byte_end":23842,"line_start":256,"line_end":256,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":9274},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10826225,"byte_end":10826232,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":9275},{"krate":0,"index":9276},{"krate":0,"index":9277}],"decl_id":null,"docs":" A barrier enables multiple tasks to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple tasks to synchronize the beginning of some computation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825164,"byte_end":10825250,"line_start":5,"line_end":5,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825251,"byte_end":10825254,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825255,"byte_end":10825262,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825263,"byte_end":10825283,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825284,"byte_end":10825307,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825308,"byte_end":10825337,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825338,"byte_end":10825361,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825362,"byte_end":10825365,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825366,"byte_end":10825411,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825412,"byte_end":10825457,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825458,"byte_end":10825478,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825479,"byte_end":10825511,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825512,"byte_end":10825566,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825567,"byte_end":10825612,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/     handles.push(tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825613,"byte_end":10825659,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825660,"byte_end":10825696,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/         let wait_result = c.wait().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825697,"byte_end":10825742,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825743,"byte_end":10825778,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/         wait_result","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825779,"byte_end":10825802,"line_start":23,"line_end":23,"column_start":1,"column_end":24}},{"value":"/     }));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825803,"byte_end":10825815,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825816,"byte_end":10825821,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825822,"byte_end":10825825,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // Will not resolve until all \"after wait\" messages have been printed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825826,"byte_end":10825899,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ let mut num_leaders = 0;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825900,"byte_end":10825928,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ for handle in handles {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825929,"byte_end":10825956,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/     let wait_result = handle.await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10825957,"byte_end":10826005,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/     if wait_result.is_leader() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10826006,"byte_end":10826042,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/         num_leaders += 1;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10826043,"byte_end":10826072,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10826073,"byte_end":10826082,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10826083,"byte_end":10826088,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10826089,"byte_end":10826092,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10826093,"byte_end":10826148,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(num_leaders, 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10826149,"byte_end":10826180,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10826181,"byte_end":10826188,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10826189,"byte_end":10826196,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7166},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10826687,"byte_end":10826690,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of tasks.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of tasks.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10826455,"byte_end":10826520,"line_start":55,"line_end":55,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10826525,"byte_end":10826528,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 tasks which call [`Barrier::wait`] and then wake up all","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10826533,"byte_end":10826619,"line_start":57,"line_end":57,"column_start":5,"column_end":91}},{"value":"/ tasks at once when the `n`th task calls `wait`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10826624,"byte_end":10826675,"line_start":58,"line_end":58,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7167},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10827759,"byte_end":10827763,"line_start":88,"line_end":88,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10827289,"byte_end":10827349,"line_start":80,"line_end":80,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10827354,"byte_end":10827357,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all tasks have rendezvoused once, and can","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10827362,"byte_end":10827436,"line_start":82,"line_end":82,"column_start":5,"column_end":79}},{"value":"/ be used continuously.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10827441,"byte_end":10827466,"line_start":83,"line_end":83,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10827471,"byte_end":10827474,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10827479,"byte_end":10827572,"line_start":85,"line_end":85,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other tasks","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10827577,"byte_end":10827668,"line_start":86,"line_end":86,"column_start":5,"column_end":96}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10827673,"byte_end":10827741,"line_start":87,"line_end":87,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":9286},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10829682,"byte_end":10829699,"line_start":134,"line_end":134,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all tasks in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all tasks in the `Barrier` have rendezvoused.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10829548,"byte_end":10829646,"line_start":132,"line_end":132,"column_start":1,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":7171},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10829939,"byte_end":10829948,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this task from wait is the \"leader task\".","sig":null,"attributes":[{"value":"/ Returns `true` if this task from wait is the \"leader task\".","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10829737,"byte_end":10829800,"line_start":137,"line_end":137,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10829805,"byte_end":10829808,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Only one task will have `true` returned from their result, all other tasks will have","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10829813,"byte_end":10829901,"line_start":139,"line_end":139,"column_start":5,"column_end":93}},{"value":"/ `false` returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10829906,"byte_end":10829927,"line_start":140,"line_end":140,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":7179},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":7180},{"krate":0,"index":7183},{"krate":0,"index":7186},{"krate":0,"index":7187},{"krate":0,"index":7190},{"krate":0,"index":7193},{"krate":0,"index":7196},{"krate":0,"index":7199},{"krate":0,"index":7200},{"krate":0,"index":7203},{"krate":0,"index":7206},{"krate":0,"index":7209},{"krate":0,"index":7212},{"krate":0,"index":7213},{"krate":0,"index":7215},{"krate":0,"index":7218},{"krate":0,"index":7221},{"krate":0,"index":7222},{"krate":0,"index":7224},{"krate":0,"index":7225},{"krate":0,"index":7228},{"krate":0,"index":7231},{"krate":0,"index":7234},{"krate":0,"index":7237},{"krate":0,"index":7240},{"krate":0,"index":7244},{"krate":0,"index":7259},{"krate":0,"index":7260},{"krate":0,"index":7266},{"krate":0,"index":7271},{"krate":0,"index":7277},{"krate":0,"index":7282},{"krate":0,"index":7286},{"krate":0,"index":7291},{"krate":0,"index":7294},{"krate":0,"index":7297},{"krate":0,"index":7298},{"krate":0,"index":7300},{"krate":0,"index":7302},{"krate":0,"index":7304},{"krate":0,"index":7306},{"krate":0,"index":7308},{"krate":0,"index":7317},{"krate":0,"index":7319},{"krate":0,"index":7321},{"krate":0,"index":7324},{"krate":0,"index":7327},{"krate":0,"index":7331},{"krate":0,"index":7337},{"krate":0,"index":7340},{"krate":0,"index":7345},{"krate":0,"index":7350},{"krate":0,"index":7356},{"krate":0,"index":7362},{"krate":0,"index":7365},{"krate":0,"index":7368},{"krate":0,"index":7373},{"krate":0,"index":7378}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":23818,"byte_end":23842,"line_start":256,"line_end":256,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10829990,"byte_end":10830070,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830071,"byte_end":10830089,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830090,"byte_end":10830093,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830094,"byte_end":10830172,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830173,"byte_end":10830248,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830249,"byte_end":10830327,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830328,"byte_end":10830382,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830383,"byte_end":10830386,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830387,"byte_end":10830463,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830464,"byte_end":10830544,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830545,"byte_end":10830622,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830623,"byte_end":10830673,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830674,"byte_end":10830677,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830678,"byte_end":10830756,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830757,"byte_end":10830814,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830815,"byte_end":10830818,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830819,"byte_end":10830897,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830898,"byte_end":10830970,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830971,"byte_end":10830987,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830988,"byte_end":10830991,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10830992,"byte_end":10831006,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10831007,"byte_end":10831010,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10831011,"byte_end":10831091,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10831092,"byte_end":10831171,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10831172,"byte_end":10831249,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10831250,"byte_end":10831328,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10831329,"byte_end":10831336,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10831337,"byte_end":10831340,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10831341,"byte_end":10831418,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10831419,"byte_end":10831494,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10831495,"byte_end":10831575,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10831576,"byte_end":10831579,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10831580,"byte_end":10831652,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10831653,"byte_end":10831731,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10831732,"byte_end":10831808,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10831809,"byte_end":10831868,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10831869,"byte_end":10831872,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10831873,"byte_end":10831951,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10831952,"byte_end":10832026,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832027,"byte_end":10832063,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832064,"byte_end":10832067,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832068,"byte_end":10832147,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832148,"byte_end":10832225,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832226,"byte_end":10832301,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832302,"byte_end":10832333,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832334,"byte_end":10832337,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832338,"byte_end":10832352,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832353,"byte_end":10832356,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832357,"byte_end":10832432,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832433,"byte_end":10832511,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832512,"byte_end":10832589,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832590,"byte_end":10832621,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832622,"byte_end":10832625,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832626,"byte_end":10832672,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832673,"byte_end":10832741,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832742,"byte_end":10832792,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832793,"byte_end":10832841,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::error::RecvError::Lagged","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832842,"byte_end":10832917,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::error::RecvError::Closed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832918,"byte_end":10832993,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10832994,"byte_end":10833046,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833047,"byte_end":10833050,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833051,"byte_end":10833065,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833066,"byte_end":10833069,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833070,"byte_end":10833085,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833086,"byte_end":10833089,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833090,"byte_end":10833097,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833098,"byte_end":10833129,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833130,"byte_end":10833133,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833134,"byte_end":10833152,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833153,"byte_end":10833174,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833175,"byte_end":10833226,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833227,"byte_end":10833264,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833265,"byte_end":10833268,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833269,"byte_end":10833302,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833303,"byte_end":10833357,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833358,"byte_end":10833412,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833413,"byte_end":10833424,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833425,"byte_end":10833428,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833429,"byte_end":10833462,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833463,"byte_end":10833517,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833518,"byte_end":10833572,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833573,"byte_end":10833584,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833585,"byte_end":10833588,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833589,"byte_end":10833618,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833619,"byte_end":10833648,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833649,"byte_end":10833654,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833655,"byte_end":10833662,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833663,"byte_end":10833666,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833667,"byte_end":10833683,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833684,"byte_end":10833687,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833688,"byte_end":10833695,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833696,"byte_end":10833727,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833728,"byte_end":10833731,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833732,"byte_end":10833750,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833751,"byte_end":10833772,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833773,"byte_end":10833822,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833823,"byte_end":10833826,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833827,"byte_end":10833856,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833857,"byte_end":10833886,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833887,"byte_end":10833916,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833917,"byte_end":10833920,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833921,"byte_end":10833958,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10833959,"byte_end":10834001,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834002,"byte_end":10834005,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834006,"byte_end":10834075,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834076,"byte_end":10834079,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834080,"byte_end":10834129,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834130,"byte_end":10834179,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834180,"byte_end":10834185,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834186,"byte_end":10834193,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7237},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835390,"byte_end":10835396,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":7239}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834597,"byte_end":10834643,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834644,"byte_end":10834647,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834648,"byte_end":10834708,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834709,"byte_end":10834736,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834737,"byte_end":10834740,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834741,"byte_end":10834755,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834756,"byte_end":10834759,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834760,"byte_end":10834767,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834768,"byte_end":10834799,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834800,"byte_end":10834803,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834804,"byte_end":10834822,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834823,"byte_end":10834844,"line_start":137,"line_end":137,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834845,"byte_end":10834896,"line_start":138,"line_end":138,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834897,"byte_end":10834934,"line_start":139,"line_end":139,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834935,"byte_end":10834938,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834939,"byte_end":10834972,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10834973,"byte_end":10835027,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835028,"byte_end":10835082,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835083,"byte_end":10835094,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835095,"byte_end":10835098,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835099,"byte_end":10835132,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835133,"byte_end":10835187,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835188,"byte_end":10835242,"line_start":148,"line_end":148,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835243,"byte_end":10835254,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835255,"byte_end":10835258,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835259,"byte_end":10835288,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835289,"byte_end":10835318,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835319,"byte_end":10835324,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835325,"byte_end":10835332,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835333,"byte_end":10835336,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835337,"byte_end":10835378,"line_start":156,"line_end":156,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":7240},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836444,"byte_end":10836452,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":7242},{"krate":0,"index":7243}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835433,"byte_end":10835481,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835482,"byte_end":10835485,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835486,"byte_end":10835552,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835553,"byte_end":10835582,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835583,"byte_end":10835586,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`BroadcastStream`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835587,"byte_end":10835665,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ wrapper.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835666,"byte_end":10835678,"line_start":167,"line_end":167,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835679,"byte_end":10835682,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`BroadcastStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.BroadcastStream.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835683,"byte_end":10835790,"line_start":169,"line_end":169,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835791,"byte_end":10835794,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835795,"byte_end":10835809,"line_start":171,"line_end":171,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835810,"byte_end":10835813,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835814,"byte_end":10835821,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835822,"byte_end":10835853,"line_start":174,"line_end":174,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835854,"byte_end":10835857,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835858,"byte_end":10835876,"line_start":176,"line_end":176,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835877,"byte_end":10835898,"line_start":177,"line_end":177,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835899,"byte_end":10835950,"line_start":178,"line_end":178,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835951,"byte_end":10835988,"line_start":179,"line_end":179,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835989,"byte_end":10835992,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10835993,"byte_end":10836026,"line_start":181,"line_end":181,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836027,"byte_end":10836081,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836082,"byte_end":10836136,"line_start":183,"line_end":183,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836137,"byte_end":10836148,"line_start":184,"line_end":184,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836149,"byte_end":10836152,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836153,"byte_end":10836186,"line_start":186,"line_end":186,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836187,"byte_end":10836241,"line_start":187,"line_end":187,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836242,"byte_end":10836296,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836297,"byte_end":10836308,"line_start":189,"line_end":189,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836309,"byte_end":10836312,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836313,"byte_end":10836342,"line_start":191,"line_end":191,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836343,"byte_end":10836372,"line_start":192,"line_end":192,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836373,"byte_end":10836378,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836379,"byte_end":10836386,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836387,"byte_end":10836390,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836391,"byte_end":10836432,"line_start":196,"line_end":196,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":7244},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836601,"byte_end":10836606,"line_start":205,"line_end":205,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::broadcast::error","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":7245},{"krate":0,"index":9293},{"krate":0,"index":9297},{"krate":0,"index":7248},{"krate":0,"index":7251},{"krate":0,"index":9300},{"krate":0,"index":9310},{"krate":0,"index":9306},{"krate":0,"index":9307},{"krate":0,"index":7253},{"krate":0,"index":7255},{"krate":0,"index":9312},{"krate":0,"index":9324},{"krate":0,"index":9320},{"krate":0,"index":9321},{"krate":0,"index":7256},{"krate":0,"index":7258}],"decl_id":null,"docs":" Broadcast error types\n","sig":null,"attributes":[{"value":"/ Broadcast error types","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836613,"byte_end":10836638,"line_start":206,"line_end":206,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":9293},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837110,"byte_end":10837119,"line_start":219,"line_end":219,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::broadcast::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by from the [`send`] function on a [`Sender`].","sig":null,"attributes":[{"value":"/ Error returned by from the [`send`] function on a [`Sender`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836663,"byte_end":10836728,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836733,"byte_end":10836736,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836741,"byte_end":10836813,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836818,"byte_end":10836895,"line_start":213,"line_end":213,"column_start":5,"column_end":82}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836900,"byte_end":10836959,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836964,"byte_end":10836967,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ [`send`]: crate::sync::broadcast::Sender::send","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10836972,"byte_end":10837022,"line_start":216,"line_end":216,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837027,"byte_end":10837073,"line_start":217,"line_end":217,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":9296},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837123,"byte_end":10837128,"line_start":219,"line_end":219,"column_start":29,"column_end":34},"name":"0","qualname":"::sync::broadcast::error::SendError::0","value":"T","parent":{"krate":0,"index":9293},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9301},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837725,"byte_end":10837731,"line_start":237,"line_end":237,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":9300},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837620,"byte_end":10837695,"line_start":235,"line_end":235,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837704,"byte_end":10837716,"line_start":236,"line_end":236,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9303},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837957,"byte_end":10837963,"line_start":243,"line_end":243,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":9300},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837742,"byte_end":10837814,"line_start":239,"line_end":239,"column_start":9,"column_end":81}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837823,"byte_end":10837883,"line_start":240,"line_end":240,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837892,"byte_end":10837895,"line_start":241,"line_end":241,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837904,"byte_end":10837948,"line_start":242,"line_end":242,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":9300},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837600,"byte_end":10837609,"line_start":234,"line_end":234,"column_start":14,"column_end":23},"name":"RecvError","qualname":"::sync::broadcast::error::RecvError","value":"pub enum RecvError { Closed, Lagged(u64), }","parent":null,"children":[{"krate":0,"index":9301},{"krate":0,"index":9303}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837367,"byte_end":10837434,"line_start":229,"line_end":229,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837439,"byte_end":10837442,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837447,"byte_end":10837499,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837504,"byte_end":10837554,"line_start":232,"line_end":232,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9313},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10838803,"byte_end":10838808,"line_start":267,"line_end":267,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::broadcast::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":9312},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`] handles, so data may yet become available.","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10838603,"byte_end":10838661,"line_start":263,"line_end":263,"column_start":9,"column_end":67}},{"value":"/ [`Sender`] handles, so data may yet become available.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10838670,"byte_end":10838727,"line_start":264,"line_end":264,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10838736,"byte_end":10838739,"line_start":265,"line_end":265,"column_start":9,"column_end":12}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10838748,"byte_end":10838794,"line_start":266,"line_end":266,"column_start":9,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9315},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10838924,"byte_end":10838930,"line_start":271,"line_end":271,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":9312},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10838819,"byte_end":10838894,"line_start":269,"line_end":269,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10838903,"byte_end":10838915,"line_start":270,"line_end":270,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9317},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10839203,"byte_end":10839209,"line_start":278,"line_end":278,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":9312},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10838941,"byte_end":10839015,"line_start":273,"line_end":273,"column_start":9,"column_end":83}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10839024,"byte_end":10839092,"line_start":274,"line_end":274,"column_start":9,"column_end":77}},{"value":"/ retained by the channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10839101,"byte_end":10839129,"line_start":275,"line_end":275,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10839138,"byte_end":10839141,"line_start":276,"line_end":276,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10839150,"byte_end":10839194,"line_start":277,"line_end":277,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":9312},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10838580,"byte_end":10838592,"line_start":262,"line_end":262,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::broadcast::error::TryRecvError","value":"pub enum TryRecvError { Empty, Closed, Lagged(u64), }","parent":null,"children":[{"krate":0,"index":9313},{"krate":0,"index":9315},{"krate":0,"index":9317}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10838335,"byte_end":10838406,"line_start":257,"line_end":257,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10838411,"byte_end":10838414,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10838419,"byte_end":10838479,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10838484,"byte_end":10838534,"line_start":260,"line_end":260,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":7298},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10843404,"byte_end":10843411,"line_start":428,"line_end":428,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T: Clone>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10841778,"byte_end":10841854,"line_start":383,"line_end":383,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10841855,"byte_end":10841904,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10841905,"byte_end":10841908,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10841909,"byte_end":10841978,"line_start":386,"line_end":386,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10841979,"byte_end":10842029,"line_start":387,"line_end":387,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842030,"byte_end":10842033,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842034,"byte_end":10842108,"line_start":389,"line_end":389,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842109,"byte_end":10842184,"line_start":390,"line_end":390,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842185,"byte_end":10842253,"line_start":391,"line_end":391,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842254,"byte_end":10842257,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842258,"byte_end":10842334,"line_start":393,"line_end":393,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842335,"byte_end":10842416,"line_start":394,"line_end":394,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842417,"byte_end":10842456,"line_start":395,"line_end":395,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842457,"byte_end":10842460,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842461,"byte_end":10842507,"line_start":397,"line_end":397,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842508,"byte_end":10842576,"line_start":398,"line_end":398,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842577,"byte_end":10842627,"line_start":399,"line_end":399,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842628,"byte_end":10842680,"line_start":400,"line_end":400,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::error::SendError","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842681,"byte_end":10842740,"line_start":401,"line_end":401,"column_start":1,"column_end":60}},{"value":"/ [`RecvError`]: crate::sync::broadcast::error::RecvError","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842741,"byte_end":10842800,"line_start":402,"line_end":402,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842801,"byte_end":10842804,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842805,"byte_end":10842819,"line_start":404,"line_end":404,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842820,"byte_end":10842823,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842824,"byte_end":10842831,"line_start":406,"line_end":406,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842832,"byte_end":10842863,"line_start":407,"line_end":407,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842864,"byte_end":10842867,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842868,"byte_end":10842886,"line_start":409,"line_end":409,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842887,"byte_end":10842908,"line_start":410,"line_end":410,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842909,"byte_end":10842960,"line_start":411,"line_end":411,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842961,"byte_end":10842998,"line_start":412,"line_end":412,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10842999,"byte_end":10843002,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10843003,"byte_end":10843036,"line_start":414,"line_end":414,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10843037,"byte_end":10843091,"line_start":415,"line_end":415,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10843092,"byte_end":10843146,"line_start":416,"line_end":416,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10843147,"byte_end":10843158,"line_start":417,"line_end":417,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10843159,"byte_end":10843162,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10843163,"byte_end":10843196,"line_start":419,"line_end":419,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10843197,"byte_end":10843251,"line_start":420,"line_end":420,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10843252,"byte_end":10843306,"line_start":421,"line_end":421,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10843307,"byte_end":10843318,"line_start":422,"line_end":422,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10843319,"byte_end":10843322,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10843323,"byte_end":10843352,"line_start":424,"line_end":424,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10843353,"byte_end":10843382,"line_start":425,"line_end":425,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10843383,"byte_end":10843388,"line_start":426,"line_end":426,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10843389,"byte_end":10843396,"line_start":427,"line_end":427,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7310},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846463,"byte_end":10846467,"line_start":525,"line_end":525,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844613,"byte_end":10844687,"line_start":475,"line_end":475,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844692,"byte_end":10844728,"line_start":476,"line_end":476,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844733,"byte_end":10844736,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844741,"byte_end":10844816,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844821,"byte_end":10844887,"line_start":479,"line_end":479,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844892,"byte_end":10844943,"line_start":480,"line_end":480,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844948,"byte_end":10844951,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844956,"byte_end":10844968,"line_start":482,"line_end":482,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844973,"byte_end":10844976,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844981,"byte_end":10845055,"line_start":484,"line_end":484,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845060,"byte_end":10845136,"line_start":485,"line_end":485,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845141,"byte_end":10845194,"line_start":486,"line_end":486,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845199,"byte_end":10845202,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845207,"byte_end":10845217,"line_start":488,"line_end":488,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845222,"byte_end":10845225,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845230,"byte_end":10845302,"line_start":490,"line_end":490,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845307,"byte_end":10845382,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845387,"byte_end":10845448,"line_start":492,"line_end":492,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845453,"byte_end":10845456,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845461,"byte_end":10845534,"line_start":494,"line_end":494,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845539,"byte_end":10845604,"line_start":495,"line_end":495,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845609,"byte_end":10845627,"line_start":496,"line_end":496,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845632,"byte_end":10845635,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845640,"byte_end":10845690,"line_start":498,"line_end":498,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845695,"byte_end":10845755,"line_start":499,"line_end":499,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845760,"byte_end":10845763,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845768,"byte_end":10845782,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845787,"byte_end":10845790,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845795,"byte_end":10845802,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845807,"byte_end":10845838,"line_start":504,"line_end":504,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845843,"byte_end":10845846,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845851,"byte_end":10845869,"line_start":506,"line_end":506,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845874,"byte_end":10845895,"line_start":507,"line_end":507,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845900,"byte_end":10845951,"line_start":508,"line_end":508,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845956,"byte_end":10845993,"line_start":509,"line_end":509,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10845998,"byte_end":10846001,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846006,"byte_end":10846039,"line_start":511,"line_end":511,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846044,"byte_end":10846098,"line_start":512,"line_end":512,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846103,"byte_end":10846157,"line_start":513,"line_end":513,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846162,"byte_end":10846173,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846178,"byte_end":10846181,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846186,"byte_end":10846219,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846224,"byte_end":10846278,"line_start":517,"line_end":517,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846283,"byte_end":10846337,"line_start":518,"line_end":518,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846342,"byte_end":10846353,"line_start":519,"line_end":519,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846358,"byte_end":10846361,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846366,"byte_end":10846395,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846400,"byte_end":10846429,"line_start":522,"line_end":522,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846434,"byte_end":10846439,"line_start":523,"line_end":523,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846444,"byte_end":10846451,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7312},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847227,"byte_end":10847236,"line_start":553,"line_end":553,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846632,"byte_end":10846709,"line_start":530,"line_end":530,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846714,"byte_end":10846743,"line_start":531,"line_end":531,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846748,"byte_end":10846751,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846756,"byte_end":10846770,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846775,"byte_end":10846778,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846783,"byte_end":10846790,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846795,"byte_end":10846826,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846831,"byte_end":10846834,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846839,"byte_end":10846857,"line_start":538,"line_end":538,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846862,"byte_end":10846883,"line_start":539,"line_end":539,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846888,"byte_end":10846935,"line_start":540,"line_end":540,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846940,"byte_end":10846943,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846948,"byte_end":10846975,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10846980,"byte_end":10847009,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847014,"byte_end":10847017,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847022,"byte_end":10847058,"line_start":545,"line_end":545,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847063,"byte_end":10847066,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847071,"byte_end":10847100,"line_start":547,"line_end":547,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847105,"byte_end":10847108,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847113,"byte_end":10847158,"line_start":549,"line_end":549,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847163,"byte_end":10847193,"line_start":550,"line_end":550,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847198,"byte_end":10847203,"line_start":551,"line_end":551,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847208,"byte_end":10847215,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7313},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848495,"byte_end":10848509,"line_start":594,"line_end":594,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847343,"byte_end":10847385,"line_start":558,"line_end":558,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847390,"byte_end":10847393,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847398,"byte_end":10847474,"line_start":560,"line_end":560,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847479,"byte_end":10847552,"line_start":561,"line_end":561,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847557,"byte_end":10847577,"line_start":562,"line_end":562,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847582,"byte_end":10847585,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847590,"byte_end":10847600,"line_start":564,"line_end":564,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847605,"byte_end":10847608,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847613,"byte_end":10847683,"line_start":566,"line_end":566,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847688,"byte_end":10847756,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847761,"byte_end":10847774,"line_start":568,"line_end":568,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847779,"byte_end":10847782,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847787,"byte_end":10847839,"line_start":570,"line_end":570,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847844,"byte_end":10847894,"line_start":571,"line_end":571,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847899,"byte_end":10847945,"line_start":572,"line_end":572,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10847950,"byte_end":10848010,"line_start":573,"line_end":573,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848015,"byte_end":10848063,"line_start":574,"line_end":574,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848068,"byte_end":10848071,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848076,"byte_end":10848090,"line_start":576,"line_end":576,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848095,"byte_end":10848098,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848103,"byte_end":10848110,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848115,"byte_end":10848146,"line_start":579,"line_end":579,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848151,"byte_end":10848154,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848159,"byte_end":10848177,"line_start":581,"line_end":581,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848182,"byte_end":10848203,"line_start":582,"line_end":582,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848208,"byte_end":10848256,"line_start":583,"line_end":583,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848261,"byte_end":10848264,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848269,"byte_end":10848312,"line_start":585,"line_end":585,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848317,"byte_end":10848320,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848325,"byte_end":10848363,"line_start":587,"line_end":587,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848368,"byte_end":10848371,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848376,"byte_end":10848419,"line_start":589,"line_end":589,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848424,"byte_end":10848427,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848432,"byte_end":10848461,"line_start":591,"line_end":591,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848466,"byte_end":10848471,"line_start":592,"line_end":592,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10848476,"byte_end":10848483,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7333},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10858072,"byte_end":10858076,"line_start":877,"line_end":877,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10855844,"byte_end":10855890,"line_start":812,"line_end":812,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10855895,"byte_end":10855898,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10855903,"byte_end":10855971,"line_start":814,"line_end":814,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10855976,"byte_end":10856008,"line_start":815,"line_end":815,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856013,"byte_end":10856016,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856021,"byte_end":10856091,"line_start":817,"line_end":817,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856096,"byte_end":10856170,"line_start":818,"line_end":818,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856175,"byte_end":10856178,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856183,"byte_end":10856259,"line_start":820,"line_end":820,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856264,"byte_end":10856340,"line_start":821,"line_end":821,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856345,"byte_end":10856413,"line_start":822,"line_end":822,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856418,"byte_end":10856491,"line_start":823,"line_end":823,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856496,"byte_end":10856565,"line_start":824,"line_end":824,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856570,"byte_end":10856615,"line_start":825,"line_end":825,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856620,"byte_end":10856623,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856628,"byte_end":10856678,"line_start":827,"line_end":827,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856683,"byte_end":10856735,"line_start":828,"line_end":828,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856740,"byte_end":10856743,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856748,"byte_end":10856762,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856767,"byte_end":10856770,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856775,"byte_end":10856782,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856787,"byte_end":10856818,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856823,"byte_end":10856826,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856831,"byte_end":10856849,"line_start":835,"line_end":835,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856854,"byte_end":10856875,"line_start":836,"line_end":836,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856880,"byte_end":10856931,"line_start":837,"line_end":837,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856936,"byte_end":10856973,"line_start":838,"line_end":838,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856978,"byte_end":10856981,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10856986,"byte_end":10857019,"line_start":840,"line_end":840,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857024,"byte_end":10857078,"line_start":841,"line_end":841,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857083,"byte_end":10857137,"line_start":842,"line_end":842,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857142,"byte_end":10857153,"line_start":843,"line_end":843,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857158,"byte_end":10857161,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857166,"byte_end":10857199,"line_start":845,"line_end":845,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857204,"byte_end":10857258,"line_start":846,"line_end":846,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857263,"byte_end":10857317,"line_start":847,"line_end":847,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857322,"byte_end":10857333,"line_start":848,"line_end":848,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857338,"byte_end":10857341,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857346,"byte_end":10857375,"line_start":850,"line_end":850,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857380,"byte_end":10857409,"line_start":851,"line_end":851,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857414,"byte_end":10857419,"line_start":852,"line_end":852,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857424,"byte_end":10857431,"line_start":853,"line_end":853,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857436,"byte_end":10857439,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857444,"byte_end":10857460,"line_start":855,"line_end":855,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857465,"byte_end":10857468,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857473,"byte_end":10857480,"line_start":857,"line_end":857,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857485,"byte_end":10857516,"line_start":858,"line_end":858,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857521,"byte_end":10857524,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857529,"byte_end":10857547,"line_start":860,"line_end":860,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857552,"byte_end":10857573,"line_start":861,"line_end":861,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857578,"byte_end":10857627,"line_start":862,"line_end":862,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857632,"byte_end":10857635,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857640,"byte_end":10857669,"line_start":864,"line_end":864,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857674,"byte_end":10857703,"line_start":865,"line_end":865,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857708,"byte_end":10857737,"line_start":866,"line_end":866,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857742,"byte_end":10857745,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857750,"byte_end":10857787,"line_start":868,"line_end":868,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857792,"byte_end":10857834,"line_start":869,"line_end":869,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857839,"byte_end":10857842,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857847,"byte_end":10857916,"line_start":871,"line_end":871,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857921,"byte_end":10857924,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857929,"byte_end":10857978,"line_start":873,"line_end":873,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10857983,"byte_end":10858032,"line_start":874,"line_end":874,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10858037,"byte_end":10858042,"line_start":875,"line_end":875,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10858047,"byte_end":10858054,"line_start":876,"line_end":876,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7336},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859837,"byte_end":10859845,"line_start":922,"line_end":922,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10858178,"byte_end":10858251,"line_start":882,"line_end":882,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10858256,"byte_end":10858259,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10858264,"byte_end":10858336,"line_start":884,"line_end":884,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10858341,"byte_end":10858365,"line_start":885,"line_end":885,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10858370,"byte_end":10858373,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of two","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10858378,"byte_end":10858458,"line_start":887,"line_end":887,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10858463,"byte_end":10858537,"line_start":888,"line_end":888,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10858542,"byte_end":10858545,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10858550,"byte_end":10858623,"line_start":890,"line_end":890,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10858628,"byte_end":10858702,"line_start":891,"line_end":891,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10858707,"byte_end":10858710,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10858715,"byte_end":10858791,"line_start":893,"line_end":893,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10858796,"byte_end":10858872,"line_start":894,"line_end":894,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10858877,"byte_end":10858948,"line_start":895,"line_end":895,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10858953,"byte_end":10859026,"line_start":896,"line_end":896,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859031,"byte_end":10859104,"line_start":897,"line_end":897,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859109,"byte_end":10859180,"line_start":898,"line_end":898,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859185,"byte_end":10859237,"line_start":899,"line_end":899,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859242,"byte_end":10859245,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859250,"byte_end":10859302,"line_start":901,"line_end":901,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859307,"byte_end":10859367,"line_start":902,"line_end":902,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859372,"byte_end":10859422,"line_start":903,"line_end":903,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859427,"byte_end":10859430,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859435,"byte_end":10859449,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859454,"byte_end":10859457,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859462,"byte_end":10859469,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859474,"byte_end":10859505,"line_start":908,"line_end":908,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859510,"byte_end":10859513,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859518,"byte_end":10859536,"line_start":910,"line_end":910,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859541,"byte_end":10859562,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859567,"byte_end":10859617,"line_start":912,"line_end":912,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859622,"byte_end":10859625,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859630,"byte_end":10859670,"line_start":914,"line_end":914,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859675,"byte_end":10859678,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859683,"byte_end":10859712,"line_start":916,"line_end":916,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859717,"byte_end":10859720,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859725,"byte_end":10859768,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859773,"byte_end":10859803,"line_start":919,"line_end":919,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859808,"byte_end":10859813,"line_start":920,"line_end":920,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10859818,"byte_end":10859825,"line_start":921,"line_end":921,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":7380},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":7381},{"krate":0,"index":7481},{"krate":0,"index":7610},{"krate":0,"index":7611},{"krate":0,"index":7614},{"krate":0,"index":7617},{"krate":0,"index":7620},{"krate":0,"index":7623},{"krate":0,"index":7626},{"krate":0,"index":7795},{"krate":0,"index":7862},{"krate":0,"index":7933},{"krate":0,"index":7934},{"krate":0,"index":7937},{"krate":0,"index":7940},{"krate":0,"index":7943},{"krate":0,"index":7966}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values between\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":23818,"byte_end":23842,"line_start":256,"line_end":256,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values between","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10864118,"byte_end":10864188,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ asynchronous tasks.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10864189,"byte_end":10864212,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10864213,"byte_end":10864216,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10864217,"byte_end":10864297,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10864298,"byte_end":10864376,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10864377,"byte_end":10864453,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10864454,"byte_end":10864533,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method will always complete immediately.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10864534,"byte_end":10864614,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10864615,"byte_end":10864686,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10864687,"byte_end":10864709,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10864710,"byte_end":10864713,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Similar to the `mpsc` channels provided by `std`, the channel constructor","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10864714,"byte_end":10864791,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ functions provide separate send and receive handles, [`Sender`] and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10864792,"byte_end":10864863,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [`Receiver`] for the bounded channel, [`UnboundedSender`] and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10864864,"byte_end":10864929,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedReceiver`] for the unbounded channel. If there is no message to read,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10864930,"byte_end":10865014,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ the current task will be notified when a new value is sent. [`Sender`] and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865015,"byte_end":10865093,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ [`UnboundedSender`] allow sending values into the channel. If the bounded","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865094,"byte_end":10865171,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ channel is at capacity, the send is rejected and the task will be notified","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865172,"byte_end":10865250,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ when additional capacity is available. In other words, the channel provides","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865251,"byte_end":10865330,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ backpressure.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865331,"byte_end":10865348,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865349,"byte_end":10865352,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865353,"byte_end":10865356,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865357,"byte_end":10865376,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865377,"byte_end":10865380,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865381,"byte_end":10865447,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865448,"byte_end":10865528,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865529,"byte_end":10865606,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865607,"byte_end":10865610,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865611,"byte_end":10865681,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865682,"byte_end":10865761,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865762,"byte_end":10865785,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865786,"byte_end":10865789,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865790,"byte_end":10865810,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865811,"byte_end":10865814,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865815,"byte_end":10865895,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865896,"byte_end":10865976,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10865977,"byte_end":10866055,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10866056,"byte_end":10866128,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10866129,"byte_end":10866203,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10866204,"byte_end":10866216,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10866217,"byte_end":10866220,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10866221,"byte_end":10866268,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10866269,"byte_end":10866272,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10866273,"byte_end":10866354,"line_start":46,"line_end":46,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10866355,"byte_end":10866390,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10866391,"byte_end":10866394,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10866395,"byte_end":10866475,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. Instead of calling","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10866476,"byte_end":10866557,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ the async [`send`][bounded-send] or [`recv`][bounded-recv] methods, in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10866558,"byte_end":10866632,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ synchronous code you will need to use the [`blocking_send`][blocking-send] or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10866633,"byte_end":10866714,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/ [`blocking_recv`][blocking-recv] methods.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10866715,"byte_end":10866760,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10866761,"byte_end":10866764,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10866765,"byte_end":10866845,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10866846,"byte_end":10866924,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10866925,"byte_end":10866991,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10866992,"byte_end":10867074,"line_start":58,"line_end":58,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867075,"byte_end":10867139,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867140,"byte_end":10867143,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867144,"byte_end":10867185,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867186,"byte_end":10867231,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867232,"byte_end":10867285,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867286,"byte_end":10867341,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/ [blocking-send]: crate::sync::mpsc::Sender::blocking_send()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867342,"byte_end":10867405,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/ [blocking-recv]: crate::sync::mpsc::Receiver::blocking_recv()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867406,"byte_end":10867471,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867472,"byte_end":10867531,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867532,"byte_end":10867595,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867596,"byte_end":10867656,"line_start":69,"line_end":69,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867657,"byte_end":10867702,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10867703,"byte_end":10867793,"line_start":71,"line_end":71,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":7509},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882000,"byte_end":10882006,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":7511}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10881689,"byte_end":10881734,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10881735,"byte_end":10881738,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10881739,"byte_end":10881802,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10881803,"byte_end":10881806,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ To use the `Sender` in a poll function, you can use the [`PollSender`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10881807,"byte_end":10881881,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ utility.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10881882,"byte_end":10881894,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10881895,"byte_end":10881898,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`PollSender`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSender.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10881899,"byte_end":10881988,"line_start":20,"line_end":20,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":7512},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882381,"byte_end":10882387,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Permit","qualname":"::sync::mpsc::bounded::Permit","value":"Permit {  }","parent":null,"children":[{"krate":0,"index":7515}],"decl_id":null,"docs":" Permit to send one value into the channel.","sig":null,"attributes":[{"value":"/ Permit to send one value into the channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882049,"byte_end":10882095,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882096,"byte_end":10882099,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `Permit` values are returned by [`Sender::reserve()`] and [`Sender::try_reserve()`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882100,"byte_end":10882187,"line_start":27,"line_end":27,"column_start":1,"column_end":88}},{"value":"/ and are used to guarantee channel capacity before generating a message to send.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882188,"byte_end":10882271,"line_start":28,"line_end":28,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882272,"byte_end":10882275,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Sender::reserve()`]: Sender::reserve","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882276,"byte_end":10882318,"line_start":30,"line_end":30,"column_start":1,"column_end":43}},{"value":"/ [`Sender::try_reserve()`]: Sender::try_reserve","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882319,"byte_end":10882369,"line_start":31,"line_end":31,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":7516},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882956,"byte_end":10882967,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"OwnedPermit","qualname":"::sync::mpsc::bounded::OwnedPermit","value":"OwnedPermit {  }","parent":null,"children":[{"krate":0,"index":7518}],"decl_id":null,"docs":" Owned permit to send one value into the channel.","sig":null,"attributes":[{"value":"/ Owned permit to send one value into the channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882438,"byte_end":10882490,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882491,"byte_end":10882494,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This is identical to the [`Permit`] type, except that it moves the sender","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882495,"byte_end":10882572,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ rather than borrowing it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882573,"byte_end":10882602,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882603,"byte_end":10882606,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ `OwnedPermit` values are returned by [`Sender::reserve_owned()`] and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882607,"byte_end":10882679,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/ [`Sender::try_reserve_owned()`] and are used to guarantee channel capacity","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882680,"byte_end":10882758,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ before generating a message to send.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882759,"byte_end":10882799,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882800,"byte_end":10882803,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882804,"byte_end":10882826,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/ [`Sender::reserve_owned()`]: Sender::reserve_owned","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882827,"byte_end":10882881,"line_start":46,"line_end":46,"column_start":1,"column_end":55}},{"value":"/ [`Sender::try_reserve_owned()`]: Sender::try_reserve_owned","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10882882,"byte_end":10882944,"line_start":47,"line_end":47,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":7519},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883334,"byte_end":10883342,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":7521}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883018,"byte_end":10883066,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883067,"byte_end":10883070,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883071,"byte_end":10883134,"line_start":54,"line_end":54,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883135,"byte_end":10883138,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`ReceiverStream`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883139,"byte_end":10883212,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883213,"byte_end":10883216,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`ReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.ReceiverStream.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883217,"byte_end":10883322,"line_start":58,"line_end":58,"column_start":1,"column_end":106}}]},{"kind":"Function","id":{"krate":0,"index":7522},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884791,"byte_end":10884798,"line_start":108,"line_end":108,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks\n with backpressure.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883414,"byte_end":10883493,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ with backpressure.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883494,"byte_end":10883516,"line_start":65,"line_end":65,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883517,"byte_end":10883520,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The channel will buffer up to the provided number of messages.  Once the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883521,"byte_end":10883597,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"/ buffer is full, attempts to send new messages will wait until a message is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883598,"byte_end":10883676,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ received from the channel. The provided buffer capacity must be at least 1.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883677,"byte_end":10883756,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883757,"byte_end":10883760,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883761,"byte_end":10883838,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883839,"byte_end":10883864,"line_start":72,"line_end":72,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883865,"byte_end":10883868,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883869,"byte_end":10883948,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883949,"byte_end":10883997,"line_start":75,"line_end":75,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10883998,"byte_end":10884001,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884002,"byte_end":10884081,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884082,"byte_end":10884157,"line_start":78,"line_end":78,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return `None`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884158,"byte_end":10884217,"line_start":79,"line_end":79,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884218,"byte_end":10884221,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884222,"byte_end":10884234,"line_start":81,"line_end":81,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884235,"byte_end":10884238,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Panics if the buffer capacity is 0.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884239,"byte_end":10884278,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884279,"byte_end":10884282,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884283,"byte_end":10884297,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884298,"byte_end":10884301,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884302,"byte_end":10884313,"line_start":87,"line_end":87,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884314,"byte_end":10884340,"line_start":88,"line_end":88,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884341,"byte_end":10884344,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884345,"byte_end":10884363,"line_start":90,"line_end":90,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884364,"byte_end":10884385,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884386,"byte_end":10884432,"line_start":92,"line_end":92,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884433,"byte_end":10884436,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884437,"byte_end":10884470,"line_start":94,"line_end":94,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884471,"byte_end":10884499,"line_start":95,"line_end":95,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884500,"byte_end":10884550,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884551,"byte_end":10884600,"line_start":97,"line_end":97,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884601,"byte_end":10884628,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884629,"byte_end":10884646,"line_start":99,"line_end":99,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884647,"byte_end":10884660,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884661,"byte_end":10884672,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884673,"byte_end":10884676,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884677,"byte_end":10884722,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884723,"byte_end":10884759,"line_start":104,"line_end":104,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884760,"byte_end":10884769,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884770,"byte_end":10884775,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10884776,"byte_end":10884783,"line_start":107,"line_end":107,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7528},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10887160,"byte_end":10887164,"line_start":180,"line_end":180,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10885398,"byte_end":10885444,"line_start":128,"line_end":128,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10885449,"byte_end":10885452,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10885457,"byte_end":10885532,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10885537,"byte_end":10885610,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10885615,"byte_end":10885691,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10885696,"byte_end":10885771,"line_start":133,"line_end":133,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10885776,"byte_end":10885779,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10885784,"byte_end":10885857,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will sleep until a message is sent or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10885862,"byte_end":10885936,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10885941,"byte_end":10885967,"line_start":137,"line_end":137,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10885972,"byte_end":10885975,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10885980,"byte_end":10886049,"line_start":139,"line_end":139,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886054,"byte_end":10886126,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/ closed by `recv` until the permits are released.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886131,"byte_end":10886183,"line_start":141,"line_end":141,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886188,"byte_end":10886191,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886196,"byte_end":10886222,"line_start":143,"line_end":143,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886227,"byte_end":10886276,"line_start":144,"line_end":144,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886281,"byte_end":10886284,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886289,"byte_end":10886303,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886308,"byte_end":10886311,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886316,"byte_end":10886323,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886328,"byte_end":10886354,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886359,"byte_end":10886362,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886367,"byte_end":10886385,"line_start":151,"line_end":151,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886390,"byte_end":10886411,"line_start":152,"line_end":152,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886416,"byte_end":10886462,"line_start":153,"line_end":153,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886467,"byte_end":10886470,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886475,"byte_end":10886508,"line_start":155,"line_end":155,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886513,"byte_end":10886557,"line_start":156,"line_end":156,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886562,"byte_end":10886573,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886578,"byte_end":10886581,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886586,"byte_end":10886637,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886642,"byte_end":10886684,"line_start":160,"line_end":160,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886689,"byte_end":10886694,"line_start":161,"line_end":161,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886699,"byte_end":10886706,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886711,"byte_end":10886714,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886719,"byte_end":10886743,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886748,"byte_end":10886751,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886756,"byte_end":10886763,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886768,"byte_end":10886794,"line_start":167,"line_end":167,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886799,"byte_end":10886802,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886807,"byte_end":10886825,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886830,"byte_end":10886851,"line_start":170,"line_end":170,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886856,"byte_end":10886902,"line_start":171,"line_end":171,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886907,"byte_end":10886910,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886915,"byte_end":10886955,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10886960,"byte_end":10887000,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10887005,"byte_end":10887008,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10887013,"byte_end":10887064,"line_start":176,"line_end":176,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10887069,"byte_end":10887120,"line_start":177,"line_end":177,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10887125,"byte_end":10887130,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10887135,"byte_end":10887142,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7535},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889228,"byte_end":10889241,"line_start":236,"line_end":236,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<Receiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10887285,"byte_end":10887347,"line_start":185,"line_end":185,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10887352,"byte_end":10887355,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10887360,"byte_end":10887435,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10887440,"byte_end":10887513,"line_start":188,"line_end":188,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10887518,"byte_end":10887594,"line_start":189,"line_end":189,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10887599,"byte_end":10887674,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10887679,"byte_end":10887682,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10887687,"byte_end":10887760,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will block until a message is sent or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10887765,"byte_end":10887839,"line_start":193,"line_end":193,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10887844,"byte_end":10887870,"line_start":194,"line_end":194,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10887875,"byte_end":10887878,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10887883,"byte_end":10887951,"line_start":196,"line_end":196,"column_start":5,"column_end":73}},{"value":"/ asynchronous code to synchronous code, and will work even if the sender","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10887956,"byte_end":10888031,"line_start":197,"line_end":197,"column_start":5,"column_end":80}},{"value":"/ is not using [`blocking_send`] to send the message.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888036,"byte_end":10888091,"line_start":198,"line_end":198,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888096,"byte_end":10888099,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888104,"byte_end":10888173,"line_start":200,"line_end":200,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888178,"byte_end":10888250,"line_start":201,"line_end":201,"column_start":5,"column_end":77}},{"value":"/ closed by `blocking_recv` until the permits are released.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888255,"byte_end":10888316,"line_start":202,"line_end":202,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888321,"byte_end":10888324,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888329,"byte_end":10888355,"line_start":204,"line_end":204,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888360,"byte_end":10888409,"line_start":205,"line_end":205,"column_start":5,"column_end":54}},{"value":"/ [`blocking_send`]: fn@crate::sync::mpsc::Sender::blocking_send","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888414,"byte_end":10888480,"line_start":206,"line_end":206,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888485,"byte_end":10888488,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888493,"byte_end":10888505,"line_start":208,"line_end":208,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888510,"byte_end":10888513,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888518,"byte_end":10888585,"line_start":210,"line_end":210,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888590,"byte_end":10888602,"line_start":211,"line_end":211,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888607,"byte_end":10888610,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888615,"byte_end":10888629,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888634,"byte_end":10888637,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888642,"byte_end":10888649,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888654,"byte_end":10888674,"line_start":216,"line_end":216,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888679,"byte_end":10888711,"line_start":217,"line_end":217,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888716,"byte_end":10888742,"line_start":218,"line_end":218,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888747,"byte_end":10888750,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888755,"byte_end":10888770,"line_start":220,"line_end":220,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888775,"byte_end":10888826,"line_start":221,"line_end":221,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888831,"byte_end":10888834,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888839,"byte_end":10888886,"line_start":223,"line_end":223,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888891,"byte_end":10888944,"line_start":224,"line_end":224,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888949,"byte_end":10888960,"line_start":225,"line_end":225,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888965,"byte_end":10888968,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/     Runtime::new()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10888973,"byte_end":10888995,"line_start":227,"line_end":227,"column_start":5,"column_end":27}},{"value":"/         .unwrap()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889000,"byte_end":10889021,"line_start":228,"line_end":228,"column_start":5,"column_end":26}},{"value":"/         .block_on(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889026,"byte_end":10889060,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/             let _ = tx.send(10).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889065,"byte_end":10889107,"line_start":230,"line_end":230,"column_start":5,"column_end":47}},{"value":"/         });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889112,"byte_end":10889127,"line_start":231,"line_end":231,"column_start":5,"column_end":20}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889132,"byte_end":10889165,"line_start":232,"line_end":232,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889170,"byte_end":10889175,"line_start":233,"line_end":233,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889180,"byte_end":10889187,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889192,"byte_end":10889216,"line_start":235,"line_end":235,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":7536},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890652,"byte_end":10890657,"line_start":280,"line_end":280,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel without dropping it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889324,"byte_end":10889387,"line_start":240,"line_end":240,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889392,"byte_end":10889395,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889400,"byte_end":10889475,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered. Any","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889480,"byte_end":10889552,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ outstanding [`Permit`] values will still be able to send messages.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889557,"byte_end":10889627,"line_start":244,"line_end":244,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889632,"byte_end":10889635,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ To guarantee that no messages are dropped, after calling `close()`,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889640,"byte_end":10889711,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ `recv()` must be called until `None` is returned. If there are","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889716,"byte_end":10889782,"line_start":247,"line_end":247,"column_start":5,"column_end":71}},{"value":"/ outstanding [`Permit`] or [`OwnedPermit`] values, the `recv` method will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889787,"byte_end":10889863,"line_start":248,"line_end":248,"column_start":5,"column_end":81}},{"value":"/ not return `None` until those are released.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889868,"byte_end":10889915,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889920,"byte_end":10889923,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889928,"byte_end":10889950,"line_start":251,"line_end":251,"column_start":5,"column_end":27}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889955,"byte_end":10889987,"line_start":252,"line_end":252,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10889992,"byte_end":10889995,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890000,"byte_end":10890014,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890019,"byte_end":10890022,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890027,"byte_end":10890034,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890039,"byte_end":10890065,"line_start":257,"line_end":257,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890070,"byte_end":10890073,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890078,"byte_end":10890096,"line_start":259,"line_end":259,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890101,"byte_end":10890122,"line_start":260,"line_end":260,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(20);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890127,"byte_end":10890172,"line_start":261,"line_end":261,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890177,"byte_end":10890180,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890185,"byte_end":10890218,"line_start":263,"line_end":263,"column_start":5,"column_end":38}},{"value":"/         let mut i = 0;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890223,"byte_end":10890249,"line_start":264,"line_end":264,"column_start":5,"column_end":31}},{"value":"/         while let Ok(permit) = tx.reserve().await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890254,"byte_end":10890309,"line_start":265,"line_end":265,"column_start":5,"column_end":60}},{"value":"/             permit.send(i);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890314,"byte_end":10890345,"line_start":266,"line_end":266,"column_start":5,"column_end":36}},{"value":"/             i += 1;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890350,"byte_end":10890373,"line_start":267,"line_end":267,"column_start":5,"column_end":28}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890378,"byte_end":10890391,"line_start":268,"line_end":268,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890396,"byte_end":10890407,"line_start":269,"line_end":269,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890412,"byte_end":10890415,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890420,"byte_end":10890439,"line_start":271,"line_end":271,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890444,"byte_end":10890447,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/     while let Some(msg) = rx.recv().await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890452,"byte_end":10890499,"line_start":273,"line_end":273,"column_start":5,"column_end":52}},{"value":"/         println!(\"got {}\", msg);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890504,"byte_end":10890540,"line_start":274,"line_end":274,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890545,"byte_end":10890554,"line_start":275,"line_end":275,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890559,"byte_end":10890562,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/     // Channel closed and no messages are lost.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890567,"byte_end":10890618,"line_start":277,"line_end":277,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890623,"byte_end":10890628,"line_start":278,"line_end":278,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890633,"byte_end":10890640,"line_start":279,"line_end":279,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7537},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10891498,"byte_end":10891507,"line_start":299,"line_end":299,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890709,"byte_end":10890763,"line_start":284,"line_end":284,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890768,"byte_end":10890771,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890776,"byte_end":10890800,"line_start":286,"line_end":286,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890805,"byte_end":10890808,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890813,"byte_end":10890887,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890892,"byte_end":10890906,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890911,"byte_end":10890973,"line_start":290,"line_end":290,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10890978,"byte_end":10891052,"line_start":291,"line_end":291,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10891057,"byte_end":10891109,"line_start":292,"line_end":292,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10891114,"byte_end":10891117,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10891122,"byte_end":10891194,"line_start":294,"line_end":294,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10891199,"byte_end":10891275,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10891280,"byte_end":10891356,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10891361,"byte_end":10891432,"line_start":297,"line_end":297,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10891437,"byte_end":10891486,"line_start":298,"line_end":298,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7546},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893603,"byte_end":10893607,"line_start":364,"line_end":364,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10891963,"byte_end":10892014,"line_start":319,"line_end":319,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892019,"byte_end":10892022,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892027,"byte_end":10892103,"line_start":321,"line_end":321,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892108,"byte_end":10892184,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892189,"byte_end":10892263,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892268,"byte_end":10892343,"line_start":324,"line_end":324,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892348,"byte_end":10892417,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892422,"byte_end":10892494,"line_start":326,"line_end":326,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892499,"byte_end":10892530,"line_start":327,"line_end":327,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892535,"byte_end":10892538,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892543,"byte_end":10892555,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892560,"byte_end":10892563,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892568,"byte_end":10892641,"line_start":331,"line_end":331,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892646,"byte_end":10892720,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892725,"byte_end":10892785,"line_start":333,"line_end":333,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892790,"byte_end":10892793,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892798,"byte_end":10892828,"line_start":335,"line_end":335,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892833,"byte_end":10892859,"line_start":336,"line_end":336,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892864,"byte_end":10892867,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892872,"byte_end":10892886,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892891,"byte_end":10892894,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892899,"byte_end":10892969,"line_start":340,"line_end":340,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10892974,"byte_end":10893013,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893018,"byte_end":10893021,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893026,"byte_end":10893037,"line_start":343,"line_end":343,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893042,"byte_end":10893068,"line_start":344,"line_end":344,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893073,"byte_end":10893076,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893081,"byte_end":10893099,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893104,"byte_end":10893125,"line_start":347,"line_end":347,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893130,"byte_end":10893174,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893179,"byte_end":10893182,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893187,"byte_end":10893220,"line_start":350,"line_end":350,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893225,"byte_end":10893253,"line_start":351,"line_end":351,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893258,"byte_end":10893308,"line_start":352,"line_end":352,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893313,"byte_end":10893362,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893367,"byte_end":10893394,"line_start":354,"line_end":354,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893399,"byte_end":10893416,"line_start":355,"line_end":355,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893421,"byte_end":10893434,"line_start":356,"line_end":356,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893439,"byte_end":10893450,"line_start":357,"line_end":357,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893455,"byte_end":10893458,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893463,"byte_end":10893508,"line_start":359,"line_end":359,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893513,"byte_end":10893549,"line_start":360,"line_end":360,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893554,"byte_end":10893563,"line_start":361,"line_end":361,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893568,"byte_end":10893573,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893578,"byte_end":10893585,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7549},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894740,"byte_end":10894746,"line_start":405,"line_end":405,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893859,"byte_end":10893903,"line_start":374,"line_end":374,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893908,"byte_end":10893911,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893916,"byte_end":10893991,"line_start":376,"line_end":376,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10893996,"byte_end":10894051,"line_start":377,"line_end":377,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894056,"byte_end":10894059,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894064,"byte_end":10894078,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894083,"byte_end":10894086,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894091,"byte_end":10894098,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894103,"byte_end":10894129,"line_start":382,"line_end":382,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894134,"byte_end":10894137,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894142,"byte_end":10894160,"line_start":384,"line_end":384,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894165,"byte_end":10894186,"line_start":385,"line_end":385,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::channel::<()>(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894191,"byte_end":10894238,"line_start":386,"line_end":386,"column_start":5,"column_end":52}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894243,"byte_end":10894273,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894278,"byte_end":10894308,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894313,"byte_end":10894343,"line_start":389,"line_end":389,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894348,"byte_end":10894378,"line_start":390,"line_end":390,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894383,"byte_end":10894416,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894421,"byte_end":10894442,"line_start":392,"line_end":392,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894447,"byte_end":10894458,"line_start":393,"line_end":393,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894463,"byte_end":10894466,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894471,"byte_end":10894494,"line_start":395,"line_end":395,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894499,"byte_end":10894524,"line_start":396,"line_end":396,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894529,"byte_end":10894554,"line_start":397,"line_end":397,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894559,"byte_end":10894584,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894589,"byte_end":10894614,"line_start":399,"line_end":399,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894619,"byte_end":10894643,"line_start":400,"line_end":400,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894648,"byte_end":10894658,"line_start":401,"line_end":401,"column_start":5,"column_end":15}},{"value":"/     println!(\"Receiver dropped\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894663,"byte_end":10894700,"line_start":402,"line_end":402,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894705,"byte_end":10894710,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894715,"byte_end":10894722,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7552},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896920,"byte_end":10896928,"line_start":467,"line_end":467,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894800,"byte_end":10894859,"line_start":409,"line_end":409,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894864,"byte_end":10894867,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894872,"byte_end":10894951,"line_start":411,"line_end":411,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10894956,"byte_end":10895031,"line_start":412,"line_end":412,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895036,"byte_end":10895114,"line_start":413,"line_end":413,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895119,"byte_end":10895161,"line_start":414,"line_end":414,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895166,"byte_end":10895169,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895174,"byte_end":10895186,"line_start":416,"line_end":416,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895191,"byte_end":10895194,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895199,"byte_end":10895270,"line_start":418,"line_end":418,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895275,"byte_end":10895351,"line_start":419,"line_end":419,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895356,"byte_end":10895378,"line_start":420,"line_end":420,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895383,"byte_end":10895386,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895391,"byte_end":10895464,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895469,"byte_end":10895543,"line_start":423,"line_end":423,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895548,"byte_end":10895608,"line_start":424,"line_end":424,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895613,"byte_end":10895616,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895621,"byte_end":10895647,"line_start":426,"line_end":426,"column_start":5,"column_end":31}},{"value":"/ [`channel`]: channel","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895652,"byte_end":10895676,"line_start":427,"line_end":427,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895681,"byte_end":10895711,"line_start":428,"line_end":428,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895716,"byte_end":10895719,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895724,"byte_end":10895738,"line_start":430,"line_end":430,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895743,"byte_end":10895746,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895751,"byte_end":10895758,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895763,"byte_end":10895789,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895794,"byte_end":10895797,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895802,"byte_end":10895820,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895825,"byte_end":10895846,"line_start":436,"line_end":436,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895851,"byte_end":10895897,"line_start":437,"line_end":437,"column_start":5,"column_end":51}},{"value":"/     let (tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895902,"byte_end":10895947,"line_start":438,"line_end":438,"column_start":5,"column_end":50}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895952,"byte_end":10895982,"line_start":439,"line_end":439,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895987,"byte_end":10895990,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10895995,"byte_end":10896028,"line_start":441,"line_end":441,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896033,"byte_end":10896072,"line_start":442,"line_end":442,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896077,"byte_end":10896116,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896121,"byte_end":10896183,"line_start":444,"line_end":444,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896188,"byte_end":10896199,"line_start":445,"line_end":445,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896204,"byte_end":10896207,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896212,"byte_end":10896245,"line_start":447,"line_end":447,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896250,"byte_end":10896299,"line_start":448,"line_end":448,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896304,"byte_end":10896351,"line_start":449,"line_end":449,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896356,"byte_end":10896392,"line_start":450,"line_end":450,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896397,"byte_end":10896408,"line_start":451,"line_end":451,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896413,"byte_end":10896416,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896421,"byte_end":10896441,"line_start":453,"line_end":453,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896446,"byte_end":10896485,"line_start":454,"line_end":454,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896490,"byte_end":10896535,"line_start":455,"line_end":455,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896540,"byte_end":10896543,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896548,"byte_end":10896587,"line_start":457,"line_end":457,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896592,"byte_end":10896637,"line_start":458,"line_end":458,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896642,"byte_end":10896645,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896650,"byte_end":10896699,"line_start":460,"line_end":460,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896704,"byte_end":10896735,"line_start":461,"line_end":461,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896740,"byte_end":10896802,"line_start":462,"line_end":462,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896807,"byte_end":10896872,"line_start":463,"line_end":463,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896877,"byte_end":10896886,"line_start":464,"line_end":464,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896891,"byte_end":10896896,"line_start":465,"line_end":465,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10896901,"byte_end":10896908,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7553},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10899017,"byte_end":10899029,"line_start":526,"line_end":526,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10897333,"byte_end":10897413,"line_start":479,"line_end":479,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10897418,"byte_end":10897421,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10897426,"byte_end":10897503,"line_start":481,"line_end":481,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10897508,"byte_end":10897586,"line_start":482,"line_end":482,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10897591,"byte_end":10897639,"line_start":483,"line_end":483,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10897644,"byte_end":10897647,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10897652,"byte_end":10897678,"line_start":485,"line_end":485,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10897683,"byte_end":10897686,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10897691,"byte_end":10897703,"line_start":487,"line_end":487,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10897708,"byte_end":10897711,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10897716,"byte_end":10897789,"line_start":489,"line_end":489,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10897794,"byte_end":10897851,"line_start":490,"line_end":490,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10897856,"byte_end":10897937,"line_start":491,"line_end":491,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10897942,"byte_end":10897945,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10897950,"byte_end":10897980,"line_start":493,"line_end":493,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10897985,"byte_end":10898011,"line_start":494,"line_end":494,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898016,"byte_end":10898019,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898024,"byte_end":10898038,"line_start":496,"line_end":496,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898043,"byte_end":10898046,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898051,"byte_end":10898129,"line_start":498,"line_end":498,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898134,"byte_end":10898205,"line_start":499,"line_end":499,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898210,"byte_end":10898213,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898218,"byte_end":10898229,"line_start":501,"line_end":501,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898234,"byte_end":10898260,"line_start":502,"line_end":502,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898265,"byte_end":10898304,"line_start":503,"line_end":503,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898309,"byte_end":10898312,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898317,"byte_end":10898335,"line_start":505,"line_end":505,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898340,"byte_end":10898361,"line_start":506,"line_end":506,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898366,"byte_end":10898410,"line_start":507,"line_end":507,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898415,"byte_end":10898418,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898423,"byte_end":10898456,"line_start":509,"line_end":509,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898461,"byte_end":10898489,"line_start":510,"line_end":510,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898494,"byte_end":10898580,"line_start":511,"line_end":511,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898585,"byte_end":10898638,"line_start":512,"line_end":512,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898643,"byte_end":10898670,"line_start":513,"line_end":513,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898675,"byte_end":10898692,"line_start":514,"line_end":514,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898697,"byte_end":10898710,"line_start":515,"line_end":515,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898715,"byte_end":10898726,"line_start":516,"line_end":516,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898731,"byte_end":10898734,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898739,"byte_end":10898784,"line_start":518,"line_end":518,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898789,"byte_end":10898825,"line_start":519,"line_end":519,"column_start":5,"column_end":41}},{"value":"/         sleep(Duration::from_millis(200)).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898830,"byte_end":10898882,"line_start":520,"line_end":520,"column_start":5,"column_end":57}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898887,"byte_end":10898896,"line_start":521,"line_end":521,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898901,"byte_end":10898906,"line_start":522,"line_end":522,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898911,"byte_end":10898918,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10898923,"byte_end":10898947,"line_start":524,"line_end":524,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":7556},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900594,"byte_end":10900607,"line_start":579,"line_end":579,"column_start":12,"column_end":25},"name":"blocking_send","qualname":"<Sender<T>>::blocking_send","value":"pub fn blocking_send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Blocking send to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking send to call outside of asynchronous contexts.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10899522,"byte_end":10899581,"line_start":545,"line_end":545,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10899586,"byte_end":10899589,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10899594,"byte_end":10899662,"line_start":547,"line_end":547,"column_start":5,"column_end":73}},{"value":"/ synchronous code to asynchronous code, and will work even if the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10899667,"byte_end":10899735,"line_start":548,"line_end":548,"column_start":5,"column_end":73}},{"value":"/ receiver is not using [`blocking_recv`] to receive the message.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10899740,"byte_end":10899807,"line_start":549,"line_end":549,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10899812,"byte_end":10899815,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ [`blocking_recv`]: fn@crate::sync::mpsc::Receiver::blocking_recv","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10899820,"byte_end":10899888,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10899893,"byte_end":10899896,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10899901,"byte_end":10899913,"line_start":553,"line_end":553,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10899918,"byte_end":10899921,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10899926,"byte_end":10899993,"line_start":555,"line_end":555,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10899998,"byte_end":10900010,"line_start":556,"line_end":556,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900015,"byte_end":10900018,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900023,"byte_end":10900037,"line_start":558,"line_end":558,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900042,"byte_end":10900045,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900050,"byte_end":10900057,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900062,"byte_end":10900082,"line_start":561,"line_end":561,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900087,"byte_end":10900119,"line_start":562,"line_end":562,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900124,"byte_end":10900150,"line_start":563,"line_end":563,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900155,"byte_end":10900158,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900163,"byte_end":10900178,"line_start":565,"line_end":565,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900183,"byte_end":10900233,"line_start":566,"line_end":566,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900238,"byte_end":10900241,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900246,"byte_end":10900293,"line_start":568,"line_end":568,"column_start":5,"column_end":52}},{"value":"/         tx.blocking_send(10).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900298,"byte_end":10900340,"line_start":569,"line_end":569,"column_start":5,"column_end":47}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900345,"byte_end":10900356,"line_start":570,"line_end":570,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900361,"byte_end":10900364,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/     Runtime::new().unwrap().block_on(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900369,"byte_end":10900422,"line_start":572,"line_end":572,"column_start":5,"column_end":58}},{"value":"/         assert_eq!(Some(10), rx.recv().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900427,"byte_end":10900477,"line_start":573,"line_end":573,"column_start":5,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900482,"byte_end":10900493,"line_start":574,"line_end":574,"column_start":5,"column_end":16}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900498,"byte_end":10900531,"line_start":575,"line_end":575,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900536,"byte_end":10900541,"line_start":576,"line_end":576,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900546,"byte_end":10900553,"line_start":577,"line_end":577,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900558,"byte_end":10900582,"line_start":578,"line_end":578,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":7557},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901298,"byte_end":10901307,"line_start":601,"line_end":601,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`Receiver`] is dropped, or when the [`Receiver::close`] method is\n called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900716,"byte_end":10900780,"line_start":583,"line_end":583,"column_start":5,"column_end":69}},{"value":"/ [`Receiver`] is dropped, or when the [`Receiver::close`] method is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900785,"byte_end":10900855,"line_start":584,"line_end":584,"column_start":5,"column_end":75}},{"value":"/ called.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900860,"byte_end":10900871,"line_start":585,"line_end":585,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900876,"byte_end":10900879,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900884,"byte_end":10900929,"line_start":587,"line_end":587,"column_start":5,"column_end":50}},{"value":"/ [`Receiver::close`]: crate::sync::mpsc::Receiver::close","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900934,"byte_end":10900993,"line_start":588,"line_end":588,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10900998,"byte_end":10901001,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901006,"byte_end":10901013,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(42);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901018,"byte_end":10901074,"line_start":591,"line_end":591,"column_start":5,"column_end":61}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901079,"byte_end":10901108,"line_start":592,"line_end":592,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901113,"byte_end":10901116,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901121,"byte_end":10901146,"line_start":594,"line_end":594,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901151,"byte_end":10901181,"line_start":595,"line_end":595,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901186,"byte_end":10901189,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901194,"byte_end":10901207,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901212,"byte_end":10901240,"line_start":598,"line_end":598,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901245,"byte_end":10901274,"line_start":599,"line_end":599,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901279,"byte_end":10901286,"line_start":600,"line_end":600,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7558},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902698,"byte_end":10902705,"line_start":643,"line_end":643,"column_start":18,"column_end":25},"name":"reserve","qualname":"<Sender<T>>::reserve","value":"pub async fn reserve<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for channel capacity. Once capacity to send one message is\n available, it is reserved for the caller.","sig":null,"attributes":[{"value":"/ Wait for channel capacity. Once capacity to send one message is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901366,"byte_end":10901433,"line_start":605,"line_end":605,"column_start":5,"column_end":72}},{"value":"/ available, it is reserved for the caller.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901438,"byte_end":10901483,"line_start":606,"line_end":606,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901488,"byte_end":10901491,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901496,"byte_end":10901571,"line_start":608,"line_end":608,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901576,"byte_end":10901651,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. A [`Permit`] is returned to track","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901656,"byte_end":10901729,"line_start":610,"line_end":610,"column_start":5,"column_end":78}},{"value":"/ the reserved capacity. The [`send`] function on [`Permit`] consumes the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901734,"byte_end":10901809,"line_start":611,"line_end":611,"column_start":5,"column_end":80}},{"value":"/ reserved capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901814,"byte_end":10901836,"line_start":612,"line_end":612,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901841,"byte_end":10901844,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901849,"byte_end":10901925,"line_start":614,"line_end":614,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901930,"byte_end":10901949,"line_start":615,"line_end":615,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901954,"byte_end":10901957,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901962,"byte_end":10901984,"line_start":617,"line_end":617,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10901989,"byte_end":10902015,"line_start":618,"line_end":618,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902020,"byte_end":10902023,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902028,"byte_end":10902042,"line_start":620,"line_end":620,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902047,"byte_end":10902050,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902055,"byte_end":10902062,"line_start":622,"line_end":622,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902067,"byte_end":10902093,"line_start":623,"line_end":623,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902098,"byte_end":10902101,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902106,"byte_end":10902124,"line_start":625,"line_end":625,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902129,"byte_end":10902150,"line_start":626,"line_end":626,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902155,"byte_end":10902199,"line_start":627,"line_end":627,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902204,"byte_end":10902207,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902212,"byte_end":10902239,"line_start":629,"line_end":629,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902244,"byte_end":10902293,"line_start":630,"line_end":630,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902298,"byte_end":10902301,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902306,"byte_end":10902372,"line_start":632,"line_end":632,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902377,"byte_end":10902407,"line_start":633,"line_end":633,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902412,"byte_end":10902455,"line_start":634,"line_end":634,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902460,"byte_end":10902463,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902468,"byte_end":10902509,"line_start":636,"line_end":636,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902514,"byte_end":10902539,"line_start":637,"line_end":637,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902544,"byte_end":10902547,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902552,"byte_end":10902603,"line_start":639,"line_end":639,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902608,"byte_end":10902658,"line_start":640,"line_end":640,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902663,"byte_end":10902668,"line_start":641,"line_end":641,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902673,"byte_end":10902680,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7561},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905826,"byte_end":10905839,"line_start":722,"line_end":722,"column_start":18,"column_end":31},"name":"reserve_owned","qualname":"<Sender<T>>::reserve_owned","value":"pub async fn reserve_owned(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for channel capacity, moving the `Sender` and returning an owned\n permit. Once capacity to send one message is available, it is reserved\n for the caller.","sig":null,"attributes":[{"value":"/ Wait for channel capacity, moving the `Sender` and returning an owned","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902843,"byte_end":10902916,"line_start":648,"line_end":648,"column_start":5,"column_end":78}},{"value":"/ permit. Once capacity to send one message is available, it is reserved","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10902921,"byte_end":10902995,"line_start":649,"line_end":649,"column_start":5,"column_end":79}},{"value":"/ for the caller.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10903000,"byte_end":10903019,"line_start":650,"line_end":650,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10903024,"byte_end":10903027,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ This moves the sender _by value_, and returns an owned permit that can","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10903032,"byte_end":10903106,"line_start":652,"line_end":652,"column_start":5,"column_end":79}},{"value":"/ be used to send a message into the channel. Unlike [`Sender::reserve`],","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10903111,"byte_end":10903186,"line_start":653,"line_end":653,"column_start":5,"column_end":80}},{"value":"/ this method may be used in cases where the permit must be valid for the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10903191,"byte_end":10903266,"line_start":654,"line_end":654,"column_start":5,"column_end":80}},{"value":"/ `'static` lifetime. `Sender`s may be cloned cheaply (`Sender::clone` is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10903271,"byte_end":10903346,"line_start":655,"line_end":655,"column_start":5,"column_end":80}},{"value":"/ essentially a reference count increment, comparable to [`Arc::clone`]),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10903351,"byte_end":10903426,"line_start":656,"line_end":656,"column_start":5,"column_end":80}},{"value":"/ so when multiple [`OwnedPermit`]s are needed or the `Sender` cannot be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10903431,"byte_end":10903505,"line_start":657,"line_end":657,"column_start":5,"column_end":79}},{"value":"/ moved, it can be cloned prior to calling `reserve_owned`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10903510,"byte_end":10903571,"line_start":658,"line_end":658,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10903576,"byte_end":10903579,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10903584,"byte_end":10903659,"line_start":660,"line_end":660,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10903664,"byte_end":10903739,"line_start":661,"line_end":661,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. An [`OwnedPermit`] is returned to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10903744,"byte_end":10903817,"line_start":662,"line_end":662,"column_start":5,"column_end":78}},{"value":"/ track the reserved capacity. The [`send`] function on [`OwnedPermit`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10903822,"byte_end":10903895,"line_start":663,"line_end":663,"column_start":5,"column_end":78}},{"value":"/ consumes the reserved capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10903900,"byte_end":10903935,"line_start":664,"line_end":664,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10903940,"byte_end":10903943,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ Dropping the [`OwnedPermit`] without sending a message releases the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10903948,"byte_end":10904019,"line_start":666,"line_end":666,"column_start":5,"column_end":76}},{"value":"/ capacity back to the channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904024,"byte_end":10904057,"line_start":667,"line_end":667,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904062,"byte_end":10904065,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904070,"byte_end":10904084,"line_start":669,"line_end":669,"column_start":5,"column_end":19}},{"value":"/ Sending a message using an [`OwnedPermit`]:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904089,"byte_end":10904136,"line_start":670,"line_end":670,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904141,"byte_end":10904148,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904153,"byte_end":10904179,"line_start":672,"line_end":672,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904184,"byte_end":10904187,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904192,"byte_end":10904210,"line_start":674,"line_end":674,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904215,"byte_end":10904236,"line_start":675,"line_end":675,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904241,"byte_end":10904285,"line_start":676,"line_end":676,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904290,"byte_end":10904293,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity, moving the sender.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904298,"byte_end":10904345,"line_start":678,"line_end":678,"column_start":5,"column_end":52}},{"value":"/     let permit = tx.reserve_owned().await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904350,"byte_end":10904405,"line_start":679,"line_end":679,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904410,"byte_end":10904413,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/     // Send a message, consuming the permit and returning","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904418,"byte_end":10904479,"line_start":681,"line_end":681,"column_start":5,"column_end":66}},{"value":"/     // the moved sender.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904484,"byte_end":10904512,"line_start":682,"line_end":682,"column_start":5,"column_end":33}},{"value":"/     let tx = permit.send(123);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904517,"byte_end":10904551,"line_start":683,"line_end":683,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904556,"byte_end":10904559,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904564,"byte_end":10904616,"line_start":685,"line_end":685,"column_start":5,"column_end":57}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 123);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904621,"byte_end":10904671,"line_start":686,"line_end":686,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904676,"byte_end":10904679,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/     // The sender can now be used again.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904684,"byte_end":10904728,"line_start":688,"line_end":688,"column_start":5,"column_end":49}},{"value":"/     tx.send(456).await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904733,"byte_end":10904769,"line_start":689,"line_end":689,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904774,"byte_end":10904779,"line_start":690,"line_end":690,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904784,"byte_end":10904791,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904796,"byte_end":10904799,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ When multiple [`OwnedPermit`]s are needed, or the sender cannot be moved","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904804,"byte_end":10904880,"line_start":693,"line_end":693,"column_start":5,"column_end":81}},{"value":"/ by value, it can be inexpensively cloned before calling `reserve_owned`:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904885,"byte_end":10904961,"line_start":694,"line_end":694,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904966,"byte_end":10904969,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904974,"byte_end":10904981,"line_start":696,"line_end":696,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10904986,"byte_end":10905012,"line_start":697,"line_end":697,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905017,"byte_end":10905020,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905025,"byte_end":10905043,"line_start":699,"line_end":699,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905048,"byte_end":10905069,"line_start":700,"line_end":700,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905074,"byte_end":10905118,"line_start":701,"line_end":701,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905123,"byte_end":10905126,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/     // Clone the sender and reserve capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905131,"byte_end":10905180,"line_start":703,"line_end":703,"column_start":5,"column_end":54}},{"value":"/     let permit = tx.clone().reserve_owned().await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905185,"byte_end":10905248,"line_start":704,"line_end":704,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905253,"byte_end":10905256,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905261,"byte_end":10905327,"line_start":706,"line_end":706,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905332,"byte_end":10905362,"line_start":707,"line_end":707,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905367,"byte_end":10905410,"line_start":708,"line_end":708,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905415,"byte_end":10905418,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905423,"byte_end":10905465,"line_start":710,"line_end":710,"column_start":5,"column_end":47}},{"value":"/     permit.send(456);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905470,"byte_end":10905495,"line_start":711,"line_end":711,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905500,"byte_end":10905503,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905508,"byte_end":10905559,"line_start":713,"line_end":713,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905564,"byte_end":10905614,"line_start":714,"line_end":714,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905619,"byte_end":10905624,"line_start":715,"line_end":715,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905629,"byte_end":10905636,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905641,"byte_end":10905644,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ [`Sender::reserve`]: Sender::reserve","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905649,"byte_end":10905689,"line_start":718,"line_end":718,"column_start":5,"column_end":45}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905694,"byte_end":10905726,"line_start":719,"line_end":719,"column_start":5,"column_end":37}},{"value":"/ [`send`]: OwnedPermit::send","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905731,"byte_end":10905762,"line_start":720,"line_end":720,"column_start":5,"column_end":36}},{"value":"/ [`Arc::clone`]: std::sync::Arc::clone","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10905767,"byte_end":10905808,"line_start":721,"line_end":721,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":7567},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907739,"byte_end":10907750,"line_start":779,"line_end":779,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<Sender<T>>::try_reserve","value":"pub fn try_reserve(&Self) -> Result<Permit<, T>, TrySendError<()>>","parent":null,"children":[],"decl_id":null,"docs":" Try to acquire a slot in the channel without waiting for the slot to become\n available.","sig":null,"attributes":[{"value":"/ Try to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906218,"byte_end":10906297,"line_start":736,"line_end":736,"column_start":5,"column_end":84}},{"value":"/ available.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906302,"byte_end":10906316,"line_start":737,"line_end":737,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906321,"byte_end":10906324,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return [`TrySendError`], otherwise","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906329,"byte_end":10906409,"line_start":739,"line_end":739,"column_start":5,"column_end":85}},{"value":"/ if there is a slot available it will return a [`Permit`] that will then allow you","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906414,"byte_end":10906499,"line_start":740,"line_end":740,"column_start":5,"column_end":90}},{"value":"/ to [`send`] on the channel with a guaranteed slot. This function is similar to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906504,"byte_end":10906586,"line_start":741,"line_end":741,"column_start":5,"column_end":87}},{"value":"/ [`reserve`] except it does not await for the slot to become available.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906591,"byte_end":10906665,"line_start":742,"line_end":742,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906670,"byte_end":10906673,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906678,"byte_end":10906754,"line_start":744,"line_end":744,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906759,"byte_end":10906778,"line_start":745,"line_end":745,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906783,"byte_end":10906786,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906791,"byte_end":10906813,"line_start":747,"line_end":747,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906818,"byte_end":10906844,"line_start":748,"line_end":748,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906849,"byte_end":10906881,"line_start":749,"line_end":749,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906886,"byte_end":10906889,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906894,"byte_end":10906908,"line_start":751,"line_end":751,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906913,"byte_end":10906916,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906921,"byte_end":10906928,"line_start":753,"line_end":753,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906933,"byte_end":10906959,"line_start":754,"line_end":754,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906964,"byte_end":10906967,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906972,"byte_end":10906990,"line_start":756,"line_end":756,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10906995,"byte_end":10907016,"line_start":757,"line_end":757,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907021,"byte_end":10907065,"line_start":758,"line_end":758,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907070,"byte_end":10907073,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907078,"byte_end":10907105,"line_start":760,"line_end":760,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.try_reserve().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907110,"byte_end":10907157,"line_start":761,"line_end":761,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907162,"byte_end":10907165,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907170,"byte_end":10907236,"line_start":763,"line_end":763,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907241,"byte_end":10907271,"line_start":764,"line_end":764,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907276,"byte_end":10907319,"line_start":765,"line_end":765,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907324,"byte_end":10907327,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907332,"byte_end":10907396,"line_start":767,"line_end":767,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907401,"byte_end":10907446,"line_start":768,"line_end":768,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907451,"byte_end":10907494,"line_start":769,"line_end":769,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907499,"byte_end":10907502,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907507,"byte_end":10907548,"line_start":771,"line_end":771,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907553,"byte_end":10907578,"line_start":772,"line_end":772,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907583,"byte_end":10907586,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907591,"byte_end":10907642,"line_start":774,"line_end":774,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907647,"byte_end":10907697,"line_start":775,"line_end":775,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907702,"byte_end":10907705,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907710,"byte_end":10907715,"line_start":777,"line_end":777,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10907720,"byte_end":10907727,"line_start":778,"line_end":778,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7568},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910382,"byte_end":10910399,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"try_reserve_owned","qualname":"<Sender<T>>::try_reserve_owned","value":"pub fn try_reserve_owned(Self) -> Result<OwnedPermit<T>, TrySendError<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Try to acquire a slot in the channel without waiting for the slot to become\n available, returning an owned permit.","sig":null,"attributes":[{"value":"/ Try to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10908002,"byte_end":10908081,"line_start":788,"line_end":788,"column_start":5,"column_end":84}},{"value":"/ available, returning an owned permit.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10908086,"byte_end":10908127,"line_start":789,"line_end":789,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10908132,"byte_end":10908135,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ This moves the sender _by value_, and returns an owned permit that can","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10908140,"byte_end":10908214,"line_start":791,"line_end":791,"column_start":5,"column_end":79}},{"value":"/ be used to send a message into the channel. Unlike [`Sender::try_reserve`],","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10908219,"byte_end":10908298,"line_start":792,"line_end":792,"column_start":5,"column_end":84}},{"value":"/ this method may be used in cases where the permit must be valid for the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10908303,"byte_end":10908378,"line_start":793,"line_end":793,"column_start":5,"column_end":80}},{"value":"/ `'static` lifetime.  `Sender`s may be cloned cheaply (`Sender::clone` is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10908383,"byte_end":10908459,"line_start":794,"line_end":794,"column_start":5,"column_end":81}},{"value":"/ essentially a reference count increment, comparable to [`Arc::clone`]),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10908464,"byte_end":10908539,"line_start":795,"line_end":795,"column_start":5,"column_end":80}},{"value":"/ so when multiple [`OwnedPermit`]s are needed or the `Sender` cannot be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10908544,"byte_end":10908618,"line_start":796,"line_end":796,"column_start":5,"column_end":79}},{"value":"/ moved, it can be cloned prior to calling `try_reserve_owned`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10908623,"byte_end":10908688,"line_start":797,"line_end":797,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10908693,"byte_end":10908696,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return a [`TrySendError`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10908701,"byte_end":10908773,"line_start":799,"line_end":799,"column_start":5,"column_end":77}},{"value":"/ Since the sender is taken by value, the `TrySendError` returned in this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10908778,"byte_end":10908853,"line_start":800,"line_end":800,"column_start":5,"column_end":80}},{"value":"/ case contains the sender, so that it may be used again. Otherwise, if","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10908858,"byte_end":10908931,"line_start":801,"line_end":801,"column_start":5,"column_end":78}},{"value":"/ there is a slot available, this method will return an [`OwnedPermit`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10908936,"byte_end":10909009,"line_start":802,"line_end":802,"column_start":5,"column_end":78}},{"value":"/ that can then be used to [`send`] on the channel with a guaranteed slot.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909014,"byte_end":10909090,"line_start":803,"line_end":803,"column_start":5,"column_end":81}},{"value":"/ This function is similar to  [`reserve_owned`] except it does not await","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909095,"byte_end":10909170,"line_start":804,"line_end":804,"column_start":5,"column_end":80}},{"value":"/ for the slot to become available.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909175,"byte_end":10909212,"line_start":805,"line_end":805,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909217,"byte_end":10909220,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ Dropping the [`OwnedPermit`] without sending a message releases the capacity back","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909225,"byte_end":10909310,"line_start":807,"line_end":807,"column_start":5,"column_end":90}},{"value":"/ to the channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909315,"byte_end":10909334,"line_start":808,"line_end":808,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909339,"byte_end":10909342,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909347,"byte_end":10909379,"line_start":810,"line_end":810,"column_start":5,"column_end":37}},{"value":"/ [`send`]: OwnedPermit::send","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909384,"byte_end":10909415,"line_start":811,"line_end":811,"column_start":5,"column_end":36}},{"value":"/ [`reserve_owned`]: Sender::reserve_owned","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909420,"byte_end":10909464,"line_start":812,"line_end":812,"column_start":5,"column_end":49}},{"value":"/ [`Arc::clone`]: std::sync::Arc::clone","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909469,"byte_end":10909510,"line_start":813,"line_end":813,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909515,"byte_end":10909518,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909523,"byte_end":10909537,"line_start":815,"line_end":815,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909542,"byte_end":10909545,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909550,"byte_end":10909557,"line_start":817,"line_end":817,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909562,"byte_end":10909588,"line_start":818,"line_end":818,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909593,"byte_end":10909596,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909601,"byte_end":10909619,"line_start":820,"line_end":820,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909624,"byte_end":10909645,"line_start":821,"line_end":821,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909650,"byte_end":10909694,"line_start":822,"line_end":822,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909699,"byte_end":10909702,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909707,"byte_end":10909734,"line_start":824,"line_end":824,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.clone().try_reserve_owned().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909739,"byte_end":10909800,"line_start":825,"line_end":825,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909805,"byte_end":10909808,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909813,"byte_end":10909879,"line_start":827,"line_end":827,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909884,"byte_end":10909914,"line_start":828,"line_end":828,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909919,"byte_end":10909962,"line_start":829,"line_end":829,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909967,"byte_end":10909970,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10909975,"byte_end":10910039,"line_start":831,"line_end":831,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910044,"byte_end":10910089,"line_start":832,"line_end":832,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910094,"byte_end":10910137,"line_start":833,"line_end":833,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910142,"byte_end":10910145,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910150,"byte_end":10910191,"line_start":835,"line_end":835,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910196,"byte_end":10910221,"line_start":836,"line_end":836,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910226,"byte_end":10910229,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910234,"byte_end":10910285,"line_start":838,"line_end":838,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910290,"byte_end":10910340,"line_start":839,"line_end":839,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910345,"byte_end":10910348,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910353,"byte_end":10910358,"line_start":841,"line_end":841,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910363,"byte_end":10910370,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7569},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911057,"byte_end":10911069,"line_start":866,"line_end":866,"column_start":12,"column_end":24},"name":"same_channel","qualname":"<Sender<T>>::same_channel","value":"pub fn same_channel(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if senders belong to the same channel.","sig":null,"attributes":[{"value":"/ Returns `true` if senders belong to the same channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910686,"byte_end":10910743,"line_start":854,"line_end":854,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910748,"byte_end":10910751,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910756,"byte_end":10910770,"line_start":856,"line_end":856,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910775,"byte_end":10910778,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910783,"byte_end":10910790,"line_start":858,"line_end":858,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910795,"byte_end":10910850,"line_start":859,"line_end":859,"column_start":5,"column_end":60}},{"value":"/ let  tx2 = tx.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910855,"byte_end":10910881,"line_start":860,"line_end":860,"column_start":5,"column_end":31}},{"value":"/ assert!(tx.same_channel(&tx2));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910886,"byte_end":10910921,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910926,"byte_end":10910929,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ let (tx3, rx3) = tokio::sync::mpsc::channel::<()>(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910934,"byte_end":10910991,"line_start":863,"line_end":863,"column_start":5,"column_end":62}},{"value":"/ assert!(!tx3.same_channel(&tx2));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10910996,"byte_end":10911033,"line_start":864,"line_end":864,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911038,"byte_end":10911045,"line_start":865,"line_end":865,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7570},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912112,"byte_end":10912120,"line_start":899,"line_end":899,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Sender<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current capacity of the channel.","sig":null,"attributes":[{"value":"/ Returns the current capacity of the channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911156,"byte_end":10911204,"line_start":870,"line_end":870,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911209,"byte_end":10911212,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ The capacity goes down when sending a value by calling [`send`] or by reserving capacity","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911217,"byte_end":10911309,"line_start":872,"line_end":872,"column_start":5,"column_end":97}},{"value":"/ with [`reserve`]. The capacity goes up when values are received by the [`Receiver`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911314,"byte_end":10911402,"line_start":873,"line_end":873,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911407,"byte_end":10911410,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911415,"byte_end":10911429,"line_start":875,"line_end":875,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911434,"byte_end":10911437,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911442,"byte_end":10911449,"line_start":877,"line_end":877,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911454,"byte_end":10911480,"line_start":878,"line_end":878,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911485,"byte_end":10911488,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911493,"byte_end":10911511,"line_start":880,"line_end":880,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911516,"byte_end":10911537,"line_start":881,"line_end":881,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel::<()>(5);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911542,"byte_end":10911592,"line_start":882,"line_end":882,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911597,"byte_end":10911600,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(tx.capacity(), 5);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911605,"byte_end":10911642,"line_start":884,"line_end":884,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911647,"byte_end":10911650,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/     // Making a reservation drops the capacity by one.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911655,"byte_end":10911713,"line_start":886,"line_end":886,"column_start":5,"column_end":63}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911718,"byte_end":10911767,"line_start":887,"line_end":887,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(tx.capacity(), 4);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911772,"byte_end":10911809,"line_start":888,"line_end":888,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911814,"byte_end":10911817,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/     // Sending and receiving a value increases the capacity by one.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911822,"byte_end":10911893,"line_start":890,"line_end":890,"column_start":5,"column_end":76}},{"value":"/     permit.send(());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911898,"byte_end":10911922,"line_start":891,"line_end":891,"column_start":5,"column_end":29}},{"value":"/     rx.recv().await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911927,"byte_end":10911960,"line_start":892,"line_end":892,"column_start":5,"column_end":38}},{"value":"/     assert_eq!(tx.capacity(), 5);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10911965,"byte_end":10912002,"line_start":893,"line_end":893,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912007,"byte_end":10912012,"line_start":894,"line_end":894,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912017,"byte_end":10912024,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912029,"byte_end":10912032,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912037,"byte_end":10912063,"line_start":897,"line_end":897,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912068,"byte_end":10912100,"line_start":898,"line_end":898,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":7579},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913667,"byte_end":10913671,"line_start":955,"line_end":955,"column_start":12,"column_end":16},"name":"send","qualname":"<Permit>::send","value":"pub fn send(Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912594,"byte_end":10912640,"line_start":923,"line_end":923,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912645,"byte_end":10912648,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912653,"byte_end":10912728,"line_start":925,"line_end":925,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912733,"byte_end":10912807,"line_start":926,"line_end":926,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912812,"byte_end":10912886,"line_start":927,"line_end":927,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912891,"byte_end":10912939,"line_start":928,"line_end":928,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912944,"byte_end":10912947,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912952,"byte_end":10912992,"line_start":930,"line_end":930,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912997,"byte_end":10913000,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913005,"byte_end":10913019,"line_start":932,"line_end":932,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913024,"byte_end":10913027,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913032,"byte_end":10913039,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913044,"byte_end":10913070,"line_start":935,"line_end":935,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913075,"byte_end":10913078,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913083,"byte_end":10913101,"line_start":937,"line_end":937,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913106,"byte_end":10913127,"line_start":938,"line_end":938,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913132,"byte_end":10913176,"line_start":939,"line_end":939,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913181,"byte_end":10913184,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913189,"byte_end":10913216,"line_start":941,"line_end":941,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913221,"byte_end":10913270,"line_start":942,"line_end":942,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913275,"byte_end":10913278,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913283,"byte_end":10913349,"line_start":944,"line_end":944,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913354,"byte_end":10913384,"line_start":945,"line_end":945,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913389,"byte_end":10913432,"line_start":946,"line_end":946,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913437,"byte_end":10913440,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913445,"byte_end":10913484,"line_start":948,"line_end":948,"column_start":5,"column_end":44}},{"value":"/     permit.send(456);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913489,"byte_end":10913514,"line_start":949,"line_end":949,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913519,"byte_end":10913522,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913527,"byte_end":10913578,"line_start":951,"line_end":951,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913583,"byte_end":10913633,"line_start":952,"line_end":952,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913638,"byte_end":10913643,"line_start":953,"line_end":953,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913648,"byte_end":10913655,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7594},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915733,"byte_end":10915737,"line_start":1027,"line_end":1027,"column_start":12,"column_end":16},"name":"send","qualname":"<OwnedPermit<T>>::send","value":"pub fn send(Self, T) -> Sender<T>","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10914546,"byte_end":10914592,"line_start":993,"line_end":993,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10914597,"byte_end":10914600,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10914605,"byte_end":10914680,"line_start":995,"line_end":995,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10914685,"byte_end":10914759,"line_start":996,"line_end":996,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10914764,"byte_end":10914838,"line_start":997,"line_end":997,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10914843,"byte_end":10914891,"line_start":998,"line_end":998,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10914896,"byte_end":10914899,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Permit::send`], this method returns the [`Sender`] from which","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10914904,"byte_end":10914978,"line_start":1000,"line_end":1000,"column_start":5,"column_end":79}},{"value":"/ the `OwnedPermit` was reserved.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10914983,"byte_end":10915018,"line_start":1001,"line_end":1001,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915023,"byte_end":10915026,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915031,"byte_end":10915071,"line_start":1003,"line_end":1003,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915076,"byte_end":10915079,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915084,"byte_end":10915098,"line_start":1005,"line_end":1005,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915103,"byte_end":10915106,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915111,"byte_end":10915118,"line_start":1007,"line_end":1007,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915123,"byte_end":10915149,"line_start":1008,"line_end":1008,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915154,"byte_end":10915157,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915162,"byte_end":10915180,"line_start":1010,"line_end":1010,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915185,"byte_end":10915206,"line_start":1011,"line_end":1011,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915211,"byte_end":10915255,"line_start":1012,"line_end":1012,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915260,"byte_end":10915263,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915268,"byte_end":10915295,"line_start":1014,"line_end":1014,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve_owned().await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915300,"byte_end":10915355,"line_start":1015,"line_end":1015,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915360,"byte_end":10915363,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit, returning the sender.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915368,"byte_end":10915430,"line_start":1017,"line_end":1017,"column_start":5,"column_end":67}},{"value":"/     let tx = permit.send(456);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915435,"byte_end":10915469,"line_start":1018,"line_end":1018,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915474,"byte_end":10915477,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915482,"byte_end":10915533,"line_start":1020,"line_end":1020,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915538,"byte_end":10915588,"line_start":1021,"line_end":1021,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915593,"byte_end":10915596,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/     // We may now reuse `tx` to send another message.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915601,"byte_end":10915658,"line_start":1023,"line_end":1023,"column_start":5,"column_end":62}},{"value":"/     tx.send(789).await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915663,"byte_end":10915699,"line_start":1024,"line_end":1024,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915704,"byte_end":10915709,"line_start":1025,"line_end":1025,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915714,"byte_end":10915721,"line_start":1026,"line_end":1026,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7596},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916962,"byte_end":10916969,"line_start":1066,"line_end":1066,"column_start":12,"column_end":19},"name":"release","qualname":"<OwnedPermit<T>>::release","value":"pub fn release(Self) -> Sender<T>","parent":null,"children":[],"decl_id":null,"docs":" Release the reserved capacity *without* sending a message, returning the\n [`Sender`].","sig":null,"attributes":[{"value":"/ Release the reserved capacity *without* sending a message, returning the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10915990,"byte_end":10916066,"line_start":1036,"line_end":1036,"column_start":5,"column_end":81}},{"value":"/ [`Sender`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916071,"byte_end":10916086,"line_start":1037,"line_end":1037,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916091,"byte_end":10916094,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916099,"byte_end":10916113,"line_start":1039,"line_end":1039,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916118,"byte_end":10916121,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916126,"byte_end":10916133,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916138,"byte_end":10916164,"line_start":1042,"line_end":1042,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916169,"byte_end":10916172,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916177,"byte_end":10916195,"line_start":1044,"line_end":1044,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916200,"byte_end":10916221,"line_start":1045,"line_end":1045,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = mpsc::channel(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916226,"byte_end":10916266,"line_start":1046,"line_end":1046,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916271,"byte_end":10916274,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/     // Clone the sender and reserve capacity","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916279,"byte_end":10916327,"line_start":1048,"line_end":1048,"column_start":5,"column_end":53}},{"value":"/     let permit = tx.clone().reserve_owned().await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916332,"byte_end":10916395,"line_start":1049,"line_end":1049,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916400,"byte_end":10916403,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/     // Trying to send on the original `tx` will fail, since the `permit`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916408,"byte_end":10916484,"line_start":1051,"line_end":1051,"column_start":5,"column_end":81}},{"value":"/     // has reserved all the available capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916489,"byte_end":10916540,"line_start":1052,"line_end":1052,"column_start":5,"column_end":56}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916545,"byte_end":10916588,"line_start":1053,"line_end":1053,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916593,"byte_end":10916596,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/     // Release the permit without sending a message, returning the clone","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916601,"byte_end":10916677,"line_start":1055,"line_end":1055,"column_start":5,"column_end":81}},{"value":"/     // of the sender.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916682,"byte_end":10916707,"line_start":1056,"line_end":1056,"column_start":5,"column_end":30}},{"value":"/     let tx2 = permit.release();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916712,"byte_end":10916747,"line_start":1057,"line_end":1057,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916752,"byte_end":10916755,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/     // We may now reuse `tx` to send another message.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916760,"byte_end":10916817,"line_start":1059,"line_end":1059,"column_start":5,"column_end":62}},{"value":"/     tx.send(789).await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916822,"byte_end":10916858,"line_start":1060,"line_end":1060,"column_start":5,"column_end":41}},{"value":"/     # drop(rx); drop(tx2);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916863,"byte_end":10916893,"line_start":1061,"line_end":1061,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916898,"byte_end":10916903,"line_start":1062,"line_end":1062,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916908,"byte_end":10916915,"line_start":1063,"line_end":1063,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916920,"byte_end":10916923,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10916928,"byte_end":10916950,"line_start":1065,"line_end":1065,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7882},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10939100,"byte_end":10939115,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":7884}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10938942,"byte_end":10938996,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10938997,"byte_end":10939000,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10939001,"byte_end":10939033,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10939034,"byte_end":10939088,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":7891},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10939908,"byte_end":10939925,"line_start":40,"line_end":40,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":7893}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10939532,"byte_end":10939589,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10939590,"byte_end":10939593,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10939594,"byte_end":10939626,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10939627,"byte_end":10939681,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10939682,"byte_end":10939685,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`UnboundedReceiverStream`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10939686,"byte_end":10939768,"line_start":37,"line_end":37,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10939769,"byte_end":10939772,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`UnboundedReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.UnboundedReceiverStream.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10939773,"byte_end":10939896,"line_start":39,"line_end":39,"column_start":1,"column_end":124}}]},{"kind":"Function","id":{"krate":0,"index":7897},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10940757,"byte_end":10940774,"line_start":63,"line_end":63,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks without backpressure.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10940224,"byte_end":10940300,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ tasks without backpressure.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10940301,"byte_end":10940332,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10940333,"byte_end":10940336,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10940337,"byte_end":10940417,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10940418,"byte_end":10940497,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10940498,"byte_end":10940511,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10940512,"byte_end":10940515,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10940516,"byte_end":10940595,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10940596,"byte_end":10940672,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10940673,"byte_end":10940749,"line_start":62,"line_end":62,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7903},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942253,"byte_end":10942257,"line_start":119,"line_end":119,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941183,"byte_end":10941229,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941234,"byte_end":10941237,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941242,"byte_end":10941314,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941319,"byte_end":10941373,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941378,"byte_end":10941381,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941386,"byte_end":10941400,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941405,"byte_end":10941408,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941413,"byte_end":10941420,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941425,"byte_end":10941451,"line_start":88,"line_end":88,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941456,"byte_end":10941459,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941464,"byte_end":10941482,"line_start":90,"line_end":90,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941487,"byte_end":10941508,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941513,"byte_end":10941566,"line_start":92,"line_end":92,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941571,"byte_end":10941574,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941579,"byte_end":10941612,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941617,"byte_end":10941655,"line_start":95,"line_end":95,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941660,"byte_end":10941671,"line_start":96,"line_end":96,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941676,"byte_end":10941679,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941684,"byte_end":10941735,"line_start":98,"line_end":98,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941740,"byte_end":10941782,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941787,"byte_end":10941792,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941797,"byte_end":10941804,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941809,"byte_end":10941812,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941817,"byte_end":10941841,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941846,"byte_end":10941849,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941854,"byte_end":10941861,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941866,"byte_end":10941892,"line_start":106,"line_end":106,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941897,"byte_end":10941900,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941905,"byte_end":10941923,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941928,"byte_end":10941949,"line_start":109,"line_end":109,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941954,"byte_end":10942007,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942012,"byte_end":10942015,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942020,"byte_end":10942054,"line_start":112,"line_end":112,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942059,"byte_end":10942093,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942098,"byte_end":10942101,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942106,"byte_end":10942157,"line_start":115,"line_end":115,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942162,"byte_end":10942213,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942218,"byte_end":10942223,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942228,"byte_end":10942235,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7910},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943064,"byte_end":10943077,"line_start":151,"line_end":151,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<UnboundedReceiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942379,"byte_end":10942441,"line_start":125,"line_end":125,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942446,"byte_end":10942449,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942454,"byte_end":10942466,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942471,"byte_end":10942474,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942479,"byte_end":10942546,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942551,"byte_end":10942563,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942568,"byte_end":10942571,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942576,"byte_end":10942590,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942595,"byte_end":10942598,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942603,"byte_end":10942610,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942615,"byte_end":10942635,"line_start":135,"line_end":135,"column_start":5,"column_end":25}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942640,"byte_end":10942666,"line_start":136,"line_end":136,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942671,"byte_end":10942674,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942679,"byte_end":10942697,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942702,"byte_end":10942723,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel::<u8>();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942728,"byte_end":10942787,"line_start":140,"line_end":140,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942792,"byte_end":10942795,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942800,"byte_end":10942847,"line_start":142,"line_end":142,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942852,"byte_end":10942905,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942910,"byte_end":10942921,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942926,"byte_end":10942929,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     let _ = tx.send(10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942934,"byte_end":10942962,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/     sync_code.join().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10942967,"byte_end":10943001,"line_start":147,"line_end":147,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943006,"byte_end":10943011,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943016,"byte_end":10943023,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943028,"byte_end":10943052,"line_start":150,"line_end":150,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":7911},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943397,"byte_end":10943402,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943160,"byte_end":10943224,"line_start":155,"line_end":155,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943229,"byte_end":10943232,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943237,"byte_end":10943312,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943317,"byte_end":10943385,"line_start":158,"line_end":158,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":7912},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10944243,"byte_end":10944252,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943454,"byte_end":10943508,"line_start":163,"line_end":163,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943513,"byte_end":10943516,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943521,"byte_end":10943545,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943550,"byte_end":10943553,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943558,"byte_end":10943632,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943637,"byte_end":10943651,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943656,"byte_end":10943718,"line_start":169,"line_end":169,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943723,"byte_end":10943797,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943802,"byte_end":10943854,"line_start":171,"line_end":171,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943859,"byte_end":10943862,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943867,"byte_end":10943939,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10943944,"byte_end":10944020,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10944025,"byte_end":10944101,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10944106,"byte_end":10944177,"line_start":176,"line_end":176,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10944182,"byte_end":10944231,"line_start":177,"line_end":177,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7916},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10945180,"byte_end":10945184,"line_start":200,"line_end":200,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10944492,"byte_end":10944566,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10944571,"byte_end":10944574,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10944579,"byte_end":10944664,"line_start":190,"line_end":190,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10944669,"byte_end":10944750,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10944755,"byte_end":10944823,"line_start":192,"line_end":192,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10944828,"byte_end":10944831,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10944836,"byte_end":10944909,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10944914,"byte_end":10944985,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10944990,"byte_end":10945067,"line_start":196,"line_end":196,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10945072,"byte_end":10945075,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10945080,"byte_end":10945119,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10945124,"byte_end":10945168,"line_start":199,"line_end":199,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7928},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947113,"byte_end":10947119,"line_start":270,"line_end":270,"column_start":18,"column_end":24},"name":"closed","qualname":"<UnboundedSender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946222,"byte_end":10946266,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946271,"byte_end":10946274,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946279,"byte_end":10946354,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946359,"byte_end":10946414,"line_start":242,"line_end":242,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946419,"byte_end":10946422,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946427,"byte_end":10946441,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946446,"byte_end":10946449,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946454,"byte_end":10946461,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946466,"byte_end":10946492,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946497,"byte_end":10946500,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946505,"byte_end":10946523,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946528,"byte_end":10946549,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::unbounded_channel::<()>();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946554,"byte_end":10946610,"line_start":251,"line_end":251,"column_start":5,"column_end":61}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946615,"byte_end":10946645,"line_start":252,"line_end":252,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946650,"byte_end":10946680,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946685,"byte_end":10946715,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946720,"byte_end":10946750,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946755,"byte_end":10946788,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946793,"byte_end":10946814,"line_start":257,"line_end":257,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946819,"byte_end":10946830,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946835,"byte_end":10946838,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946843,"byte_end":10946866,"line_start":260,"line_end":260,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946871,"byte_end":10946896,"line_start":261,"line_end":261,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946901,"byte_end":10946926,"line_start":262,"line_end":262,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946931,"byte_end":10946956,"line_start":263,"line_end":263,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946961,"byte_end":10946986,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10946991,"byte_end":10947015,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947020,"byte_end":10947030,"line_start":266,"line_end":266,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947078,"byte_end":10947083,"line_start":268,"line_end":268,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947088,"byte_end":10947095,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7931},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947816,"byte_end":10947825,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`UnboundedReceiver`] is dropped, or when the\n [`UnboundedReceiver::close`] method is called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947172,"byte_end":10947236,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/ [`UnboundedReceiver`] is dropped, or when the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947241,"byte_end":10947290,"line_start":274,"line_end":274,"column_start":5,"column_end":54}},{"value":"/ [`UnboundedReceiver::close`] method is called.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947295,"byte_end":10947345,"line_start":275,"line_end":275,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947350,"byte_end":10947353,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947358,"byte_end":10947421,"line_start":277,"line_end":277,"column_start":5,"column_end":68}},{"value":"/ [`UnboundedReceiver::close`]: crate::sync::mpsc::UnboundedReceiver::close","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947426,"byte_end":10947503,"line_start":278,"line_end":278,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947508,"byte_end":10947511,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947516,"byte_end":10947523,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947528,"byte_end":10947592,"line_start":281,"line_end":281,"column_start":5,"column_end":69}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947597,"byte_end":10947626,"line_start":282,"line_end":282,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947631,"byte_end":10947634,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947639,"byte_end":10947664,"line_start":284,"line_end":284,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947669,"byte_end":10947699,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947704,"byte_end":10947707,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947712,"byte_end":10947725,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947730,"byte_end":10947758,"line_start":288,"line_end":288,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947763,"byte_end":10947792,"line_start":289,"line_end":289,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947797,"byte_end":10947804,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7932},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10948273,"byte_end":10948285,"line_start":307,"line_end":307,"column_start":12,"column_end":24},"name":"same_channel","qualname":"<UnboundedSender<T>>::same_channel","value":"pub fn same_channel(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if senders belong to the same channel.","sig":null,"attributes":[{"value":"/ Returns `true` if senders belong to the same channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947884,"byte_end":10947941,"line_start":295,"line_end":295,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947946,"byte_end":10947949,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947954,"byte_end":10947968,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947973,"byte_end":10947976,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947981,"byte_end":10947988,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10947993,"byte_end":10948057,"line_start":300,"line_end":300,"column_start":5,"column_end":69}},{"value":"/ let  tx2 = tx.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10948062,"byte_end":10948088,"line_start":301,"line_end":301,"column_start":5,"column_end":31}},{"value":"/ assert!(tx.same_channel(&tx2));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10948093,"byte_end":10948128,"line_start":302,"line_end":302,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10948133,"byte_end":10948136,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let (tx3, rx3) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10948141,"byte_end":10948207,"line_start":304,"line_end":304,"column_start":5,"column_end":71}},{"value":"/ assert!(!tx3.same_channel(&tx2));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10948212,"byte_end":10948249,"line_start":305,"line_end":305,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10948254,"byte_end":10948261,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":7943},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","parent":null,"children":[{"krate":0,"index":7944},{"krate":0,"index":7947},{"krate":0,"index":9334},{"krate":0,"index":9338},{"krate":0,"index":7950},{"krate":0,"index":7953},{"krate":0,"index":9341},{"krate":0,"index":9349},{"krate":0,"index":7955},{"krate":0,"index":7957},{"krate":0,"index":7960},{"krate":0,"index":9352},{"krate":0,"index":9355},{"krate":0,"index":7963},{"krate":0,"index":7965},{"krate":0,"index":9362},{"krate":0,"index":9370},{"krate":0,"index":9357},{"krate":0,"index":9359}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"/ Channel error types","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10948370,"byte_end":10948393,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":9334},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10948497,"byte_end":10948506,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10948433,"byte_end":10948468,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":9337},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10948510,"byte_end":10948515,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":9334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9343},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10949059,"byte_end":10949063,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":9341},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10948927,"byte_end":10948995,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10949000,"byte_end":10949054,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9346},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10949164,"byte_end":10949170,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":9341},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10949073,"byte_end":10949142,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10949147,"byte_end":10949159,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":9341},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10948905,"byte_end":10948917,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> { Full(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":9343},{"krate":0,"index":9346}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10948759,"byte_end":10948830,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10948831,"byte_end":10948878,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":9352},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10949899,"byte_end":10949908,"line_start":60,"line_end":60,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10949746,"byte_end":10949779,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"deprecated(note = \"This type is unused because recv returns an Option.\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10949812,"byte_end":10949887,"line_start":59,"line_end":59,"column_start":1,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9364},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10950459,"byte_end":10950466,"line_start":80,"line_end":80,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":9362},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9367},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10950579,"byte_end":10950585,"line_start":84,"line_end":84,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":9362},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9362},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10950297,"byte_end":10950313,"line_start":77,"line_end":77,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> { Timeout(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":9364},{"krate":0,"index":9367}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":25124,"byte_end":25148,"line_start":320,"line_end":320,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":7997},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10955996,"byte_end":10956001,"line_start":126,"line_end":126,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":7999},{"krate":0,"index":8000}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10951333,"byte_end":10951371,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10951372,"byte_end":10951375,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to [`std::sync::Mutex`], with two major","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10951376,"byte_end":10951444,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ differences: [`lock`] is an async method so does not block, and the lock","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10951445,"byte_end":10951521,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ guard is designed to be held across `.await` points.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10951522,"byte_end":10951578,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10951579,"byte_end":10951582,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10951583,"byte_end":10951624,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10951625,"byte_end":10951628,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10951629,"byte_end":10951709,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10951710,"byte_end":10951776,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10951777,"byte_end":10951780,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The feature that the async mutex offers over the blocking mutex is the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10951781,"byte_end":10951855,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ ability to keep it locked across an `.await` point. This makes the async","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10951856,"byte_end":10951932,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ mutex more expensive than the blocking mutex, so the blocking mutex should","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10951933,"byte_end":10952011,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ be preferred in the cases where it can be used. The primary use case for the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10952012,"byte_end":10952092,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ async mutex is to provide shared mutable access to IO resources such as a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10952093,"byte_end":10952170,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ database connection. If the value behind the mutex is just data, it's","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10952171,"byte_end":10952244,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ usually appropriate to use a blocking mutex such as the one in the standard","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10952245,"byte_end":10952324,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ library or [`parking_lot`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10952325,"byte_end":10952356,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10952357,"byte_end":10952360,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that, although the compiler will not prevent the std `Mutex` from holding","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10952361,"byte_end":10952443,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/ its guard across `.await` points in situations where the task is not movable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10952444,"byte_end":10952524,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ between threads, this virtually never leads to correct concurrent code in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10952525,"byte_end":10952602,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ practice as it can easily lead to deadlocks.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10952603,"byte_end":10952651,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10952652,"byte_end":10952655,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10952656,"byte_end":10952735,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10952736,"byte_end":10952812,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10952813,"byte_end":10952890,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10952891,"byte_end":10952924,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10952925,"byte_end":10952928,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10952929,"byte_end":10953004,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953005,"byte_end":10953083,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953084,"byte_end":10953126,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953127,"byte_end":10953130,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953131,"byte_end":10953158,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953159,"byte_end":10953207,"line_start":46,"line_end":46,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953208,"byte_end":10953286,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953287,"byte_end":10953290,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953291,"byte_end":10953306,"line_start":49,"line_end":49,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953307,"byte_end":10953310,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953311,"byte_end":10953329,"line_start":51,"line_end":51,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953330,"byte_end":10953357,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953358,"byte_end":10953381,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953382,"byte_end":10953385,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953386,"byte_end":10953404,"line_start":55,"line_end":55,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953405,"byte_end":10953426,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953427,"byte_end":10953471,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953472,"byte_end":10953511,"line_start":58,"line_end":58,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953512,"byte_end":10953515,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953516,"byte_end":10953549,"line_start":60,"line_end":60,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953550,"byte_end":10953596,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953597,"byte_end":10953620,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953621,"byte_end":10953632,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953633,"byte_end":10953636,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953637,"byte_end":10953679,"line_start":65,"line_end":65,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953680,"byte_end":10953699,"line_start":66,"line_end":66,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953700,"byte_end":10953705,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953706,"byte_end":10953713,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953714,"byte_end":10953717,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953718,"byte_end":10953721,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953722,"byte_end":10953740,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953741,"byte_end":10953768,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953769,"byte_end":10953792,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953793,"byte_end":10953796,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953797,"byte_end":10953815,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953816,"byte_end":10953837,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953838,"byte_end":10953882,"line_start":77,"line_end":77,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953883,"byte_end":10953886,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     for i in 0..5 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953887,"byte_end":10953910,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953911,"byte_end":10953957,"line_start":80,"line_end":80,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953958,"byte_end":10953995,"line_start":81,"line_end":81,"column_start":1,"column_end":38}},{"value":"/             for j in 0..10 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10953996,"byte_end":10954028,"line_start":82,"line_end":82,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954029,"byte_end":10954086,"line_start":83,"line_end":83,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954087,"byte_end":10954118,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{} {} {}\", i, j, lock);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954119,"byte_end":10954172,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954173,"byte_end":10954190,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954191,"byte_end":10954206,"line_start":87,"line_end":87,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954207,"byte_end":10954216,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954217,"byte_end":10954220,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954221,"byte_end":10954235,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954236,"byte_end":10954278,"line_start":91,"line_end":91,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954279,"byte_end":10954301,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954302,"byte_end":10954315,"line_start":93,"line_end":93,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954316,"byte_end":10954325,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954326,"byte_end":10954360,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954361,"byte_end":10954366,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954367,"byte_end":10954374,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954375,"byte_end":10954451,"line_start":98,"line_end":98,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954452,"byte_end":10954525,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954526,"byte_end":10954541,"line_start":100,"line_end":100,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954542,"byte_end":10954617,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954618,"byte_end":10954694,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954695,"byte_end":10954747,"line_start":103,"line_end":103,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954748,"byte_end":10954751,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954752,"byte_end":10954830,"line_start":105,"line_end":105,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954831,"byte_end":10954911,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954912,"byte_end":10954988,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ data. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10954989,"byte_end":10955069,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10955070,"byte_end":10955150,"line_start":109,"line_end":109,"column_start":1,"column_end":81}},{"value":"/ Note that there's some unpredictability to the timing between when the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10955151,"byte_end":10955225,"line_start":110,"line_end":110,"column_start":1,"column_end":75}},{"value":"/ threads are started, but once they are going they alternate predictably.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10955226,"byte_end":10955302,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10955303,"byte_end":10955383,"line_start":112,"line_end":112,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10955384,"byte_end":10955453,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10955454,"byte_end":10955457,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10955458,"byte_end":10955537,"line_start":115,"line_end":115,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10955538,"byte_end":10955617,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10955618,"byte_end":10955696,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10955697,"byte_end":10955758,"line_start":118,"line_end":118,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10955759,"byte_end":10955762,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10955763,"byte_end":10955790,"line_start":120,"line_end":120,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10955791,"byte_end":10955828,"line_start":121,"line_end":121,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10955829,"byte_end":10955863,"line_start":122,"line_end":122,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10955864,"byte_end":10955913,"line_start":123,"line_end":123,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10955914,"byte_end":10955951,"line_start":124,"line_end":124,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10955952,"byte_end":10955984,"line_start":125,"line_end":125,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":8001},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10956501,"byte_end":10956511,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":8004}],"decl_id":null,"docs":" A handle to a held `Mutex`. The guard can be held across any `.await` point\n as it is [`Send`].","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`. The guard can be held across any `.await` point","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10956069,"byte_end":10956148,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ as it is [`Send`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10956149,"byte_end":10956171,"line_start":132,"line_end":132,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10956172,"byte_end":10956175,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10956176,"byte_end":10956255,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10956256,"byte_end":10956331,"line_start":135,"line_end":135,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10956332,"byte_end":10956365,"line_start":136,"line_end":136,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10956366,"byte_end":10956369,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10956370,"byte_end":10956448,"line_start":138,"line_end":138,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10956449,"byte_end":10956489,"line_start":139,"line_end":139,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":8005},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10957299,"byte_end":10957314,"line_start":159,"line_end":159,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":8007}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10956556,"byte_end":10956594,"line_start":144,"line_end":144,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10956595,"byte_end":10956598,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10956599,"byte_end":10956680,"line_start":146,"line_end":146,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10956681,"byte_end":10956761,"line_start":147,"line_end":147,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10956762,"byte_end":10956836,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10956837,"byte_end":10956898,"line_start":149,"line_end":149,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10956899,"byte_end":10956902,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10956903,"byte_end":10956982,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-counted pointer to the original","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10956983,"byte_end":10957062,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10957063,"byte_end":10957131,"line_start":153,"line_end":153,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10957132,"byte_end":10957135,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10957136,"byte_end":10957214,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10957215,"byte_end":10957255,"line_start":156,"line_end":156,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10957256,"byte_end":10957259,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10957260,"byte_end":10957287,"line_start":158,"line_end":158,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":8008},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10957640,"byte_end":10957656,"line_start":169,"line_end":169,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::sync::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":8011},{"krate":0,"index":8012},{"krate":0,"index":8013}],"decl_id":null,"docs":" A handle to a held `Mutex` that has had a function applied to it via [`MutexGuard::map`].","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex` that has had a function applied to it via [`MutexGuard::map`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10957356,"byte_end":10957449,"line_start":163,"line_end":163,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10957450,"byte_end":10957453,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ This can be used to hold a subfield of the protected data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10957454,"byte_end":10957516,"line_start":165,"line_end":165,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10957517,"byte_end":10957520,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ [`MutexGuard::map`]: method@MutexGuard::map","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10957521,"byte_end":10957568,"line_start":167,"line_end":167,"column_start":1,"column_end":48}},{"value":"must_use = \"if unused the Mutex will immediately unlock\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10957569,"byte_end":10957628,"line_start":168,"line_end":168,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":9373},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10959057,"byte_end":10959069,"line_start":201,"line_end":201,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and\n [`RwLock::try_write`] functions.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958468,"byte_end":10958541,"line_start":186,"line_end":186,"column_start":1,"column_end":74}},{"value":"/ [`RwLock::try_write`] functions.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958542,"byte_end":10958578,"line_start":187,"line_end":187,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958579,"byte_end":10958582,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ `Mutex::try_lock` operation will only fail if the mutex is already locked.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958583,"byte_end":10958661,"line_start":189,"line_end":189,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958662,"byte_end":10958665,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_read` operation will only fail if the lock is currently held","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958666,"byte_end":10958743,"line_start":191,"line_end":191,"column_start":1,"column_end":78}},{"value":"/ by an exclusive writer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958744,"byte_end":10958771,"line_start":192,"line_end":192,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958772,"byte_end":10958775,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_write` operation will if lock is held by any reader or by an","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958776,"byte_end":10958853,"line_start":194,"line_end":194,"column_start":1,"column_end":78}},{"value":"/ exclusive writer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958854,"byte_end":10958875,"line_start":195,"line_end":195,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958876,"byte_end":10958879,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958880,"byte_end":10958920,"line_start":197,"line_end":197,"column_start":1,"column_end":41}},{"value":"/ [`RwLock::try_read`]: fn@super::RwLock::try_read","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958921,"byte_end":10958973,"line_start":198,"line_end":198,"column_start":1,"column_end":53}},{"value":"/ [`RwLock::try_write`]: fn@super::RwLock::try_write","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958974,"byte_end":10959028,"line_start":199,"line_end":199,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":8033},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10960296,"byte_end":10960299,"line_start":245,"line_end":245,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10960093,"byte_end":10960151,"line_start":236,"line_end":236,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10960156,"byte_end":10960159,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10960164,"byte_end":10960178,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10960183,"byte_end":10960186,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10960191,"byte_end":10960198,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10960203,"byte_end":10960230,"line_start":241,"line_end":241,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10960235,"byte_end":10960238,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10960243,"byte_end":10960272,"line_start":243,"line_end":243,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10960277,"byte_end":10960284,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8034},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961457,"byte_end":10961461,"line_start":293,"line_end":293,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10960997,"byte_end":10961043,"line_start":276,"line_end":276,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961048,"byte_end":10961094,"line_start":277,"line_end":277,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961099,"byte_end":10961170,"line_start":278,"line_end":278,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961175,"byte_end":10961178,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961183,"byte_end":10961197,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961202,"byte_end":10961205,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961210,"byte_end":10961217,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961222,"byte_end":10961249,"line_start":283,"line_end":283,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961254,"byte_end":10961257,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961262,"byte_end":10961280,"line_start":285,"line_end":285,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961285,"byte_end":10961306,"line_start":286,"line_end":286,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961311,"byte_end":10961345,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961350,"byte_end":10961353,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961358,"byte_end":10961397,"line_start":289,"line_end":289,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961402,"byte_end":10961417,"line_start":290,"line_end":290,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961422,"byte_end":10961427,"line_start":291,"line_end":291,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961432,"byte_end":10961439,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8037},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962488,"byte_end":10962498,"line_start":324,"line_end":324,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961567,"byte_end":10961641,"line_start":298,"line_end":298,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961646,"byte_end":10961713,"line_start":299,"line_end":299,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961718,"byte_end":10961742,"line_start":300,"line_end":300,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961747,"byte_end":10961750,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961755,"byte_end":10961828,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961833,"byte_end":10961906,"line_start":303,"line_end":303,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961911,"byte_end":10961982,"line_start":304,"line_end":304,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10961987,"byte_end":10962062,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962067,"byte_end":10962109,"line_start":306,"line_end":306,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962114,"byte_end":10962117,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962122,"byte_end":10962136,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962141,"byte_end":10962144,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962149,"byte_end":10962156,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962161,"byte_end":10962188,"line_start":311,"line_end":311,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962193,"byte_end":10962216,"line_start":312,"line_end":312,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962221,"byte_end":10962224,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962229,"byte_end":10962247,"line_start":314,"line_end":314,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962252,"byte_end":10962273,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962278,"byte_end":10962322,"line_start":316,"line_end":316,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962327,"byte_end":10962330,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962335,"byte_end":10962388,"line_start":318,"line_end":318,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962393,"byte_end":10962408,"line_start":319,"line_end":319,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962413,"byte_end":10962418,"line_start":320,"line_end":320,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962423,"byte_end":10962430,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962435,"byte_end":10962438,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962443,"byte_end":10962470,"line_start":323,"line_end":323,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8044},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963375,"byte_end":10963383,"line_start":354,"line_end":354,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962907,"byte_end":10962976,"line_start":337,"line_end":337,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10962981,"byte_end":10963023,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963028,"byte_end":10963031,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963036,"byte_end":10963070,"line_start":340,"line_end":340,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963075,"byte_end":10963089,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963094,"byte_end":10963097,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963102,"byte_end":10963109,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963114,"byte_end":10963141,"line_start":344,"line_end":344,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963146,"byte_end":10963209,"line_start":345,"line_end":345,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963214,"byte_end":10963217,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963222,"byte_end":10963252,"line_start":347,"line_end":347,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963257,"byte_end":10963260,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963265,"byte_end":10963295,"line_start":349,"line_end":349,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963300,"byte_end":10963322,"line_start":350,"line_end":350,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963327,"byte_end":10963339,"line_start":351,"line_end":351,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963344,"byte_end":10963351,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963356,"byte_end":10963363,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8045},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964063,"byte_end":10964070,"line_start":378,"line_end":378,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963592,"byte_end":10963647,"line_start":361,"line_end":361,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963652,"byte_end":10963655,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963660,"byte_end":10963735,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963740,"byte_end":10963814,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963819,"byte_end":10963822,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963827,"byte_end":10963841,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963846,"byte_end":10963849,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963854,"byte_end":10963861,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963866,"byte_end":10963893,"line_start":369,"line_end":369,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963898,"byte_end":10963901,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963906,"byte_end":10963921,"line_start":371,"line_end":371,"column_start":5,"column_end":20}},{"value":"/     let mut mutex = Mutex::new(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963926,"byte_end":10963964,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963969,"byte_end":10963972,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.get_mut();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10963977,"byte_end":10964009,"line_start":374,"line_end":374,"column_start":5,"column_end":37}},{"value":"/     *n = 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964014,"byte_end":10964029,"line_start":375,"line_end":375,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964034,"byte_end":10964039,"line_start":376,"line_end":376,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964044,"byte_end":10964051,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8046},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965151,"byte_end":10965165,"line_start":409,"line_end":409,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964239,"byte_end":10964313,"line_start":385,"line_end":385,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964318,"byte_end":10964355,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964360,"byte_end":10964363,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964368,"byte_end":10964436,"line_start":388,"line_end":388,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964441,"byte_end":10964514,"line_start":389,"line_end":389,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964519,"byte_end":10964595,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964600,"byte_end":10964674,"line_start":391,"line_end":391,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964679,"byte_end":10964727,"line_start":392,"line_end":392,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964732,"byte_end":10964735,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964740,"byte_end":10964774,"line_start":394,"line_end":394,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964779,"byte_end":10964806,"line_start":395,"line_end":395,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964811,"byte_end":10964825,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964830,"byte_end":10964833,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964838,"byte_end":10964845,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964850,"byte_end":10964877,"line_start":399,"line_end":399,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964882,"byte_end":10964905,"line_start":400,"line_end":400,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964910,"byte_end":10964973,"line_start":401,"line_end":401,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964978,"byte_end":10964981,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10964986,"byte_end":10965026,"line_start":403,"line_end":403,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965031,"byte_end":10965034,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965039,"byte_end":10965083,"line_start":405,"line_end":405,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965088,"byte_end":10965110,"line_start":406,"line_end":406,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965115,"byte_end":10965127,"line_start":407,"line_end":407,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965132,"byte_end":10965139,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8047},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965723,"byte_end":10965733,"line_start":430,"line_end":430,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965390,"byte_end":10965444,"line_start":416,"line_end":416,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965449,"byte_end":10965463,"line_start":417,"line_end":417,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965468,"byte_end":10965471,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965476,"byte_end":10965483,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965488,"byte_end":10965515,"line_start":420,"line_end":420,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965520,"byte_end":10965523,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965528,"byte_end":10965546,"line_start":422,"line_end":422,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965551,"byte_end":10965572,"line_start":423,"line_end":423,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965577,"byte_end":10965611,"line_start":424,"line_end":424,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965616,"byte_end":10965619,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965624,"byte_end":10965659,"line_start":426,"line_end":426,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965664,"byte_end":10965689,"line_start":427,"line_end":427,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965694,"byte_end":10965699,"line_start":428,"line_end":428,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965704,"byte_end":10965711,"line_start":429,"line_end":429,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8060},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967459,"byte_end":10967462,"line_start":501,"line_end":501,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T) ->\n&mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`MappedMutexGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new [`MappedMutexGuard`] for a component of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10966473,"byte_end":10966545,"line_start":470,"line_end":470,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10966550,"byte_end":10966553,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MutexGuard`] passed in already locked the mutex.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10966558,"byte_end":10966646,"line_start":472,"line_end":472,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10966651,"byte_end":10966654,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MutexGuard::map(...)`. A method","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10966659,"byte_end":10966751,"line_start":474,"line_end":474,"column_start":5,"column_end":97}},{"value":"/ would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10966756,"byte_end":10966841,"line_start":475,"line_end":475,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10966846,"byte_end":10966849,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10966854,"byte_end":10966868,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10966873,"byte_end":10966876,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10966881,"byte_end":10966888,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Mutex, MutexGuard};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10966893,"byte_end":10966934,"line_start":480,"line_end":480,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10966939,"byte_end":10966942,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10966947,"byte_end":10966995,"line_start":482,"line_end":482,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967000,"byte_end":10967020,"line_start":483,"line_end":483,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967025,"byte_end":10967028,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967033,"byte_end":10967053,"line_start":485,"line_end":485,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967058,"byte_end":10967081,"line_start":486,"line_end":486,"column_start":5,"column_end":28}},{"value":"/ let foo = Mutex::new(Foo(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967086,"byte_end":10967119,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967124,"byte_end":10967127,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967132,"byte_end":10967137,"line_start":489,"line_end":489,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = MutexGuard::map(foo.lock().await, |f| &mut f.0);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967142,"byte_end":10967215,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/     *mapped = 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967220,"byte_end":10967240,"line_start":491,"line_end":491,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967245,"byte_end":10967250,"line_start":492,"line_end":492,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967255,"byte_end":10967258,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *foo.lock().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967263,"byte_end":10967305,"line_start":494,"line_end":494,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967310,"byte_end":10967317,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967322,"byte_end":10967329,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967334,"byte_end":10967337,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967342,"byte_end":10967379,"line_start":498,"line_end":498,"column_start":5,"column_end":42}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967384,"byte_end":10967433,"line_start":499,"line_end":499,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967438,"byte_end":10967447,"line_start":500,"line_end":500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8063},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968918,"byte_end":10968925,"line_start":548,"line_end":548,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MutexGuard>::try_map","value":"pub fn try_map<U, F>(Self, F) -> Result<MappedMutexGuard, Self> where\nF: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The\n original guard is returned if the closure returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967794,"byte_end":10967881,"line_start":515,"line_end":515,"column_start":5,"column_end":92}},{"value":"/ original guard is returned if the closure returns `None`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967886,"byte_end":10967947,"line_start":516,"line_end":516,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967952,"byte_end":10967955,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MutexGuard`] passed in already locked the mutex.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10967960,"byte_end":10968048,"line_start":518,"line_end":518,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968053,"byte_end":10968056,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MutexGuard::try_map(...)`. A","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968061,"byte_end":10968150,"line_start":520,"line_end":520,"column_start":5,"column_end":94}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968155,"byte_end":10968247,"line_start":521,"line_end":521,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968252,"byte_end":10968255,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968260,"byte_end":10968274,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968279,"byte_end":10968282,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968287,"byte_end":10968294,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Mutex, MutexGuard};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968299,"byte_end":10968340,"line_start":526,"line_end":526,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968345,"byte_end":10968348,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968353,"byte_end":10968401,"line_start":528,"line_end":528,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968406,"byte_end":10968426,"line_start":529,"line_end":529,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968431,"byte_end":10968434,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968439,"byte_end":10968459,"line_start":531,"line_end":531,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968464,"byte_end":10968487,"line_start":532,"line_end":532,"column_start":5,"column_end":28}},{"value":"/ let foo = Mutex::new(Foo(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968492,"byte_end":10968525,"line_start":533,"line_end":533,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968530,"byte_end":10968533,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968538,"byte_end":10968543,"line_start":535,"line_end":535,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = MutexGuard::try_map(foo.lock().await, |f| Some(&mut f.0))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968548,"byte_end":10968630,"line_start":536,"line_end":536,"column_start":5,"column_end":87}},{"value":"/         .expect(\"should not fail\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968635,"byte_end":10968674,"line_start":537,"line_end":537,"column_start":5,"column_end":44}},{"value":"/     *mapped = 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968679,"byte_end":10968699,"line_start":538,"line_end":538,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968704,"byte_end":10968709,"line_start":539,"line_end":539,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968714,"byte_end":10968717,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *foo.lock().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968722,"byte_end":10968764,"line_start":541,"line_end":541,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968769,"byte_end":10968776,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968781,"byte_end":10968788,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968793,"byte_end":10968796,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968801,"byte_end":10968838,"line_start":545,"line_end":545,"column_start":5,"column_end":42}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968843,"byte_end":10968892,"line_start":546,"line_end":546,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10968897,"byte_end":10968906,"line_start":547,"line_end":547,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8101},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10971491,"byte_end":10971494,"line_start":642,"line_end":642,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<U, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T) ->\n&mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`MappedMutexGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new [`MappedMutexGuard`] for a component of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10971023,"byte_end":10971095,"line_start":633,"line_end":633,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10971100,"byte_end":10971103,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MappedMutexGuard`] passed in already locked the mutex.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10971108,"byte_end":10971202,"line_start":635,"line_end":635,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10971207,"byte_end":10971210,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MappedMutexGuard::map(...)`. A","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10971215,"byte_end":10971306,"line_start":637,"line_end":637,"column_start":5,"column_end":96}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10971311,"byte_end":10971403,"line_start":638,"line_end":638,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10971408,"byte_end":10971411,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10971416,"byte_end":10971465,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10971470,"byte_end":10971479,"line_start":641,"line_end":641,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8104},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10972373,"byte_end":10972380,"line_start":666,"line_end":666,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MappedMutexGuard>::try_map","value":"pub fn try_map<U, F>(Self, F) -> Result<MappedMutexGuard, Self> where\nF: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The\n original guard is returned if the closure returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10971820,"byte_end":10971907,"line_start":656,"line_end":656,"column_start":5,"column_end":92}},{"value":"/ original guard is returned if the closure returns `None`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10971912,"byte_end":10971973,"line_start":657,"line_end":657,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10971978,"byte_end":10971981,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MappedMutexGuard`] passed in already locked the mutex.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10971986,"byte_end":10972080,"line_start":659,"line_end":659,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10972085,"byte_end":10972088,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MappedMutexGuard::try_map(...)`. A","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10972093,"byte_end":10972188,"line_start":661,"line_end":661,"column_start":5,"column_end":100}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10972193,"byte_end":10972285,"line_start":662,"line_end":662,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10972290,"byte_end":10972293,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10972298,"byte_end":10972347,"line_start":664,"line_end":664,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10972352,"byte_end":10972361,"line_start":665,"line_end":665,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":9378},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10977251,"byte_end":10977257,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":9379},{"krate":0,"index":9380}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10974408,"byte_end":10974444,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10974445,"byte_end":10974448,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10974449,"byte_end":10974525,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10974526,"byte_end":10974606,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10974607,"byte_end":10974648,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10974649,"byte_end":10974652,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10974653,"byte_end":10974727,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify_one()`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10974728,"byte_end":10974813,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10974814,"byte_end":10974880,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10974881,"byte_end":10974884,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10974885,"byte_end":10974943,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10974944,"byte_end":10975024,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975025,"byte_end":10975105,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify_one()`] sets the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975106,"byte_end":10975189,"line_start":35,"line_end":35,"column_start":1,"column_end":84}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975190,"byte_end":10975240,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975241,"byte_end":10975244,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **before** `notified().await`, then the next call to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975245,"byte_end":10975329,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975330,"byte_end":10975405,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975406,"byte_end":10975476,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975477,"byte_end":10975480,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975481,"byte_end":10975565,"line_start":42,"line_end":42,"column_start":1,"column_end":85}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975566,"byte_end":10975639,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975640,"byte_end":10975711,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975712,"byte_end":10975715,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975716,"byte_end":10975730,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975731,"byte_end":10975734,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975735,"byte_end":10975751,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975752,"byte_end":10975755,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975756,"byte_end":10975763,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975764,"byte_end":10975792,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975793,"byte_end":10975816,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975817,"byte_end":10975820,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975821,"byte_end":10975839,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975840,"byte_end":10975861,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975862,"byte_end":10975907,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975908,"byte_end":10975945,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975946,"byte_end":10975949,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975950,"byte_end":10975983,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10975984,"byte_end":10976021,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976022,"byte_end":10976068,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976069,"byte_end":10976080,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976081,"byte_end":10976084,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976085,"byte_end":10976126,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"/     notify.notify_one();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976127,"byte_end":10976155,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976156,"byte_end":10976161,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976162,"byte_end":10976169,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976170,"byte_end":10976173,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976174,"byte_end":10976199,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976200,"byte_end":10976203,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976204,"byte_end":10976211,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976212,"byte_end":10976240,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976241,"byte_end":10976244,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976245,"byte_end":10976280,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976281,"byte_end":10976306,"line_start":75,"line_end":75,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976307,"byte_end":10976310,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976311,"byte_end":10976334,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976335,"byte_end":10976370,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976371,"byte_end":10976394,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976395,"byte_end":10976400,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976401,"byte_end":10976404,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976405,"byte_end":10976429,"line_start":82,"line_end":82,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976430,"byte_end":10976468,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976469,"byte_end":10976508,"line_start":84,"line_end":84,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976509,"byte_end":10976543,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976544,"byte_end":10976547,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976548,"byte_end":10976603,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify_one();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976604,"byte_end":10976641,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976642,"byte_end":10976651,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976652,"byte_end":10976655,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976656,"byte_end":10976695,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976696,"byte_end":10976714,"line_start":92,"line_end":92,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976715,"byte_end":10976746,"line_start":93,"line_end":93,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976747,"byte_end":10976825,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976826,"byte_end":10976859,"line_start":95,"line_end":95,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976860,"byte_end":10976877,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976878,"byte_end":10976881,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976882,"byte_end":10976932,"line_start":98,"line_end":98,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976933,"byte_end":10976978,"line_start":99,"line_end":99,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976979,"byte_end":10976992,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10976993,"byte_end":10977002,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10977003,"byte_end":10977008,"line_start":102,"line_end":102,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10977009,"byte_end":10977016,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10977017,"byte_end":10977020,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10977021,"byte_end":10977050,"line_start":105,"line_end":105,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10977051,"byte_end":10977092,"line_start":106,"line_end":106,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10977093,"byte_end":10977137,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/ [`notify_one()`]: Notify::notify_one()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10977138,"byte_end":10977180,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10977181,"byte_end":10977222,"line_start":109,"line_end":109,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":9400},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10978117,"byte_end":10978125,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"Notified","qualname":"::sync::notify::Notified","value":"Notified {  }","parent":null,"children":[{"krate":0,"index":9402},{"krate":0,"index":9403},{"krate":0,"index":9404}],"decl_id":null,"docs":" Future returned from [`Notify::notified()`]\n","sig":null,"attributes":[{"value":"/ Future returned from [`Notify::notified()`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10978041,"byte_end":10978088,"line_start":143,"line_end":143,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":8203},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10979585,"byte_end":10979588,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10979381,"byte_end":10979437,"line_start":200,"line_end":200,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10979442,"byte_end":10979445,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10979450,"byte_end":10979464,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10979469,"byte_end":10979472,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10979477,"byte_end":10979484,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10979489,"byte_end":10979517,"line_start":205,"line_end":205,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10979522,"byte_end":10979525,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10979530,"byte_end":10979561,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10979566,"byte_end":10979573,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8204},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10981289,"byte_end":10981297,"line_start":269,"line_end":269,"column_start":12,"column_end":20},"name":"notified","qualname":"<Notify>::notified","value":"pub fn notified(&Self) -> Notified","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980242,"byte_end":10980270,"line_start":234,"line_end":234,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980275,"byte_end":10980278,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980283,"byte_end":10980301,"line_start":236,"line_end":236,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980306,"byte_end":10980309,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980314,"byte_end":10980327,"line_start":238,"line_end":238,"column_start":5,"column_end":18}},{"value":"/ async fn notified(&self);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980332,"byte_end":10980361,"line_start":239,"line_end":239,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980366,"byte_end":10980373,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980378,"byte_end":10980381,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980386,"byte_end":10980462,"line_start":242,"line_end":242,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify_one()`], then `notified().await` will complete","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980467,"byte_end":10980545,"line_start":243,"line_end":243,"column_start":5,"column_end":83}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980550,"byte_end":10980625,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify_one()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980630,"byte_end":10980703,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980708,"byte_end":10980711,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ [`notify_one()`]: Notify::notify_one","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980716,"byte_end":10980756,"line_start":247,"line_end":247,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980761,"byte_end":10980764,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980769,"byte_end":10980783,"line_start":249,"line_end":249,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980788,"byte_end":10980791,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980796,"byte_end":10980803,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980808,"byte_end":10980836,"line_start":252,"line_end":252,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980841,"byte_end":10980864,"line_start":253,"line_end":253,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980869,"byte_end":10980872,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980877,"byte_end":10980895,"line_start":255,"line_end":255,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980900,"byte_end":10980921,"line_start":256,"line_end":256,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980926,"byte_end":10980971,"line_start":257,"line_end":257,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10980976,"byte_end":10981013,"line_start":258,"line_end":258,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10981018,"byte_end":10981021,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10981026,"byte_end":10981059,"line_start":260,"line_end":260,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10981064,"byte_end":10981101,"line_start":261,"line_end":261,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10981106,"byte_end":10981152,"line_start":262,"line_end":262,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10981157,"byte_end":10981168,"line_start":263,"line_end":263,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10981173,"byte_end":10981176,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10981181,"byte_end":10981222,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10981227,"byte_end":10981255,"line_start":266,"line_end":266,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10981260,"byte_end":10981265,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10981270,"byte_end":10981277,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8205},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10983073,"byte_end":10983083,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Notify>::notify_one","value":"pub fn notify_one(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10981822,"byte_end":10981849,"line_start":285,"line_end":285,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10981854,"byte_end":10981857,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10981862,"byte_end":10981933,"line_start":287,"line_end":287,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10981938,"byte_end":10982006,"line_start":288,"line_end":288,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982011,"byte_end":10982087,"line_start":289,"line_end":289,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify_one()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982092,"byte_end":10982137,"line_start":290,"line_end":290,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982142,"byte_end":10982145,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982150,"byte_end":10982224,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ `notify_one` will result in a single permit being stored. The next call to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982229,"byte_end":10982307,"line_start":293,"line_end":293,"column_start":5,"column_end":83}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982312,"byte_end":10982384,"line_start":294,"line_end":294,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982389,"byte_end":10982403,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982408,"byte_end":10982411,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982416,"byte_end":10982460,"line_start":297,"line_end":297,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982465,"byte_end":10982468,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982473,"byte_end":10982487,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982492,"byte_end":10982495,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982500,"byte_end":10982507,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982512,"byte_end":10982540,"line_start":302,"line_end":302,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982545,"byte_end":10982568,"line_start":303,"line_end":303,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982573,"byte_end":10982576,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982581,"byte_end":10982599,"line_start":305,"line_end":305,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982604,"byte_end":10982625,"line_start":306,"line_end":306,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982630,"byte_end":10982675,"line_start":307,"line_end":307,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982680,"byte_end":10982717,"line_start":308,"line_end":308,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982722,"byte_end":10982725,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982730,"byte_end":10982763,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982768,"byte_end":10982805,"line_start":311,"line_end":311,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982810,"byte_end":10982856,"line_start":312,"line_end":312,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982861,"byte_end":10982872,"line_start":313,"line_end":313,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982877,"byte_end":10982880,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982885,"byte_end":10982926,"line_start":315,"line_end":315,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982931,"byte_end":10982959,"line_start":316,"line_end":316,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982964,"byte_end":10982969,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10982974,"byte_end":10982981,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8206},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10985418,"byte_end":10985432,"line_start":387,"line_end":387,"column_start":12,"column_end":26},"name":"notify_waiters","qualname":"<Notify>::notify_waiters","value":"pub fn notify_waiters(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies all waiting tasks","sig":null,"attributes":[{"value":"/ Notifies all waiting tasks","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10984326,"byte_end":10984356,"line_start":355,"line_end":355,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10984361,"byte_end":10984364,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Unlike with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10984369,"byte_end":10984439,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ `notify_one()`, no permit is stored to be used by the next call to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10984444,"byte_end":10984514,"line_start":358,"line_end":358,"column_start":5,"column_end":75}},{"value":"/ `notified().await`. The purpose of this method is to notify all","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10984519,"byte_end":10984586,"line_start":359,"line_end":359,"column_start":5,"column_end":72}},{"value":"/ already registered waiters. Registering for notification is done by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10984591,"byte_end":10984662,"line_start":360,"line_end":360,"column_start":5,"column_end":76}},{"value":"/ acquiring an instance of the `Notified` future via calling `notified()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10984667,"byte_end":10984743,"line_start":361,"line_end":361,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10984748,"byte_end":10984751,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10984756,"byte_end":10984770,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10984775,"byte_end":10984778,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10984783,"byte_end":10984790,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10984795,"byte_end":10984823,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10984828,"byte_end":10984851,"line_start":367,"line_end":367,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10984856,"byte_end":10984859,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10984864,"byte_end":10984882,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10984887,"byte_end":10984908,"line_start":370,"line_end":370,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10984913,"byte_end":10984958,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10984963,"byte_end":10985000,"line_start":372,"line_end":372,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10985005,"byte_end":10985008,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     let notified1 = notify.notified();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10985013,"byte_end":10985055,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/     let notified2 = notify.notified();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10985060,"byte_end":10985102,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10985107,"byte_end":10985110,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     let handle = tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10985115,"byte_end":10985161,"line_start":377,"line_end":377,"column_start":5,"column_end":51}},{"value":"/         println!(\"sending notifications\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10985166,"byte_end":10985212,"line_start":378,"line_end":378,"column_start":5,"column_end":51}},{"value":"/         notify2.notify_waiters();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10985217,"byte_end":10985254,"line_start":379,"line_end":379,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10985259,"byte_end":10985270,"line_start":380,"line_end":380,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10985275,"byte_end":10985278,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/     notified1.await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10985283,"byte_end":10985307,"line_start":382,"line_end":382,"column_start":5,"column_end":29}},{"value":"/     notified2.await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10985312,"byte_end":10985336,"line_start":383,"line_end":383,"column_start":5,"column_end":29}},{"value":"/     println!(\"received notifications\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10985341,"byte_end":10985384,"line_start":384,"line_end":384,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10985389,"byte_end":10985394,"line_start":385,"line_end":385,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10985399,"byte_end":10985406,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":8232},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":8233},{"krate":0,"index":8236},{"krate":0,"index":8239},{"krate":0,"index":8242},{"krate":0,"index":8245},{"krate":0,"index":8248},{"krate":0,"index":8251},{"krate":0,"index":8254},{"krate":0,"index":8255},{"krate":0,"index":8258},{"krate":0,"index":8259},{"krate":0,"index":8261},{"krate":0,"index":8262},{"krate":0,"index":8264},{"krate":0,"index":8265},{"krate":0,"index":8266},{"krate":0,"index":8268},{"krate":0,"index":8269},{"krate":0,"index":8271},{"krate":0,"index":8272},{"krate":0,"index":8275},{"krate":0,"index":8278},{"krate":0,"index":9418},{"krate":0,"index":9421},{"krate":0,"index":9424},{"krate":0,"index":9427},{"krate":0,"index":8281},{"krate":0,"index":8291},{"krate":0,"index":8292},{"krate":0,"index":8298},{"krate":0,"index":8301},{"krate":0,"index":9455},{"krate":0,"index":9459},{"krate":0,"index":9458},{"krate":0,"index":8312},{"krate":0,"index":8314},{"krate":0,"index":8327},{"krate":0,"index":8330},{"krate":0,"index":8334},{"krate":0,"index":8337},{"krate":0,"index":8341},{"krate":0,"index":8348},{"krate":0,"index":8350},{"krate":0,"index":8352},{"krate":0,"index":8354},{"krate":0,"index":8357},{"krate":0,"index":8363},{"krate":0,"index":8364},{"krate":0,"index":8365},{"krate":0,"index":8366},{"krate":0,"index":8367},{"krate":0,"index":8381}],"decl_id":null,"docs":" A one-shot channel is used for sending a single message between\n asynchronous tasks. The [`channel`] function is used to create a\n [`Sender`] and [`Receiver`] handle pair that form the channel.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":23818,"byte_end":23842,"line_start":256,"line_end":256,"column_start":13,"column_end":37}},{"value":"/ A one-shot channel is used for sending a single message between","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998411,"byte_end":10998478,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"/ asynchronous tasks. The [`channel`] function is used to create a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998479,"byte_end":10998547,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ [`Sender`] and [`Receiver`] handle pair that form the channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998548,"byte_end":10998614,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998615,"byte_end":10998618,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The `Sender` handle is used by the producer to send the value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998619,"byte_end":10998685,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/ The `Receiver` handle is used by the consumer to receive the value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998686,"byte_end":10998757,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998758,"byte_end":10998761,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998762,"byte_end":10998808,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998809,"byte_end":10998812,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998813,"byte_end":10998827,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998828,"byte_end":10998831,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998832,"byte_end":10998839,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998840,"byte_end":10998869,"line_start":15,"line_end":15,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998870,"byte_end":10998873,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998874,"byte_end":10998892,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998893,"byte_end":10998914,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998915,"byte_end":10998957,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998958,"byte_end":10998961,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998962,"byte_end":10998995,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10998996,"byte_end":10999036,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999037,"byte_end":10999086,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999087,"byte_end":10999100,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999101,"byte_end":10999112,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999113,"byte_end":10999116,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999117,"byte_end":10999141,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999142,"byte_end":10999189,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999190,"byte_end":10999243,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999244,"byte_end":10999253,"line_start":30,"line_end":30,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999254,"byte_end":10999259,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999260,"byte_end":10999267,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999268,"byte_end":10999271,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999272,"byte_end":10999345,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999346,"byte_end":10999371,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999372,"byte_end":10999375,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999376,"byte_end":10999383,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999384,"byte_end":10999413,"line_start":38,"line_end":38,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999414,"byte_end":10999417,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999418,"byte_end":10999436,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999437,"byte_end":10999458,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999459,"byte_end":10999508,"line_start":42,"line_end":42,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999509,"byte_end":10999512,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999513,"byte_end":10999546,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999547,"byte_end":10999568,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999569,"byte_end":10999580,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999581,"byte_end":10999584,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999585,"byte_end":10999609,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999610,"byte_end":10999661,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999662,"byte_end":10999715,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999716,"byte_end":10999725,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999726,"byte_end":10999731,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":10999732,"byte_end":10999739,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9418},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000262,"byte_end":11000268,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":9420}],"decl_id":null,"docs":" Sends a value to the associated [`Receiver`].","sig":null,"attributes":[{"value":"/ Sends a value to the associated [`Receiver`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000071,"byte_end":11000120,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000121,"byte_end":11000124,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ A pair of both a [`Sender`] and a [`Receiver`]  are created by the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000125,"byte_end":11000195,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`channel`](fn@channel) function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000196,"byte_end":11000233,"line_start":70,"line_end":70,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":9424},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001435,"byte_end":11001443,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":9426}],"decl_id":null,"docs":" Receive a value from the associated [`Sender`].","sig":null,"attributes":[{"value":"/ Receive a value from the associated [`Sender`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000311,"byte_end":11000362,"line_start":76,"line_end":76,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000363,"byte_end":11000366,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ A pair of both a [`Sender`] and a [`Receiver`]  are created by the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000367,"byte_end":11000437,"line_start":78,"line_end":78,"column_start":1,"column_end":71}},{"value":"/ [`channel`](fn@channel) function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000438,"byte_end":11000475,"line_start":79,"line_end":79,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000476,"byte_end":11000479,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000480,"byte_end":11000494,"line_start":81,"line_end":81,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000495,"byte_end":11000498,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000499,"byte_end":11000506,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000507,"byte_end":11000536,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000537,"byte_end":11000540,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000541,"byte_end":11000559,"line_start":86,"line_end":86,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000560,"byte_end":11000581,"line_start":87,"line_end":87,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000582,"byte_end":11000624,"line_start":88,"line_end":88,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000625,"byte_end":11000628,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000629,"byte_end":11000662,"line_start":90,"line_end":90,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000663,"byte_end":11000703,"line_start":91,"line_end":91,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000704,"byte_end":11000753,"line_start":92,"line_end":92,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000754,"byte_end":11000767,"line_start":93,"line_end":93,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000768,"byte_end":11000779,"line_start":94,"line_end":94,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000780,"byte_end":11000783,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000784,"byte_end":11000808,"line_start":96,"line_end":96,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000809,"byte_end":11000856,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000857,"byte_end":11000910,"line_start":98,"line_end":98,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000911,"byte_end":11000920,"line_start":99,"line_end":99,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000921,"byte_end":11000926,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000927,"byte_end":11000934,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000935,"byte_end":11000938,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11000939,"byte_end":11001012,"line_start":103,"line_end":103,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001013,"byte_end":11001038,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001039,"byte_end":11001042,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001043,"byte_end":11001050,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001051,"byte_end":11001080,"line_start":107,"line_end":107,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001081,"byte_end":11001084,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001085,"byte_end":11001103,"line_start":109,"line_end":109,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001104,"byte_end":11001125,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001126,"byte_end":11001175,"line_start":111,"line_end":111,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001176,"byte_end":11001179,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001180,"byte_end":11001213,"line_start":113,"line_end":113,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001214,"byte_end":11001235,"line_start":114,"line_end":114,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001236,"byte_end":11001247,"line_start":115,"line_end":115,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001248,"byte_end":11001251,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001252,"byte_end":11001276,"line_start":117,"line_end":117,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001277,"byte_end":11001328,"line_start":118,"line_end":118,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001329,"byte_end":11001382,"line_start":119,"line_end":119,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001383,"byte_end":11001392,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001393,"byte_end":11001398,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001399,"byte_end":11001406,"line_start":122,"line_end":122,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":8281},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001494,"byte_end":11001499,"line_start":128,"line_end":128,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":8282},{"krate":0,"index":9430},{"krate":0,"index":9440},{"krate":0,"index":9437},{"krate":0,"index":9438},{"krate":0,"index":9433},{"krate":0,"index":9434},{"krate":0,"index":9442},{"krate":0,"index":9453},{"krate":0,"index":9450},{"krate":0,"index":9451},{"krate":0,"index":9447},{"krate":0,"index":9448},{"krate":0,"index":8285},{"krate":0,"index":8287},{"krate":0,"index":8288},{"krate":0,"index":8290}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"/ Oneshot error types","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001506,"byte_end":11001529,"line_start":129,"line_end":129,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":9430},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001671,"byte_end":11001680,"line_start":135,"line_end":135,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001554,"byte_end":11001619,"line_start":133,"line_end":133,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9443},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001902,"byte_end":11001907,"line_start":141,"line_end":141,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001835,"byte_end":11001893,"line_start":140,"line_end":140,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9445},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001996,"byte_end":11002002,"line_start":144,"line_end":144,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001918,"byte_end":11001987,"line_start":143,"line_end":143,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":9442},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001812,"byte_end":11001824,"line_start":139,"line_end":139,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError { Empty, Closed, }","parent":null,"children":[{"krate":0,"index":9443},{"krate":0,"index":9445}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11001702,"byte_end":11001762,"line_start":137,"line_end":137,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":8312},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004735,"byte_end":11004742,"line_start":253,"line_end":253,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11003920,"byte_end":11003999,"line_start":223,"line_end":223,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004000,"byte_end":11004010,"line_start":224,"line_end":224,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004011,"byte_end":11004014,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004015,"byte_end":11004091,"line_start":226,"line_end":226,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004092,"byte_end":11004170,"line_start":227,"line_end":227,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004171,"byte_end":11004217,"line_start":228,"line_end":228,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004218,"byte_end":11004221,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004222,"byte_end":11004268,"line_start":230,"line_end":230,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004269,"byte_end":11004272,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004273,"byte_end":11004287,"line_start":232,"line_end":232,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004288,"byte_end":11004291,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004292,"byte_end":11004299,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004300,"byte_end":11004329,"line_start":235,"line_end":235,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004330,"byte_end":11004333,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004334,"byte_end":11004352,"line_start":237,"line_end":237,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004353,"byte_end":11004374,"line_start":238,"line_end":238,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004375,"byte_end":11004417,"line_start":239,"line_end":239,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004418,"byte_end":11004421,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004422,"byte_end":11004455,"line_start":241,"line_end":241,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004456,"byte_end":11004496,"line_start":242,"line_end":242,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004497,"byte_end":11004546,"line_start":243,"line_end":243,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004547,"byte_end":11004560,"line_start":244,"line_end":244,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004561,"byte_end":11004572,"line_start":245,"line_end":245,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004573,"byte_end":11004576,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004577,"byte_end":11004601,"line_start":247,"line_end":247,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004602,"byte_end":11004649,"line_start":248,"line_end":248,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004650,"byte_end":11004703,"line_start":249,"line_end":249,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004704,"byte_end":11004713,"line_start":250,"line_end":250,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004714,"byte_end":11004719,"line_start":251,"line_end":251,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11004720,"byte_end":11004727,"line_start":252,"line_end":252,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":8316},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006765,"byte_end":11006769,"line_start":310,"line_end":310,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11005194,"byte_end":11005269,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11005274,"byte_end":11005290,"line_start":271,"line_end":271,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11005295,"byte_end":11005298,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11005303,"byte_end":11005382,"line_start":273,"line_end":273,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11005387,"byte_end":11005462,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11005467,"byte_end":11005543,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11005548,"byte_end":11005620,"line_start":276,"line_end":276,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11005625,"byte_end":11005638,"line_start":277,"line_end":277,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11005643,"byte_end":11005646,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11005651,"byte_end":11005727,"line_start":279,"line_end":279,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11005732,"byte_end":11005808,"line_start":280,"line_end":280,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11005813,"byte_end":11005885,"line_start":281,"line_end":281,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11005890,"byte_end":11005963,"line_start":282,"line_end":282,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11005968,"byte_end":11006042,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006047,"byte_end":11006119,"line_start":284,"line_end":284,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006124,"byte_end":11006161,"line_start":285,"line_end":285,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006166,"byte_end":11006169,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006174,"byte_end":11006188,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006193,"byte_end":11006196,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006201,"byte_end":11006233,"line_start":289,"line_end":289,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006238,"byte_end":11006241,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006246,"byte_end":11006253,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006258,"byte_end":11006287,"line_start":292,"line_end":292,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006292,"byte_end":11006295,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006300,"byte_end":11006318,"line_start":294,"line_end":294,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006323,"byte_end":11006344,"line_start":295,"line_end":295,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006349,"byte_end":11006391,"line_start":296,"line_end":296,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006396,"byte_end":11006399,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006404,"byte_end":11006437,"line_start":298,"line_end":298,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006442,"byte_end":11006482,"line_start":299,"line_end":299,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006487,"byte_end":11006536,"line_start":300,"line_end":300,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006541,"byte_end":11006554,"line_start":301,"line_end":301,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006559,"byte_end":11006570,"line_start":302,"line_end":302,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006575,"byte_end":11006578,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006583,"byte_end":11006607,"line_start":304,"line_end":304,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006612,"byte_end":11006659,"line_start":305,"line_end":305,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006664,"byte_end":11006717,"line_start":306,"line_end":306,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006722,"byte_end":11006731,"line_start":307,"line_end":307,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006736,"byte_end":11006741,"line_start":308,"line_end":308,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11006746,"byte_end":11006753,"line_start":309,"line_end":309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8318},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009107,"byte_end":11009113,"line_start":393,"line_end":393,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007102,"byte_end":11007160,"line_start":326,"line_end":326,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007165,"byte_end":11007168,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007173,"byte_end":11007247,"line_start":328,"line_end":328,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007252,"byte_end":11007286,"line_start":329,"line_end":329,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007291,"byte_end":11007294,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007299,"byte_end":11007364,"line_start":331,"line_end":331,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007369,"byte_end":11007441,"line_start":332,"line_end":332,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007446,"byte_end":11007449,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007454,"byte_end":11007466,"line_start":334,"line_end":334,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007471,"byte_end":11007474,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007479,"byte_end":11007527,"line_start":336,"line_end":336,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007532,"byte_end":11007535,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007540,"byte_end":11007566,"line_start":338,"line_end":338,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007571,"byte_end":11007601,"line_start":339,"line_end":339,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007606,"byte_end":11007609,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007614,"byte_end":11007628,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007633,"byte_end":11007636,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007641,"byte_end":11007656,"line_start":343,"line_end":343,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007661,"byte_end":11007664,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007669,"byte_end":11007676,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007681,"byte_end":11007710,"line_start":346,"line_end":346,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007715,"byte_end":11007718,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007723,"byte_end":11007741,"line_start":348,"line_end":348,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007746,"byte_end":11007767,"line_start":349,"line_end":349,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007772,"byte_end":11007824,"line_start":350,"line_end":350,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007829,"byte_end":11007832,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007837,"byte_end":11007870,"line_start":352,"line_end":352,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007875,"byte_end":11007896,"line_start":353,"line_end":353,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007901,"byte_end":11007912,"line_start":354,"line_end":354,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007917,"byte_end":11007920,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007925,"byte_end":11007951,"line_start":356,"line_end":356,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11007956,"byte_end":11007997,"line_start":357,"line_end":357,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008002,"byte_end":11008007,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008012,"byte_end":11008019,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008024,"byte_end":11008027,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008032,"byte_end":11008054,"line_start":361,"line_end":361,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008059,"byte_end":11008062,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008067,"byte_end":11008074,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008079,"byte_end":11008108,"line_start":364,"line_end":364,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008113,"byte_end":11008151,"line_start":365,"line_end":365,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008156,"byte_end":11008159,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008164,"byte_end":11008198,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008203,"byte_end":11008254,"line_start":368,"line_end":368,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008259,"byte_end":11008284,"line_start":369,"line_end":369,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008289,"byte_end":11008294,"line_start":370,"line_end":370,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008299,"byte_end":11008302,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008307,"byte_end":11008325,"line_start":372,"line_end":372,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008330,"byte_end":11008351,"line_start":373,"line_end":373,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008356,"byte_end":11008402,"line_start":374,"line_end":374,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008407,"byte_end":11008410,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008415,"byte_end":11008448,"line_start":376,"line_end":376,"column_start":5,"column_end":38}},{"value":"/         tokio::select! {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008453,"byte_end":11008481,"line_start":377,"line_end":377,"column_start":5,"column_end":33}},{"value":"/             _ = tx.closed() => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008486,"byte_end":11008522,"line_start":378,"line_end":378,"column_start":5,"column_end":41}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008527,"byte_end":11008602,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008607,"byte_end":11008624,"line_start":380,"line_end":380,"column_start":5,"column_end":22}},{"value":"/             value = compute() => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008629,"byte_end":11008667,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/                 // The send can fail if the channel was closed at the exact same","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008672,"byte_end":11008756,"line_start":382,"line_end":382,"column_start":5,"column_end":89}},{"value":"/                 // time as when compute() finished, so just ignore the failure.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008761,"byte_end":11008844,"line_start":383,"line_end":383,"column_start":5,"column_end":88}},{"value":"/                 let _ = tx.send(value);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008849,"byte_end":11008892,"line_start":384,"line_end":384,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008897,"byte_end":11008914,"line_start":385,"line_end":385,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008919,"byte_end":11008932,"line_start":386,"line_end":386,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008937,"byte_end":11008948,"line_start":387,"line_end":387,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008953,"byte_end":11008956,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11008961,"byte_end":11008997,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009002,"byte_end":11009067,"line_start":390,"line_end":390,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009072,"byte_end":11009077,"line_start":391,"line_end":391,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009082,"byte_end":11009089,"line_start":392,"line_end":392,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8325},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009983,"byte_end":11009992,"line_start":426,"line_end":426,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009224,"byte_end":11009298,"line_start":399,"line_end":399,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009303,"byte_end":11009306,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009311,"byte_end":11009385,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009390,"byte_end":11009424,"line_start":402,"line_end":402,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009429,"byte_end":11009432,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009437,"byte_end":11009512,"line_start":404,"line_end":404,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009517,"byte_end":11009520,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009525,"byte_end":11009551,"line_start":406,"line_end":406,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009556,"byte_end":11009586,"line_start":407,"line_end":407,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009591,"byte_end":11009594,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009599,"byte_end":11009613,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009618,"byte_end":11009621,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009626,"byte_end":11009633,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009638,"byte_end":11009667,"line_start":412,"line_end":412,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009672,"byte_end":11009675,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009680,"byte_end":11009698,"line_start":414,"line_end":414,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009703,"byte_end":11009724,"line_start":415,"line_end":415,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009729,"byte_end":11009771,"line_start":416,"line_end":416,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009776,"byte_end":11009779,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009784,"byte_end":11009817,"line_start":418,"line_end":418,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009822,"byte_end":11009825,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009830,"byte_end":11009847,"line_start":420,"line_end":420,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009852,"byte_end":11009855,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009860,"byte_end":11009892,"line_start":422,"line_end":422,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009897,"byte_end":11009949,"line_start":423,"line_end":423,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009954,"byte_end":11009959,"line_start":424,"line_end":424,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11009964,"byte_end":11009971,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8326},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11011438,"byte_end":11011449,"line_start":473,"line_end":473,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Check whether the oneshot channel has been closed, and if not, schedules the\n `Waker` in the provided `Context` to receive a notification when the channel is\n closed.","sig":null,"attributes":[{"value":"/ Check whether the oneshot channel has been closed, and if not, schedules the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010154,"byte_end":11010234,"line_start":433,"line_end":433,"column_start":5,"column_end":85}},{"value":"/ `Waker` in the provided `Context` to receive a notification when the channel is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010239,"byte_end":11010322,"line_start":434,"line_end":434,"column_start":5,"column_end":88}},{"value":"/ closed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010327,"byte_end":11010338,"line_start":435,"line_end":435,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010343,"byte_end":11010346,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly, or when the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010351,"byte_end":11010431,"line_start":437,"line_end":437,"column_start":5,"column_end":85}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010436,"byte_end":11010470,"line_start":438,"line_end":438,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010475,"byte_end":11010478,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to poll, only the `Waker` from the `Context` passed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010483,"byte_end":11010566,"line_start":440,"line_end":440,"column_start":5,"column_end":88}},{"value":"/ to the most recent call will be scheduled to receive a wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010571,"byte_end":11010637,"line_start":441,"line_end":441,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010642,"byte_end":11010645,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: struct@crate::sync::oneshot::Receiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010650,"byte_end":11010705,"line_start":443,"line_end":443,"column_start":5,"column_end":60}},{"value":"/ [`close`]: fn@crate::sync::oneshot::Receiver::close","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010710,"byte_end":11010765,"line_start":444,"line_end":444,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010770,"byte_end":11010773,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010778,"byte_end":11010796,"line_start":446,"line_end":446,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010801,"byte_end":11010804,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010809,"byte_end":11010835,"line_start":448,"line_end":448,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010840,"byte_end":11010843,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the channel is still open.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010848,"byte_end":11010900,"line_start":450,"line_end":450,"column_start":5,"column_end":57}},{"value":"/  * `Poll::Ready(())` if the channel is closed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010905,"byte_end":11010955,"line_start":451,"line_end":451,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010960,"byte_end":11010963,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010968,"byte_end":11010982,"line_start":453,"line_end":453,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010987,"byte_end":11010990,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11010995,"byte_end":11011002,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11011007,"byte_end":11011036,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11011041,"byte_end":11011044,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11011049,"byte_end":11011082,"line_start":458,"line_end":458,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11011087,"byte_end":11011090,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11011095,"byte_end":11011113,"line_start":460,"line_end":460,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11011118,"byte_end":11011139,"line_start":461,"line_end":461,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11011144,"byte_end":11011200,"line_start":462,"line_end":462,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11011205,"byte_end":11011208,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11011213,"byte_end":11011246,"line_start":464,"line_end":464,"column_start":5,"column_end":38}},{"value":"/         rx.close();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11011251,"byte_end":11011274,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11011279,"byte_end":11011290,"line_start":466,"line_end":466,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11011295,"byte_end":11011298,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| tx.poll_closed(cx)).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11011303,"byte_end":11011350,"line_start":468,"line_end":468,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11011355,"byte_end":11011358,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11011363,"byte_end":11011404,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11011409,"byte_end":11011414,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11011419,"byte_end":11011426,"line_start":472,"line_end":472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8332},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014720,"byte_end":11014725,"line_start":590,"line_end":590,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11012974,"byte_end":11013041,"line_start":531,"line_end":531,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013046,"byte_end":11013049,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013054,"byte_end":11013128,"line_start":533,"line_end":533,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013133,"byte_end":11013201,"line_start":534,"line_end":534,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013206,"byte_end":11013272,"line_start":535,"line_end":535,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013277,"byte_end":11013291,"line_start":536,"line_end":536,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013296,"byte_end":11013299,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013304,"byte_end":11013380,"line_start":538,"line_end":538,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013385,"byte_end":11013448,"line_start":539,"line_end":539,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013453,"byte_end":11013456,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ `close` is no-op if a message is already received or the channel","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013461,"byte_end":11013529,"line_start":541,"line_end":541,"column_start":5,"column_end":73}},{"value":"/ is already closed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013534,"byte_end":11013556,"line_start":542,"line_end":542,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013561,"byte_end":11013564,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013569,"byte_end":11013591,"line_start":544,"line_end":544,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013596,"byte_end":11013632,"line_start":545,"line_end":545,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013637,"byte_end":11013640,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013645,"byte_end":11013659,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013664,"byte_end":11013667,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013672,"byte_end":11013707,"line_start":549,"line_end":549,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013712,"byte_end":11013715,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013720,"byte_end":11013727,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013732,"byte_end":11013761,"line_start":552,"line_end":552,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013766,"byte_end":11013816,"line_start":553,"line_end":553,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013821,"byte_end":11013824,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013829,"byte_end":11013847,"line_start":555,"line_end":555,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013852,"byte_end":11013873,"line_start":556,"line_end":556,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013878,"byte_end":11013924,"line_start":557,"line_end":557,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013929,"byte_end":11013932,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013937,"byte_end":11013970,"line_start":559,"line_end":559,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013975,"byte_end":11013978,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11013983,"byte_end":11014002,"line_start":561,"line_end":561,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014007,"byte_end":11014010,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014015,"byte_end":11014047,"line_start":563,"line_end":563,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014052,"byte_end":11014104,"line_start":564,"line_end":564,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014109,"byte_end":11014112,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014117,"byte_end":11014146,"line_start":566,"line_end":566,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014151,"byte_end":11014194,"line_start":567,"line_end":567,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014199,"byte_end":11014231,"line_start":568,"line_end":568,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014236,"byte_end":11014245,"line_start":569,"line_end":569,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014250,"byte_end":11014255,"line_start":570,"line_end":570,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014260,"byte_end":11014267,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014272,"byte_end":11014275,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014280,"byte_end":11014331,"line_start":573,"line_end":573,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014336,"byte_end":11014339,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014344,"byte_end":11014351,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014356,"byte_end":11014385,"line_start":576,"line_end":576,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014390,"byte_end":11014393,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014398,"byte_end":11014416,"line_start":578,"line_end":578,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014421,"byte_end":11014442,"line_start":579,"line_end":579,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014447,"byte_end":11014493,"line_start":580,"line_end":580,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014498,"byte_end":11014501,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014506,"byte_end":11014555,"line_start":582,"line_end":582,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014560,"byte_end":11014563,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014568,"byte_end":11014587,"line_start":584,"line_end":584,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014592,"byte_end":11014595,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014600,"byte_end":11014641,"line_start":586,"line_end":586,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014646,"byte_end":11014686,"line_start":587,"line_end":587,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014691,"byte_end":11014696,"line_start":588,"line_end":588,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014701,"byte_end":11014708,"line_start":589,"line_end":589,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8333},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016723,"byte_end":11016731,"line_start":659,"line_end":659,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014838,"byte_end":11014870,"line_start":596,"line_end":596,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014875,"byte_end":11014878,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014883,"byte_end":11014956,"line_start":598,"line_end":598,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11014961,"byte_end":11015027,"line_start":599,"line_end":599,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015032,"byte_end":11015056,"line_start":600,"line_end":600,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015061,"byte_end":11015064,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015069,"byte_end":11015135,"line_start":602,"line_end":602,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015140,"byte_end":11015162,"line_start":603,"line_end":603,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015167,"byte_end":11015170,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015175,"byte_end":11015187,"line_start":605,"line_end":605,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015192,"byte_end":11015195,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015200,"byte_end":11015251,"line_start":607,"line_end":607,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015256,"byte_end":11015319,"line_start":608,"line_end":608,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015324,"byte_end":11015399,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015404,"byte_end":11015418,"line_start":610,"line_end":610,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015423,"byte_end":11015426,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015431,"byte_end":11015445,"line_start":612,"line_end":612,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015450,"byte_end":11015453,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015458,"byte_end":11015508,"line_start":614,"line_end":614,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015513,"byte_end":11015516,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015521,"byte_end":11015528,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015533,"byte_end":11015562,"line_start":617,"line_end":617,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015567,"byte_end":11015617,"line_start":618,"line_end":618,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015622,"byte_end":11015625,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015630,"byte_end":11015648,"line_start":620,"line_end":620,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015653,"byte_end":11015674,"line_start":621,"line_end":621,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015679,"byte_end":11015725,"line_start":622,"line_end":622,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015730,"byte_end":11015733,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015738,"byte_end":11015767,"line_start":624,"line_end":624,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015772,"byte_end":11015817,"line_start":625,"line_end":625,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015822,"byte_end":11015864,"line_start":626,"line_end":626,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015869,"byte_end":11015901,"line_start":627,"line_end":627,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015906,"byte_end":11015915,"line_start":628,"line_end":628,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015920,"byte_end":11015923,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015928,"byte_end":11015951,"line_start":630,"line_end":630,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015956,"byte_end":11015990,"line_start":631,"line_end":631,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11015995,"byte_end":11015998,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016003,"byte_end":11016032,"line_start":633,"line_end":633,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016037,"byte_end":11016089,"line_start":634,"line_end":634,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016094,"byte_end":11016126,"line_start":635,"line_end":635,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016131,"byte_end":11016140,"line_start":636,"line_end":636,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016145,"byte_end":11016150,"line_start":637,"line_end":637,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016155,"byte_end":11016162,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016167,"byte_end":11016170,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016175,"byte_end":11016236,"line_start":640,"line_end":640,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016241,"byte_end":11016244,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016249,"byte_end":11016256,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016261,"byte_end":11016290,"line_start":643,"line_end":643,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016295,"byte_end":11016345,"line_start":644,"line_end":644,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016350,"byte_end":11016353,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016358,"byte_end":11016376,"line_start":646,"line_end":646,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016381,"byte_end":11016402,"line_start":647,"line_end":647,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016407,"byte_end":11016459,"line_start":648,"line_end":648,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016464,"byte_end":11016467,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016472,"byte_end":11016489,"line_start":650,"line_end":650,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016494,"byte_end":11016497,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016502,"byte_end":11016531,"line_start":652,"line_end":652,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016536,"byte_end":11016590,"line_start":653,"line_end":653,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016595,"byte_end":11016638,"line_start":654,"line_end":654,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016643,"byte_end":11016675,"line_start":655,"line_end":655,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016680,"byte_end":11016689,"line_start":656,"line_end":656,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016694,"byte_end":11016699,"line_start":657,"line_end":657,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11016704,"byte_end":11016711,"line_start":658,"line_end":658,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9462},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11026298,"byte_end":11026304,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::batch_semaphore::TryAcquireError::Closed","value":"TryAcquireError::Closed","parent":{"krate":0,"index":9461},"children":[],"decl_id":null,"docs":" The semaphore has been [closed] and cannot issue new permits.","sig":null,"attributes":[{"value":"/ The semaphore has been [closed] and cannot issue new permits.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11026172,"byte_end":11026237,"line_start":49,"line_end":49,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11026242,"byte_end":11026245,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11026250,"byte_end":11026293,"line_start":51,"line_end":51,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9464},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11026359,"byte_end":11026368,"line_start":55,"line_end":55,"column_start":5,"column_end":14},"name":"NoPermits","qualname":"::sync::batch_semaphore::TryAcquireError::NoPermits","value":"TryAcquireError::NoPermits","parent":{"krate":0,"index":9461},"children":[],"decl_id":null,"docs":" The semaphore has no available permits.\n","sig":null,"attributes":[{"value":"/ The semaphore has no available permits.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11026311,"byte_end":11026354,"line_start":54,"line_end":54,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":9461},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11026150,"byte_end":11026165,"line_start":48,"line_end":48,"column_start":10,"column_end":25},"name":"TryAcquireError","qualname":"::sync::batch_semaphore::TryAcquireError","value":"pub enum TryAcquireError { Closed, NoPermits, }","parent":null,"children":[{"krate":0,"index":9462},{"krate":0,"index":9464}],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11025976,"byte_end":11026040,"line_start":44,"line_end":44,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11026041,"byte_end":11026044,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: crate::sync::Semaphore::try_acquire","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11026045,"byte_end":11026112,"line_start":46,"line_end":46,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9471},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11026654,"byte_end":11026666,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"AcquireError","qualname":"::sync::batch_semaphore::AcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::acquire`] function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11026372,"byte_end":11026432,"line_start":57,"line_end":57,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11026433,"byte_end":11026436,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ An `acquire` operation can only fail if the semaphore has been","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11026437,"byte_end":11026503,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"/ [closed].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11026504,"byte_end":11026517,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11026518,"byte_end":11026521,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11026522,"byte_end":11026565,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ [`Semaphore::acquire`]: crate::sync::Semaphore::acquire","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11026566,"byte_end":11026625,"line_start":63,"line_end":63,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":9476},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047678,"byte_end":11047687,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":9477}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit acquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit acquisition.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11045118,"byte_end":11045184,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11045185,"byte_end":11045188,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11045189,"byte_end":11045264,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11045265,"byte_end":11045341,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11045342,"byte_end":11045422,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11045423,"byte_end":11045432,"line_start":10,"line_end":10,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11045433,"byte_end":11045436,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11045437,"byte_end":11045510,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11045511,"byte_end":11045590,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11045591,"byte_end":11045669,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11045670,"byte_end":11045741,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11045742,"byte_end":11045745,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This `Semaphore` is fair, which means that permits are given out in the order","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11045746,"byte_end":11045827,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/ they were requested. This fairness is also applied when `acquire_many` gets","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11045828,"byte_end":11045907,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ involved, so if a call to `acquire_many` at the front of the queue requests","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11045908,"byte_end":11045987,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ more permits than currently available, this can prevent a call to `acquire`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11045988,"byte_end":11046067,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ from completing, even if the semaphore has enough permits complete the call","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046068,"byte_end":11046147,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ to `acquire`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046148,"byte_end":11046165,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046166,"byte_end":11046169,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ To use the `Semaphore` in a poll function, you can use the [`PollSemaphore`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046170,"byte_end":11046250,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ utility.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046251,"byte_end":11046263,"line_start":25,"line_end":25,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046264,"byte_end":11046267,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046268,"byte_end":11046282,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046283,"byte_end":11046286,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046287,"byte_end":11046303,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046304,"byte_end":11046307,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046308,"byte_end":11046315,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046316,"byte_end":11046366,"line_start":32,"line_end":32,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046367,"byte_end":11046370,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046371,"byte_end":11046389,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046390,"byte_end":11046411,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/     let semaphore = Semaphore::new(3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046412,"byte_end":11046454,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046455,"byte_end":11046458,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     let a_permit = semaphore.acquire().await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046459,"byte_end":11046517,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/     let two_permits = semaphore.acquire_many(2).await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046518,"byte_end":11046585,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046586,"byte_end":11046589,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046590,"byte_end":11046643,"line_start":41,"line_end":41,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046644,"byte_end":11046647,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/     let permit_attempt = semaphore.try_acquire();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046648,"byte_end":11046701,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/     assert_eq!(permit_attempt.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046702,"byte_end":11046777,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046778,"byte_end":11046783,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046784,"byte_end":11046791,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046792,"byte_end":11046795,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Use [`Semaphore::acquire_owned`] to move permits across tasks:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046796,"byte_end":11046862,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046863,"byte_end":11046866,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046867,"byte_end":11046874,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046875,"byte_end":11046898,"line_start":51,"line_end":51,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046899,"byte_end":11046930,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046931,"byte_end":11046934,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046935,"byte_end":11046953,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046954,"byte_end":11046975,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     let semaphore = Arc::new(Semaphore::new(3));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11046976,"byte_end":11047028,"line_start":56,"line_end":56,"column_start":1,"column_end":53}},{"value":"/     let mut join_handles = Vec::new();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047029,"byte_end":11047071,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047072,"byte_end":11047075,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047076,"byte_end":11047099,"line_start":59,"line_end":59,"column_start":1,"column_end":24}},{"value":"/         let permit = semaphore.clone().acquire_owned().await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047100,"byte_end":11047174,"line_start":60,"line_end":60,"column_start":1,"column_end":75}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047175,"byte_end":11047230,"line_start":61,"line_end":61,"column_start":1,"column_end":56}},{"value":"/             // perform task...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047231,"byte_end":11047265,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/             // explicitly own `permit` in the task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047266,"byte_end":11047320,"line_start":63,"line_end":63,"column_start":1,"column_end":55}},{"value":"/             drop(permit);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047321,"byte_end":11047350,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"/         }));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047351,"byte_end":11047367,"line_start":65,"line_end":65,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047368,"byte_end":11047377,"line_start":66,"line_end":66,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047378,"byte_end":11047381,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     for handle in join_handles {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047382,"byte_end":11047418,"line_start":68,"line_end":68,"column_start":1,"column_end":37}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047419,"byte_end":11047453,"line_start":69,"line_end":69,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047454,"byte_end":11047463,"line_start":70,"line_end":70,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047464,"byte_end":11047469,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047470,"byte_end":11047477,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047478,"byte_end":11047481,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [`PollSemaphore`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSemaphore.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047482,"byte_end":11047577,"line_start":74,"line_end":74,"column_start":1,"column_end":96}},{"value":"/ [`Semaphore::acquire_owned`]: crate::sync::Semaphore::acquire_owned","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047578,"byte_end":11047649,"line_start":75,"line_end":75,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":9480},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047936,"byte_end":11047951,"line_start":89,"line_end":89,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":9482},{"krate":0,"index":9483}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047752,"byte_end":11047784,"line_start":82,"line_end":82,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047785,"byte_end":11047788,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047789,"byte_end":11047840,"line_start":84,"line_end":84,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047841,"byte_end":11047844,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047845,"byte_end":11047895,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11047896,"byte_end":11047907,"line_start":87,"line_end":87,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9487},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11048212,"byte_end":11048232,"line_start":101,"line_end":101,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":9488},{"krate":0,"index":9489}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11048003,"byte_end":11048042,"line_start":94,"line_end":94,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11048043,"byte_end":11048046,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11048047,"byte_end":11048104,"line_start":96,"line_end":96,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11048105,"byte_end":11048108,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11048109,"byte_end":11048171,"line_start":98,"line_end":98,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11048172,"byte_end":11048183,"line_start":99,"line_end":99,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8527},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11048828,"byte_end":11048831,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11048753,"byte_end":11048816,"line_start":122,"line_end":122,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8528},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11049506,"byte_end":11049523,"line_start":148,"line_end":148,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11049442,"byte_end":11049494,"line_start":147,"line_end":147,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":8529},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11049770,"byte_end":11049781,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11049593,"byte_end":11049635,"line_start":152,"line_end":152,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11049640,"byte_end":11049643,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11049648,"byte_end":11049758,"line_start":154,"line_end":154,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":8530},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050762,"byte_end":11050769,"line_start":187,"line_end":187,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11049844,"byte_end":11049885,"line_start":159,"line_end":159,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11049890,"byte_end":11049893,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11049898,"byte_end":11049969,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11049974,"byte_end":11050040,"line_start":162,"line_end":162,"column_start":5,"column_end":71}},{"value":"/ acquired permit.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050045,"byte_end":11050065,"line_start":163,"line_end":163,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050070,"byte_end":11050073,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050078,"byte_end":11050092,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050097,"byte_end":11050100,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050105,"byte_end":11050112,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050117,"byte_end":11050148,"line_start":168,"line_end":168,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050153,"byte_end":11050156,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050161,"byte_end":11050179,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050184,"byte_end":11050205,"line_start":171,"line_end":171,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Semaphore::new(2);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050210,"byte_end":11050252,"line_start":172,"line_end":172,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050257,"byte_end":11050260,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/     let permit_1 = semaphore.acquire().await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050265,"byte_end":11050323,"line_start":174,"line_end":174,"column_start":5,"column_end":63}},{"value":"/     assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050328,"byte_end":11050381,"line_start":175,"line_end":175,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050386,"byte_end":11050389,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/     let permit_2 = semaphore.acquire().await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050394,"byte_end":11050452,"line_start":177,"line_end":177,"column_start":5,"column_end":63}},{"value":"/     assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050457,"byte_end":11050510,"line_start":178,"line_end":178,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050515,"byte_end":11050518,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/     drop(permit_1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050523,"byte_end":11050546,"line_start":180,"line_end":180,"column_start":5,"column_end":28}},{"value":"/     assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050551,"byte_end":11050604,"line_start":181,"line_end":181,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050609,"byte_end":11050614,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050619,"byte_end":11050626,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050631,"byte_end":11050634,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050639,"byte_end":11050686,"line_start":185,"line_end":185,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050691,"byte_end":11050744,"line_start":186,"line_end":186,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":8533},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051665,"byte_end":11051677,"line_start":217,"line_end":217,"column_start":18,"column_end":30},"name":"acquire_many","qualname":"<Semaphore>::acquire_many","value":"pub async fn acquire_many<'_, '_>(&'_ Self, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11050962,"byte_end":11051006,"line_start":195,"line_end":195,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051011,"byte_end":11051014,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051019,"byte_end":11051090,"line_start":197,"line_end":197,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051095,"byte_end":11051161,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ acquired permits.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051166,"byte_end":11051187,"line_start":199,"line_end":199,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051192,"byte_end":11051195,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051200,"byte_end":11051214,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051219,"byte_end":11051222,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051227,"byte_end":11051234,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051239,"byte_end":11051270,"line_start":204,"line_end":204,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051275,"byte_end":11051278,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051283,"byte_end":11051301,"line_start":206,"line_end":206,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051306,"byte_end":11051327,"line_start":207,"line_end":207,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Semaphore::new(5);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051332,"byte_end":11051374,"line_start":208,"line_end":208,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051379,"byte_end":11051382,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/     let permit = semaphore.acquire_many(3).await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051387,"byte_end":11051449,"line_start":210,"line_end":210,"column_start":5,"column_end":67}},{"value":"/     assert_eq!(semaphore.available_permits(), 2);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051454,"byte_end":11051507,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051512,"byte_end":11051517,"line_start":212,"line_end":212,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051522,"byte_end":11051529,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051534,"byte_end":11051537,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051542,"byte_end":11051589,"line_start":215,"line_end":215,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051594,"byte_end":11051647,"line_start":216,"line_end":216,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":8536},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052979,"byte_end":11052990,"line_start":253,"line_end":253,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051878,"byte_end":11051927,"line_start":225,"line_end":225,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051932,"byte_end":11051935,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11051940,"byte_end":11052020,"line_start":227,"line_end":227,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052025,"byte_end":11052106,"line_start":228,"line_end":228,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052111,"byte_end":11052184,"line_start":229,"line_end":229,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052189,"byte_end":11052192,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052197,"byte_end":11052211,"line_start":231,"line_end":231,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052216,"byte_end":11052219,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052224,"byte_end":11052231,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052236,"byte_end":11052286,"line_start":234,"line_end":234,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052291,"byte_end":11052294,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052299,"byte_end":11052316,"line_start":236,"line_end":236,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Semaphore::new(2);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052321,"byte_end":11052359,"line_start":237,"line_end":237,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052364,"byte_end":11052367,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = semaphore.try_acquire().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052372,"byte_end":11052424,"line_start":239,"line_end":239,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052429,"byte_end":11052478,"line_start":240,"line_end":240,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052483,"byte_end":11052486,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = semaphore.try_acquire().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052491,"byte_end":11052543,"line_start":242,"line_end":242,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052548,"byte_end":11052597,"line_start":243,"line_end":243,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052602,"byte_end":11052605,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ let permit_3 = semaphore.try_acquire();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052610,"byte_end":11052653,"line_start":245,"line_end":245,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(permit_3.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052658,"byte_end":11052723,"line_start":246,"line_end":246,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052728,"byte_end":11052735,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052740,"byte_end":11052747,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052752,"byte_end":11052755,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052760,"byte_end":11052829,"line_start":250,"line_end":250,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052834,"byte_end":11052909,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11052914,"byte_end":11052967,"line_start":252,"line_end":252,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":8537},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054260,"byte_end":11054276,"line_start":288,"line_end":288,"column_start":12,"column_end":28},"name":"try_acquire_many","qualname":"<Semaphore>::try_acquire_many","value":"pub fn try_acquire_many(&Self, u32)\n-> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire `n` permits from the semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11053255,"byte_end":11053307,"line_start":263,"line_end":263,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11053312,"byte_end":11053315,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11053320,"byte_end":11053400,"line_start":265,"line_end":265,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are not enough permits left.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11053405,"byte_end":11053483,"line_start":266,"line_end":266,"column_start":5,"column_end":83}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11053488,"byte_end":11053572,"line_start":267,"line_end":267,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11053577,"byte_end":11053580,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11053585,"byte_end":11053599,"line_start":269,"line_end":269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11053604,"byte_end":11053607,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11053612,"byte_end":11053619,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11053624,"byte_end":11053674,"line_start":272,"line_end":272,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11053679,"byte_end":11053682,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11053687,"byte_end":11053704,"line_start":274,"line_end":274,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Semaphore::new(4);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11053709,"byte_end":11053747,"line_start":275,"line_end":275,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11053752,"byte_end":11053755,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = semaphore.try_acquire_many(3).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11053760,"byte_end":11053818,"line_start":277,"line_end":277,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11053823,"byte_end":11053872,"line_start":278,"line_end":278,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11053877,"byte_end":11053880,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = semaphore.try_acquire_many(2);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11053885,"byte_end":11053934,"line_start":280,"line_end":280,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(permit_2.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11053939,"byte_end":11054004,"line_start":281,"line_end":281,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054009,"byte_end":11054016,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054021,"byte_end":11054028,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054033,"byte_end":11054036,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054041,"byte_end":11054110,"line_start":285,"line_end":285,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054115,"byte_end":11054190,"line_start":286,"line_end":286,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054195,"byte_end":11054248,"line_start":287,"line_end":287,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":8538},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055764,"byte_end":11055777,"line_start":334,"line_end":334,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054549,"byte_end":11054590,"line_start":298,"line_end":298,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054595,"byte_end":11054598,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054603,"byte_end":11054671,"line_start":300,"line_end":300,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054676,"byte_end":11054747,"line_start":301,"line_end":301,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054752,"byte_end":11054823,"line_start":302,"line_end":302,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054828,"byte_end":11054848,"line_start":303,"line_end":303,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054853,"byte_end":11054856,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054861,"byte_end":11054875,"line_start":305,"line_end":305,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054880,"byte_end":11054883,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054888,"byte_end":11054895,"line_start":307,"line_end":307,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054900,"byte_end":11054923,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054928,"byte_end":11054959,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054964,"byte_end":11054967,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054972,"byte_end":11054990,"line_start":311,"line_end":311,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11054995,"byte_end":11055016,"line_start":312,"line_end":312,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(3));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055021,"byte_end":11055073,"line_start":313,"line_end":313,"column_start":5,"column_end":57}},{"value":"/     let mut join_handles = Vec::new();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055078,"byte_end":11055120,"line_start":314,"line_end":314,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055125,"byte_end":11055128,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055133,"byte_end":11055156,"line_start":316,"line_end":316,"column_start":5,"column_end":28}},{"value":"/         let permit = semaphore.clone().acquire_owned().await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055161,"byte_end":11055235,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055240,"byte_end":11055295,"line_start":318,"line_end":318,"column_start":5,"column_end":60}},{"value":"/             // perform task...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055300,"byte_end":11055334,"line_start":319,"line_end":319,"column_start":5,"column_end":39}},{"value":"/             // explicitly own `permit` in the task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055339,"byte_end":11055393,"line_start":320,"line_end":320,"column_start":5,"column_end":59}},{"value":"/             drop(permit);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055398,"byte_end":11055427,"line_start":321,"line_end":321,"column_start":5,"column_end":34}},{"value":"/         }));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055432,"byte_end":11055448,"line_start":322,"line_end":322,"column_start":5,"column_end":21}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055453,"byte_end":11055462,"line_start":323,"line_end":323,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055467,"byte_end":11055470,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/     for handle in join_handles {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055475,"byte_end":11055511,"line_start":325,"line_end":325,"column_start":5,"column_end":41}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055516,"byte_end":11055550,"line_start":326,"line_end":326,"column_start":5,"column_end":39}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055555,"byte_end":11055564,"line_start":327,"line_end":327,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055569,"byte_end":11055574,"line_start":328,"line_end":328,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055579,"byte_end":11055586,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055591,"byte_end":11055594,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055599,"byte_end":11055626,"line_start":331,"line_end":331,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055631,"byte_end":11055678,"line_start":332,"line_end":332,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055683,"byte_end":11055746,"line_start":333,"line_end":333,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8541},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057210,"byte_end":11057228,"line_start":378,"line_end":378,"column_start":18,"column_end":36},"name":"acquire_many_owned","qualname":"<Semaphore>::acquire_many_owned","value":"pub async fn acquire_many_owned(Arc<Self>, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11055985,"byte_end":11056029,"line_start":342,"line_end":342,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056034,"byte_end":11056037,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056042,"byte_end":11056110,"line_start":344,"line_end":344,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056115,"byte_end":11056186,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056191,"byte_end":11056262,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056267,"byte_end":11056287,"line_start":347,"line_end":347,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056292,"byte_end":11056295,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056300,"byte_end":11056314,"line_start":349,"line_end":349,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056319,"byte_end":11056322,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056327,"byte_end":11056334,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056339,"byte_end":11056362,"line_start":352,"line_end":352,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056367,"byte_end":11056398,"line_start":353,"line_end":353,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056403,"byte_end":11056406,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056411,"byte_end":11056429,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056434,"byte_end":11056455,"line_start":356,"line_end":356,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(10));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056460,"byte_end":11056513,"line_start":357,"line_end":357,"column_start":5,"column_end":58}},{"value":"/     let mut join_handles = Vec::new();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056518,"byte_end":11056560,"line_start":358,"line_end":358,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056565,"byte_end":11056568,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056573,"byte_end":11056596,"line_start":360,"line_end":360,"column_start":5,"column_end":28}},{"value":"/         let permit = semaphore.clone().acquire_many_owned(2).await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056601,"byte_end":11056681,"line_start":361,"line_end":361,"column_start":5,"column_end":85}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056686,"byte_end":11056741,"line_start":362,"line_end":362,"column_start":5,"column_end":60}},{"value":"/             // perform task...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056746,"byte_end":11056780,"line_start":363,"line_end":363,"column_start":5,"column_end":39}},{"value":"/             // explicitly own `permit` in the task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056785,"byte_end":11056839,"line_start":364,"line_end":364,"column_start":5,"column_end":59}},{"value":"/             drop(permit);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056844,"byte_end":11056873,"line_start":365,"line_end":365,"column_start":5,"column_end":34}},{"value":"/         }));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056878,"byte_end":11056894,"line_start":366,"line_end":366,"column_start":5,"column_end":21}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056899,"byte_end":11056908,"line_start":367,"line_end":367,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056913,"byte_end":11056916,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/     for handle in join_handles {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056921,"byte_end":11056957,"line_start":369,"line_end":369,"column_start":5,"column_end":41}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11056962,"byte_end":11056996,"line_start":370,"line_end":370,"column_start":5,"column_end":39}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057001,"byte_end":11057010,"line_start":371,"line_end":371,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057015,"byte_end":11057020,"line_start":372,"line_end":372,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057025,"byte_end":11057032,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057037,"byte_end":11057040,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057045,"byte_end":11057072,"line_start":375,"line_end":375,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057077,"byte_end":11057124,"line_start":376,"line_end":376,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057129,"byte_end":11057192,"line_start":377,"line_end":377,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8544},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11058777,"byte_end":11058794,"line_start":421,"line_end":421,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057467,"byte_end":11057516,"line_start":389,"line_end":389,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057521,"byte_end":11057524,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057529,"byte_end":11057600,"line_start":391,"line_end":391,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057605,"byte_end":11057682,"line_start":392,"line_end":392,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057687,"byte_end":11057757,"line_start":393,"line_end":393,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057762,"byte_end":11057833,"line_start":394,"line_end":394,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057838,"byte_end":11057858,"line_start":395,"line_end":395,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057863,"byte_end":11057866,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057871,"byte_end":11057885,"line_start":397,"line_end":397,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057890,"byte_end":11057893,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057898,"byte_end":11057905,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057910,"byte_end":11057933,"line_start":400,"line_end":400,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057938,"byte_end":11057988,"line_start":401,"line_end":401,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11057993,"byte_end":11057996,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11058001,"byte_end":11058018,"line_start":403,"line_end":403,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Arc::new(Semaphore::new(2));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11058023,"byte_end":11058071,"line_start":404,"line_end":404,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11058076,"byte_end":11058079,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = Arc::clone(&semaphore).try_acquire_owned().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11058084,"byte_end":11058155,"line_start":406,"line_end":406,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11058160,"byte_end":11058209,"line_start":407,"line_end":407,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11058214,"byte_end":11058217,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = Arc::clone(&semaphore).try_acquire_owned().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11058222,"byte_end":11058293,"line_start":409,"line_end":409,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11058298,"byte_end":11058347,"line_start":410,"line_end":410,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11058352,"byte_end":11058355,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ let permit_3 = semaphore.try_acquire_owned();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11058360,"byte_end":11058409,"line_start":412,"line_end":412,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(permit_3.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11058414,"byte_end":11058479,"line_start":413,"line_end":413,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11058484,"byte_end":11058491,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11058496,"byte_end":11058503,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11058508,"byte_end":11058511,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11058516,"byte_end":11058543,"line_start":417,"line_end":417,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11058548,"byte_end":11058617,"line_start":418,"line_end":418,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11058622,"byte_end":11058697,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11058702,"byte_end":11058765,"line_start":420,"line_end":420,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8545},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060262,"byte_end":11060284,"line_start":460,"line_end":460,"column_start":12,"column_end":34},"name":"try_acquire_many_owned","qualname":"<Semaphore>::try_acquire_many_owned","value":"pub fn try_acquire_many_owned(Arc<Self>, u32)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire `n` permits from the semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059075,"byte_end":11059127,"line_start":431,"line_end":431,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059132,"byte_end":11059135,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059140,"byte_end":11059211,"line_start":433,"line_end":433,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059216,"byte_end":11059293,"line_start":434,"line_end":434,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059298,"byte_end":11059368,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059373,"byte_end":11059444,"line_start":436,"line_end":436,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059449,"byte_end":11059469,"line_start":437,"line_end":437,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059474,"byte_end":11059477,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059482,"byte_end":11059496,"line_start":439,"line_end":439,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059501,"byte_end":11059504,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059509,"byte_end":11059516,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059521,"byte_end":11059544,"line_start":442,"line_end":442,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059549,"byte_end":11059599,"line_start":443,"line_end":443,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059604,"byte_end":11059607,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059612,"byte_end":11059629,"line_start":445,"line_end":445,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Arc::new(Semaphore::new(4));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059634,"byte_end":11059682,"line_start":446,"line_end":446,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059687,"byte_end":11059690,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = Arc::clone(&semaphore).try_acquire_many_owned(3).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059695,"byte_end":11059772,"line_start":448,"line_end":448,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059777,"byte_end":11059826,"line_start":449,"line_end":449,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059831,"byte_end":11059834,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = semaphore.try_acquire_many_owned(2);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059839,"byte_end":11059894,"line_start":451,"line_end":451,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(permit_2.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059899,"byte_end":11059964,"line_start":452,"line_end":452,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059969,"byte_end":11059976,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059981,"byte_end":11059988,"line_start":454,"line_end":454,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11059993,"byte_end":11059996,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060001,"byte_end":11060028,"line_start":456,"line_end":456,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060033,"byte_end":11060102,"line_start":457,"line_end":457,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060107,"byte_end":11060182,"line_start":458,"line_end":458,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060187,"byte_end":11060250,"line_start":459,"line_end":459,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8546},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061509,"byte_end":11061514,"line_start":502,"line_end":502,"column_start":12,"column_end":17},"name":"close","qualname":"<Semaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060596,"byte_end":11060621,"line_start":473,"line_end":473,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060626,"byte_end":11060629,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ This prevents the semaphore from issuing new permits and notifies all pending waiters.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060634,"byte_end":11060724,"line_start":475,"line_end":475,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060729,"byte_end":11060732,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060737,"byte_end":11060751,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060756,"byte_end":11060759,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060764,"byte_end":11060771,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060776,"byte_end":11060807,"line_start":480,"line_end":480,"column_start":5,"column_end":36}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060812,"byte_end":11060835,"line_start":481,"line_end":481,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::TryAcquireError;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060840,"byte_end":11060877,"line_start":482,"line_end":482,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060882,"byte_end":11060885,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060890,"byte_end":11060908,"line_start":484,"line_end":484,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060913,"byte_end":11060934,"line_start":485,"line_end":485,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060939,"byte_end":11060991,"line_start":486,"line_end":486,"column_start":5,"column_end":57}},{"value":"/     let semaphore2 = semaphore.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11060996,"byte_end":11061039,"line_start":487,"line_end":487,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061044,"byte_end":11061047,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061052,"byte_end":11061085,"line_start":489,"line_end":489,"column_start":5,"column_end":38}},{"value":"/         let permit = semaphore.acquire_many(2).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061090,"byte_end":11061147,"line_start":490,"line_end":490,"column_start":5,"column_end":62}},{"value":"/         assert!(permit.is_err());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061152,"byte_end":11061189,"line_start":491,"line_end":491,"column_start":5,"column_end":42}},{"value":"/         println!(\"waiter received error\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061194,"byte_end":11061240,"line_start":492,"line_end":492,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061245,"byte_end":11061256,"line_start":493,"line_end":493,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061261,"byte_end":11061264,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/     println!(\"closing semaphore\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061269,"byte_end":11061307,"line_start":495,"line_end":495,"column_start":5,"column_end":43}},{"value":"/     semaphore2.close();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061312,"byte_end":11061339,"line_start":496,"line_end":496,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061344,"byte_end":11061347,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/     // Cannot obtain more permits","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061352,"byte_end":11061389,"line_start":498,"line_end":498,"column_start":5,"column_end":42}},{"value":"/     assert_eq!(semaphore2.try_acquire().err(), Some(TryAcquireError::Closed))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061394,"byte_end":11061475,"line_start":499,"line_end":499,"column_start":5,"column_end":86}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061480,"byte_end":11061485,"line_start":500,"line_end":500,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061490,"byte_end":11061497,"line_start":501,"line_end":501,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8547},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061619,"byte_end":11061628,"line_start":507,"line_end":507,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Semaphore>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the semaphore is closed\n","sig":null,"attributes":[{"value":"/ Returns true if the semaphore is closed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061564,"byte_end":11061607,"line_start":506,"line_end":506,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":8550},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061897,"byte_end":11061903,"line_start":516,"line_end":516,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061722,"byte_end":11061792,"line_start":513,"line_end":513,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061797,"byte_end":11061866,"line_start":514,"line_end":514,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061871,"byte_end":11061885,"line_start":515,"line_end":515,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":8552},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11062158,"byte_end":11062164,"line_start":525,"line_end":525,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061983,"byte_end":11062053,"line_start":522,"line_end":522,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11062058,"byte_end":11062127,"line_start":523,"line_end":523,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11062132,"byte_end":11062146,"line_start":524,"line_end":524,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":8616},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11086674,"byte_end":11086694,"line_start":17,"line_end":17,"column_start":12,"column_end":32},"name":"OwnedRwLockReadGuard","qualname":"::sync::rwlock::owned_read_guard::OwnedRwLockReadGuard","value":"OwnedRwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":8619},{"krate":0,"index":8620},{"krate":0,"index":8621}],"decl_id":null,"docs":" Owned RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the shared read access of a lock when","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11086383,"byte_end":11086461,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11086462,"byte_end":11086474,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11086475,"byte_end":11086478,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read_owned`] method on","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11086479,"byte_end":11086540,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/ [`RwLock`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11086541,"byte_end":11086556,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11086557,"byte_end":11086560,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`read_owned`]: method@crate::sync::RwLock::read_owned","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11086561,"byte_end":11086619,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11086620,"byte_end":11086662,"line_start":16,"line_end":16,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":8625},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087925,"byte_end":11087928,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockReadGuard<T, U>>::map","value":"pub fn map<F, V: ?Sized>(Self, F) -> OwnedRwLockReadGuard<T, V> where\nF: FnOnce(&U) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Make a new `OwnedRwLockReadGuard` for a component of the locked data.\n This operation cannot fail as the `OwnedRwLockReadGuard` passed in\n already locked the data.","sig":null,"attributes":[{"value":"/ Make a new `OwnedRwLockReadGuard` for a component of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11086996,"byte_end":11087069,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ This operation cannot fail as the `OwnedRwLockReadGuard` passed in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087074,"byte_end":11087144,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/ already locked the data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087149,"byte_end":11087177,"line_start":27,"line_end":27,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087182,"byte_end":11087185,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087190,"byte_end":11087241,"line_start":29,"line_end":29,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087246,"byte_end":11087321,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087326,"byte_end":11087390,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087395,"byte_end":11087398,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087403,"byte_end":11087417,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087422,"byte_end":11087425,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087430,"byte_end":11087437,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087442,"byte_end":11087465,"line_start":36,"line_end":36,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockReadGuard};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087470,"byte_end":11087522,"line_start":37,"line_end":37,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087527,"byte_end":11087530,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087535,"byte_end":11087583,"line_start":39,"line_end":39,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087588,"byte_end":11087608,"line_start":40,"line_end":40,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087613,"byte_end":11087616,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087621,"byte_end":11087641,"line_start":42,"line_end":42,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087646,"byte_end":11087669,"line_start":43,"line_end":43,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087674,"byte_end":11087719,"line_start":44,"line_end":44,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087724,"byte_end":11087727,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read_owned().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087732,"byte_end":11087772,"line_start":46,"line_end":46,"column_start":5,"column_end":45}},{"value":"/ let guard = OwnedRwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087777,"byte_end":11087836,"line_start":47,"line_end":47,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087841,"byte_end":11087844,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087849,"byte_end":11087875,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087880,"byte_end":11087887,"line_start":50,"line_end":50,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087892,"byte_end":11087899,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11087904,"byte_end":11087913,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8628},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11089445,"byte_end":11089452,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockReadGuard<T, U>>::try_map","value":"pub fn try_map<F, V: ?Sized>(Self, F)\n-> Result<OwnedRwLockReadGuard<T, V>, Self> where F: FnOnce(&U) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`OwnedRwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`OwnedRwLockReadGuard`] for a component of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11088377,"byte_end":11088451,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11088456,"byte_end":11088526,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11088531,"byte_end":11088542,"line_start":70,"line_end":70,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11088547,"byte_end":11088550,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockReadGuard` passed in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11088555,"byte_end":11088625,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ already locked the data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11088630,"byte_end":11088658,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11088663,"byte_end":11088666,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11088671,"byte_end":11088730,"line_start":75,"line_end":75,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockReadGuard::try_map(..)`. A method would interfere with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11088735,"byte_end":11088805,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11088810,"byte_end":11088874,"line_start":77,"line_end":77,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11088879,"byte_end":11088882,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11088887,"byte_end":11088901,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11088906,"byte_end":11088909,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11088914,"byte_end":11088921,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11088926,"byte_end":11088949,"line_start":82,"line_end":82,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockReadGuard};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11088954,"byte_end":11089006,"line_start":83,"line_end":83,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11089011,"byte_end":11089014,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11089019,"byte_end":11089067,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11089072,"byte_end":11089092,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11089097,"byte_end":11089100,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11089105,"byte_end":11089125,"line_start":88,"line_end":88,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11089130,"byte_end":11089153,"line_start":89,"line_end":89,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11089158,"byte_end":11089203,"line_start":90,"line_end":90,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11089208,"byte_end":11089211,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read_owned().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11089216,"byte_end":11089256,"line_start":92,"line_end":92,"column_start":5,"column_end":45}},{"value":"/ let guard = OwnedRwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11089261,"byte_end":11089356,"line_start":93,"line_end":93,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11089361,"byte_end":11089364,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11089369,"byte_end":11089395,"line_start":95,"line_end":95,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11089400,"byte_end":11089407,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11089412,"byte_end":11089419,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11089424,"byte_end":11089433,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":8677},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11091365,"byte_end":11091386,"line_start":18,"line_end":18,"column_start":12,"column_end":33},"name":"OwnedRwLockWriteGuard","qualname":"::sync::rwlock::owned_write_guard::OwnedRwLockWriteGuard","value":"OwnedRwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":8679},{"krate":0,"index":8680},{"krate":0,"index":8681},{"krate":0,"index":8682}],"decl_id":null,"docs":" Owned RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11091067,"byte_end":11091149,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/ dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11091150,"byte_end":11091162,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11091163,"byte_end":11091166,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write_owned`] method","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11091167,"byte_end":11091226,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ on [`RwLock`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11091227,"byte_end":11091245,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11091246,"byte_end":11091249,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`write_owned`]: method@crate::sync::RwLock::write_owned","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11091250,"byte_end":11091310,"line_start":16,"line_end":16,"column_start":1,"column_end":61}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11091311,"byte_end":11091353,"line_start":17,"line_end":17,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":8685},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092744,"byte_end":11092747,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockWriteGuard<T>>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> OwnedRwLockMappedWriteGuard<T, U> where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Make a new [`OwnedRwLockMappedWriteGuard`] for a component of the locked\n data.","sig":null,"attributes":[{"value":"/ Make a new [`OwnedRwLockMappedWriteGuard`] for a component of the locked","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11091696,"byte_end":11091772,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11091777,"byte_end":11091786,"line_start":28,"line_end":28,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11091791,"byte_end":11091794,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockWriteGuard` passed in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11091799,"byte_end":11091870,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ already locked the data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11091875,"byte_end":11091903,"line_start":31,"line_end":31,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11091908,"byte_end":11091911,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11091916,"byte_end":11091975,"line_start":33,"line_end":33,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11091980,"byte_end":11092055,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092060,"byte_end":11092116,"line_start":35,"line_end":35,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092121,"byte_end":11092124,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092129,"byte_end":11092143,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092148,"byte_end":11092151,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092156,"byte_end":11092163,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092168,"byte_end":11092191,"line_start":40,"line_end":40,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092196,"byte_end":11092249,"line_start":41,"line_end":41,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092254,"byte_end":11092257,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092262,"byte_end":11092310,"line_start":43,"line_end":43,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092315,"byte_end":11092335,"line_start":44,"line_end":44,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092340,"byte_end":11092343,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092348,"byte_end":11092368,"line_start":46,"line_end":46,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092373,"byte_end":11092396,"line_start":47,"line_end":47,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092401,"byte_end":11092446,"line_start":48,"line_end":48,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092451,"byte_end":11092454,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092459,"byte_end":11092464,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/     let lock = Arc::clone(&lock);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092469,"byte_end":11092506,"line_start":51,"line_end":51,"column_start":5,"column_end":42}},{"value":"/     let mut mapped = OwnedRwLockWriteGuard::map(lock.write_owned().await, |f| &mut f.0);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092511,"byte_end":11092603,"line_start":52,"line_end":52,"column_start":5,"column_end":97}},{"value":"/     *mapped = 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092608,"byte_end":11092628,"line_start":53,"line_end":53,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092633,"byte_end":11092638,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092643,"byte_end":11092646,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092651,"byte_end":11092694,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092699,"byte_end":11092706,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092711,"byte_end":11092718,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11092723,"byte_end":11092732,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8688},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11094563,"byte_end":11094570,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockWriteGuard<T>>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F)\n-> Result<OwnedRwLockMappedWriteGuard<T, U>, Self> where F: FnOnce(&mut T) ->\nOption<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`OwnedRwLockMappedWriteGuard`] for a component\n of the locked data. The original guard is returned if the closure\n returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`OwnedRwLockMappedWriteGuard`] for a component","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11093304,"byte_end":11093379,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ of the locked data. The original guard is returned if the closure","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11093384,"byte_end":11093453,"line_start":78,"line_end":78,"column_start":5,"column_end":74}},{"value":"/ returns `None`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11093458,"byte_end":11093477,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11093482,"byte_end":11093485,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockWriteGuard` passed in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11093490,"byte_end":11093561,"line_start":81,"line_end":81,"column_start":5,"column_end":76}},{"value":"/ already locked the data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11093566,"byte_end":11093594,"line_start":82,"line_end":82,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11093599,"byte_end":11093602,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11093607,"byte_end":11093658,"line_start":84,"line_end":84,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockWriteGuard::try_map(...)`. A method would interfere","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11093663,"byte_end":11093738,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ with methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11093743,"byte_end":11093812,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11093817,"byte_end":11093820,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11093825,"byte_end":11093899,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11093904,"byte_end":11093907,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11093912,"byte_end":11093926,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11093931,"byte_end":11093934,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11093939,"byte_end":11093946,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11093951,"byte_end":11093974,"line_start":93,"line_end":93,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11093979,"byte_end":11094032,"line_start":94,"line_end":94,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11094037,"byte_end":11094040,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11094045,"byte_end":11094093,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11094098,"byte_end":11094118,"line_start":97,"line_end":97,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11094123,"byte_end":11094126,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11094131,"byte_end":11094151,"line_start":99,"line_end":99,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11094156,"byte_end":11094179,"line_start":100,"line_end":100,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11094184,"byte_end":11094229,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11094234,"byte_end":11094237,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11094242,"byte_end":11094247,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/     let guard = Arc::clone(&lock).write_owned().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11094252,"byte_end":11094310,"line_start":104,"line_end":104,"column_start":5,"column_end":63}},{"value":"/     let mut guard = OwnedRwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11094315,"byte_end":11094423,"line_start":105,"line_end":105,"column_start":5,"column_end":113}},{"value":"/     *guard = 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11094428,"byte_end":11094447,"line_start":106,"line_end":106,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11094452,"byte_end":11094457,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11094462,"byte_end":11094465,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11094470,"byte_end":11094513,"line_start":109,"line_end":109,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11094518,"byte_end":11094525,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11094530,"byte_end":11094537,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11094542,"byte_end":11094551,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8691},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11095577,"byte_end":11095588,"line_start":142,"line_end":142,"column_start":12,"column_end":23},"name":"into_mapped","qualname":"<OwnedRwLockWriteGuard<T>>::into_mapped","value":"pub fn into_mapped(Self) -> OwnedRwLockMappedWriteGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `OwnedRwLockWriteGuard` into an\n `OwnedRwLockMappedWriteGuard`. This method can be used to store a\n non-mapped guard in a struct field that expects a mapped guard.","sig":null,"attributes":[{"value":"/ Converts this `OwnedRwLockWriteGuard` into an","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11095264,"byte_end":11095313,"line_start":136,"line_end":136,"column_start":5,"column_end":54}},{"value":"/ `OwnedRwLockMappedWriteGuard`. This method can be used to store a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11095318,"byte_end":11095387,"line_start":137,"line_end":137,"column_start":5,"column_end":74}},{"value":"/ non-mapped guard in a struct field that expects a mapped guard.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11095392,"byte_end":11095459,"line_start":138,"line_end":138,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11095464,"byte_end":11095467,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `OwnedRwLockWriteGuard::map(guard, |me| me)`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11095472,"byte_end":11095551,"line_start":140,"line_end":140,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11095556,"byte_end":11095565,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8693},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096821,"byte_end":11096830,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<OwnedRwLockWriteGuard<T>>::downgrade","value":"pub fn downgrade(Self) -> OwnedRwLockReadGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11095681,"byte_end":11095753,"line_start":146,"line_end":146,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11095758,"byte_end":11095827,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11095832,"byte_end":11095835,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11095840,"byte_end":11095918,"line_start":149,"line_end":149,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11095923,"byte_end":11095999,"line_start":150,"line_end":150,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096004,"byte_end":11096016,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096021,"byte_end":11096024,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096029,"byte_end":11096103,"line_start":153,"line_end":153,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096108,"byte_end":11096125,"line_start":154,"line_end":154,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096130,"byte_end":11096133,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096138,"byte_end":11096152,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096157,"byte_end":11096160,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096165,"byte_end":11096172,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096177,"byte_end":11096207,"line_start":159,"line_end":159,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096212,"byte_end":11096237,"line_start":160,"line_end":160,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096242,"byte_end":11096247,"line_start":161,"line_end":161,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096252,"byte_end":11096272,"line_start":162,"line_end":162,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096277,"byte_end":11096300,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096305,"byte_end":11096345,"line_start":164,"line_end":164,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096350,"byte_end":11096353,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let n = lock.clone().write_owned().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096358,"byte_end":11096403,"line_start":166,"line_end":166,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096408,"byte_end":11096411,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096416,"byte_end":11096451,"line_start":168,"line_end":168,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096456,"byte_end":11096498,"line_start":169,"line_end":169,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write_owned().await = 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096503,"byte_end":11096548,"line_start":170,"line_end":170,"column_start":5,"column_end":50}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096553,"byte_end":11096560,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096565,"byte_end":11096568,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096573,"byte_end":11096599,"line_start":173,"line_end":173,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096604,"byte_end":11096649,"line_start":174,"line_end":174,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096654,"byte_end":11096657,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096662,"byte_end":11096674,"line_start":176,"line_end":176,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096679,"byte_end":11096705,"line_start":177,"line_end":177,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096710,"byte_end":11096785,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096790,"byte_end":11096797,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11096802,"byte_end":11096809,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8733},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11098824,"byte_end":11098851,"line_start":17,"line_end":17,"column_start":12,"column_end":39},"name":"OwnedRwLockMappedWriteGuard","qualname":"::sync::rwlock::owned_write_guard_mapped::OwnedRwLockMappedWriteGuard","value":"OwnedRwLockMappedWriteGuard {  }","parent":null,"children":[{"krate":0,"index":8736},{"krate":0,"index":8737},{"krate":0,"index":8738},{"krate":0,"index":8739}],"decl_id":null,"docs":" Owned RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11098357,"byte_end":11098439,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11098440,"byte_end":11098452,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11098453,"byte_end":11098456,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This structure is created by [mapping] an [`OwnedRwLockWriteGuard`]. It is a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11098457,"byte_end":11098537,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ separate type from `OwnedRwLockWriteGuard` to disallow downgrading a mapped","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11098538,"byte_end":11098617,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ guard, since doing so can cause undefined behavior.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11098618,"byte_end":11098673,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11098674,"byte_end":11098677,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [mapping]: method@crate::sync::OwnedRwLockWriteGuard::map","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11098678,"byte_end":11098739,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/ [`OwnedRwLockWriteGuard`]: struct@crate::sync::OwnedRwLockWriteGuard","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11098740,"byte_end":11098812,"line_start":16,"line_end":16,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":8743},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11100248,"byte_end":11100251,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockMappedWriteGuard<T, U>>::map","value":"pub fn map<F, V: ?Sized>(Self, F) -> OwnedRwLockMappedWriteGuard<T, V> where\nF: FnOnce(&mut U) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Make a new `OwnedRwLockMappedWriteGuard` for a component of the locked\n data.","sig":null,"attributes":[{"value":"/ Make a new `OwnedRwLockMappedWriteGuard` for a component of the locked","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099196,"byte_end":11099270,"line_start":26,"line_end":26,"column_start":5,"column_end":79}},{"value":"/ data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099275,"byte_end":11099284,"line_start":27,"line_end":27,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099289,"byte_end":11099292,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockMappedWriteGuard` passed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099297,"byte_end":11099371,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ in already locked the data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099376,"byte_end":11099407,"line_start":30,"line_end":30,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099412,"byte_end":11099415,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099420,"byte_end":11099479,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099484,"byte_end":11099559,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099564,"byte_end":11099620,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099625,"byte_end":11099628,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099633,"byte_end":11099647,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099652,"byte_end":11099655,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099660,"byte_end":11099667,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099672,"byte_end":11099695,"line_start":39,"line_end":39,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099700,"byte_end":11099753,"line_start":40,"line_end":40,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099758,"byte_end":11099761,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099766,"byte_end":11099814,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099819,"byte_end":11099839,"line_start":43,"line_end":43,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099844,"byte_end":11099847,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099852,"byte_end":11099872,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099877,"byte_end":11099900,"line_start":46,"line_end":46,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099905,"byte_end":11099950,"line_start":47,"line_end":47,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099955,"byte_end":11099958,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099963,"byte_end":11099968,"line_start":49,"line_end":49,"column_start":5,"column_end":10}},{"value":"/     let lock = Arc::clone(&lock);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099973,"byte_end":11100010,"line_start":50,"line_end":50,"column_start":5,"column_end":42}},{"value":"/     let mut mapped = OwnedRwLockWriteGuard::map(lock.write_owned().await, |f| &mut f.0);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11100015,"byte_end":11100107,"line_start":51,"line_end":51,"column_start":5,"column_end":97}},{"value":"/     *mapped = 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11100112,"byte_end":11100132,"line_start":52,"line_end":52,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11100137,"byte_end":11100142,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11100147,"byte_end":11100150,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11100155,"byte_end":11100198,"line_start":55,"line_end":55,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11100203,"byte_end":11100210,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11100215,"byte_end":11100222,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11100227,"byte_end":11100236,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8746},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101989,"byte_end":11101996,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockMappedWriteGuard<T, U>>::try_map","value":"pub fn try_map<F, V: ?Sized>(Self, F)\n-> Result<OwnedRwLockMappedWriteGuard<T, V>, Self> where F: FnOnce(&mut U) ->\nOption<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new `OwnedRwLockMappedWriteGuard` for a component\n of the locked data. The original guard is returned if the closure\n returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new `OwnedRwLockMappedWriteGuard` for a component","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11100808,"byte_end":11100880,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/ of the locked data. The original guard is returned if the closure","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11100885,"byte_end":11100954,"line_start":77,"line_end":77,"column_start":5,"column_end":74}},{"value":"/ returns `None`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11100959,"byte_end":11100978,"line_start":78,"line_end":78,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11100983,"byte_end":11100986,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockMappedWriteGuard` passed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11100991,"byte_end":11101065,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ in already locked the data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101070,"byte_end":11101101,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101106,"byte_end":11101109,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101114,"byte_end":11101165,"line_start":83,"line_end":83,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockMappedWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101170,"byte_end":11101256,"line_start":84,"line_end":84,"column_start":5,"column_end":91}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101261,"byte_end":11101325,"line_start":85,"line_end":85,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101330,"byte_end":11101333,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101338,"byte_end":11101352,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101357,"byte_end":11101360,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101365,"byte_end":11101372,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101377,"byte_end":11101400,"line_start":90,"line_end":90,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101405,"byte_end":11101458,"line_start":91,"line_end":91,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101463,"byte_end":11101466,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101471,"byte_end":11101519,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101524,"byte_end":11101544,"line_start":94,"line_end":94,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101549,"byte_end":11101552,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101557,"byte_end":11101577,"line_start":96,"line_end":96,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101582,"byte_end":11101605,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101610,"byte_end":11101655,"line_start":98,"line_end":98,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101660,"byte_end":11101663,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101668,"byte_end":11101673,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/     let guard = Arc::clone(&lock).write_owned().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101678,"byte_end":11101736,"line_start":101,"line_end":101,"column_start":5,"column_end":63}},{"value":"/     let mut guard = OwnedRwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101741,"byte_end":11101849,"line_start":102,"line_end":102,"column_start":5,"column_end":113}},{"value":"/     *guard = 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101854,"byte_end":11101873,"line_start":103,"line_end":103,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101878,"byte_end":11101883,"line_start":104,"line_end":104,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101888,"byte_end":11101891,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101896,"byte_end":11101939,"line_start":106,"line_end":106,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101944,"byte_end":11101951,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101956,"byte_end":11101963,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11101968,"byte_end":11101977,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":8786},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104043,"byte_end":11104058,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::read_guard::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":8789},{"krate":0,"index":8790},{"krate":0,"index":8791}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11103776,"byte_end":11103848,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11103849,"byte_end":11103861,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11103862,"byte_end":11103865,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11103866,"byte_end":11103921,"line_start":10,"line_end":10,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11103922,"byte_end":11103937,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11103938,"byte_end":11103941,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@crate::sync::RwLock::read","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11103942,"byte_end":11103988,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11103989,"byte_end":11104031,"line_start":14,"line_end":14,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":8795},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105417,"byte_end":11105420,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockReadGuard where F: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104243,"byte_end":11104311,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104316,"byte_end":11104319,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104324,"byte_end":11104397,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104402,"byte_end":11104422,"line_start":25,"line_end":25,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104427,"byte_end":11104430,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104435,"byte_end":11104486,"line_start":27,"line_end":27,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104491,"byte_end":11104561,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104566,"byte_end":11104630,"line_start":29,"line_end":29,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104635,"byte_end":11104638,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104643,"byte_end":11104715,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104720,"byte_end":11104746,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104751,"byte_end":11104754,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104759,"byte_end":11104868,"line_start":34,"line_end":34,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104873,"byte_end":11104936,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104941,"byte_end":11104944,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104949,"byte_end":11104963,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104968,"byte_end":11104971,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104976,"byte_end":11104983,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104988,"byte_end":11105035,"line_start":40,"line_end":40,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105040,"byte_end":11105043,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105048,"byte_end":11105096,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105101,"byte_end":11105121,"line_start":43,"line_end":43,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105126,"byte_end":11105129,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105134,"byte_end":11105154,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105159,"byte_end":11105182,"line_start":46,"line_end":46,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105187,"byte_end":11105222,"line_start":47,"line_end":47,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105227,"byte_end":11105230,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105235,"byte_end":11105269,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105274,"byte_end":11105328,"line_start":50,"line_end":50,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105333,"byte_end":11105336,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105341,"byte_end":11105367,"line_start":52,"line_end":52,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105372,"byte_end":11105379,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105384,"byte_end":11105391,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105396,"byte_end":11105405,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8798},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11107115,"byte_end":11107122,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockReadGuard, Self> where\nF: FnOnce(&T) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105798,"byte_end":11105867,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105872,"byte_end":11105942,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105947,"byte_end":11105958,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105963,"byte_end":11105966,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11105971,"byte_end":11106044,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106049,"byte_end":11106069,"line_start":76,"line_end":76,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106074,"byte_end":11106077,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106082,"byte_end":11106141,"line_start":78,"line_end":78,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106146,"byte_end":11106226,"line_start":79,"line_end":79,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106231,"byte_end":11106280,"line_start":80,"line_end":80,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106285,"byte_end":11106288,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106293,"byte_end":11106369,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106374,"byte_end":11106400,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106405,"byte_end":11106408,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106413,"byte_end":11106530,"line_start":85,"line_end":85,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106535,"byte_end":11106598,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106603,"byte_end":11106606,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106611,"byte_end":11106625,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106630,"byte_end":11106633,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106638,"byte_end":11106645,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106650,"byte_end":11106697,"line_start":91,"line_end":91,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106702,"byte_end":11106705,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106710,"byte_end":11106758,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106763,"byte_end":11106783,"line_start":94,"line_end":94,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106788,"byte_end":11106791,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106796,"byte_end":11106816,"line_start":96,"line_end":96,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106821,"byte_end":11106844,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106849,"byte_end":11106884,"line_start":98,"line_end":98,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106889,"byte_end":11106892,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106897,"byte_end":11106931,"line_start":100,"line_end":100,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11106936,"byte_end":11107026,"line_start":101,"line_end":101,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11107031,"byte_end":11107034,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11107039,"byte_end":11107065,"line_start":103,"line_end":103,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11107070,"byte_end":11107077,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11107082,"byte_end":11107089,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11107094,"byte_end":11107103,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":8839},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11108767,"byte_end":11108783,"line_start":17,"line_end":17,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::write_guard::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":8842},{"krate":0,"index":8843},{"krate":0,"index":8844},{"krate":0,"index":8845}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11108493,"byte_end":11108569,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11108570,"byte_end":11108582,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11108583,"byte_end":11108586,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] method","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11108587,"byte_end":11108640,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/ on [`RwLock`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11108641,"byte_end":11108659,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11108660,"byte_end":11108663,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@crate::sync::RwLock::write","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11108664,"byte_end":11108712,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11108713,"byte_end":11108755,"line_start":16,"line_end":16,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":8849},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11110326,"byte_end":11110329,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockMappedWriteGuard where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Make a new [`RwLockMappedWriteGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new [`RwLockMappedWriteGuard`] for a component of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109009,"byte_end":11109086,"line_start":25,"line_end":25,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109091,"byte_end":11109094,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109099,"byte_end":11109173,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109178,"byte_end":11109198,"line_start":28,"line_end":28,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109203,"byte_end":11109206,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109211,"byte_end":11109270,"line_start":30,"line_end":30,"column_start":5,"column_end":64}},{"value":"/ `RwLockWriteGuard::map(..)`. A method would interfere with methods of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109275,"byte_end":11109348,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ the same name on the contents of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109353,"byte_end":11109406,"line_start":32,"line_end":32,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109411,"byte_end":11109414,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109419,"byte_end":11109492,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109497,"byte_end":11109523,"line_start":35,"line_end":35,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109528,"byte_end":11109531,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109536,"byte_end":11109610,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109615,"byte_end":11109726,"line_start":38,"line_end":38,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109731,"byte_end":11109794,"line_start":39,"line_end":39,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109799,"byte_end":11109802,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109807,"byte_end":11109821,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109826,"byte_end":11109829,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109834,"byte_end":11109841,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109846,"byte_end":11109894,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109899,"byte_end":11109902,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109907,"byte_end":11109955,"line_start":46,"line_end":46,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109960,"byte_end":11109980,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109985,"byte_end":11109988,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11109993,"byte_end":11110013,"line_start":49,"line_end":49,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11110018,"byte_end":11110041,"line_start":50,"line_end":50,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11110046,"byte_end":11110081,"line_start":51,"line_end":51,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11110086,"byte_end":11110089,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11110094,"byte_end":11110099,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11110104,"byte_end":11110185,"line_start":54,"line_end":54,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11110190,"byte_end":11110210,"line_start":55,"line_end":55,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11110215,"byte_end":11110220,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11110225,"byte_end":11110228,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11110233,"byte_end":11110276,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11110281,"byte_end":11110288,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11110293,"byte_end":11110300,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11110305,"byte_end":11110314,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8852},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11112309,"byte_end":11112316,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockMappedWriteGuard, Self>\nwhere F: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`RwLockMappedWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`RwLockMappedWriteGuard`] for a component of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11110819,"byte_end":11110892,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11110897,"byte_end":11110971,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11110976,"byte_end":11110987,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11110992,"byte_end":11110995,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111000,"byte_end":11111074,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111079,"byte_end":11111099,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111104,"byte_end":11111107,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111112,"byte_end":11111163,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111168,"byte_end":11111243,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111248,"byte_end":11111312,"line_start":88,"line_end":88,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111317,"byte_end":11111320,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111325,"byte_end":11111398,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111403,"byte_end":11111433,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111438,"byte_end":11111441,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111446,"byte_end":11111520,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111525,"byte_end":11111644,"line_start":94,"line_end":94,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111649,"byte_end":11111712,"line_start":95,"line_end":95,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111717,"byte_end":11111720,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111725,"byte_end":11111739,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111744,"byte_end":11111747,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111752,"byte_end":11111759,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111764,"byte_end":11111812,"line_start":100,"line_end":100,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111817,"byte_end":11111820,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111825,"byte_end":11111873,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111878,"byte_end":11111898,"line_start":103,"line_end":103,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111903,"byte_end":11111906,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111911,"byte_end":11111931,"line_start":105,"line_end":105,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111936,"byte_end":11111959,"line_start":106,"line_end":106,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11111964,"byte_end":11111999,"line_start":107,"line_end":107,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11112004,"byte_end":11112007,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11112012,"byte_end":11112017,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11112022,"byte_end":11112061,"line_start":110,"line_end":110,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11112066,"byte_end":11112169,"line_start":111,"line_end":111,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11112174,"byte_end":11112193,"line_start":112,"line_end":112,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11112198,"byte_end":11112203,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11112208,"byte_end":11112211,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11112216,"byte_end":11112259,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11112264,"byte_end":11112271,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11112276,"byte_end":11112283,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11112288,"byte_end":11112297,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8855},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113241,"byte_end":11113252,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"into_mapped","qualname":"<RwLockWriteGuard>::into_mapped","value":"pub fn into_mapped(Self) -> RwLockMappedWriteGuard","parent":null,"children":[],"decl_id":null,"docs":" Converts this `RwLockWriteGuard` into an `RwLockMappedWriteGuard`. This\n method can be used to store a non-mapped guard in a struct field that\n expects a mapped guard.","sig":null,"attributes":[{"value":"/ Converts this `RwLockWriteGuard` into an `RwLockMappedWriteGuard`. This","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11112943,"byte_end":11113018,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ method can be used to store a non-mapped guard in a struct field that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113023,"byte_end":11113096,"line_start":143,"line_end":143,"column_start":5,"column_end":78}},{"value":"/ expects a mapped guard.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113101,"byte_end":11113128,"line_start":144,"line_end":144,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113133,"byte_end":11113136,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `RwLockWriteGuard::map(guard, |me| me)`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113141,"byte_end":11113215,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113220,"byte_end":11113229,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8857},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114531,"byte_end":11114540,"line_start":189,"line_end":189,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard>::downgrade","value":"pub fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113356,"byte_end":11113428,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113433,"byte_end":11113502,"line_start":153,"line_end":153,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113507,"byte_end":11113510,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113515,"byte_end":11113593,"line_start":155,"line_end":155,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113598,"byte_end":11113674,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113679,"byte_end":11113691,"line_start":157,"line_end":157,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113696,"byte_end":11113699,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113704,"byte_end":11113778,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113783,"byte_end":11113800,"line_start":160,"line_end":160,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113805,"byte_end":11113808,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113813,"byte_end":11113827,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113832,"byte_end":11113835,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113840,"byte_end":11113847,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113852,"byte_end":11113882,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113887,"byte_end":11113912,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113917,"byte_end":11113922,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113927,"byte_end":11113947,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113952,"byte_end":11113975,"line_start":169,"line_end":169,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11113980,"byte_end":11114020,"line_start":170,"line_end":170,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114025,"byte_end":11114028,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let n = lock.write().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114033,"byte_end":11114064,"line_start":172,"line_end":172,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114069,"byte_end":11114072,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114077,"byte_end":11114112,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114117,"byte_end":11114159,"line_start":175,"line_end":175,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write().await = 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114164,"byte_end":11114203,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114208,"byte_end":11114215,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114220,"byte_end":11114223,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114228,"byte_end":11114254,"line_start":179,"line_end":179,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114259,"byte_end":11114304,"line_start":180,"line_end":180,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114309,"byte_end":11114312,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114317,"byte_end":11114329,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114334,"byte_end":11114360,"line_start":183,"line_end":183,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114365,"byte_end":11114440,"line_start":184,"line_end":184,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114445,"byte_end":11114452,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114457,"byte_end":11114464,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114469,"byte_end":11114472,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114477,"byte_end":11114519,"line_start":188,"line_end":188,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":8893},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11116333,"byte_end":11116355,"line_start":16,"line_end":16,"column_start":12,"column_end":34},"name":"RwLockMappedWriteGuard","qualname":"::sync::rwlock::write_guard_mapped::RwLockMappedWriteGuard","value":"RwLockMappedWriteGuard {  }","parent":null,"children":[{"krate":0,"index":8896},{"krate":0,"index":8897},{"krate":0,"index":8898},{"krate":0,"index":8899}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11115897,"byte_end":11115973,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11115974,"byte_end":11115986,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11115987,"byte_end":11115990,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure is created by [mapping] an [`RwLockWriteGuard`]. It is a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11115991,"byte_end":11116066,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ separate type from `RwLockWriteGuard` to disallow downgrading a mapped","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11116067,"byte_end":11116141,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ guard, since doing so can cause undefined behavior.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11116142,"byte_end":11116197,"line_start":12,"line_end":12,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11116198,"byte_end":11116201,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [mapping]: method@crate::sync::RwLockWriteGuard::map","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11116202,"byte_end":11116258,"line_start":14,"line_end":14,"column_start":1,"column_end":57}},{"value":"/ [`RwLockWriteGuard`]: struct@crate::sync::RwLockWriteGuard","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11116259,"byte_end":11116321,"line_start":15,"line_end":15,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":8903},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117835,"byte_end":11117838,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockMappedWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockMappedWriteGuard where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockMappedWriteGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockMappedWriteGuard` for a component of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11116587,"byte_end":11116662,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11116667,"byte_end":11116670,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockMappedWriteGuard` passed in already","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11116675,"byte_end":11116755,"line_start":26,"line_end":26,"column_start":5,"column_end":85}},{"value":"/ locked the data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11116760,"byte_end":11116780,"line_start":27,"line_end":27,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11116785,"byte_end":11116788,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11116793,"byte_end":11116852,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `RwLockMappedWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11116857,"byte_end":11116933,"line_start":30,"line_end":30,"column_start":5,"column_end":81}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11116938,"byte_end":11116994,"line_start":31,"line_end":31,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11116999,"byte_end":11117002,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117007,"byte_end":11117080,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117085,"byte_end":11117111,"line_start":34,"line_end":34,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117116,"byte_end":11117119,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117124,"byte_end":11117235,"line_start":36,"line_end":36,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117240,"byte_end":11117303,"line_start":37,"line_end":37,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117308,"byte_end":11117311,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117316,"byte_end":11117330,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117335,"byte_end":11117338,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117343,"byte_end":11117350,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117355,"byte_end":11117403,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117408,"byte_end":11117411,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117416,"byte_end":11117464,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117469,"byte_end":11117489,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117494,"byte_end":11117497,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117502,"byte_end":11117522,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117527,"byte_end":11117550,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117555,"byte_end":11117590,"line_start":49,"line_end":49,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117595,"byte_end":11117598,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117603,"byte_end":11117608,"line_start":51,"line_end":51,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117613,"byte_end":11117694,"line_start":52,"line_end":52,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117699,"byte_end":11117719,"line_start":53,"line_end":53,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117724,"byte_end":11117729,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117734,"byte_end":11117737,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117742,"byte_end":11117785,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117790,"byte_end":11117797,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117802,"byte_end":11117809,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11117814,"byte_end":11117823,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8906},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119750,"byte_end":11119757,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockMappedWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockMappedWriteGuard, Self>\nwhere F: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockMappedWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockMappedWriteGuard`] for a component of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11118328,"byte_end":11118400,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11118405,"byte_end":11118479,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11118484,"byte_end":11118495,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11118500,"byte_end":11118503,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockMappedWriteGuard` passed in already","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11118508,"byte_end":11118588,"line_start":81,"line_end":81,"column_start":5,"column_end":85}},{"value":"/ locked the data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11118593,"byte_end":11118613,"line_start":82,"line_end":82,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11118618,"byte_end":11118621,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11118626,"byte_end":11118677,"line_start":84,"line_end":84,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockMappedWriteGuard::try_map(...)`. A method would interfere","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11118682,"byte_end":11118758,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/ with methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11118763,"byte_end":11118832,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11118837,"byte_end":11118840,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11118845,"byte_end":11118918,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11118923,"byte_end":11118953,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11118958,"byte_end":11118961,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11118966,"byte_end":11119085,"line_start":91,"line_end":91,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119090,"byte_end":11119153,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119158,"byte_end":11119161,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119166,"byte_end":11119180,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119185,"byte_end":11119188,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119193,"byte_end":11119200,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119205,"byte_end":11119253,"line_start":97,"line_end":97,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119258,"byte_end":11119261,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119266,"byte_end":11119314,"line_start":99,"line_end":99,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119319,"byte_end":11119339,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119344,"byte_end":11119347,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119352,"byte_end":11119372,"line_start":102,"line_end":102,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119377,"byte_end":11119400,"line_start":103,"line_end":103,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119405,"byte_end":11119440,"line_start":104,"line_end":104,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119445,"byte_end":11119448,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119453,"byte_end":11119458,"line_start":106,"line_end":106,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119463,"byte_end":11119502,"line_start":107,"line_end":107,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119507,"byte_end":11119610,"line_start":108,"line_end":108,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119615,"byte_end":11119634,"line_start":109,"line_end":109,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119639,"byte_end":11119644,"line_start":110,"line_end":110,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119649,"byte_end":11119652,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119657,"byte_end":11119700,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119705,"byte_end":11119712,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119717,"byte_end":11119724,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11119729,"byte_end":11119738,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":9492},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065852,"byte_end":11065858,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":9494},{"krate":0,"index":9495},{"krate":0,"index":9496}],"decl_id":null,"docs":" An asynchronous reader-writer lock.","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11063321,"byte_end":11063360,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11063361,"byte_end":11063364,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11063365,"byte_end":11063442,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11063443,"byte_end":11063522,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11063523,"byte_end":11063602,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11063603,"byte_end":11063661,"line_start":33,"line_end":33,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11063662,"byte_end":11063665,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11063666,"byte_end":11063744,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11063745,"byte_end":11063823,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11063824,"byte_end":11063902,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11063903,"byte_end":11063968,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11063969,"byte_end":11063972,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11063973,"byte_end":11064037,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064038,"byte_end":11064110,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064111,"byte_end":11064191,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064192,"byte_end":11064272,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064273,"byte_end":11064353,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064354,"byte_end":11064423,"line_start":45,"line_end":45,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064424,"byte_end":11064494,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064495,"byte_end":11064533,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064534,"byte_end":11064537,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064538,"byte_end":11064615,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064616,"byte_end":11064701,"line_start":50,"line_end":50,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064702,"byte_end":11064782,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064783,"byte_end":11064830,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064831,"byte_end":11064903,"line_start":53,"line_end":53,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064904,"byte_end":11064907,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064908,"byte_end":11064922,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064923,"byte_end":11064926,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064927,"byte_end":11064934,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064935,"byte_end":11064963,"line_start":58,"line_end":58,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064964,"byte_end":11064967,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064968,"byte_end":11064986,"line_start":60,"line_end":60,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11064987,"byte_end":11065008,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065009,"byte_end":11065043,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065044,"byte_end":11065047,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065048,"byte_end":11065096,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065097,"byte_end":11065106,"line_start":65,"line_end":65,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065107,"byte_end":11065146,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065147,"byte_end":11065186,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065187,"byte_end":11065218,"line_start":68,"line_end":68,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065219,"byte_end":11065250,"line_start":69,"line_end":69,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065251,"byte_end":11065300,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065301,"byte_end":11065304,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065305,"byte_end":11065356,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065357,"byte_end":11065366,"line_start":73,"line_end":73,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065367,"byte_end":11065410,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065411,"byte_end":11065431,"line_start":75,"line_end":75,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065432,"byte_end":11065462,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065463,"byte_end":11065502,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065503,"byte_end":11065508,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065509,"byte_end":11065516,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065517,"byte_end":11065520,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065521,"byte_end":11065555,"line_start":81,"line_end":81,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065556,"byte_end":11065585,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065586,"byte_end":11065633,"line_start":83,"line_end":83,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065634,"byte_end":11065683,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065684,"byte_end":11065721,"line_start":85,"line_end":85,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11065722,"byte_end":11065823,"line_start":86,"line_end":86,"column_start":1,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":8981},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069874,"byte_end":11069877,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069664,"byte_end":11069727,"line_start":191,"line_end":191,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069732,"byte_end":11069735,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069740,"byte_end":11069754,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069759,"byte_end":11069762,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069767,"byte_end":11069774,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069779,"byte_end":11069807,"line_start":196,"line_end":196,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069812,"byte_end":11069815,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069820,"byte_end":11069850,"line_start":198,"line_end":198,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069855,"byte_end":11069862,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8982},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11070475,"byte_end":11070491,"line_start":225,"line_end":225,"column_start":12,"column_end":28},"name":"with_max_readers","qualname":"<RwLock<T>>::with_max_readers","value":"pub fn with_max_readers(T, u32) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked\n and allows a maximum of `max_reads` concurrent readers.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11070090,"byte_end":11070152,"line_start":211,"line_end":211,"column_start":5,"column_end":67}},{"value":"/ and allows a maximum of `max_reads` concurrent readers.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11070157,"byte_end":11070216,"line_start":212,"line_end":212,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11070221,"byte_end":11070224,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11070229,"byte_end":11070243,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11070248,"byte_end":11070251,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11070256,"byte_end":11070263,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11070268,"byte_end":11070296,"line_start":217,"line_end":217,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11070301,"byte_end":11070304,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::with_max_readers(5, 1024);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11070309,"byte_end":11070358,"line_start":219,"line_end":219,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11070363,"byte_end":11070370,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11070375,"byte_end":11070378,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11070383,"byte_end":11070395,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11070400,"byte_end":11070403,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Panics if `max_reads` is more than `u32::MAX >> 3`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11070408,"byte_end":11070463,"line_start":224,"line_end":224,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8983},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073668,"byte_end":11073672,"line_start":326,"line_end":326,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11072198,"byte_end":11072271,"line_start":287,"line_end":287,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11072276,"byte_end":11072322,"line_start":288,"line_end":288,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11072327,"byte_end":11072330,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11072335,"byte_end":11072408,"line_start":290,"line_end":290,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11072413,"byte_end":11072488,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11072493,"byte_end":11072496,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11072501,"byte_end":11072574,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11072579,"byte_end":11072648,"line_start":294,"line_end":294,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11072653,"byte_end":11072727,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11072732,"byte_end":11072805,"line_start":296,"line_end":296,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11072810,"byte_end":11072834,"line_start":297,"line_end":297,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11072839,"byte_end":11072842,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11072847,"byte_end":11072921,"line_start":299,"line_end":299,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11072926,"byte_end":11072943,"line_start":300,"line_end":300,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11072948,"byte_end":11072951,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11072956,"byte_end":11072970,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11072975,"byte_end":11072978,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11072983,"byte_end":11072990,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11072995,"byte_end":11073018,"line_start":305,"line_end":305,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073023,"byte_end":11073051,"line_start":306,"line_end":306,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073056,"byte_end":11073059,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073064,"byte_end":11073082,"line_start":308,"line_end":308,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073087,"byte_end":11073108,"line_start":309,"line_end":309,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073113,"byte_end":11073157,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073162,"byte_end":11073196,"line_start":311,"line_end":311,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073201,"byte_end":11073204,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073209,"byte_end":11073243,"line_start":313,"line_end":313,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073248,"byte_end":11073274,"line_start":314,"line_end":314,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073279,"byte_end":11073282,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073287,"byte_end":11073320,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073325,"byte_end":11073395,"line_start":317,"line_end":317,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073400,"byte_end":11073440,"line_start":318,"line_end":318,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073445,"byte_end":11073475,"line_start":319,"line_end":319,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073480,"byte_end":11073537,"line_start":320,"line_end":320,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073542,"byte_end":11073545,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073550,"byte_end":11073608,"line_start":322,"line_end":322,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073613,"byte_end":11073629,"line_start":323,"line_end":323,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073634,"byte_end":11073638,"line_start":324,"line_end":324,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11073643,"byte_end":11073650,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8987},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075972,"byte_end":11075982,"line_start":384,"line_end":384,"column_start":18,"column_end":28},"name":"read_owned","qualname":"<RwLock<T>>::read_owned","value":"pub async fn read_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11074119,"byte_end":11074192,"line_start":339,"line_end":339,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11074197,"byte_end":11074243,"line_start":340,"line_end":340,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11074248,"byte_end":11074251,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11074256,"byte_end":11074329,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11074334,"byte_end":11074409,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11074414,"byte_end":11074417,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::read`], except that the returned","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11074422,"byte_end":11074496,"line_start":345,"line_end":345,"column_start":5,"column_end":79}},{"value":"/ guard references the `RwLock` with an [`Arc`] rather than by borrowing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11074501,"byte_end":11074575,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ it. Therefore, the `RwLock` must be wrapped in an `Arc` to call this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11074580,"byte_end":11074652,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11074657,"byte_end":11074732,"line_start":348,"line_end":348,"column_start":5,"column_end":80}},{"value":"/ the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11074737,"byte_end":11074780,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11074785,"byte_end":11074788,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11074793,"byte_end":11074866,"line_start":351,"line_end":351,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11074871,"byte_end":11074940,"line_start":352,"line_end":352,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11074945,"byte_end":11075019,"line_start":353,"line_end":353,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075024,"byte_end":11075097,"line_start":354,"line_end":354,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075102,"byte_end":11075126,"line_start":355,"line_end":355,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075131,"byte_end":11075134,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075139,"byte_end":11075213,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075218,"byte_end":11075235,"line_start":358,"line_end":358,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075240,"byte_end":11075243,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075248,"byte_end":11075262,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075267,"byte_end":11075270,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075275,"byte_end":11075282,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075287,"byte_end":11075310,"line_start":363,"line_end":363,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075315,"byte_end":11075343,"line_start":364,"line_end":364,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075348,"byte_end":11075351,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075356,"byte_end":11075374,"line_start":366,"line_end":366,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075379,"byte_end":11075400,"line_start":367,"line_end":367,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075405,"byte_end":11075449,"line_start":368,"line_end":368,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075454,"byte_end":11075488,"line_start":369,"line_end":369,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075493,"byte_end":11075496,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read_owned().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075501,"byte_end":11075541,"line_start":371,"line_end":371,"column_start":5,"column_end":45}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075546,"byte_end":11075572,"line_start":372,"line_end":372,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075577,"byte_end":11075580,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075585,"byte_end":11075618,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075623,"byte_end":11075693,"line_start":375,"line_end":375,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read_owned().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075698,"byte_end":11075744,"line_start":376,"line_end":376,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075749,"byte_end":11075779,"line_start":377,"line_end":377,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075784,"byte_end":11075841,"line_start":378,"line_end":378,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075846,"byte_end":11075849,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075854,"byte_end":11075912,"line_start":380,"line_end":380,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075917,"byte_end":11075933,"line_start":381,"line_end":381,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075938,"byte_end":11075942,"line_start":382,"line_end":382,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11075947,"byte_end":11075954,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8991},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11077471,"byte_end":11077479,"line_start":429,"line_end":429,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"pub fn try_read(&Self) -> Result<RwLockReadGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11076452,"byte_end":11076514,"line_start":397,"line_end":397,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11076519,"byte_end":11076522,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11076527,"byte_end":11076604,"line_start":399,"line_end":399,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11076609,"byte_end":11076680,"line_start":400,"line_end":400,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11076685,"byte_end":11076702,"line_start":401,"line_end":401,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11076707,"byte_end":11076710,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11076715,"byte_end":11076749,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11076754,"byte_end":11076757,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11076762,"byte_end":11076776,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11076781,"byte_end":11076784,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11076789,"byte_end":11076796,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11076801,"byte_end":11076824,"line_start":408,"line_end":408,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11076829,"byte_end":11076857,"line_start":409,"line_end":409,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11076862,"byte_end":11076865,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11076870,"byte_end":11076888,"line_start":411,"line_end":411,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11076893,"byte_end":11076914,"line_start":412,"line_end":412,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11076919,"byte_end":11076963,"line_start":413,"line_end":413,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11076968,"byte_end":11077002,"line_start":414,"line_end":414,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11077007,"byte_end":11077010,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11077015,"byte_end":11077056,"line_start":416,"line_end":416,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11077061,"byte_end":11077087,"line_start":417,"line_end":417,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11077092,"byte_end":11077095,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11077100,"byte_end":11077133,"line_start":419,"line_end":419,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11077138,"byte_end":11077208,"line_start":420,"line_end":420,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11077213,"byte_end":11077253,"line_start":421,"line_end":421,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11077258,"byte_end":11077288,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11077293,"byte_end":11077350,"line_start":423,"line_end":423,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11077355,"byte_end":11077358,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11077363,"byte_end":11077416,"line_start":425,"line_end":425,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11077421,"byte_end":11077437,"line_start":426,"line_end":426,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11077442,"byte_end":11077447,"line_start":427,"line_end":427,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11077452,"byte_end":11077459,"line_start":428,"line_end":428,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8992},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11079311,"byte_end":11079325,"line_start":481,"line_end":481,"column_start":12,"column_end":26},"name":"try_read_owned","qualname":"<RwLock<T>>::try_read_owned","value":"pub fn try_read_owned(Arc<Self>)\n-> Result<OwnedRwLockReadGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11077905,"byte_end":11077967,"line_start":443,"line_end":443,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11077972,"byte_end":11077975,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11077980,"byte_end":11078057,"line_start":445,"line_end":445,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078062,"byte_end":11078133,"line_start":446,"line_end":446,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078138,"byte_end":11078155,"line_start":447,"line_end":447,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078160,"byte_end":11078163,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::try_read`], except that the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078168,"byte_end":11078237,"line_start":449,"line_end":449,"column_start":5,"column_end":74}},{"value":"/ returned guard references the `RwLock` with an [`Arc`] rather than by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078242,"byte_end":11078315,"line_start":450,"line_end":450,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `RwLock` must be wrapped in an `Arc` to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078320,"byte_end":11078392,"line_start":451,"line_end":451,"column_start":5,"column_end":77}},{"value":"/ call this method, and the guard will live for the `'static` lifetime,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078397,"byte_end":11078470,"line_start":452,"line_end":452,"column_start":5,"column_end":78}},{"value":"/ as it keeps the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078475,"byte_end":11078530,"line_start":453,"line_end":453,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078535,"byte_end":11078538,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078543,"byte_end":11078577,"line_start":455,"line_end":455,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078582,"byte_end":11078585,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078590,"byte_end":11078604,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078609,"byte_end":11078612,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078617,"byte_end":11078624,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078629,"byte_end":11078652,"line_start":460,"line_end":460,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078657,"byte_end":11078685,"line_start":461,"line_end":461,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078690,"byte_end":11078693,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078698,"byte_end":11078716,"line_start":463,"line_end":463,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078721,"byte_end":11078742,"line_start":464,"line_end":464,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078747,"byte_end":11078791,"line_start":465,"line_end":465,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078796,"byte_end":11078830,"line_start":466,"line_end":466,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078835,"byte_end":11078838,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read_owned().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078843,"byte_end":11078890,"line_start":468,"line_end":468,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078895,"byte_end":11078921,"line_start":469,"line_end":469,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078926,"byte_end":11078929,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078934,"byte_end":11078967,"line_start":471,"line_end":471,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11078972,"byte_end":11079042,"line_start":472,"line_end":472,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read_owned().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11079047,"byte_end":11079093,"line_start":473,"line_end":473,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11079098,"byte_end":11079128,"line_start":474,"line_end":474,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11079133,"byte_end":11079190,"line_start":475,"line_end":475,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11079195,"byte_end":11079198,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11079203,"byte_end":11079256,"line_start":477,"line_end":477,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11079261,"byte_end":11079277,"line_start":478,"line_end":478,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11079282,"byte_end":11079287,"line_start":479,"line_end":479,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11079292,"byte_end":11079299,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8993},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080411,"byte_end":11080416,"line_start":517,"line_end":517,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11079774,"byte_end":11079846,"line_start":495,"line_end":495,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11079851,"byte_end":11079902,"line_start":496,"line_end":496,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11079907,"byte_end":11079910,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers currently","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11079915,"byte_end":11079987,"line_start":498,"line_end":498,"column_start":5,"column_end":77}},{"value":"/ have access to the lock.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11079992,"byte_end":11080020,"line_start":499,"line_end":499,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080025,"byte_end":11080028,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080033,"byte_end":11080108,"line_start":501,"line_end":501,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080113,"byte_end":11080130,"line_start":502,"line_end":502,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080135,"byte_end":11080138,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080143,"byte_end":11080157,"line_start":504,"line_end":504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080162,"byte_end":11080165,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080170,"byte_end":11080177,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080182,"byte_end":11080210,"line_start":507,"line_end":507,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080215,"byte_end":11080218,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080223,"byte_end":11080241,"line_start":509,"line_end":509,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080246,"byte_end":11080267,"line_start":510,"line_end":510,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080272,"byte_end":11080304,"line_start":511,"line_end":511,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080309,"byte_end":11080312,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080317,"byte_end":11080354,"line_start":513,"line_end":513,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080359,"byte_end":11080372,"line_start":514,"line_end":514,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080377,"byte_end":11080381,"line_start":515,"line_end":515,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080386,"byte_end":11080393,"line_start":516,"line_end":516,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8997},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081963,"byte_end":11081974,"line_start":560,"line_end":560,"column_start":18,"column_end":29},"name":"write_owned","qualname":"<RwLock<T>>::write_owned","value":"pub async fn write_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080910,"byte_end":11080982,"line_start":531,"line_end":531,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11080987,"byte_end":11081038,"line_start":532,"line_end":532,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081043,"byte_end":11081046,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers currently","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081051,"byte_end":11081123,"line_start":534,"line_end":534,"column_start":5,"column_end":77}},{"value":"/ have access to the lock.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081128,"byte_end":11081156,"line_start":535,"line_end":535,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081161,"byte_end":11081164,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::write`], except that the returned","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081169,"byte_end":11081244,"line_start":537,"line_end":537,"column_start":5,"column_end":80}},{"value":"/ guard references the `RwLock` with an [`Arc`] rather than by borrowing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081249,"byte_end":11081323,"line_start":538,"line_end":538,"column_start":5,"column_end":79}},{"value":"/ it. Therefore, the `RwLock` must be wrapped in an `Arc` to call this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081328,"byte_end":11081400,"line_start":539,"line_end":539,"column_start":5,"column_end":77}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081405,"byte_end":11081480,"line_start":540,"line_end":540,"column_start":5,"column_end":80}},{"value":"/ the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081485,"byte_end":11081528,"line_start":541,"line_end":541,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081533,"byte_end":11081536,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081541,"byte_end":11081616,"line_start":543,"line_end":543,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081621,"byte_end":11081638,"line_start":544,"line_end":544,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081643,"byte_end":11081646,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081651,"byte_end":11081665,"line_start":546,"line_end":546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081670,"byte_end":11081673,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081678,"byte_end":11081685,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081690,"byte_end":11081713,"line_start":549,"line_end":549,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081718,"byte_end":11081746,"line_start":550,"line_end":550,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081751,"byte_end":11081754,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081759,"byte_end":11081777,"line_start":552,"line_end":552,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081782,"byte_end":11081803,"line_start":553,"line_end":553,"column_start":5,"column_end":26}},{"value":"/   let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081808,"byte_end":11081850,"line_start":554,"line_end":554,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081855,"byte_end":11081858,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write_owned().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081863,"byte_end":11081906,"line_start":556,"line_end":556,"column_start":5,"column_end":48}},{"value":"/   *n = 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081911,"byte_end":11081924,"line_start":557,"line_end":557,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081929,"byte_end":11081933,"line_start":558,"line_end":558,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11081938,"byte_end":11081945,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9001},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11083131,"byte_end":11083140,"line_start":597,"line_end":597,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"pub fn try_write(&Self) -> Result<RwLockWriteGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11082491,"byte_end":11082557,"line_start":574,"line_end":574,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11082562,"byte_end":11082565,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11082570,"byte_end":11082647,"line_start":576,"line_end":576,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11082652,"byte_end":11082724,"line_start":577,"line_end":577,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11082729,"byte_end":11082746,"line_start":578,"line_end":578,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11082751,"byte_end":11082754,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11082759,"byte_end":11082793,"line_start":580,"line_end":580,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11082798,"byte_end":11082801,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11082806,"byte_end":11082820,"line_start":582,"line_end":582,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11082825,"byte_end":11082828,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11082833,"byte_end":11082840,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11082845,"byte_end":11082873,"line_start":585,"line_end":585,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11082878,"byte_end":11082881,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11082886,"byte_end":11082904,"line_start":587,"line_end":587,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11082909,"byte_end":11082930,"line_start":588,"line_end":588,"column_start":5,"column_end":26}},{"value":"/     let rw = RwLock::new(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11082935,"byte_end":11082967,"line_start":589,"line_end":589,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11082972,"byte_end":11082975,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     let v = rw.read().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11082980,"byte_end":11083012,"line_start":591,"line_end":591,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11083017,"byte_end":11083043,"line_start":592,"line_end":592,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11083048,"byte_end":11083051,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write().is_err());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11083056,"byte_end":11083097,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11083102,"byte_end":11083107,"line_start":595,"line_end":595,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11083112,"byte_end":11083119,"line_start":596,"line_end":596,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9002},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084692,"byte_end":11084707,"line_start":642,"line_end":642,"column_start":12,"column_end":27},"name":"try_write_owned","qualname":"<RwLock<T>>::try_write_owned","value":"pub fn try_write_owned(Arc<Self>)\n-> Result<OwnedRwLockWriteGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11083613,"byte_end":11083679,"line_start":612,"line_end":612,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11083684,"byte_end":11083687,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11083692,"byte_end":11083769,"line_start":614,"line_end":614,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11083774,"byte_end":11083846,"line_start":615,"line_end":615,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11083851,"byte_end":11083868,"line_start":616,"line_end":616,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11083873,"byte_end":11083876,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::try_write`], except that the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11083881,"byte_end":11083951,"line_start":618,"line_end":618,"column_start":5,"column_end":75}},{"value":"/ returned guard references the `RwLock` with an [`Arc`] rather than by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11083956,"byte_end":11084029,"line_start":619,"line_end":619,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `RwLock` must be wrapped in an `Arc` to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084034,"byte_end":11084106,"line_start":620,"line_end":620,"column_start":5,"column_end":77}},{"value":"/ call this method, and the guard will live for the `'static` lifetime,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084111,"byte_end":11084184,"line_start":621,"line_end":621,"column_start":5,"column_end":78}},{"value":"/ as it keeps the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084189,"byte_end":11084244,"line_start":622,"line_end":622,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084249,"byte_end":11084252,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084257,"byte_end":11084291,"line_start":624,"line_end":624,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084296,"byte_end":11084299,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084304,"byte_end":11084318,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084323,"byte_end":11084326,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084331,"byte_end":11084338,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084343,"byte_end":11084366,"line_start":629,"line_end":629,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084371,"byte_end":11084399,"line_start":630,"line_end":630,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084404,"byte_end":11084407,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084412,"byte_end":11084430,"line_start":632,"line_end":632,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084435,"byte_end":11084456,"line_start":633,"line_end":633,"column_start":5,"column_end":26}},{"value":"/     let rw = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084461,"byte_end":11084503,"line_start":634,"line_end":634,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084508,"byte_end":11084511,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/     let v = Arc::clone(&rw).read_owned().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084516,"byte_end":11084567,"line_start":636,"line_end":636,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084572,"byte_end":11084598,"line_start":637,"line_end":637,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084603,"byte_end":11084606,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write_owned().is_err());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084611,"byte_end":11084658,"line_start":639,"line_end":639,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084663,"byte_end":11084668,"line_start":640,"line_end":640,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11084673,"byte_end":11084680,"line_start":641,"line_end":641,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9003},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085675,"byte_end":11085682,"line_start":674,"line_end":674,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085203,"byte_end":11085258,"line_start":657,"line_end":657,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085263,"byte_end":11085266,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `RwLock` mutably, no actual locking needs to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085271,"byte_end":11085347,"line_start":659,"line_end":659,"column_start":5,"column_end":81}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085352,"byte_end":11085426,"line_start":660,"line_end":660,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085431,"byte_end":11085434,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085439,"byte_end":11085453,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085458,"byte_end":11085461,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085466,"byte_end":11085473,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085478,"byte_end":11085506,"line_start":665,"line_end":665,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085511,"byte_end":11085514,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085519,"byte_end":11085534,"line_start":667,"line_end":667,"column_start":5,"column_end":20}},{"value":"/     let mut lock = RwLock::new(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085539,"byte_end":11085577,"line_start":668,"line_end":668,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085582,"byte_end":11085585,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/     let n = lock.get_mut();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085590,"byte_end":11085621,"line_start":670,"line_end":670,"column_start":5,"column_end":36}},{"value":"/     *n = 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085626,"byte_end":11085641,"line_start":671,"line_end":671,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085646,"byte_end":11085651,"line_start":672,"line_end":672,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085656,"byte_end":11085663,"line_start":673,"line_end":673,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9004},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085916,"byte_end":11085926,"line_start":682,"line_end":682,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11085851,"byte_end":11085904,"line_start":681,"line_end":681,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":9130},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11135003,"byte_end":11135011,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"OnceCell","qualname":"::sync::once_cell::OnceCell","value":"OnceCell {  }","parent":null,"children":[{"krate":0,"index":9132},{"krate":0,"index":9133},{"krate":0,"index":9134}],"decl_id":null,"docs":" A thread-safe cell which can be written to only once.","sig":null,"attributes":[{"value":"/ A thread-safe cell which can be written to only once.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134325,"byte_end":11134382,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134383,"byte_end":11134386,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Provides the functionality to either set the value, in case `OnceCell`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134387,"byte_end":11134461,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ is uninitialized, or get the already initialized value by using an async","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134462,"byte_end":11134538,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ function via [`OnceCell::get_or_init`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134539,"byte_end":11134582,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134583,"byte_end":11134586,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`OnceCell::get_or_init`]: crate::sync::OnceCell::get_or_init","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134587,"byte_end":11134652,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134653,"byte_end":11134656,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134657,"byte_end":11134671,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134672,"byte_end":11134679,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::OnceCell;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134680,"byte_end":11134710,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134711,"byte_end":11134714,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> u32 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134715,"byte_end":11134755,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/     1 + 1","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134756,"byte_end":11134769,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134770,"byte_end":11134775,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134776,"byte_end":11134779,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ static ONCE: OnceCell<u32> = OnceCell::const_new();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134780,"byte_end":11134835,"line_start":27,"line_end":27,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134836,"byte_end":11134839,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134840,"byte_end":11134858,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134859,"byte_end":11134880,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let result1 = ONCE.get_or_init(some_computation).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134881,"byte_end":11134944,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/     assert_eq!(*result1, 2);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134945,"byte_end":11134977,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134978,"byte_end":11134983,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11134984,"byte_end":11134991,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":9155},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11136083,"byte_end":11136086,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<OnceCell<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new uninitialized OnceCell instance.\n","sig":null,"attributes":[{"value":"/ Creates a new uninitialized OnceCell instance.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11136021,"byte_end":11136071,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":9156},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11136497,"byte_end":11136505,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"new_with","qualname":"<OnceCell<T>>::new_with","value":"pub fn new_with(Option<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new initialized OnceCell instance if `value` is `Some`, otherwise\n has the same functionality as [`OnceCell::new`].","sig":null,"attributes":[{"value":"/ Creates a new initialized OnceCell instance if `value` is `Some`, otherwise","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11136287,"byte_end":11136366,"line_start":90,"line_end":90,"column_start":5,"column_end":84}},{"value":"/ has the same functionality as [`OnceCell::new`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11136371,"byte_end":11136423,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11136428,"byte_end":11136431,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::new`]: crate::sync::OnceCell::new","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11136436,"byte_end":11136485,"line_start":93,"line_end":93,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":9157},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11137357,"byte_end":11137368,"line_start":120,"line_end":120,"column_start":12,"column_end":23},"name":"initialized","qualname":"<OnceCell<T>>::initialized","value":"pub fn initialized(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the value of the OnceCell is set or not.\n","sig":null,"attributes":[{"value":"/ Whether the value of the OnceCell is set or not.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11137293,"byte_end":11137345,"line_start":119,"line_end":119,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":9164},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11138310,"byte_end":11138313,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"get","qualname":"<OnceCell<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to get a reference to the value of the OnceCell.","sig":null,"attributes":[{"value":"/ Tries to get a reference to the value of the OnceCell.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11138146,"byte_end":11138204,"line_start":143,"line_end":143,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11138209,"byte_end":11138212,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Returns None if the value of the OnceCell hasn't previously been initialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11138217,"byte_end":11138298,"line_start":145,"line_end":145,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":9165},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11138628,"byte_end":11138635,"line_start":157,"line_end":157,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OnceCell<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to return a mutable reference to the value of the cell.","sig":null,"attributes":[{"value":"/ Tries to return a mutable reference to the value of the cell.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11138474,"byte_end":11138539,"line_start":154,"line_end":154,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11138544,"byte_end":11138547,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Returns None if the cell hasn't previously been initialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11138552,"byte_end":11138616,"line_start":156,"line_end":156,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":9166},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11139522,"byte_end":11139525,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"set","qualname":"<OnceCell<T>>::set","value":"pub fn set(&Self, T) -> Result<(), SetError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the OnceCell to the argument value.","sig":null,"attributes":[{"value":"/ Sets the value of the OnceCell to the argument value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11138808,"byte_end":11138865,"line_start":165,"line_end":165,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11138870,"byte_end":11138873,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ If the value of the OnceCell was already set prior to this call","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11138878,"byte_end":11138945,"line_start":167,"line_end":167,"column_start":5,"column_end":72}},{"value":"/ then [`SetError::AlreadyInitializedError`] is returned. If another thread","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11138950,"byte_end":11139027,"line_start":168,"line_end":168,"column_start":5,"column_end":82}},{"value":"/ is initializing the cell while this method is called,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11139032,"byte_end":11139089,"line_start":169,"line_end":169,"column_start":5,"column_end":62}},{"value":"/ [`SetError::InitializingError`] is returned. In order to wait","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11139094,"byte_end":11139159,"line_start":170,"line_end":170,"column_start":5,"column_end":70}},{"value":"/ for an ongoing initialization to finish, call","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11139164,"byte_end":11139213,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/ [`OnceCell::get_or_init`] instead.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11139218,"byte_end":11139256,"line_start":172,"line_end":172,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11139261,"byte_end":11139264,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ [`SetError::AlreadyInitializedError`]: crate::sync::SetError::AlreadyInitializedError","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11139269,"byte_end":11139358,"line_start":174,"line_end":174,"column_start":5,"column_end":94}},{"value":"/ [`SetError::InitializingError`]: crate::sync::SetError::InitializingError","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11139363,"byte_end":11139440,"line_start":175,"line_end":175,"column_start":5,"column_end":82}},{"value":"/ ['OnceCell::get_or_init`]: crate::sync::OnceCell::get_or_init","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11139445,"byte_end":11139510,"line_start":176,"line_end":176,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":9167},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11141203,"byte_end":11141214,"line_start":214,"line_end":214,"column_start":18,"column_end":29},"name":"get_or_init","qualname":"<OnceCell<T>>::get_or_init","value":"pub async fn get_or_init<F, Fut, '_, '_>(&'_ Self, F) -> /*impl Trait*/ where\nF: FnOnce() -> Fut, Fut: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to initialize the value of the OnceCell using the async function `f`.\n If the value of the OnceCell was already initialized prior to this call,\n a reference to that initialized value is returned. If some other thread\n initiated the initialization prior to this call and the initialization\n hasn't completed, this call waits until the initialization is finished.","sig":null,"attributes":[{"value":"/ Tries to initialize the value of the OnceCell using the async function `f`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11140707,"byte_end":11140786,"line_start":207,"line_end":207,"column_start":5,"column_end":84}},{"value":"/ If the value of the OnceCell was already initialized prior to this call,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11140791,"byte_end":11140867,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ a reference to that initialized value is returned. If some other thread","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11140872,"byte_end":11140947,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ initiated the initialization prior to this call and the initialization","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11140952,"byte_end":11141026,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ hasn't completed, this call waits until the initialization is finished.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11141031,"byte_end":11141106,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11141111,"byte_end":11141114,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This will deadlock if `f` tries to initialize the cell itself.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11141119,"byte_end":11141185,"line_start":213,"line_end":213,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":9172},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11144094,"byte_end":11144109,"line_start":270,"line_end":270,"column_start":18,"column_end":33},"name":"get_or_try_init","qualname":"<OnceCell<T>>::get_or_try_init","value":"pub async fn get_or_try_init<E, F, Fut, '_, '_>(&'_ Self, F) -> /*impl Trait*/\nwhere F: FnOnce() -> Fut, Fut: Future<Output = Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to initialize the value of the OnceCell using the async function `f`.\n If the value of the OnceCell was already initialized prior to this call,\n a reference to that initialized value is returned. If some other thread\n initiated the initialization prior to this call and the initialization\n hasn't completed, this call waits until the initialization is finished.\n If the function argument `f` returns an error, `get_or_try_init`\n returns that error, otherwise the result of `f` will be stored in the cell.","sig":null,"attributes":[{"value":"/ Tries to initialize the value of the OnceCell using the async function `f`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11143441,"byte_end":11143520,"line_start":261,"line_end":261,"column_start":5,"column_end":84}},{"value":"/ If the value of the OnceCell was already initialized prior to this call,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11143525,"byte_end":11143601,"line_start":262,"line_end":262,"column_start":5,"column_end":81}},{"value":"/ a reference to that initialized value is returned. If some other thread","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11143606,"byte_end":11143681,"line_start":263,"line_end":263,"column_start":5,"column_end":80}},{"value":"/ initiated the initialization prior to this call and the initialization","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11143686,"byte_end":11143760,"line_start":264,"line_end":264,"column_start":5,"column_end":79}},{"value":"/ hasn't completed, this call waits until the initialization is finished.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11143765,"byte_end":11143840,"line_start":265,"line_end":265,"column_start":5,"column_end":80}},{"value":"/ If the function argument `f` returns an error, `get_or_try_init`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11143845,"byte_end":11143913,"line_start":266,"line_end":266,"column_start":5,"column_end":73}},{"value":"/ returns that error, otherwise the result of `f` will be stored in the cell.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11143918,"byte_end":11143997,"line_start":267,"line_end":267,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11144002,"byte_end":11144005,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This will deadlock if `f` tries to initialize the cell itself.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11144010,"byte_end":11144076,"line_start":269,"line_end":269,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":9178},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11146753,"byte_end":11146763,"line_start":325,"line_end":325,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<OnceCell<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Moves the value out of the cell, destroying the cell in the process.","sig":null,"attributes":[{"value":"/ Moves the value out of the cell, destroying the cell in the process.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11146608,"byte_end":11146680,"line_start":322,"line_end":322,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11146685,"byte_end":11146688,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the cell is uninitialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11146693,"byte_end":11146741,"line_start":324,"line_end":324,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":9180},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11147236,"byte_end":11147240,"line_start":338,"line_end":338,"column_start":12,"column_end":16},"name":"take","qualname":"<OnceCell<T>>::take","value":"pub fn take(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the current value, leaving the cell uninitialized.","sig":null,"attributes":[{"value":"/ Takes ownership of the current value, leaving the cell uninitialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11147090,"byte_end":11147163,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11147168,"byte_end":11147171,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the cell is uninitialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11147176,"byte_end":11147224,"line_start":337,"line_end":337,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9502},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148264,"byte_end":11148287,"line_start":364,"line_end":364,"column_start":5,"column_end":28},"name":"AlreadyInitializedError","qualname":"::sync::once_cell::SetError::AlreadyInitializedError","value":"SetError::AlreadyInitializedError(T)","parent":{"krate":0,"index":9500},"children":[],"decl_id":null,"docs":" Error resulting from [`OnceCell::set`] calls if the cell was previously initialized.","sig":null,"attributes":[{"value":"/ Error resulting from [`OnceCell::set`] calls if the cell was previously initialized.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148109,"byte_end":11148197,"line_start":361,"line_end":361,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148202,"byte_end":11148205,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148210,"byte_end":11148259,"line_start":363,"line_end":363,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9505},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148499,"byte_end":11148516,"line_start":370,"line_end":370,"column_start":5,"column_end":22},"name":"InitializingError","qualname":"::sync::once_cell::SetError::InitializingError","value":"SetError::InitializingError(T)","parent":{"krate":0,"index":9500},"children":[],"decl_id":null,"docs":" Error resulting from [`OnceCell::set`] calls when the cell is currently being\n inintialized during the calls to that method.","sig":null,"attributes":[{"value":"/ Error resulting from [`OnceCell::set`] calls when the cell is currently being","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148297,"byte_end":11148378,"line_start":366,"line_end":366,"column_start":5,"column_end":86}},{"value":"/ inintialized during the calls to that method.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148383,"byte_end":11148432,"line_start":367,"line_end":367,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148437,"byte_end":11148440,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148445,"byte_end":11148494,"line_start":369,"line_end":369,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":9500},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148091,"byte_end":11148099,"line_start":360,"line_end":360,"column_start":10,"column_end":18},"name":"SetError","qualname":"::sync::once_cell::SetError","value":"pub enum SetError<T> { AlreadyInitializedError(T), InitializingError(T), }","parent":null,"children":[{"krate":0,"index":9502},{"krate":0,"index":9505}],"decl_id":null,"docs":" Errors that can be returned from [`OnceCell::set`]","sig":null,"attributes":[{"value":"/ Errors that can be returned from [`OnceCell::set`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11147945,"byte_end":11147999,"line_start":356,"line_end":356,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148000,"byte_end":11148003,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148004,"byte_end":11148053,"line_start":358,"line_end":358,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":9192},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148980,"byte_end":11148999,"line_start":386,"line_end":386,"column_start":12,"column_end":31},"name":"is_already_init_err","qualname":"<SetError<T>>::is_already_init_err","value":"pub fn is_already_init_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether `SetError` is `SetError::AlreadyInitializedError`.\n","sig":null,"attributes":[{"value":"/ Whether `SetError` is `SetError::AlreadyInitializedError`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148906,"byte_end":11148968,"line_start":385,"line_end":385,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":9193},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11149237,"byte_end":11149256,"line_start":394,"line_end":394,"column_start":12,"column_end":31},"name":"is_initializing_err","qualname":"<SetError<T>>::is_initializing_err","value":"pub fn is_initializing_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether `SetError` is `SetError::InitializingError`\n","sig":null,"attributes":[{"value":"/ Whether `SetError` is `SetError::InitializingError`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11149170,"byte_end":11149225,"line_start":393,"line_end":393,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":9201},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":9202},{"krate":0,"index":9205},{"krate":0,"index":9208},{"krate":0,"index":9209},{"krate":0,"index":9210},{"krate":0,"index":9212},{"krate":0,"index":9213},{"krate":0,"index":9215},{"krate":0,"index":9216},{"krate":0,"index":9219},{"krate":0,"index":9222},{"krate":0,"index":9225},{"krate":0,"index":9517},{"krate":0,"index":9521},{"krate":0,"index":9524},{"krate":0,"index":9527},{"krate":0,"index":9530},{"krate":0,"index":9534},{"krate":0,"index":9538},{"krate":0,"index":9545},{"krate":0,"index":9228},{"krate":0,"index":9240},{"krate":0,"index":9241},{"krate":0,"index":9243},{"krate":0,"index":9250},{"krate":0,"index":9252},{"krate":0,"index":9255},{"krate":0,"index":9258},{"krate":0,"index":9267},{"krate":0,"index":9270}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":23818,"byte_end":23842,"line_start":256,"line_end":256,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11149497,"byte_end":11149576,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11149577,"byte_end":11149587,"line_start":4,"line_end":4,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11149588,"byte_end":11149591,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11149592,"byte_end":11149668,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11149669,"byte_end":11149743,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11149744,"byte_end":11149747,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11149748,"byte_end":11149759,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11149760,"byte_end":11149763,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are the producer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11149764,"byte_end":11149844,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ and sender halves of the channel. The channel is created with an initial","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11149845,"byte_end":11149921,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ value. The **latest** value stored in the channel is accessed with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11149922,"byte_end":11149992,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`Receiver::borrow()`]. Awaiting [`Receiver::changed()`] waits for a new","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11149993,"byte_end":11150069,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ value to sent by the [`Sender`] half.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150070,"byte_end":11150111,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150112,"byte_end":11150115,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150116,"byte_end":11150130,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150131,"byte_end":11150134,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150135,"byte_end":11150142,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150143,"byte_end":11150170,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150171,"byte_end":11150174,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150175,"byte_end":11150239,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150240,"byte_end":11150291,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150292,"byte_end":11150295,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150296,"byte_end":11150329,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150330,"byte_end":11150376,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150377,"byte_end":11150435,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150436,"byte_end":11150449,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150450,"byte_end":11150461,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150462,"byte_end":11150465,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150466,"byte_end":11150492,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150493,"byte_end":11150505,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150506,"byte_end":11150513,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150514,"byte_end":11150521,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150522,"byte_end":11150525,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150526,"byte_end":11150539,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150540,"byte_end":11150543,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Sender::is_closed`] and [`Sender::closed`] allow the producer to detect","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150544,"byte_end":11150621,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ when all [`Receiver`] handles have been dropped. This indicates that there","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150622,"byte_end":11150700,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ is no further interest in the values being produced and work can be stopped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150701,"byte_end":11150781,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150782,"byte_end":11150785,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150786,"byte_end":11150805,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150806,"byte_end":11150809,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150810,"byte_end":11150890,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150891,"byte_end":11150970,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11150971,"byte_end":11151043,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11151044,"byte_end":11151047,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11151048,"byte_end":11151090,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11151091,"byte_end":11151137,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::changed()`]: crate::sync::watch::Receiver::changed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11151138,"byte_end":11151204,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/ [`Receiver::borrow()`]: crate::sync::watch::Receiver::borrow","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11151205,"byte_end":11151269,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11151270,"byte_end":11151314,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/ [`Sender::is_closed`]: crate::sync::watch::Sender::is_closed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11151315,"byte_end":11151379,"line_start":53,"line_end":53,"column_start":1,"column_end":65}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11151380,"byte_end":11151438,"line_start":54,"line_end":54,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":9517},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11152010,"byte_end":11152018,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":9519},{"krate":0,"index":9520}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11151648,"byte_end":11151714,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11151715,"byte_end":11151718,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11151719,"byte_end":11151785,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11151786,"byte_end":11151789,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`WatchStream`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11151790,"byte_end":11151864,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ wrapper.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11151865,"byte_end":11151877,"line_start":68,"line_end":68,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11151878,"byte_end":11151881,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`WatchStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.WatchStream.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11151882,"byte_end":11151981,"line_start":70,"line_end":70,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":9524},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11152307,"byte_end":11152313,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":9526}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11152142,"byte_end":11152207,"line_start":80,"line_end":80,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11152208,"byte_end":11152211,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11152212,"byte_end":11152278,"line_start":82,"line_end":82,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":9530},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11152633,"byte_end":11152636,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":9533}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11152350,"byte_end":11152392,"line_start":88,"line_end":88,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11152393,"byte_end":11152396,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11152397,"byte_end":11152473,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11152474,"byte_end":11152553,"line_start":91,"line_end":91,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11152554,"byte_end":11152604,"line_start":92,"line_end":92,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":9228},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11153213,"byte_end":11153218,"line_start":119,"line_end":119,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":9229},{"krate":0,"index":9548},{"krate":0,"index":9551},{"krate":0,"index":9232},{"krate":0,"index":9235},{"krate":0,"index":9554},{"krate":0,"index":9557},{"krate":0,"index":9237},{"krate":0,"index":9239}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"/ Watch error types","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11153225,"byte_end":11153246,"line_start":120,"line_end":120,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":9548},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11153354,"byte_end":11153363,"line_start":126,"line_end":126,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":9550}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11153271,"byte_end":11153317,"line_start":124,"line_end":124,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":9554},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11153784,"byte_end":11153793,"line_start":142,"line_end":142,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::watch::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error produced when receiving a change notification.\n","sig":null,"attributes":[{"value":"/ Error produced when receiving a change notification.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11153691,"byte_end":11153747,"line_start":140,"line_end":140,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":9241},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154848,"byte_end":11154855,"line_start":184,"line_end":184,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154085,"byte_end":11154161,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154162,"byte_end":11154165,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154166,"byte_end":11154248,"line_start":159,"line_end":159,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154249,"byte_end":11154325,"line_start":160,"line_end":160,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154326,"byte_end":11154362,"line_start":161,"line_end":161,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154363,"byte_end":11154366,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154367,"byte_end":11154381,"line_start":163,"line_end":163,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154382,"byte_end":11154385,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154386,"byte_end":11154393,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154394,"byte_end":11154421,"line_start":166,"line_end":166,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154422,"byte_end":11154425,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154426,"byte_end":11154490,"line_start":168,"line_end":168,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154491,"byte_end":11154542,"line_start":169,"line_end":169,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154543,"byte_end":11154546,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154547,"byte_end":11154580,"line_start":171,"line_end":171,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154581,"byte_end":11154627,"line_start":172,"line_end":172,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154628,"byte_end":11154686,"line_start":173,"line_end":173,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154687,"byte_end":11154700,"line_start":174,"line_end":174,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154701,"byte_end":11154712,"line_start":175,"line_end":175,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154713,"byte_end":11154716,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154717,"byte_end":11154743,"line_start":177,"line_end":177,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154744,"byte_end":11154756,"line_start":178,"line_end":178,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154757,"byte_end":11154764,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154765,"byte_end":11154772,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154773,"byte_end":11154776,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154777,"byte_end":11154806,"line_start":182,"line_end":182,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154807,"byte_end":11154840,"line_start":183,"line_end":183,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":9246},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156007,"byte_end":11156013,"line_start":225,"line_end":225,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11155545,"byte_end":11155600,"line_start":211,"line_end":211,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11155605,"byte_end":11155608,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11155613,"byte_end":11155689,"line_start":213,"line_end":213,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11155694,"byte_end":11155770,"line_start":214,"line_end":214,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11155775,"byte_end":11155806,"line_start":215,"line_end":215,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11155811,"byte_end":11155814,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11155819,"byte_end":11155833,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11155838,"byte_end":11155841,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11155846,"byte_end":11155853,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11155858,"byte_end":11155885,"line_start":220,"line_end":220,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11155890,"byte_end":11155893,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11155898,"byte_end":11155940,"line_start":222,"line_end":222,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11155945,"byte_end":11155983,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11155988,"byte_end":11155995,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9247},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156939,"byte_end":11156946,"line_start":258,"line_end":258,"column_start":18,"column_end":25},"name":"changed","qualname":"<Receiver<T>>::changed","value":"pub async fn changed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for a change notification","sig":null,"attributes":[{"value":"/ Wait for a change notification","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156125,"byte_end":11156159,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156164,"byte_end":11156167,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Returns when a new value has been sent by the [`Sender`] since the last","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156172,"byte_end":11156247,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ time `changed()` was called. When the `Sender` half is dropped, `Err` is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156252,"byte_end":11156328,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156333,"byte_end":11156346,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156351,"byte_end":11156354,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156359,"byte_end":11156388,"line_start":236,"line_end":236,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156393,"byte_end":11156396,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156401,"byte_end":11156415,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156420,"byte_end":11156423,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156428,"byte_end":11156435,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156440,"byte_end":11156467,"line_start":241,"line_end":241,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156472,"byte_end":11156475,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156480,"byte_end":11156498,"line_start":243,"line_end":243,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156503,"byte_end":11156524,"line_start":244,"line_end":244,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156529,"byte_end":11156580,"line_start":245,"line_end":245,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156585,"byte_end":11156588,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156593,"byte_end":11156626,"line_start":247,"line_end":247,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"goodbye\").unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156631,"byte_end":11156671,"line_start":248,"line_end":248,"column_start":5,"column_end":45}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156676,"byte_end":11156687,"line_start":249,"line_end":249,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156692,"byte_end":11156695,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.changed().await.is_ok());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156700,"byte_end":11156744,"line_start":251,"line_end":251,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*rx.borrow(), \"goodbye\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156749,"byte_end":11156793,"line_start":252,"line_end":252,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156798,"byte_end":11156801,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/     // The `tx` handle has been dropped","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156806,"byte_end":11156849,"line_start":254,"line_end":254,"column_start":5,"column_end":48}},{"value":"/     assert!(rx.changed().await.is_err());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156854,"byte_end":11156899,"line_start":255,"line_end":255,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156904,"byte_end":11156909,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11156914,"byte_end":11156921,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9260},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11158922,"byte_end":11158926,"line_start":325,"line_end":325,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Sends a new value via the channel, notifying all receivers.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11158847,"byte_end":11158910,"line_start":324,"line_end":324,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":9261},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11159953,"byte_end":11159959,"line_start":356,"line_end":356,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Sender<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11159491,"byte_end":11159546,"line_start":342,"line_end":342,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11159551,"byte_end":11159554,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11159559,"byte_end":11159635,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11159640,"byte_end":11159716,"line_start":345,"line_end":345,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11159721,"byte_end":11159752,"line_start":346,"line_end":346,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11159757,"byte_end":11159760,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11159765,"byte_end":11159779,"line_start":348,"line_end":348,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11159784,"byte_end":11159787,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11159792,"byte_end":11159799,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11159804,"byte_end":11159831,"line_start":351,"line_end":351,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11159836,"byte_end":11159839,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ let (tx, _) = watch::channel(\"hello\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11159844,"byte_end":11159886,"line_start":353,"line_end":353,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*tx.borrow(), \"hello\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11159891,"byte_end":11159929,"line_start":354,"line_end":354,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11159934,"byte_end":11159941,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9262},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160387,"byte_end":11160396,"line_start":373,"line_end":373,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when all receivers\n have dropped.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when all receivers","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160071,"byte_end":11160145,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ have dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160150,"byte_end":11160167,"line_start":362,"line_end":362,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160172,"byte_end":11160175,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160180,"byte_end":11160194,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160199,"byte_end":11160202,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160207,"byte_end":11160214,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::watch::channel(());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160219,"byte_end":11160270,"line_start":367,"line_end":367,"column_start":5,"column_end":56}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160275,"byte_end":11160304,"line_start":368,"line_end":368,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160309,"byte_end":11160312,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160317,"byte_end":11160330,"line_start":370,"line_end":370,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160335,"byte_end":11160363,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160368,"byte_end":11160375,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9263},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11161140,"byte_end":11161146,"line_start":401,"line_end":401,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160477,"byte_end":11160523,"line_start":377,"line_end":377,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160528,"byte_end":11160531,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160536,"byte_end":11160610,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160615,"byte_end":11160670,"line_start":380,"line_end":380,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160675,"byte_end":11160678,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160683,"byte_end":11160697,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160702,"byte_end":11160705,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160710,"byte_end":11160717,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160722,"byte_end":11160749,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160754,"byte_end":11160757,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160762,"byte_end":11160780,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160785,"byte_end":11160806,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160811,"byte_end":11160858,"line_start":389,"line_end":389,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160863,"byte_end":11160866,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160871,"byte_end":11160904,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/         // use `rx`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160909,"byte_end":11160932,"line_start":392,"line_end":392,"column_start":5,"column_end":28}},{"value":"/         drop(rx);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160937,"byte_end":11160958,"line_start":393,"line_end":393,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160963,"byte_end":11160974,"line_start":394,"line_end":394,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160979,"byte_end":11160982,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/     // Waits for `rx` to drop","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11160987,"byte_end":11161020,"line_start":396,"line_end":396,"column_start":5,"column_end":38}},{"value":"/     tx.closed().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11161025,"byte_end":11161051,"line_start":397,"line_end":397,"column_start":5,"column_end":31}},{"value":"/     println!(\"the `rx` handles dropped\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11161056,"byte_end":11161100,"line_start":398,"line_end":398,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11161105,"byte_end":11161110,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11161115,"byte_end":11161122,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9266},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11162098,"byte_end":11162112,"line_start":439,"line_end":439,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of receivers that currently exist","sig":null,"attributes":[{"value":"/ Returns the number of receivers that currently exist","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11161659,"byte_end":11161715,"line_start":421,"line_end":421,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11161720,"byte_end":11161723,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11161728,"byte_end":11161742,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11161747,"byte_end":11161750,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11161755,"byte_end":11161762,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11161767,"byte_end":11161794,"line_start":426,"line_end":426,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11161799,"byte_end":11161802,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11161807,"byte_end":11161825,"line_start":428,"line_end":428,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11161830,"byte_end":11161851,"line_start":429,"line_end":429,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx1) = watch::channel(\"hello\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11161856,"byte_end":11161904,"line_start":430,"line_end":430,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11161909,"byte_end":11161912,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11161917,"byte_end":11161960,"line_start":432,"line_end":432,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11161965,"byte_end":11161968,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = rx1.clone();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11161973,"byte_end":11162008,"line_start":434,"line_end":434,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11162013,"byte_end":11162016,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11162021,"byte_end":11162064,"line_start":436,"line_end":436,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11162069,"byte_end":11162074,"line_start":437,"line_end":437,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11162079,"byte_end":11162086,"line_start":438,"line_end":438,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":879},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":9559},{"krate":0,"index":9560},{"krate":0,"index":9563},{"krate":0,"index":9566},{"krate":0,"index":9570},{"krate":0,"index":9573},{"krate":0,"index":9586},{"krate":0,"index":9589},{"krate":0,"index":9603},{"krate":0,"index":9606},{"krate":0,"index":9722},{"krate":0,"index":9723},{"krate":0,"index":9726},{"krate":0,"index":9729},{"krate":0,"index":9819},{"krate":0,"index":9822},{"krate":0,"index":9844},{"krate":0,"index":9845},{"krate":0,"index":9848}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"/ Asynchronous green-threads.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":127291,"byte_end":127322,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":127323,"byte_end":127326,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":127327,"byte_end":127349,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":127350,"byte_end":127353,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":127354,"byte_end":127435,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":127436,"byte_end":127516,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":127517,"byte_end":127597,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":127598,"byte_end":127672,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":127673,"byte_end":127748,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":127749,"byte_end":127771,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":127772,"byte_end":127775,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":127776,"byte_end":127811,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":127812,"byte_end":127815,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":127816,"byte_end":127890,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":127891,"byte_end":127970,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":127971,"byte_end":128043,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":128044,"byte_end":128119,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":128120,"byte_end":128173,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":128174,"byte_end":128177,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":128178,"byte_end":128255,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":128256,"byte_end":128329,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":128330,"byte_end":128409,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":128410,"byte_end":128488,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":128489,"byte_end":128561,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":128562,"byte_end":128637,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":128638,"byte_end":128712,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":128713,"byte_end":128788,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":128789,"byte_end":128819,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":128820,"byte_end":128823,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":128824,"byte_end":128902,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":128903,"byte_end":128978,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":128979,"byte_end":129056,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129057,"byte_end":129136,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129137,"byte_end":129215,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129216,"byte_end":129291,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129292,"byte_end":129367,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129368,"byte_end":129429,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129430,"byte_end":129433,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129434,"byte_end":129458,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129459,"byte_end":129523,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129524,"byte_end":129584,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129585,"byte_end":129674,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129675,"byte_end":129763,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129764,"byte_end":129767,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129768,"byte_end":129793,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129794,"byte_end":129797,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129798,"byte_end":129865,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129866,"byte_end":129869,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129870,"byte_end":129886,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129887,"byte_end":129890,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129891,"byte_end":129970,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":129971,"byte_end":130050,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130051,"byte_end":130130,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130131,"byte_end":130198,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130199,"byte_end":130202,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130203,"byte_end":130210,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130211,"byte_end":130231,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130232,"byte_end":130235,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130236,"byte_end":130258,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130259,"byte_end":130282,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130283,"byte_end":130319,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130320,"byte_end":130327,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130328,"byte_end":130335,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130336,"byte_end":130343,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130344,"byte_end":130347,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130348,"byte_end":130427,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130428,"byte_end":130506,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130507,"byte_end":130541,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130542,"byte_end":130545,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130546,"byte_end":130553,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130554,"byte_end":130574,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130575,"byte_end":130578,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130579,"byte_end":130659,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130660,"byte_end":130694,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130695,"byte_end":130709,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130710,"byte_end":130732,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130733,"byte_end":130740,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130741,"byte_end":130744,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130745,"byte_end":130755,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130756,"byte_end":130759,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130760,"byte_end":130804,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130805,"byte_end":130834,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130835,"byte_end":130874,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130875,"byte_end":130887,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130888,"byte_end":130895,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130896,"byte_end":130903,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130904,"byte_end":130907,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130908,"byte_end":130988,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]. For","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":130989,"byte_end":131064,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/ example:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131065,"byte_end":131077,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131078,"byte_end":131081,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131082,"byte_end":131089,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131090,"byte_end":131110,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131111,"byte_end":131114,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131115,"byte_end":131153,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131154,"byte_end":131188,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131189,"byte_end":131230,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131231,"byte_end":131238,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131239,"byte_end":131242,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131243,"byte_end":131301,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131302,"byte_end":131335,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131336,"byte_end":131343,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131344,"byte_end":131351,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131352,"byte_end":131355,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131356,"byte_end":131424,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ feature flag is enabled.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131425,"byte_end":131453,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131454,"byte_end":131457,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131458,"byte_end":131499,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131500,"byte_end":131533,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131534,"byte_end":131580,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131581,"byte_end":131624,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131625,"byte_end":131667,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131668,"byte_end":131709,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131710,"byte_end":131713,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131714,"byte_end":131743,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131744,"byte_end":131747,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131748,"byte_end":131828,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131829,"byte_end":131908,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131909,"byte_end":131988,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":131989,"byte_end":132029,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132030,"byte_end":132033,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132034,"byte_end":132108,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132109,"byte_end":132189,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132190,"byte_end":132193,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Be aware that if you call a non-async method from async code, that non-async","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132194,"byte_end":132274,"line_start":125,"line_end":125,"column_start":1,"column_end":81}},{"value":"/ method is still inside the asynchronous context, so you should also avoid","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132275,"byte_end":132352,"line_start":126,"line_end":126,"column_start":1,"column_end":78}},{"value":"/ blocking operations there. This includes destructors of objects destroyed in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132353,"byte_end":132433,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ async code.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132434,"byte_end":132449,"line_start":128,"line_end":128,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132450,"byte_end":132453,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132454,"byte_end":132477,"line_start":130,"line_end":130,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132478,"byte_end":132481,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132482,"byte_end":132562,"line_start":132,"line_end":132,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132563,"byte_end":132629,"line_start":133,"line_end":133,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132630,"byte_end":132697,"line_start":134,"line_end":134,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132698,"byte_end":132772,"line_start":135,"line_end":135,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132773,"byte_end":132785,"line_start":136,"line_end":136,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132786,"byte_end":132789,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132790,"byte_end":132797,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132798,"byte_end":132818,"line_start":139,"line_end":139,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132819,"byte_end":132822,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132823,"byte_end":132846,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132847,"byte_end":132876,"line_start":142,"line_end":142,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132877,"byte_end":132939,"line_start":143,"line_end":143,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132940,"byte_end":132947,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132948,"byte_end":132955,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132956,"byte_end":132963,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132964,"byte_end":132967,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":132968,"byte_end":133042,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133043,"byte_end":133110,"line_start":149,"line_end":149,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133111,"byte_end":133114,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133115,"byte_end":133126,"line_start":151,"line_end":151,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133127,"byte_end":133149,"line_start":152,"line_end":152,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133150,"byte_end":133214,"line_start":153,"line_end":153,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133215,"byte_end":133255,"line_start":154,"line_end":154,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133256,"byte_end":133318,"line_start":155,"line_end":155,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133319,"byte_end":133347,"line_start":156,"line_end":156,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133348,"byte_end":133355,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133356,"byte_end":133359,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133360,"byte_end":133389,"line_start":159,"line_end":159,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133390,"byte_end":133435,"line_start":160,"line_end":160,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133436,"byte_end":133448,"line_start":161,"line_end":161,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133449,"byte_end":133456,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133457,"byte_end":133464,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133465,"byte_end":133468,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133469,"byte_end":133492,"line_start":165,"line_end":165,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133493,"byte_end":133496,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ When using the [multi-threaded runtime][rt-multi-thread], the [`task::block_in_place`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133497,"byte_end":133587,"line_start":167,"line_end":167,"column_start":1,"column_end":91}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133588,"byte_end":133662,"line_start":168,"line_end":168,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133663,"byte_end":133739,"line_start":169,"line_end":169,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133740,"byte_end":133814,"line_start":170,"line_end":170,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133815,"byte_end":133894,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133895,"byte_end":133977,"line_start":172,"line_end":172,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":133978,"byte_end":133999,"line_start":173,"line_end":173,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134000,"byte_end":134003,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134004,"byte_end":134020,"line_start":175,"line_end":175,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134021,"byte_end":134024,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134025,"byte_end":134032,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134033,"byte_end":134053,"line_start":178,"line_end":178,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134054,"byte_end":134057,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134058,"byte_end":134081,"line_start":180,"line_end":180,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134082,"byte_end":134124,"line_start":181,"line_end":181,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134125,"byte_end":134187,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134188,"byte_end":134216,"line_start":183,"line_end":183,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134217,"byte_end":134224,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134225,"byte_end":134228,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134229,"byte_end":134274,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134275,"byte_end":134282,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134283,"byte_end":134290,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134291,"byte_end":134294,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134295,"byte_end":134313,"line_start":190,"line_end":190,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134314,"byte_end":134317,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134318,"byte_end":134392,"line_start":192,"line_end":192,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134393,"byte_end":134471,"line_start":193,"line_end":193,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134472,"byte_end":134548,"line_start":194,"line_end":194,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134549,"byte_end":134606,"line_start":195,"line_end":195,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134607,"byte_end":134685,"line_start":196,"line_end":196,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134686,"byte_end":134714,"line_start":197,"line_end":197,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134715,"byte_end":134718,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134719,"byte_end":134730,"line_start":199,"line_end":199,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134731,"byte_end":134751,"line_start":200,"line_end":200,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134752,"byte_end":134755,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134756,"byte_end":134794,"line_start":202,"line_end":202,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134795,"byte_end":134806,"line_start":203,"line_end":203,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134807,"byte_end":134834,"line_start":204,"line_end":204,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134835,"byte_end":134853,"line_start":205,"line_end":205,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134854,"byte_end":134896,"line_start":206,"line_end":206,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134897,"byte_end":134908,"line_start":207,"line_end":207,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134909,"byte_end":134912,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134913,"byte_end":134980,"line_start":209,"line_end":209,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":134981,"byte_end":135013,"line_start":210,"line_end":210,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135014,"byte_end":135050,"line_start":211,"line_end":211,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135051,"byte_end":135056,"line_start":212,"line_end":212,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135057,"byte_end":135070,"line_start":213,"line_end":213,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135071,"byte_end":135078,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135079,"byte_end":135086,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135087,"byte_end":135090,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ### Cooperative scheduling","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135091,"byte_end":135121,"line_start":217,"line_end":217,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135122,"byte_end":135125,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ A single call to [`poll`] on a top-level task may potentially do a lot of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135126,"byte_end":135203,"line_start":219,"line_end":219,"column_start":1,"column_end":78}},{"value":"/ work before it returns `Poll::Pending`. If a task runs for a long period of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135204,"byte_end":135283,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ time without yielding back to the executor, it can starve other tasks","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135284,"byte_end":135357,"line_start":221,"line_end":221,"column_start":1,"column_end":74}},{"value":"/ waiting on that executor to execute them, or drive underlying resources.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135358,"byte_end":135434,"line_start":222,"line_end":222,"column_start":1,"column_end":77}},{"value":"/ Since Rust does not have a runtime, it is difficult to forcibly preempt a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135435,"byte_end":135512,"line_start":223,"line_end":223,"column_start":1,"column_end":78}},{"value":"/ long-running task. Instead, this module provides an opt-in mechanism for","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135513,"byte_end":135589,"line_start":224,"line_end":224,"column_start":1,"column_end":77}},{"value":"/ futures to collaborate with the executor to avoid starvation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135590,"byte_end":135655,"line_start":225,"line_end":225,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135656,"byte_end":135659,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ Consider a future like this one:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135660,"byte_end":135696,"line_start":227,"line_end":227,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135697,"byte_end":135700,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135701,"byte_end":135708,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/ # use tokio_stream::{Stream, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135709,"byte_end":135753,"line_start":230,"line_end":230,"column_start":1,"column_end":45}},{"value":"/ async fn drop_all<I: Stream + Unpin>(mut input: I) {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135754,"byte_end":135810,"line_start":231,"line_end":231,"column_start":1,"column_end":57}},{"value":"/     while let Some(_) = input.next().await {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135811,"byte_end":135860,"line_start":232,"line_end":232,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135861,"byte_end":135866,"line_start":233,"line_end":233,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135867,"byte_end":135874,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135875,"byte_end":135878,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ It may look harmless, but consider what happens under heavy load if the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135879,"byte_end":135954,"line_start":236,"line_end":236,"column_start":1,"column_end":76}},{"value":"/ input stream is _always_ ready. If we spawn `drop_all`, the task will never","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":135955,"byte_end":136034,"line_start":237,"line_end":237,"column_start":1,"column_end":80}},{"value":"/ yield, and will starve other tasks and resources on the same executor.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136035,"byte_end":136109,"line_start":238,"line_end":238,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136110,"byte_end":136113,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ To account for this, Tokio has explicit yield points in a number of library","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136114,"byte_end":136193,"line_start":240,"line_end":240,"column_start":1,"column_end":80}},{"value":"/ functions, which force tasks to return to the executor periodically.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136194,"byte_end":136266,"line_start":241,"line_end":241,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136267,"byte_end":136270,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136271,"byte_end":136274,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ #### unconstrained","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136275,"byte_end":136297,"line_start":244,"line_end":244,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136298,"byte_end":136301,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ If necessary, [`task::unconstrained`] lets you opt out a future of Tokio's cooperative","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136302,"byte_end":136392,"line_start":246,"line_end":246,"column_start":1,"column_end":91}},{"value":"/ scheduling. When a future is wrapped with `unconstrained`, it will never be forced to yield to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136393,"byte_end":136491,"line_start":247,"line_end":247,"column_start":1,"column_end":99}},{"value":"/ Tokio. For example:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136492,"byte_end":136515,"line_start":248,"line_end":248,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136516,"byte_end":136519,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136520,"byte_end":136527,"line_start":250,"line_end":250,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136528,"byte_end":136548,"line_start":251,"line_end":251,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136549,"byte_end":136572,"line_start":252,"line_end":252,"column_start":1,"column_end":24}},{"value":"/ use tokio::{task, sync::mpsc};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136573,"byte_end":136607,"line_start":253,"line_end":253,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136608,"byte_end":136611,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ let fut = async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136612,"byte_end":136633,"line_start":255,"line_end":255,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136634,"byte_end":136687,"line_start":256,"line_end":256,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136688,"byte_end":136691,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/     for i in 0..1000 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136692,"byte_end":136718,"line_start":258,"line_end":258,"column_start":1,"column_end":27}},{"value":"/         let _ = tx.send(());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136719,"byte_end":136751,"line_start":259,"line_end":259,"column_start":1,"column_end":33}},{"value":"/         // This will always be ready. If coop was in effect, this code would be forced to yield","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136752,"byte_end":136851,"line_start":260,"line_end":260,"column_start":1,"column_end":100}},{"value":"/         // periodically. However, if left unconstrained, then this code will never yield.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136852,"byte_end":136945,"line_start":261,"line_end":261,"column_start":1,"column_end":94}},{"value":"/         rx.recv().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136946,"byte_end":136974,"line_start":262,"line_end":262,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136975,"byte_end":136984,"line_start":263,"line_end":263,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136985,"byte_end":136991,"line_start":264,"line_end":264,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136992,"byte_end":136995,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ task::unconstrained(fut).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":136996,"byte_end":137031,"line_start":266,"line_end":266,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137032,"byte_end":137039,"line_start":267,"line_end":267,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137040,"byte_end":137047,"line_start":268,"line_end":268,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137048,"byte_end":137051,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137052,"byte_end":137109,"line_start":270,"line_end":270,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137110,"byte_end":137167,"line_start":271,"line_end":271,"column_start":1,"column_end":58}},{"value":"/ [rt-multi-thread]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137168,"byte_end":137231,"line_start":272,"line_end":272,"column_start":1,"column_end":64}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137232,"byte_end":137281,"line_start":273,"line_end":273,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137282,"byte_end":137331,"line_start":274,"line_end":274,"column_start":1,"column_end":50}},{"value":"/ [`task::unconstrained`]: crate::task::unconstrained()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137332,"byte_end":137389,"line_start":275,"line_end":275,"column_start":1,"column_end":58}},{"value":"/ [`poll`]: method@std::future::Future::poll","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/mod.rs","byte_start":137390,"byte_end":137436,"line_start":276,"line_end":276,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":9851},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/blocking.rs","byte_start":11170555,"byte_end":11170569,"line_start":136,"line_end":136,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"pub fn spawn_blocking<F, R>(F) -> JoinHandle<R> where F: FnOnce() -> R +\nSend + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":24125,"byte_end":24147,"line_start":272,"line_end":272,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/blocking.rs","byte_start":11170529,"byte_end":11170541,"line_start":135,"line_end":135,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":9854},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/spawn.rs","byte_start":11174456,"byte_end":11174461,"line_start":127,"line_end":127,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":24125,"byte_end":24147,"line_start":272,"line_end":272,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/spawn.rs","byte_start":11174430,"byte_end":11174442,"line_start":126,"line_end":126,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":9856},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/yield_now.rs","byte_start":11175435,"byte_end":11175444,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":24125,"byte_end":24147,"line_start":272,"line_end":272,"column_start":13,"column_end":35}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/yield_now.rs","byte_start":11175354,"byte_end":11175417,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9864},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11183550,"byte_end":11183558,"line_start":213,"line_end":213,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":9865},{"krate":0,"index":9866},{"krate":0,"index":9867}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":24125,"byte_end":24147,"line_start":272,"line_end":272,"column_start":13,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":9873},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11185652,"byte_end":11185663,"line_start":295,"line_end":295,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":24125,"byte_end":24147,"line_start":272,"line_end":272,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11185626,"byte_end":11185638,"line_start":294,"line_end":294,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":9675},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11186560,"byte_end":11186563,"line_start":325,"line_end":325,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11186515,"byte_end":11186548,"line_start":324,"line_end":324,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":9676},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11188318,"byte_end":11188329,"line_start":379,"line_end":379,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187105,"byte_end":11187155,"line_start":342,"line_end":342,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187160,"byte_end":11187163,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187168,"byte_end":11187228,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187233,"byte_end":11187236,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187241,"byte_end":11187313,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187318,"byte_end":11187388,"line_start":347,"line_end":347,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187393,"byte_end":11187404,"line_start":348,"line_end":348,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187409,"byte_end":11187429,"line_start":349,"line_end":349,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187434,"byte_end":11187437,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187442,"byte_end":11187460,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187465,"byte_end":11187486,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187491,"byte_end":11187533,"line_start":353,"line_end":353,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187538,"byte_end":11187541,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187546,"byte_end":11187618,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187623,"byte_end":11187676,"line_start":356,"line_end":356,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187681,"byte_end":11187714,"line_start":357,"line_end":357,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187719,"byte_end":11187736,"line_start":358,"line_end":358,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187741,"byte_end":11187752,"line_start":359,"line_end":359,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187757,"byte_end":11187760,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187765,"byte_end":11187799,"line_start":361,"line_end":361,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187804,"byte_end":11187840,"line_start":362,"line_end":362,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187845,"byte_end":11187863,"line_start":363,"line_end":363,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187868,"byte_end":11187885,"line_start":364,"line_end":364,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187890,"byte_end":11187893,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187898,"byte_end":11187969,"line_start":366,"line_end":366,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11187974,"byte_end":11188024,"line_start":367,"line_end":367,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11188029,"byte_end":11188062,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11188067,"byte_end":11188084,"line_start":369,"line_end":369,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11188089,"byte_end":11188100,"line_start":370,"line_end":370,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11188105,"byte_end":11188108,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11188113,"byte_end":11188149,"line_start":372,"line_end":372,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11188154,"byte_end":11188172,"line_start":373,"line_end":373,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11188177,"byte_end":11188194,"line_start":374,"line_end":374,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11188199,"byte_end":11188204,"line_start":375,"line_end":375,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11188209,"byte_end":11188216,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11188221,"byte_end":11188256,"line_start":377,"line_end":377,"column_start":5,"column_end":40}},{"value":"track_caller","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11188292,"byte_end":11188304,"line_start":378,"line_end":378,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":9678},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11191169,"byte_end":11191177,"line_start":455,"line_end":455,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11188714,"byte_end":11188788,"line_start":391,"line_end":391,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11188793,"byte_end":11188852,"line_start":392,"line_end":392,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11188857,"byte_end":11188860,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11188865,"byte_end":11188932,"line_start":394,"line_end":394,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11188937,"byte_end":11189010,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189015,"byte_end":11189091,"line_start":396,"line_end":396,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189096,"byte_end":11189176,"line_start":397,"line_end":397,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189181,"byte_end":11189200,"line_start":398,"line_end":398,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189205,"byte_end":11189208,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189213,"byte_end":11189279,"line_start":400,"line_end":400,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189284,"byte_end":11189287,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189292,"byte_end":11189304,"line_start":402,"line_end":402,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189309,"byte_end":11189312,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189317,"byte_end":11189389,"line_start":404,"line_end":404,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189394,"byte_end":11189467,"line_start":405,"line_end":405,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189472,"byte_end":11189475,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189480,"byte_end":11189491,"line_start":407,"line_end":407,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189496,"byte_end":11189499,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189504,"byte_end":11189578,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189583,"byte_end":11189658,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189663,"byte_end":11189738,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189743,"byte_end":11189820,"line_start":412,"line_end":412,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189825,"byte_end":11189828,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189833,"byte_end":11189866,"line_start":414,"line_end":414,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189871,"byte_end":11189890,"line_start":415,"line_end":415,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189895,"byte_end":11189927,"line_start":416,"line_end":416,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189932,"byte_end":11189952,"line_start":417,"line_end":417,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189957,"byte_end":11189960,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11189965,"byte_end":11190003,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190008,"byte_end":11190046,"line_start":420,"line_end":420,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190051,"byte_end":11190082,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190087,"byte_end":11190131,"line_start":422,"line_end":422,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190136,"byte_end":11190195,"line_start":423,"line_end":423,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190200,"byte_end":11190222,"line_start":424,"line_end":424,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190227,"byte_end":11190242,"line_start":425,"line_end":425,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190247,"byte_end":11190265,"line_start":426,"line_end":426,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190270,"byte_end":11190281,"line_start":427,"line_end":427,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190286,"byte_end":11190314,"line_start":428,"line_end":428,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190319,"byte_end":11190325,"line_start":429,"line_end":429,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190330,"byte_end":11190337,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190342,"byte_end":11190376,"line_start":431,"line_end":431,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190381,"byte_end":11190388,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190393,"byte_end":11190425,"line_start":433,"line_end":433,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190430,"byte_end":11190450,"line_start":434,"line_end":434,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190455,"byte_end":11190458,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190463,"byte_end":11190501,"line_start":436,"line_end":436,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190506,"byte_end":11190544,"line_start":437,"line_end":437,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190549,"byte_end":11190580,"line_start":438,"line_end":438,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190585,"byte_end":11190629,"line_start":439,"line_end":439,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190634,"byte_end":11190693,"line_start":440,"line_end":440,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190698,"byte_end":11190720,"line_start":441,"line_end":441,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190725,"byte_end":11190746,"line_start":442,"line_end":442,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190751,"byte_end":11190769,"line_start":443,"line_end":443,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190774,"byte_end":11190785,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190790,"byte_end":11190818,"line_start":445,"line_end":445,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190823,"byte_end":11190829,"line_start":446,"line_end":446,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190834,"byte_end":11190841,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190846,"byte_end":11190849,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190854,"byte_end":11190889,"line_start":449,"line_end":449,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190894,"byte_end":11190961,"line_start":450,"line_end":450,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11190966,"byte_end":11191021,"line_start":451,"line_end":451,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11191026,"byte_end":11191080,"line_start":452,"line_end":452,"column_start":5,"column_end":59}},{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11191085,"byte_end":11191107,"line_start":453,"line_end":453,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":9680},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11192424,"byte_end":11192433,"line_start":490,"line_end":490,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11191332,"byte_end":11191402,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11191407,"byte_end":11191410,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11191415,"byte_end":11191485,"line_start":464,"line_end":464,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11191490,"byte_end":11191566,"line_start":465,"line_end":465,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11191571,"byte_end":11191639,"line_start":466,"line_end":466,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11191644,"byte_end":11191724,"line_start":467,"line_end":467,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11191729,"byte_end":11191801,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11191806,"byte_end":11191881,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11191886,"byte_end":11191942,"line_start":470,"line_end":470,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11191947,"byte_end":11191950,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11191955,"byte_end":11191969,"line_start":472,"line_end":472,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11191974,"byte_end":11191977,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11191982,"byte_end":11191993,"line_start":474,"line_end":474,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11191998,"byte_end":11192018,"line_start":475,"line_end":475,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11192023,"byte_end":11192026,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11192031,"byte_end":11192049,"line_start":477,"line_end":477,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11192054,"byte_end":11192075,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11192080,"byte_end":11192127,"line_start":479,"line_end":479,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11192132,"byte_end":11192174,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11192179,"byte_end":11192201,"line_start":481,"line_end":481,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11192206,"byte_end":11192236,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11192241,"byte_end":11192259,"line_start":483,"line_end":483,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11192264,"byte_end":11192281,"line_start":484,"line_end":484,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11192286,"byte_end":11192291,"line_start":485,"line_end":485,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11192296,"byte_end":11192303,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11192308,"byte_end":11192311,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11192316,"byte_end":11192351,"line_start":488,"line_end":488,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11192356,"byte_end":11192406,"line_start":489,"line_end":489,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":9761},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201430,"byte_end":11201438,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":9763}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11200551,"byte_end":11200581,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11200582,"byte_end":11200585,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11200586,"byte_end":11200640,"line_start":65,"line_end":65,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11200641,"byte_end":11200644,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11200645,"byte_end":11200711,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11200712,"byte_end":11200779,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11200780,"byte_end":11200837,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11200838,"byte_end":11200907,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11200908,"byte_end":11200911,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11200912,"byte_end":11200926,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11200927,"byte_end":11200930,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11200931,"byte_end":11200938,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11200939,"byte_end":11200961,"line_start":75,"line_end":75,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11200962,"byte_end":11200986,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11200987,"byte_end":11201014,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201015,"byte_end":11201020,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201021,"byte_end":11201024,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201025,"byte_end":11201057,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201058,"byte_end":11201094,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201095,"byte_end":11201108,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201109,"byte_end":11201112,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201113,"byte_end":11201145,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201146,"byte_end":11201182,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201183,"byte_end":11201186,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201187,"byte_end":11201223,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201224,"byte_end":11201264,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201265,"byte_end":11201282,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201283,"byte_end":11201296,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201297,"byte_end":11201304,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201305,"byte_end":11201312,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201313,"byte_end":11201372,"line_start":93,"line_end":93,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":9763},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201480,"byte_end":11201485,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":9761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9766},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202013,"byte_end":11202018,"line_start":118,"line_end":118,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201563,"byte_end":11201627,"line_start":101,"line_end":101,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201632,"byte_end":11201635,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201640,"byte_end":11201701,"line_start":103,"line_end":103,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201706,"byte_end":11201709,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201714,"byte_end":11201730,"line_start":105,"line_end":105,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201735,"byte_end":11201738,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201743,"byte_end":11201750,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201755,"byte_end":11201777,"line_start":108,"line_end":108,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201782,"byte_end":11201806,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201811,"byte_end":11201838,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201843,"byte_end":11201848,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201853,"byte_end":11201856,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201861,"byte_end":11201893,"line_start":113,"line_end":113,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201898,"byte_end":11201953,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201958,"byte_end":11201971,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201976,"byte_end":11201983,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201988,"byte_end":11201995,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9770},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202679,"byte_end":11202689,"line_start":147,"line_end":147,"column_start":12,"column_end":22},"name":"sync_scope","qualname":"<LocalKey<T>>::sync_scope","value":"pub fn sync_scope<F, R>(&'static Self, T, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the closure `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the closure `F`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202243,"byte_end":11202308,"line_start":130,"line_end":130,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202313,"byte_end":11202316,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202321,"byte_end":11202382,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202387,"byte_end":11202390,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202395,"byte_end":11202411,"line_start":134,"line_end":134,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202416,"byte_end":11202419,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202424,"byte_end":11202431,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202436,"byte_end":11202458,"line_start":137,"line_end":137,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202463,"byte_end":11202487,"line_start":138,"line_end":138,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202492,"byte_end":11202519,"line_start":139,"line_end":139,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202524,"byte_end":11202529,"line_start":140,"line_end":140,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202534,"byte_end":11202537,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ NUMBER.sync_scope(1, || {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202542,"byte_end":11202571,"line_start":142,"line_end":142,"column_start":5,"column_end":34}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202576,"byte_end":11202631,"line_start":143,"line_end":143,"column_start":5,"column_end":60}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202636,"byte_end":11202643,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202648,"byte_end":11202655,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202660,"byte_end":11202667,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9774},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11203216,"byte_end":11203220,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11202967,"byte_end":11203033,"line_start":159,"line_end":159,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11203038,"byte_end":11203041,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11203046,"byte_end":11203058,"line_start":161,"line_end":161,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11203063,"byte_end":11203066,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11203071,"byte_end":11203132,"line_start":163,"line_end":163,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11203137,"byte_end":11203204,"line_start":164,"line_end":164,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":9777},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11203708,"byte_end":11203716,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11203461,"byte_end":11203527,"line_start":175,"line_end":175,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11203532,"byte_end":11203535,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the associated key is not present, this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11203540,"byte_end":11203606,"line_start":177,"line_end":177,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11203611,"byte_end":11203676,"line_start":178,"line_end":178,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11203681,"byte_end":11203696,"line_start":179,"line_end":179,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":9783},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11204176,"byte_end":11204179,"line_start":197,"line_end":197,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11204071,"byte_end":11204113,"line_start":195,"line_end":195,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11204118,"byte_end":11204164,"line_start":196,"line_end":196,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":9876},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11205840,"byte_end":11205851,"line_start":261,"line_end":261,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":9877}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11205715,"byte_end":11205790,"line_start":259,"line_end":259,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":10970},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/unconstrained.rs","byte_start":11206541,"byte_end":11206554,"line_start":10,"line_end":10,"column_start":16,"column_end":29},"name":"Unconstrained","qualname":"::task::unconstrained::Unconstrained","value":"Unconstrained {  }","parent":null,"children":[{"krate":0,"index":10972}],"decl_id":null,"docs":" Future for the [`unconstrained`](unconstrained) method.\n","sig":null,"attributes":[{"value":"must_use = \"Unconstrained does nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":9842},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/unconstrained.rs","byte_start":11207468,"byte_end":11207481,"line_start":43,"line_end":43,"column_start":8,"column_end":21},"name":"unconstrained","qualname":"::task::unconstrained::unconstrained","value":"pub fn unconstrained<F>(F) -> Unconstrained<F>","parent":null,"children":[],"decl_id":null,"docs":" Turn off cooperative scheduling for a future. The future will never be forced to yield by\n Tokio. Using this exposes your service to starvation if the unconstrained future never yields\n otherwise.","sig":null,"attributes":[{"value":"/ Turn off cooperative scheduling for a future. The future will never be forced to yield by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/unconstrained.rs","byte_start":11207125,"byte_end":11207218,"line_start":37,"line_end":37,"column_start":1,"column_end":94}},{"value":"/ Tokio. Using this exposes your service to starvation if the unconstrained future never yields","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/unconstrained.rs","byte_start":11207219,"byte_end":11207316,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ otherwise.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/unconstrained.rs","byte_start":11207317,"byte_end":11207331,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/unconstrained.rs","byte_start":11207332,"byte_end":11207335,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ See also the usage example in the [task module](index.html#unconstrained).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/unconstrained.rs","byte_start":11207336,"byte_end":11207414,"line_start":41,"line_end":41,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":9893},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":9894},{"krate":0,"index":9895},{"krate":0,"index":9898},{"krate":0,"index":10284},{"krate":0,"index":10285},{"krate":0,"index":10288},{"krate":0,"index":10291},{"krate":0,"index":10294},{"krate":0,"index":10322},{"krate":0,"index":10367},{"krate":0,"index":10370},{"krate":0,"index":10409},{"krate":0,"index":10410},{"krate":0,"index":10413},{"krate":0,"index":10416},{"krate":0,"index":10419},{"krate":0,"index":10466},{"krate":0,"index":10467},{"krate":0,"index":10470},{"krate":0,"index":10473},{"krate":0,"index":10476}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/cfg.rs","byte_start":25124,"byte_end":25148,"line_start":320,"line_end":320,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11207548,"byte_end":11207580,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11207581,"byte_end":11207584,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11207585,"byte_end":11207665,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11207666,"byte_end":11207678,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11207679,"byte_end":11207682,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Sleep` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11207683,"byte_end":11207764,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11207765,"byte_end":11207779,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11207780,"byte_end":11207783,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11207784,"byte_end":11207854,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11207855,"byte_end":11207935,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11207936,"byte_end":11207950,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11207951,"byte_end":11207954,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11207955,"byte_end":11208034,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208035,"byte_end":11208107,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208108,"byte_end":11208177,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208178,"byte_end":11208181,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208182,"byte_end":11208253,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208254,"byte_end":11208273,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208274,"byte_end":11208277,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208278,"byte_end":11208348,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208349,"byte_end":11208352,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208353,"byte_end":11208367,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208368,"byte_end":11208371,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208372,"byte_end":11208418,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208419,"byte_end":11208422,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208423,"byte_end":11208430,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208431,"byte_end":11208459,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ use tokio::time::sleep;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208460,"byte_end":11208487,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208488,"byte_end":11208491,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208492,"byte_end":11208510,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208511,"byte_end":11208532,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208533,"byte_end":11208581,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208582,"byte_end":11208622,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208623,"byte_end":11208628,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208629,"byte_end":11208636,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208637,"byte_end":11208640,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 1s.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208641,"byte_end":11208693,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208694,"byte_end":11208697,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208698,"byte_end":11208705,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208706,"byte_end":11208747,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208748,"byte_end":11208751,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208752,"byte_end":11208780,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208781,"byte_end":11208804,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208805,"byte_end":11208810,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208811,"byte_end":11208814,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208815,"byte_end":11208837,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208838,"byte_end":11208905,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208906,"byte_end":11208909,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208910,"byte_end":11208931,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208932,"byte_end":11208972,"line_start":50,"line_end":50,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208973,"byte_end":11208978,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208979,"byte_end":11208986,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208987,"byte_end":11208994,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208995,"byte_end":11208998,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11208999,"byte_end":11209075,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209076,"byte_end":11209079,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`sleep`] is that an [`interval`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209080,"byte_end":11209157,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209158,"byte_end":11209233,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209234,"byte_end":11209310,"line_start":59,"line_end":59,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209311,"byte_end":11209372,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209373,"byte_end":11209376,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209377,"byte_end":11209451,"line_start":62,"line_end":62,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209452,"byte_end":11209522,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209523,"byte_end":11209535,"line_start":64,"line_end":64,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209536,"byte_end":11209539,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209540,"byte_end":11209547,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209548,"byte_end":11209568,"line_start":67,"line_end":67,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209569,"byte_end":11209572,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209573,"byte_end":11209614,"line_start":69,"line_end":69,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209615,"byte_end":11209641,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209642,"byte_end":11209697,"line_start":71,"line_end":71,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209698,"byte_end":11209703,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209704,"byte_end":11209707,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209708,"byte_end":11209726,"line_start":74,"line_end":74,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209727,"byte_end":11209748,"line_start":75,"line_end":75,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209749,"byte_end":11209821,"line_start":76,"line_end":76,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209822,"byte_end":11209846,"line_start":77,"line_end":77,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209847,"byte_end":11209881,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209882,"byte_end":11209927,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209928,"byte_end":11209937,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209938,"byte_end":11209943,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209944,"byte_end":11209951,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209952,"byte_end":11209955,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209956,"byte_end":11209991,"line_start":84,"line_end":84,"column_start":1,"column_end":36}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11209992,"byte_end":11210033,"line_start":85,"line_end":85,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":10163},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11279807,"byte_end":11279818,"line_start":21,"line_end":21,"column_start":8,"column_end":19},"name":"sleep_until","qualname":"::time::driver::sleep::sleep_until","value":"pub fn sleep_until(Instant) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11279342,"byte_end":11279380,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11279381,"byte_end":11279384,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11279385,"byte_end":11279465,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11279466,"byte_end":11279543,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11279544,"byte_end":11279579,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11279580,"byte_end":11279583,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11279584,"byte_end":11279602,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11279603,"byte_end":11279606,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11279607,"byte_end":11279692,"line_start":17,"line_end":17,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11279693,"byte_end":11279722,"line_start":18,"line_end":18,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":10164},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280947,"byte_end":11280952,"line_start":60,"line_end":60,"column_start":8,"column_end":13},"name":"sleep","qualname":"::time::driver::sleep::sleep","value":"pub fn sleep(Duration) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11279885,"byte_end":11279924,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11279925,"byte_end":11279928,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `sleep_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11279929,"byte_end":11280004,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280005,"byte_end":11280040,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280041,"byte_end":11280044,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280045,"byte_end":11280125,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280126,"byte_end":11280203,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280204,"byte_end":11280239,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280240,"byte_end":11280243,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280244,"byte_end":11280307,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280308,"byte_end":11280311,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The maximum duration for a sleep is 68719476734 milliseconds (approximately 2.2 years).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280312,"byte_end":11280403,"line_start":36,"line_end":36,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280404,"byte_end":11280407,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280408,"byte_end":11280426,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280427,"byte_end":11280430,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280431,"byte_end":11280516,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280517,"byte_end":11280546,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280547,"byte_end":11280550,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280551,"byte_end":11280565,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280566,"byte_end":11280569,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280570,"byte_end":11280617,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280618,"byte_end":11280621,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280622,"byte_end":11280629,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280630,"byte_end":11280669,"line_start":48,"line_end":48,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280670,"byte_end":11280673,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280674,"byte_end":11280692,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280693,"byte_end":11280714,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280715,"byte_end":11280763,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280764,"byte_end":11280804,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280805,"byte_end":11280810,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280811,"byte_end":11280818,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280819,"byte_end":11280822,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11280823,"byte_end":11280864,"line_start":57,"line_end":57,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":10942},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11284100,"byte_end":11284105,"line_start":159,"line_end":159,"column_start":16,"column_end":21},"name":"Sleep","qualname":"::time::driver::sleep::Sleep","value":"Sleep {  }","parent":null,"children":[{"krate":0,"index":10943},{"krate":0,"index":10944}],"decl_id":null,"docs":" Future returned by [`sleep`](sleep) and [`sleep_until`](sleep_until).","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":10168},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11284649,"byte_end":11284657,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Sleep>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11284579,"byte_end":11284637,"line_start":180,"line_end":180,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":10169},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11284852,"byte_end":11284862,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Sleep>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `Sleep` has elapsed.","sig":null,"attributes":[{"value":"/ Returns `true` if `Sleep` has elapsed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11284711,"byte_end":11284753,"line_start":185,"line_end":185,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11284758,"byte_end":11284761,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ A `Sleep` instance is elapsed when the requested duration has elapsed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11284766,"byte_end":11284840,"line_start":187,"line_end":187,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":10170},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285861,"byte_end":11285866,"line_start":219,"line_end":219,"column_start":12,"column_end":17},"name":"reset","qualname":"<Sleep>::reset","value":"pub fn reset(Pin<&mut Self>, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Sleep` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Sleep` instance to a new deadline.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11284923,"byte_end":11284973,"line_start":192,"line_end":192,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11284978,"byte_end":11284981,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Sleep`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11284986,"byte_end":11285060,"line_start":194,"line_end":194,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285065,"byte_end":11285132,"line_start":195,"line_end":195,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285137,"byte_end":11285140,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285145,"byte_end":11285213,"line_start":197,"line_end":197,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285218,"byte_end":11285232,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285237,"byte_end":11285240,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ To call this method, you will usually combine the call with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285245,"byte_end":11285308,"line_start":200,"line_end":200,"column_start":5,"column_end":68}},{"value":"/ [`Pin::as_mut`], which lets you call the method without consuming the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285313,"byte_end":11285386,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/ `Sleep` itself.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285391,"byte_end":11285410,"line_start":202,"line_end":202,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285415,"byte_end":11285418,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285423,"byte_end":11285436,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285441,"byte_end":11285444,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285449,"byte_end":11285456,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285461,"byte_end":11285502,"line_start":207,"line_end":207,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285507,"byte_end":11285510,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285515,"byte_end":11285562,"line_start":209,"line_end":209,"column_start":5,"column_end":52}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285567,"byte_end":11285590,"line_start":210,"line_end":210,"column_start":5,"column_end":28}},{"value":"/ let sleep = tokio::time::sleep(Duration::from_millis(10));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285595,"byte_end":11285657,"line_start":211,"line_end":211,"column_start":5,"column_end":67}},{"value":"/ tokio::pin!(sleep);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285662,"byte_end":11285685,"line_start":212,"line_end":212,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285690,"byte_end":11285693,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ sleep.as_mut().reset(Instant::now() + Duration::from_millis(20));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285698,"byte_end":11285767,"line_start":214,"line_end":214,"column_start":5,"column_end":74}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285772,"byte_end":11285779,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285784,"byte_end":11285791,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285796,"byte_end":11285799,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ [`Pin::as_mut`]: fn@std::pin::Pin::as_mut","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11285804,"byte_end":11285849,"line_start":218,"line_end":218,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":10294},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::time::error","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","parent":null,"children":[{"krate":0,"index":10295},{"krate":0,"index":10296},{"krate":0,"index":10299},{"krate":0,"index":10555},{"krate":0,"index":10561},{"krate":0,"index":10560},{"krate":0,"index":10558},{"krate":0,"index":10563},{"krate":0,"index":10582},{"krate":0,"index":10580},{"krate":0,"index":10579},{"krate":0,"index":10576},{"krate":0,"index":10577},{"krate":0,"index":10573},{"krate":0,"index":10574},{"krate":0,"index":10302},{"krate":0,"index":10584},{"krate":0,"index":10591},{"krate":0,"index":10587},{"krate":0,"index":10588},{"krate":0,"index":10593},{"krate":0,"index":10596},{"krate":0,"index":10304},{"krate":0,"index":10311},{"krate":0,"index":10312},{"krate":0,"index":10315},{"krate":0,"index":10317},{"krate":0,"index":10319},{"krate":0,"index":10320}],"decl_id":null,"docs":" Time error types.\n","sig":null,"attributes":[{"value":"/ Time error types.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11287155,"byte_end":11287176,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":10555},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11288363,"byte_end":11288368,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11287228,"byte_end":11287279,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11287280,"byte_end":11287283,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11287284,"byte_end":11287345,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11287346,"byte_end":11287349,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11287350,"byte_end":11287424,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11287425,"byte_end":11287504,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11287505,"byte_end":11287580,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11287581,"byte_end":11287656,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11287657,"byte_end":11287685,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11287686,"byte_end":11287689,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11287690,"byte_end":11287767,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding sleep instances.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11287768,"byte_end":11287855,"line_start":18,"line_end":18,"column_start":1,"column_end":88}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11287856,"byte_end":11287932,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11287933,"byte_end":11288013,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11288014,"byte_end":11288091,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11288092,"byte_end":11288173,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11288174,"byte_end":11288256,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11288257,"byte_end":11288260,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11288261,"byte_end":11288321,"line_start":25,"line_end":25,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10584},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11288672,"byte_end":11288679,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::error::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11288600,"byte_end":11288632,"line_start":43,"line_end":43,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":10305},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11288856,"byte_end":11288864,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11288793,"byte_end":11288844,"line_start":55,"line_end":55,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":10306},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11288996,"byte_end":11289007,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11288913,"byte_end":11288984,"line_start":60,"line_end":60,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":10307},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11289143,"byte_end":11289154,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11289077,"byte_end":11289131,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":10308},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11289291,"byte_end":11289305,"line_start":71,"line_end":71,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11289205,"byte_end":11289279,"line_start":70,"line_end":70,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":10309},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11289444,"byte_end":11289451,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Error>::invalid","value":"pub fn invalid() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an error representing a misconfigured timer.\n","sig":null,"attributes":[{"value":"/ Create an error representing a misconfigured timer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11289377,"byte_end":11289432,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":10310},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11289587,"byte_end":11289597,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Error>::is_invalid","value":"pub fn is_invalid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being misconfigured.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being misconfigured.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11289499,"byte_end":11289575,"line_start":80,"line_end":80,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":10598},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291975,"byte_end":11291982,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":10599}],"decl_id":null,"docs":" A measurement of a monotonically nondecreasing clock.\n Opaque and useful only with `Duration`.","sig":null,"attributes":[{"value":"/ A measurement of a monotonically nondecreasing clock.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11290684,"byte_end":11290741,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ Opaque and useful only with `Duration`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11290742,"byte_end":11290785,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11290786,"byte_end":11290789,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11290790,"byte_end":11290867,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ instant when created, and are often useful for tasks such as measuring","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11290868,"byte_end":11290942,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ benchmarks or timing how long an operation takes.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11290943,"byte_end":11290996,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11290997,"byte_end":11291000,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291001,"byte_end":11291079,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ words, each tick of the underlying clock may not be the same length (e.g.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291080,"byte_end":11291157,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ some seconds may be longer than others). An instant may jump forwards or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291158,"byte_end":11291234,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ experience time dilation (slow down or speed up), but it will never go","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291235,"byte_end":11291309,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ backwards.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291310,"byte_end":11291324,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291325,"byte_end":11291328,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291329,"byte_end":11291409,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ no method to get \"the number of seconds\" from an instant. Instead, it only","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291410,"byte_end":11291488,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ allows measuring the duration between two instants (or comparing two","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291489,"byte_end":11291561,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ instants).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291562,"byte_end":11291576,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291577,"byte_end":11291580,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The size of an `Instant` struct may vary depending on the target operating","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291581,"byte_end":11291659,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ system.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291660,"byte_end":11291671,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291672,"byte_end":11291675,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291676,"byte_end":11291686,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291687,"byte_end":11291690,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This type wraps the inner `std` variant and is used to align the Tokio","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291691,"byte_end":11291765,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ clock for uses of `now()`. This can be useful for testing where you can","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291766,"byte_end":11291841,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ take advantage of `time::pause()` and `time::advance()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11291842,"byte_end":11291902,"line_start":32,"line_end":32,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":10333},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11292229,"byte_end":11292232,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11292036,"byte_end":11292082,"line_start":39,"line_end":39,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11292087,"byte_end":11292090,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11292095,"byte_end":11292109,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11292114,"byte_end":11292117,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11292122,"byte_end":11292129,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11292134,"byte_end":11292163,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11292168,"byte_end":11292171,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11292176,"byte_end":11292205,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11292210,"byte_end":11292217,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10334},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11292358,"byte_end":11292366,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11292282,"byte_end":11292346,"line_start":52,"line_end":52,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":10336},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11292849,"byte_end":11292857,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11292787,"byte_end":11292837,"line_start":65,"line_end":65,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":10337},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293101,"byte_end":11293115,"line_start":75,"line_end":75,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11292916,"byte_end":11292988,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11292993,"byte_end":11292996,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293001,"byte_end":11293013,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293018,"byte_end":11293021,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293026,"byte_end":11293089,"line_start":74,"line_end":74,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":10338},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293798,"byte_end":11293820,"line_start":96,"line_end":96,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293211,"byte_end":11293286,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293291,"byte_end":11293339,"line_start":80,"line_end":80,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293344,"byte_end":11293347,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293352,"byte_end":11293366,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293371,"byte_end":11293374,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293379,"byte_end":11293386,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293391,"byte_end":11293439,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293444,"byte_end":11293447,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293452,"byte_end":11293470,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293475,"byte_end":11293496,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293501,"byte_end":11293534,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293539,"byte_end":11293580,"line_start":90,"line_end":90,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293585,"byte_end":11293622,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293627,"byte_end":11293689,"line_start":92,"line_end":92,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293694,"byte_end":11293764,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293769,"byte_end":11293774,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293779,"byte_end":11293786,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10339},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294535,"byte_end":11294560,"line_start":117,"line_end":117,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11293932,"byte_end":11294007,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294012,"byte_end":11294071,"line_start":101,"line_end":101,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294076,"byte_end":11294079,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294084,"byte_end":11294098,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294103,"byte_end":11294106,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294111,"byte_end":11294118,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294123,"byte_end":11294171,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294176,"byte_end":11294179,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294184,"byte_end":11294202,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294207,"byte_end":11294228,"line_start":109,"line_end":109,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294233,"byte_end":11294266,"line_start":110,"line_end":110,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294271,"byte_end":11294312,"line_start":111,"line_end":111,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294317,"byte_end":11294354,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294359,"byte_end":11294424,"line_start":113,"line_end":113,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294429,"byte_end":11294501,"line_start":114,"line_end":114,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294506,"byte_end":11294511,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294516,"byte_end":11294523,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10340},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11295323,"byte_end":11295330,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294667,"byte_end":11294737,"line_start":121,"line_end":121,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294742,"byte_end":11294745,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294750,"byte_end":11294762,"line_start":123,"line_end":123,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294767,"byte_end":11294770,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294775,"byte_end":11294843,"line_start":125,"line_end":125,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294848,"byte_end":11294914,"line_start":126,"line_end":126,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294919,"byte_end":11294946,"line_start":127,"line_end":127,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294951,"byte_end":11294954,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294959,"byte_end":11294973,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294978,"byte_end":11294981,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294986,"byte_end":11294993,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11294998,"byte_end":11295046,"line_start":132,"line_end":132,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11295051,"byte_end":11295054,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11295059,"byte_end":11295077,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11295082,"byte_end":11295103,"line_start":135,"line_end":135,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11295108,"byte_end":11295145,"line_start":136,"line_end":136,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11295150,"byte_end":11295198,"line_start":137,"line_end":137,"column_start":5,"column_end":53}},{"value":"/     sleep(three_secs).await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11295203,"byte_end":11295235,"line_start":138,"line_end":138,"column_start":5,"column_end":37}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11295240,"byte_end":11295289,"line_start":139,"line_end":139,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11295294,"byte_end":11295299,"line_start":140,"line_end":140,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11295304,"byte_end":11295311,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10341},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11295611,"byte_end":11295622,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11295394,"byte_end":11295469,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11295474,"byte_end":11295545,"line_start":147,"line_end":147,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11295550,"byte_end":11295599,"line_start":148,"line_end":148,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":10342},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11295961,"byte_end":11295972,"line_start":156,"line_end":156,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11295744,"byte_end":11295819,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11295824,"byte_end":11295895,"line_start":154,"line_end":154,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11295900,"byte_end":11295949,"line_start":155,"line_end":155,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":10400},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299416,"byte_end":11299424,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11297694,"byte_end":11297771,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11297772,"byte_end":11297803,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11297804,"byte_end":11297807,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11297808,"byte_end":11297888,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11297889,"byte_end":11297928,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11297929,"byte_end":11297932,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11297933,"byte_end":11298006,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298007,"byte_end":11298010,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298011,"byte_end":11298023,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298024,"byte_end":11298027,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298028,"byte_end":11298073,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298074,"byte_end":11298077,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298078,"byte_end":11298092,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298093,"byte_end":11298096,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298097,"byte_end":11298104,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298105,"byte_end":11298143,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298144,"byte_end":11298147,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298148,"byte_end":11298166,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298167,"byte_end":11298188,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298189,"byte_end":11298258,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298259,"byte_end":11298262,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298263,"byte_end":11298293,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298294,"byte_end":11298324,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298325,"byte_end":11298355,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298356,"byte_end":11298359,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298360,"byte_end":11298403,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298404,"byte_end":11298409,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298410,"byte_end":11298417,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298418,"byte_end":11298421,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298422,"byte_end":11298496,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298497,"byte_end":11298500,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`sleep`] is that an `interval`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298501,"byte_end":11298574,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298575,"byte_end":11298650,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298651,"byte_end":11298727,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298728,"byte_end":11298789,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298790,"byte_end":11298793,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298794,"byte_end":11298868,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298869,"byte_end":11298939,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298940,"byte_end":11298952,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298953,"byte_end":11298956,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298957,"byte_end":11298964,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298965,"byte_end":11298985,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298986,"byte_end":11298989,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11298990,"byte_end":11299031,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299032,"byte_end":11299058,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299059,"byte_end":11299114,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299115,"byte_end":11299120,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299121,"byte_end":11299124,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299125,"byte_end":11299143,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299144,"byte_end":11299165,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299166,"byte_end":11299238,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299239,"byte_end":11299263,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299264,"byte_end":11299298,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299299,"byte_end":11299344,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299345,"byte_end":11299354,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299355,"byte_end":11299360,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299361,"byte_end":11299368,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299369,"byte_end":11299372,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299373,"byte_end":11299408,"line_start":66,"line_end":66,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":10401},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300313,"byte_end":11300324,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `start`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299574,"byte_end":11299647,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `start`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299648,"byte_end":11299685,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299686,"byte_end":11299689,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299690,"byte_end":11299770,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299771,"byte_end":11299810,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299811,"byte_end":11299814,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299815,"byte_end":11299827,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299828,"byte_end":11299831,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299832,"byte_end":11299877,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299878,"byte_end":11299881,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299882,"byte_end":11299896,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299897,"byte_end":11299900,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299901,"byte_end":11299908,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299909,"byte_end":11299963,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299964,"byte_end":11299967,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299968,"byte_end":11299986,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11299987,"byte_end":11300008,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300009,"byte_end":11300072,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300073,"byte_end":11300146,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300147,"byte_end":11300150,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300151,"byte_end":11300181,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300182,"byte_end":11300212,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300213,"byte_end":11300243,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300244,"byte_end":11300247,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300248,"byte_end":11300291,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300292,"byte_end":11300297,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300298,"byte_end":11300305,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10617},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301079,"byte_end":11301087,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":10618},{"krate":0,"index":10619}],"decl_id":null,"docs":" Interval returned by [`interval`](interval) and [`interval_at`](interval_at).","sig":null,"attributes":[{"value":"/ Interval returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300532,"byte_end":11300613,"line_start":109,"line_end":109,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300614,"byte_end":11300617,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This type allows you to wait on a sequence of instants with a certain","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300618,"byte_end":11300691,"line_start":111,"line_end":111,"column_start":1,"column_end":74}},{"value":"/ duration between each instant. Unlike calling [`sleep`](crate::time::sleep)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300692,"byte_end":11300771,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/ in a loop, this lets you count the time spent between the calls to `sleep`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300772,"byte_end":11300850,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ as well.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300851,"byte_end":11300863,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300864,"byte_end":11300867,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ An `Interval` can be turned into a `Stream` with [`IntervalStream`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300868,"byte_end":11300940,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300941,"byte_end":11300944,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ [`IntervalStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.IntervalStream.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11300945,"byte_end":11301050,"line_start":118,"line_end":118,"column_start":1,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":10403},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301820,"byte_end":11301824,"line_start":149,"line_end":149,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301298,"byte_end":11301367,"line_start":129,"line_end":129,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301372,"byte_end":11301375,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301380,"byte_end":11301394,"line_start":131,"line_end":131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301399,"byte_end":11301402,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301407,"byte_end":11301414,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301419,"byte_end":11301439,"line_start":134,"line_end":134,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301444,"byte_end":11301447,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301452,"byte_end":11301480,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301485,"byte_end":11301488,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301493,"byte_end":11301511,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301516,"byte_end":11301537,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301542,"byte_end":11301611,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301616,"byte_end":11301619,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301624,"byte_end":11301654,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301659,"byte_end":11301689,"line_start":143,"line_end":143,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301694,"byte_end":11301724,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301729,"byte_end":11301732,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301737,"byte_end":11301780,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301785,"byte_end":11301790,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301795,"byte_end":11301802,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10407},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11302500,"byte_end":11302509,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Poll for the next instant in the interval to be reached.","sig":null,"attributes":[{"value":"/ Poll for the next instant in the interval to be reached.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301907,"byte_end":11301967,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301972,"byte_end":11301975,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301980,"byte_end":11302028,"line_start":155,"line_end":155,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11302033,"byte_end":11302036,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next instant has not yet been reached.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11302041,"byte_end":11302109,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/  * `Poll::Ready(instant)` if the next instant has been reached.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11302114,"byte_end":11302181,"line_start":158,"line_end":158,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11302186,"byte_end":11302189,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11302194,"byte_end":11302269,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the instant has elapsed. Note that on multiple","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11302274,"byte_end":11302349,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ calls to `poll_tick`, only the `Waker` from the `Context` passed to the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11302354,"byte_end":11302429,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ most recent call is scheduled to receive a wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11302434,"byte_end":11302488,"line_start":163,"line_end":163,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":10408},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11303056,"byte_end":11303062,"line_start":181,"line_end":181,"column_start":12,"column_end":18},"name":"period","qualname":"<Interval>::period","value":"pub fn period(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the period of the interval.\n","sig":null,"attributes":[{"value":"/ Returns the period of the interval.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11303005,"byte_end":11303044,"line_start":180,"line_end":180,"column_start":5,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":10452},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304466,"byte_end":11304473,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11303451,"byte_end":11303528,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11303529,"byte_end":11303532,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11303533,"byte_end":11303612,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11303613,"byte_end":11303685,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11303686,"byte_end":11303699,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11303700,"byte_end":11303703,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11303704,"byte_end":11303721,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11303722,"byte_end":11303725,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11303726,"byte_end":11303804,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11303805,"byte_end":11303835,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11303836,"byte_end":11303839,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11303840,"byte_end":11303920,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11303921,"byte_end":11303948,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11303949,"byte_end":11303952,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11303953,"byte_end":11303967,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11303968,"byte_end":11303971,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11303972,"byte_end":11304032,"line_start":30,"line_end":30,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304033,"byte_end":11304036,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304037,"byte_end":11304048,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304049,"byte_end":11304078,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304079,"byte_end":11304108,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304109,"byte_end":11304112,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304113,"byte_end":11304141,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304142,"byte_end":11304145,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304146,"byte_end":11304168,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304169,"byte_end":11304207,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304208,"byte_end":11304235,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304236,"byte_end":11304239,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304240,"byte_end":11304313,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304314,"byte_end":11304380,"line_start":43,"line_end":43,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304381,"byte_end":11304436,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304437,"byte_end":11304442,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304443,"byte_end":11304450,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304451,"byte_end":11304458,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":10454},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305812,"byte_end":11305822,"line_start":94,"line_end":94,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304781,"byte_end":11304853,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304854,"byte_end":11304857,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304858,"byte_end":11304935,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304936,"byte_end":11304991,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304992,"byte_end":11304995,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11304996,"byte_end":11305013,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305014,"byte_end":11305017,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305018,"byte_end":11305096,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305097,"byte_end":11305127,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305128,"byte_end":11305131,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305132,"byte_end":11305212,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305213,"byte_end":11305240,"line_start":71,"line_end":71,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305241,"byte_end":11305244,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305245,"byte_end":11305259,"line_start":73,"line_end":73,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305260,"byte_end":11305263,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305264,"byte_end":11305324,"line_start":75,"line_end":75,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305325,"byte_end":11305328,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305329,"byte_end":11305340,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305341,"byte_end":11305384,"line_start":78,"line_end":78,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305385,"byte_end":11305414,"line_start":79,"line_end":79,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305415,"byte_end":11305418,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305419,"byte_end":11305447,"line_start":81,"line_end":81,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305448,"byte_end":11305451,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305452,"byte_end":11305474,"line_start":83,"line_end":83,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305475,"byte_end":11305513,"line_start":84,"line_end":84,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305514,"byte_end":11305541,"line_start":85,"line_end":85,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305542,"byte_end":11305545,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305546,"byte_end":11305624,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305625,"byte_end":11305639,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305640,"byte_end":11305726,"line_start":89,"line_end":89,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305727,"byte_end":11305782,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305783,"byte_end":11305788,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305789,"byte_end":11305796,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11305797,"byte_end":11305804,"line_start":93,"line_end":93,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10904},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11306197,"byte_end":11306204,"line_start":110,"line_end":110,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":10906},{"krate":0,"index":10907}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11581787,"byte_end":11581796,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":10459},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11306500,"byte_end":11306507,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11306427,"byte_end":11306488,"line_start":123,"line_end":123,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":10460},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11306635,"byte_end":11306642,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11306554,"byte_end":11306623,"line_start":128,"line_end":128,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":10461},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11306771,"byte_end":11306781,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11306701,"byte_end":11306759,"line_start":133,"line_end":133,"column_start":5,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":916},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":140351,"byte_end":140357,"line_start":47,"line_end":47,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":915},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":140260,"byte_end":140289,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":140294,"byte_end":140297,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":140302,"byte_end":140341,"line_start":46,"line_end":46,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":917},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":140387,"byte_end":140393,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":915},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":140364,"byte_end":140377,"line_start":49,"line_end":49,"column_start":5,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":966},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":16395,"byte_end":16401,"line_start":443,"line_end":443,"column_start":9,"column_end":15},"name":"stream","qualname":"::stream","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0\n release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]\n crate.","sig":null,"attributes":[{"value":"/ Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":14899,"byte_end":14980,"line_start":406,"line_end":406,"column_start":1,"column_end":82}},{"value":"/ release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":14981,"byte_end":15070,"line_start":407,"line_end":407,"column_start":1,"column_end":90}},{"value":"/ crate.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":15071,"byte_end":15081,"line_start":408,"line_end":408,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":15082,"byte_end":15085,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ # Why was `Stream` not included in Tokio 1.0?","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":15086,"byte_end":15135,"line_start":410,"line_end":410,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":15136,"byte_end":15139,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ Originally, we had planned to ship Tokio 1.0 with a stable `Stream` type","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":15140,"byte_end":15216,"line_start":412,"line_end":412,"column_start":1,"column_end":77}},{"value":"/ but unfortunately the [RFC] had not been merged in time for `Stream` to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":15217,"byte_end":15292,"line_start":413,"line_end":413,"column_start":1,"column_end":76}},{"value":"/ reach `std` on a stable compiler in time for the 1.0 release of Tokio. For","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":15293,"byte_end":15371,"line_start":414,"line_end":414,"column_start":1,"column_end":79}},{"value":"/ this reason, the team has decided to move all `Stream` based utilities to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":15372,"byte_end":15449,"line_start":415,"line_end":415,"column_start":1,"column_end":78}},{"value":"/ the [`tokio-stream`] crate. While this is not ideal, once `Stream` has made","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":15450,"byte_end":15529,"line_start":416,"line_end":416,"column_start":1,"column_end":80}},{"value":"/ it into the standard library and the MSRV period has passed, we will implement","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":15530,"byte_end":15612,"line_start":417,"line_end":417,"column_start":1,"column_end":83}},{"value":"/ stream for our different types.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":15613,"byte_end":15648,"line_start":418,"line_end":418,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":15649,"byte_end":15652,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ While this may seem unfortunate, not all is lost as you can get much of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":15653,"byte_end":15732,"line_start":420,"line_end":420,"column_start":1,"column_end":80}},{"value":"/ `Stream` support with `async/await` and `while let` loops. It is also possible","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":15733,"byte_end":15815,"line_start":421,"line_end":421,"column_start":1,"column_end":83}},{"value":"/ to create a `impl Stream` from `async fn` using the [`async-stream`] crate.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":15816,"byte_end":15895,"line_start":422,"line_end":422,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":15896,"byte_end":15899,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/ [`tokio-stream`]: https://docs.rs/tokio-stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":15900,"byte_end":15950,"line_start":424,"line_end":424,"column_start":1,"column_end":51}},{"value":"/ [`async-stream`]: https://docs.rs/async-stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":15951,"byte_end":16001,"line_start":425,"line_end":425,"column_start":1,"column_end":51}},{"value":"/ [RFC]: https://github.com/rust-lang/rfcs/pull/2996","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":16002,"byte_end":16056,"line_start":426,"line_end":426,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":16057,"byte_end":16060,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":16061,"byte_end":16074,"line_start":428,"line_end":428,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":16075,"byte_end":16078,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Convert a [`sync::mpsc::Receiver`] to an `impl Stream`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":16079,"byte_end":16138,"line_start":430,"line_end":430,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":16139,"byte_end":16142,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":16143,"byte_end":16161,"line_start":432,"line_end":432,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":16162,"byte_end":16188,"line_start":433,"line_end":433,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":16189,"byte_end":16192,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ let (tx, mut rx) = mpsc::channel::<usize>(16);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":16193,"byte_end":16243,"line_start":435,"line_end":435,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":16244,"byte_end":16247,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ let stream = async_stream::stream! {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":16248,"byte_end":16288,"line_start":437,"line_end":437,"column_start":1,"column_end":41}},{"value":"/     while let Some(item) = rx.recv().await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":16289,"byte_end":16337,"line_start":438,"line_end":438,"column_start":1,"column_end":49}},{"value":"/         yield item;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":16338,"byte_end":16361,"line_start":439,"line_end":439,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":16362,"byte_end":16371,"line_start":440,"line_end":440,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":16372,"byte_end":16378,"line_start":441,"line_end":441,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":16379,"byte_end":16386,"line_start":442,"line_end":442,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/scoped_tls.rs","byte_start":31563,"byte_end":31572,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/scoped_tls.rs","byte_start":31588,"byte_end":31597,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/scoped_tls.rs","byte_start":31947,"byte_end":31952,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/future/poll_fn.rs","byte_start":33750,"byte_end":33756,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/future/poll_fn.rs","byte_start":33970,"byte_end":33976,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/future/poll_fn.rs","byte_start":34118,"byte_end":34124,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/future/ready.rs","byte_start":10127255,"byte_end":10127260,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/future/ready.rs","byte_start":10127287,"byte_end":10127292,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":46981,"byte_end":46984,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":47144,"byte_end":47147,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":47776,"byte_end":47782,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":50849,"byte_end":50852,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":50995,"byte_end":50998,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":51667,"byte_end":51673,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":54667,"byte_end":54670,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1025},{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":54813,"byte_end":54816,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":55207,"byte_end":55213,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":64971,"byte_end":64974,"line_start":217,"line_end":217,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":65122,"byte_end":65125,"line_start":225,"line_end":225,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":66002,"byte_end":66005,"line_start":259,"line_end":259,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":66803,"byte_end":66809,"line_start":290,"line_end":290,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":67612,"byte_end":67618,"line_start":320,"line_end":320,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":68424,"byte_end":68430,"line_start":350,"line_end":350,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":69231,"byte_end":69237,"line_start":380,"line_end":380,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":71278,"byte_end":71285,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":80263,"byte_end":80270,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138358,"byte_end":10138366,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10140507,"byte_end":10140515,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10140658,"byte_end":10140666,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10140794,"byte_end":10140802,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10141387,"byte_end":10141392,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10145809,"byte_end":10145814,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10146558,"byte_end":10146563,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10146724,"byte_end":10146729,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10146857,"byte_end":10146862,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10147016,"byte_end":10147021,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10147168,"byte_end":10147173,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/registration.rs","byte_start":10149758,"byte_end":10149770,"line_start":53,"line_end":53,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/registration.rs","byte_start":10149795,"byte_end":10149807,"line_start":54,"line_end":54,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/registration.rs","byte_start":10149851,"byte_end":10149863,"line_start":58,"line_end":58,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1150},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1158},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/registration.rs","byte_start":10155291,"byte_end":10155303,"line_start":211,"line_end":211,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/registration.rs","byte_start":10155902,"byte_end":10155914,"line_start":229,"line_end":229,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1433},{"krate":0,"index":1443}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10159420,"byte_end":10159431,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10159691,"byte_end":10159702,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10159882,"byte_end":10159893,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10168076,"byte_end":10168087,"line_start":366,"line_end":366,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10168176,"byte_end":10168187,"line_start":372,"line_end":372,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10168212,"byte_end":10168223,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10168257,"byte_end":10168268,"line_start":376,"line_end":376,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1506},{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10169191,"byte_end":10169197,"line_start":401,"line_end":401,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10169692,"byte_end":10169701,"line_start":420,"line_end":420,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10174375,"byte_end":10174384,"line_start":529,"line_end":529,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10174749,"byte_end":10174758,"line_start":542,"line_end":542,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10174791,"byte_end":10174800,"line_start":543,"line_end":543,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10130930,"byte_end":10130936,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10133742,"byte_end":10133748,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10133863,"byte_end":10133868,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10134312,"byte_end":10134318,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10134717,"byte_end":10134723,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10134873,"byte_end":10134879,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10135710,"byte_end":10135716,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1338},{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10136533,"byte_end":10136539,"line_start":302,"line_end":302,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10136617,"byte_end":10136623,"line_start":308,"line_end":308,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10136758,"byte_end":10136763,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1345},{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10137720,"byte_end":10137729,"line_start":346,"line_end":346,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/poll_evented.rs","byte_start":10178023,"byte_end":10178034,"line_start":70,"line_end":70,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/poll_evented.rs","byte_start":10180796,"byte_end":10180807,"line_start":142,"line_end":142,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1571},{"krate":0,"index":1576},{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/poll_evented.rs","byte_start":10182350,"byte_end":10182361,"line_start":189,"line_end":189,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/poll_evented.rs","byte_start":10182504,"byte_end":10182515,"line_start":197,"line_end":197,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/poll_evented.rs","byte_start":10182687,"byte_end":10182698,"line_start":203,"line_end":203,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1391}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10189911,"byte_end":10189918,"line_start":168,"line_end":168,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1649},{"krate":0,"index":1651},{"krate":0,"index":1653},{"krate":0,"index":1655},{"krate":0,"index":1658},{"krate":0,"index":1661},{"krate":0,"index":1665},{"krate":0,"index":1669},{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10201886,"byte_end":10201893,"line_start":462,"line_end":462,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1679}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10202047,"byte_end":10202054,"line_start":468,"line_end":468,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10202265,"byte_end":10202272,"line_start":476,"line_end":476,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1685}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10202372,"byte_end":10202389,"line_start":482,"line_end":482,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10204937,"byte_end":10204957,"line_start":545,"line_end":545,"column_start":26,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10207467,"byte_end":10207484,"line_start":606,"line_end":606,"column_start":60,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10207741,"byte_end":10207761,"line_start":614,"line_end":614,"column_start":60,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1709}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10209803,"byte_end":10209811,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1782},{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10210728,"byte_end":10210737,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10210987,"byte_end":10210995,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1789}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10211290,"byte_end":10211299,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10211978,"byte_end":10211983,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1797}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10212439,"byte_end":10212444,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1800}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10212697,"byte_end":10212702,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1803}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10212825,"byte_end":10212833,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10212870,"byte_end":10212879,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10212916,"byte_end":10212924,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10212961,"byte_end":10212970,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10213013,"byte_end":10213021,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10213189,"byte_end":10213198,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1817}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/seek.rs","byte_start":10214155,"byte_end":10214159,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1862},{"krate":0,"index":1863}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_buf_read_ext.rs","byte_start":10226289,"byte_end":10226290,"line_start":259,"line_end":259,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10265939,"byte_end":10265940,"line_start":1122,"line_end":1122,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_seek_ext.rs","byte_start":10268405,"byte_end":10268406,"line_start":83,"line_end":83,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10306962,"byte_end":10306963,"line_start":1101,"line_end":1101,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10308407,"byte_end":10308416,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2289}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10310314,"byte_end":10310323,"line_start":100,"line_end":100,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10311133,"byte_end":10311142,"line_start":122,"line_end":122,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2295},{"krate":0,"index":2296}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10313335,"byte_end":10313344,"line_start":176,"line_end":176,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2299},{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10317376,"byte_end":10317385,"line_start":262,"line_end":262,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2305}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10317896,"byte_end":10317905,"line_start":280,"line_end":280,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2308}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10319423,"byte_end":10319432,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10321269,"byte_end":10321278,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2366}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10321420,"byte_end":10321429,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2369}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10322309,"byte_end":10322318,"line_start":121,"line_end":121,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2374}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10322848,"byte_end":10322857,"line_start":139,"line_end":139,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2377}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10323992,"byte_end":10324001,"line_start":167,"line_end":167,"column_start":60,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2380},{"krate":0,"index":2381}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10324343,"byte_end":10324352,"line_start":177,"line_end":177,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2384},{"krate":0,"index":2385}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10326351,"byte_end":10326360,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":2444}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10328679,"byte_end":10328688,"line_start":118,"line_end":118,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2447},{"krate":0,"index":2448},{"krate":0,"index":2449}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10329981,"byte_end":10329990,"line_start":160,"line_end":160,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2452},{"krate":0,"index":2453}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10331531,"byte_end":10331540,"line_start":203,"line_end":203,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2456}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10331794,"byte_end":10331803,"line_start":213,"line_end":213,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2459},{"krate":0,"index":2460}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10332090,"byte_end":10332099,"line_start":223,"line_end":223,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2463}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10333277,"byte_end":10333282,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2506}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10334422,"byte_end":10334427,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2510}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10334706,"byte_end":10334711,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2514}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10335297,"byte_end":10335302,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2518},{"krate":0,"index":2519}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy.rs","byte_start":10336429,"byte_end":10336439,"line_start":17,"line_end":17,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2548},{"krate":0,"index":2549}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy.rs","byte_start":10340036,"byte_end":10340040,"line_start":136,"line_end":136,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2555},{"krate":0,"index":2556}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10341620,"byte_end":10341637,"line_start":52,"line_end":52,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2612},{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_buf.rs","byte_start":10346123,"byte_end":10346130,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2649},{"krate":0,"index":2650}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/empty.rs","byte_start":10348397,"byte_end":10348402,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2682}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/empty.rs","byte_start":10348616,"byte_end":10348621,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2684},{"krate":0,"index":2685}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/empty.rs","byte_start":10348854,"byte_end":10348859,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2687}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/flush.rs","byte_start":10349986,"byte_end":10349991,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2725},{"krate":0,"index":2726}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351322,"byte_end":10351327,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2757},{"krate":0,"index":2764},{"krate":0,"index":2765},{"krate":0,"index":2766}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10352579,"byte_end":10352584,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2769}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10357342,"byte_end":10357354,"line_start":101,"line_end":101,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2813}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10357898,"byte_end":10357910,"line_start":117,"line_end":117,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2815},{"krate":0,"index":2816},{"krate":0,"index":2817}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10358608,"byte_end":10358620,"line_start":144,"line_end":144,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2819}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10358816,"byte_end":10358820,"line_start":154,"line_end":154,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2821},{"krate":0,"index":2822},{"krate":0,"index":2823}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10359522,"byte_end":10359526,"line_start":182,"line_end":182,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2825}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10360392,"byte_end":10360396,"line_start":209,"line_end":209,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2827},{"krate":0,"index":2828},{"krate":0,"index":2829}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read.rs","byte_start":10362583,"byte_end":10362587,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2875},{"krate":0,"index":2876}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_buf.rs","byte_start":10363721,"byte_end":10363728,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2913},{"krate":0,"index":2914}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_exact.rs","byte_start":10366109,"byte_end":10366118,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2960},{"krate":0,"index":2961}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_line.rs","byte_start":10375175,"byte_end":10375183,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3047},{"krate":0,"index":3048}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_to_end.rs","byte_start":10378836,"byte_end":10378845,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3099},{"krate":0,"index":3100}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/vec_with_initialized.rs","byte_start":10379240,"byte_end":10379243,"line_start":7,"line_end":7,"column_start":21,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/vec_with_initialized.rs","byte_start":10379532,"byte_end":10379535,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/vec_with_initialized.rs","byte_start":10380235,"byte_end":10380253,"line_start":34,"line_end":34,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3116}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/vec_with_initialized.rs","byte_start":10380433,"byte_end":10380451,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3122},{"krate":0,"index":3124}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_to_string.rs","byte_start":10385803,"byte_end":10385815,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3176},{"krate":0,"index":3177}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_until.rs","byte_start":10388119,"byte_end":10388128,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3214},{"krate":0,"index":3215}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/repeat.rs","byte_start":10389706,"byte_end":10389712,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3238}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/shutdown.rs","byte_start":10391091,"byte_end":10391099,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3276},{"krate":0,"index":3277}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/sink.rs","byte_start":10392739,"byte_end":10392743,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3299},{"krate":0,"index":3300},{"krate":0,"index":3301}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/sink.rs","byte_start":10393253,"byte_end":10393257,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3303}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394414,"byte_end":10394419,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3341}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10395158,"byte_end":10395163,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3350}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10397461,"byte_end":10397465,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3394}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10399093,"byte_end":10399097,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3397}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10399741,"byte_end":10399745,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3400},{"krate":0,"index":3401}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write.rs","byte_start":10401544,"byte_end":10401549,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3436},{"krate":0,"index":3437}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_vectored.rs","byte_start":10402714,"byte_end":10402727,"line_start":37,"line_end":37,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3474},{"krate":0,"index":3475}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_all.rs","byte_start":10403776,"byte_end":10403784,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3510},{"krate":0,"index":3511}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_buf.rs","byte_start":10405269,"byte_end":10405277,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3548},{"krate":0,"index":3549}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_all_buf.rs","byte_start":10406604,"byte_end":10406615,"line_start":37,"line_end":37,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3586},{"krate":0,"index":3587}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":83381,"byte_end":83391,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":83431,"byte_end":83441,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":83743,"byte_end":83755,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":83795,"byte_end":83807,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":84104,"byte_end":84116,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":84156,"byte_end":84168,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":88499,"byte_end":88505,"line_start":226,"line_end":226,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":88549,"byte_end":88555,"line_start":228,"line_end":228,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4161},{"krate":0,"index":4162},{"krate":0,"index":4163}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":90108,"byte_end":90118,"line_start":283,"line_end":283,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4184},{"krate":0,"index":4185}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":90757,"byte_end":90766,"line_start":301,"line_end":301,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4189}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10414563,"byte_end":10414574,"line_start":57,"line_end":57,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4260},{"krate":0,"index":4265},{"krate":0,"index":4266},{"krate":0,"index":4270},{"krate":0,"index":4271},{"krate":0,"index":4272},{"krate":0,"index":4282},{"krate":0,"index":4283},{"krate":0,"index":4284},{"krate":0,"index":4285}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10424349,"byte_end":10424360,"line_start":350,"line_end":350,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4287},{"krate":0,"index":4288}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10424686,"byte_end":10424697,"line_start":362,"line_end":362,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4290}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10424903,"byte_end":10424914,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4297}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428437,"byte_end":10428446,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4329},{"krate":0,"index":4330},{"krate":0,"index":4331},{"krate":0,"index":4332},{"krate":0,"index":4333},{"krate":0,"index":4334},{"krate":0,"index":4335},{"krate":0,"index":4336},{"krate":0,"index":4337},{"krate":0,"index":4338},{"krate":0,"index":4339},{"krate":0,"index":4340},{"krate":0,"index":4341},{"krate":0,"index":4344},{"krate":0,"index":4345}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10442467,"byte_end":10442476,"line_start":529,"line_end":529,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4354}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10442611,"byte_end":10442620,"line_start":536,"line_end":536,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4356}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10442730,"byte_end":10442739,"line_start":543,"line_end":543,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4358}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10443094,"byte_end":10443103,"line_start":557,"line_end":557,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4360}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445565,"byte_end":10445573,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4396},{"krate":0,"index":4397}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10448376,"byte_end":10448384,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4402}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10448600,"byte_end":10448609,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4404},{"krate":0,"index":4405},{"krate":0,"index":4406},{"krate":0,"index":4407},{"krate":0,"index":4408}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10449526,"byte_end":10449534,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4410}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10449628,"byte_end":10449637,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4412}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10452523,"byte_end":10452535,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4466}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10452738,"byte_end":10452750,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10452760,"byte_end":10452773,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4469},{"krate":0,"index":4470},{"krate":0,"index":4471}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455955,"byte_end":10455968,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4476}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10456169,"byte_end":10456183,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4478},{"krate":0,"index":4479}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10456866,"byte_end":10456880,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4481}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10457044,"byte_end":10457058,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4483},{"krate":0,"index":4484},{"krate":0,"index":4485},{"krate":0,"index":4486},{"krate":0,"index":4487}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10458105,"byte_end":10458118,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4489}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10458214,"byte_end":10458228,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4491}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10460758,"byte_end":10460767,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4582},{"krate":0,"index":4587},{"krate":0,"index":4590},{"krate":0,"index":4594},{"krate":0,"index":4595},{"krate":0,"index":4596},{"krate":0,"index":4606},{"krate":0,"index":4607},{"krate":0,"index":4608},{"krate":0,"index":4609},{"krate":0,"index":4612},{"krate":0,"index":4615},{"krate":0,"index":4617},{"krate":0,"index":4622},{"krate":0,"index":4908},{"krate":0,"index":4627},{"krate":0,"index":4630},{"krate":0,"index":4632},{"krate":0,"index":4637},{"krate":0,"index":4642},{"krate":0,"index":4646},{"krate":0,"index":4647},{"krate":0,"index":4648},{"krate":0,"index":4649},{"krate":0,"index":4650},{"krate":0,"index":4651},{"krate":0,"index":4659},{"krate":0,"index":4660},{"krate":0,"index":4661},{"krate":0,"index":4663},{"krate":0,"index":4664},{"krate":0,"index":4665},{"krate":0,"index":4666}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10499365,"byte_end":10499374,"line_start":1181,"line_end":1181,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4668},{"krate":0,"index":4669}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10499732,"byte_end":10499741,"line_start":1195,"line_end":1195,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4671}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10499951,"byte_end":10499960,"line_start":1205,"line_end":1205,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4673},{"krate":0,"index":4674},{"krate":0,"index":4675},{"krate":0,"index":4676},{"krate":0,"index":4677}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10500786,"byte_end":10500795,"line_start":1238,"line_end":1238,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4679}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10500999,"byte_end":10501008,"line_start":1249,"line_end":1249,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4686}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506167,"byte_end":10506176,"line_start":127,"line_end":127,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4750},{"krate":0,"index":4755},{"krate":0,"index":4756},{"krate":0,"index":4757},{"krate":0,"index":4758},{"krate":0,"index":4768},{"krate":0,"index":4769},{"krate":0,"index":4774},{"krate":0,"index":4777},{"krate":0,"index":4780},{"krate":0,"index":4784},{"krate":0,"index":4786},{"krate":0,"index":4788},{"krate":0,"index":4791},{"krate":0,"index":4795},{"krate":0,"index":4796},{"krate":0,"index":4920},{"krate":0,"index":4923},{"krate":0,"index":4798},{"krate":0,"index":4802},{"krate":0,"index":4804},{"krate":0,"index":4806},{"krate":0,"index":4810},{"krate":0,"index":4814},{"krate":0,"index":4815},{"krate":0,"index":4817},{"krate":0,"index":4821},{"krate":0,"index":4822},{"krate":0,"index":4823},{"krate":0,"index":4824},{"krate":0,"index":4825},{"krate":0,"index":4826},{"krate":0,"index":4827},{"krate":0,"index":4828},{"krate":0,"index":4829},{"krate":0,"index":4830},{"krate":0,"index":4831},{"krate":0,"index":4832},{"krate":0,"index":4833},{"krate":0,"index":4834},{"krate":0,"index":4835},{"krate":0,"index":4836}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10550251,"byte_end":10550260,"line_start":1397,"line_end":1397,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4838},{"krate":0,"index":4839}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10550585,"byte_end":10550594,"line_start":1409,"line_end":1409,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4841}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10550803,"byte_end":10550812,"line_start":1420,"line_end":1420,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4848}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10554879,"byte_end":10554891,"line_start":98,"line_end":98,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4986},{"krate":0,"index":4989},{"krate":0,"index":4992},{"krate":0,"index":4995},{"krate":0,"index":4997},{"krate":0,"index":4998},{"krate":0,"index":4999},{"krate":0,"index":5002},{"krate":0,"index":5003},{"krate":0,"index":5004},{"krate":0,"index":5006},{"krate":0,"index":5010},{"krate":0,"index":5012},{"krate":0,"index":5015},{"krate":0,"index":5019},{"krate":0,"index":5498},{"krate":0,"index":5501},{"krate":0,"index":5021},{"krate":0,"index":5026},{"krate":0,"index":5030},{"krate":0,"index":5031},{"krate":0,"index":5034},{"krate":0,"index":5036},{"krate":0,"index":5037},{"krate":0,"index":5039},{"krate":0,"index":5040},{"krate":0,"index":5041},{"krate":0,"index":5042}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10593124,"byte_end":10593136,"line_start":1252,"line_end":1252,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5044},{"krate":0,"index":5045}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10593480,"byte_end":10593492,"line_start":1264,"line_end":1264,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5047}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10593607,"byte_end":10593619,"line_start":1270,"line_end":1270,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5049}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10595372,"byte_end":10595384,"line_start":52,"line_end":52,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5101},{"krate":0,"index":5103},{"krate":0,"index":5104},{"krate":0,"index":5107},{"krate":0,"index":5108},{"krate":0,"index":5109},{"krate":0,"index":5113}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10599576,"byte_end":10599588,"line_start":157,"line_end":157,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5115},{"krate":0,"index":5116}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10599923,"byte_end":10599935,"line_start":169,"line_end":169,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5118}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10600050,"byte_end":10600062,"line_start":175,"line_end":175,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5120}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10601843,"byte_end":10601851,"line_start":50,"line_end":50,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5153}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10602067,"byte_end":10602076,"line_start":60,"line_end":60,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5155},{"krate":0,"index":5156},{"krate":0,"index":5157},{"krate":0,"index":5158},{"krate":0,"index":5159}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10602862,"byte_end":10602870,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5161}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10602966,"byte_end":10602975,"line_start":96,"line_end":96,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5163}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10605890,"byte_end":10605902,"line_start":85,"line_end":85,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5214}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10606105,"byte_end":10606117,"line_start":94,"line_end":94,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10606127,"byte_end":10606140,"line_start":96,"line_end":96,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5217}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10606556,"byte_end":10606569,"line_start":107,"line_end":107,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5219}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10606770,"byte_end":10606784,"line_start":117,"line_end":117,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5221},{"krate":0,"index":5222}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10607482,"byte_end":10607496,"line_start":136,"line_end":136,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5224}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10607660,"byte_end":10607674,"line_start":144,"line_end":144,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5226},{"krate":0,"index":5227},{"krate":0,"index":5228},{"krate":0,"index":5229},{"krate":0,"index":5230}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10608718,"byte_end":10608731,"line_start":181,"line_end":181,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5232}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10608829,"byte_end":10608843,"line_start":187,"line_end":187,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5234}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/socketaddr.rs","byte_start":10609064,"byte_end":10609074,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5256},{"krate":0,"index":5257}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/socketaddr.rs","byte_start":10609626,"byte_end":10609636,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5259}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10611118,"byte_end":10611128,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5365},{"krate":0,"index":5370},{"krate":0,"index":5373},{"krate":0,"index":5376},{"krate":0,"index":5378},{"krate":0,"index":5380},{"krate":0,"index":5543},{"krate":0,"index":5382},{"krate":0,"index":5385},{"krate":0,"index":5387},{"krate":0,"index":5389},{"krate":0,"index":5391},{"krate":0,"index":5392},{"krate":0,"index":5395},{"krate":0,"index":5396},{"krate":0,"index":5397},{"krate":0,"index":5398},{"krate":0,"index":5399},{"krate":0,"index":5400},{"krate":0,"index":5401},{"krate":0,"index":5402},{"krate":0,"index":5404}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10638571,"byte_end":10638581,"line_start":773,"line_end":773,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5406},{"krate":0,"index":5407}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10638894,"byte_end":10638904,"line_start":785,"line_end":785,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5409}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10639114,"byte_end":10639124,"line_start":795,"line_end":795,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5411},{"krate":0,"index":5412},{"krate":0,"index":5413},{"krate":0,"index":5414},{"krate":0,"index":5415}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10639889,"byte_end":10639899,"line_start":826,"line_end":826,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5417},{"krate":0,"index":5418},{"krate":0,"index":5419}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10641162,"byte_end":10641172,"line_start":864,"line_end":864,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5421}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10641287,"byte_end":10641297,"line_start":870,"line_end":870,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5423}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/ucred.rs","byte_start":10641684,"byte_end":10641689,"line_start":14,"line_end":14,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5439},{"krate":0,"index":5440},{"krate":0,"index":5441}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_ptr.rs","byte_start":94520,"byte_end":94529,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_ptr.rs","byte_start":94703,"byte_end":94712,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_ptr.rs","byte_start":94859,"byte_end":94868,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_ptr.rs","byte_start":94981,"byte_end":94990,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u16.rs","byte_start":95334,"byte_end":95343,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u16.rs","byte_start":95368,"byte_end":95377,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u16.rs","byte_start":95387,"byte_end":95396,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u16.rs","byte_start":95888,"byte_end":95897,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u16.rs","byte_start":96182,"byte_end":96191,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u32.rs","byte_start":96532,"byte_end":96541,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u32.rs","byte_start":96566,"byte_end":96575,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u32.rs","byte_start":96585,"byte_end":96594,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u32.rs","byte_start":96779,"byte_end":96788,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u32.rs","byte_start":97073,"byte_end":97082,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u8.rs","byte_start":99593,"byte_end":99601,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u8.rs","byte_start":99626,"byte_end":99634,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u8.rs","byte_start":99644,"byte_end":99652,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u8.rs","byte_start":99833,"byte_end":99841,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u8.rs","byte_start":100125,"byte_end":100133,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_usize.rs","byte_start":100473,"byte_end":100484,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_usize.rs","byte_start":100509,"byte_end":100520,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_usize.rs","byte_start":100530,"byte_end":100541,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_usize.rs","byte_start":101230,"byte_end":101241,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_usize.rs","byte_start":101531,"byte_end":101542,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_usize.rs","byte_start":101706,"byte_end":101717,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/mutex.rs","byte_start":102048,"byte_end":102053,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/unsafe_cell.rs","byte_start":102731,"byte_end":102741,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/either.rs","byte_start":10647589,"byte_end":10647595,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5608},{"krate":0,"index":5609},{"krate":0,"index":5610},{"krate":0,"index":5611},{"krate":0,"index":5612},{"krate":0,"index":5613}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/either.rs","byte_start":10648552,"byte_end":10648558,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5617}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/either.rs","byte_start":10648772,"byte_end":10648778,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5621}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/thread.rs","byte_start":107933,"byte_end":107943,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/thread.rs","byte_start":108208,"byte_end":108218,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/thread.rs","byte_start":108744,"byte_end":108749,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/thread.rs","byte_start":113514,"byte_end":113524,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/thread.rs","byte_start":113633,"byte_end":113645,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/thread.rs","byte_start":114000,"byte_end":114016,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":798},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/thread.rs","byte_start":115279,"byte_end":115295,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/thread.rs","byte_start":115890,"byte_end":115902,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/thread.rs","byte_start":116082,"byte_end":116087,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/mod.rs","byte_start":106980,"byte_end":106983,"line_start":107,"line_end":107,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/mod.rs","byte_start":107072,"byte_end":107075,"line_start":113,"line_end":113,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/enter.rs","byte_start":10669271,"byte_end":10669283,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5668}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/enter.rs","byte_start":10672229,"byte_end":10672250,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6363}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/enter.rs","byte_start":10672966,"byte_end":10672971,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6366},{"krate":0,"index":6371}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/enter.rs","byte_start":10674611,"byte_end":10674616,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5672}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/enter.rs","byte_start":10674746,"byte_end":10674751,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5674}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/core.rs","byte_start":10682722,"byte_end":10682728,"line_start":80,"line_end":80,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/core.rs","byte_start":10682753,"byte_end":10682759,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/core.rs","byte_start":10683118,"byte_end":10683122,"line_start":96,"line_end":96,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5763}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/core.rs","byte_start":10684181,"byte_end":10684190,"line_start":127,"line_end":127,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5766},{"krate":0,"index":5769},{"krate":0,"index":5771},{"krate":0,"index":5773},{"krate":0,"index":5775},{"krate":0,"index":5777}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/core.rs","byte_start":10687344,"byte_end":10687353,"line_start":213,"line_end":213,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5784},{"krate":0,"index":5787},{"krate":0,"index":5789},{"krate":0,"index":5790},{"krate":0,"index":5791},{"krate":0,"index":5796}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/core.rs","byte_start":10690404,"byte_end":10690411,"line_start":315,"line_end":315,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5799},{"krate":0,"index":5801},{"krate":0,"index":5803}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10691342,"byte_end":10691351,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5831},{"krate":0,"index":5832},{"krate":0,"index":5833},{"krate":0,"index":5834},{"krate":0,"index":5835},{"krate":0,"index":5836}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10694077,"byte_end":10694086,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5838}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10694329,"byte_end":10694338,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5840}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10694615,"byte_end":10694624,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10694658,"byte_end":10694663,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5843}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/harness.rs","byte_start":10695418,"byte_end":10695425,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5915},{"krate":0,"index":5916},{"krate":0,"index":5917},{"krate":0,"index":5918},{"krate":0,"index":5919}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/harness.rs","byte_start":10696080,"byte_end":10696087,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5923},{"krate":0,"index":5924},{"krate":0,"index":5925},{"krate":0,"index":5926},{"krate":0,"index":5927},{"krate":0,"index":5928},{"krate":0,"index":5929},{"krate":0,"index":5930},{"krate":0,"index":5931},{"krate":0,"index":5932},{"krate":0,"index":5933}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/harness.rs","byte_start":10701608,"byte_end":10701621,"line_start":214,"line_end":214,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5948},{"krate":0,"index":5949},{"krate":0,"index":5950}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/harness.rs","byte_start":10708602,"byte_end":10708607,"line_start":419,"line_end":419,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5980}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714080,"byte_end":10714090,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714127,"byte_end":10714137,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714153,"byte_end":10714163,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6013},{"krate":0,"index":6014}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10715398,"byte_end":10715408,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10715435,"byte_end":10715445,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6019},{"krate":0,"index":6020}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10716671,"byte_end":10716681,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6023}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10716947,"byte_end":10716957,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6026}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/raw.rs","byte_start":10718206,"byte_end":10718213,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6072},{"krate":0,"index":6075},{"krate":0,"index":6076},{"krate":0,"index":6077},{"krate":0,"index":6078},{"krate":0,"index":6079},{"krate":0,"index":6080},{"krate":0,"index":6081}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/raw.rs","byte_start":10719744,"byte_end":10719751,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6083}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/raw.rs","byte_start":10719841,"byte_end":10719848,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/state.rs","byte_start":10722822,"byte_end":10722827,"line_start":65,"line_end":65,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6139},{"krate":0,"index":6140},{"krate":0,"index":6141},{"krate":0,"index":6143},{"krate":0,"index":6145},{"krate":0,"index":6147},{"krate":0,"index":6149},{"krate":0,"index":6150},{"krate":0,"index":6152},{"krate":0,"index":6158},{"krate":0,"index":6160},{"krate":0,"index":6162},{"krate":0,"index":6164},{"krate":0,"index":6171},{"krate":0,"index":6172}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/state.rs","byte_start":10731676,"byte_end":10731684,"line_start":347,"line_end":347,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6175},{"krate":0,"index":6176},{"krate":0,"index":6177},{"krate":0,"index":6178},{"krate":0,"index":6179},{"krate":0,"index":6180},{"krate":0,"index":6181},{"krate":0,"index":6182},{"krate":0,"index":6183},{"krate":0,"index":6184},{"krate":0,"index":6185},{"krate":0,"index":6186},{"krate":0,"index":6187},{"krate":0,"index":6188},{"krate":0,"index":6189},{"krate":0,"index":6190},{"krate":0,"index":6191},{"krate":0,"index":6192},{"krate":0,"index":6193}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/state.rs","byte_start":10733553,"byte_end":10733558,"line_start":430,"line_end":430,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6195}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/state.rs","byte_start":10733717,"byte_end":10733725,"line_start":437,"line_end":437,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6197}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/waker.rs","byte_start":10735545,"byte_end":10735553,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6247},{"krate":0,"index":6248}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10675748,"byte_end":10675752,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10675783,"byte_end":10675787,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10675924,"byte_end":10675932,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10675973,"byte_end":10675981,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10677968,"byte_end":10677972,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6308},{"krate":0,"index":6309}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10678868,"byte_end":10678872,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6312}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10679041,"byte_end":10679049,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6315},{"krate":0,"index":6316}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10679335,"byte_end":10679339,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6319}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10679579,"byte_end":10679583,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6322}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10679735,"byte_end":10679743,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6325}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10679959,"byte_end":10679963,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6328},{"krate":0,"index":6329},{"krate":0,"index":6330},{"krate":0,"index":6331},{"krate":0,"index":6332}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10740002,"byte_end":10740007,"line_start":83,"line_end":83,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10740882,"byte_end":10740896,"line_start":121,"line_end":121,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6530},{"krate":0,"index":6531},{"krate":0,"index":6532},{"krate":0,"index":6535}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10743187,"byte_end":10743192,"line_start":199,"line_end":199,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6538}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10747472,"byte_end":10747477,"line_start":302,"line_end":302,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6556}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10748170,"byte_end":10748184,"line_start":326,"line_end":326,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6560}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10750315,"byte_end":10750329,"line_start":383,"line_end":383,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6564}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10750495,"byte_end":10750502,"line_start":391,"line_end":391,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6566},{"krate":0,"index":6568},{"krate":0,"index":6569},{"krate":0,"index":6570}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10751271,"byte_end":10751278,"line_start":421,"line_end":421,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6572}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10751446,"byte_end":10751449,"line_start":429,"line_end":429,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6574},{"krate":0,"index":6576},{"krate":0,"index":6578}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10753862,"byte_end":10753868,"line_start":490,"line_end":490,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6581},{"krate":0,"index":6582}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10754375,"byte_end":10754385,"line_start":512,"line_end":512,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6590}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10754660,"byte_end":10754670,"line_start":520,"line_end":520,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6594}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/pool.rs","byte_start":10758774,"byte_end":10758786,"line_start":90,"line_end":90,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6686},{"krate":0,"index":6687},{"krate":0,"index":6688}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/pool.rs","byte_start":10761342,"byte_end":10761354,"line_start":160,"line_end":160,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6692}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/pool.rs","byte_start":10761440,"byte_end":10761452,"line_start":166,"line_end":166,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6694}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/pool.rs","byte_start":10761613,"byte_end":10761620,"line_start":174,"line_end":174,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6696},{"krate":0,"index":6697}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/pool.rs","byte_start":10764052,"byte_end":10764057,"line_start":252,"line_end":252,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6700}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/pool.rs","byte_start":10767296,"byte_end":10767303,"line_start":348,"line_end":348,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6702}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/schedule.rs","byte_start":10767806,"byte_end":10767818,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6724},{"krate":0,"index":6725},{"krate":0,"index":6726}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/shutdown.rs","byte_start":10768691,"byte_end":10768699,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6739}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/task.rs","byte_start":10770448,"byte_end":10770460,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6762}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/task.rs","byte_start":10770686,"byte_end":10770698,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/task.rs","byte_start":10770728,"byte_end":10770740,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6768},{"krate":0,"index":6769}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10773934,"byte_end":10773941,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6826},{"krate":0,"index":6827},{"krate":0,"index":6829},{"krate":0,"index":6830},{"krate":0,"index":6831},{"krate":0,"index":6832},{"krate":0,"index":6835},{"krate":0,"index":6837},{"krate":0,"index":6838},{"krate":0,"index":6840},{"krate":0,"index":6842},{"krate":0,"index":6843},{"krate":0,"index":6844},{"krate":0,"index":6845}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10785571,"byte_end":10785578,"line_start":467,"line_end":467,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7004}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10786140,"byte_end":10786147,"line_start":491,"line_end":491,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7006}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10788835,"byte_end":10788842,"line_start":579,"line_end":579,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6854}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/context.rs","byte_start":10791234,"byte_end":10791244,"line_start":67,"line_end":67,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6872}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/driver.rs","byte_start":10795757,"byte_end":10795763,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6899}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/driver.rs","byte_start":10796347,"byte_end":10796353,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6901},{"krate":0,"index":6902},{"krate":0,"index":6903},{"krate":0,"index":6904},{"krate":0,"index":6905},{"krate":0,"index":6906}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10798160,"byte_end":10798166,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6948},{"krate":0,"index":6949},{"krate":0,"index":6950},{"krate":0,"index":6951},{"krate":0,"index":6953},{"krate":0,"index":6956},{"krate":0,"index":6958}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10806914,"byte_end":10806929,"line_start":297,"line_end":297,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6963}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10807077,"byte_end":10807092,"line_start":303,"line_end":303,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6965}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10807232,"byte_end":10807247,"line_start":309,"line_end":309,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/spawner.rs","byte_start":10807633,"byte_end":10807640,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6976}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/spawner.rs","byte_start":10807882,"byte_end":10807889,"line_start":31,"line_end":31,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7083}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10658831,"byte_end":10658838,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7096},{"krate":0,"index":7097},{"krate":0,"index":7099},{"krate":0,"index":7102},{"krate":0,"index":7104},{"krate":0,"index":7105},{"krate":0,"index":7106}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/coop.rs","byte_start":119740,"byte_end":119746,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/coop.rs","byte_start":121393,"byte_end":121403,"line_start":93,"line_end":93,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/coop.rs","byte_start":122374,"byte_end":122390,"line_start":141,"line_end":141,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7144}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/coop.rs","byte_start":122522,"byte_end":122538,"line_start":147,"line_end":147,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7146}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/coop.rs","byte_start":124278,"byte_end":124284,"line_start":188,"line_end":188,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7151},{"krate":0,"index":7152}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10826441,"byte_end":10826448,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7166},{"krate":0,"index":7167}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10829713,"byte_end":10829730,"line_start":136,"line_end":136,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7171}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837161,"byte_end":10837170,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7250}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837346,"byte_end":10837355,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10838003,"byte_end":10838012,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7254}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10838317,"byte_end":10838326,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10839249,"byte_end":10839261,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7257}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10839639,"byte_end":10839651,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10841614,"byte_end":10841618,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10841663,"byte_end":10841667,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844441,"byte_end":10844447,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844484,"byte_end":10844490,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844528,"byte_end":10844536,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844573,"byte_end":10844581,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844597,"byte_end":10844603,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7310},{"krate":0,"index":7312},{"krate":0,"index":7313},{"krate":0,"index":7314}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10850213,"byte_end":10850217,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7320}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10850609,"byte_end":10850615,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7323}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10850795,"byte_end":10850801,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7326}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10850955,"byte_end":10850963,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7329}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10855826,"byte_end":10855834,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7333},{"krate":0,"index":7336}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10860010,"byte_end":10860018,"line_start":928,"line_end":928,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7339}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10860644,"byte_end":10860648,"line_start":951,"line_end":951,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7343},{"krate":0,"index":7344}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10861427,"byte_end":10861431,"line_start":977,"line_end":977,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7348},{"krate":0,"index":7349}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10862092,"byte_end":10862096,"line_start":997,"line_end":997,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7353}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10862844,"byte_end":10862850,"line_start":1023,"line_end":1023,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7357},{"krate":0,"index":7358},{"krate":0,"index":7359},{"krate":0,"index":7360},{"krate":0,"index":7361}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10863265,"byte_end":10863271,"line_start":1040,"line_end":1040,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7364}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10863415,"byte_end":10863423,"line_start":1046,"line_end":1046,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7367}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10863558,"byte_end":10863567,"line_start":1052,"line_end":1052,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7371}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10863740,"byte_end":10863749,"line_start":1061,"line_end":1061,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7376}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/block.rs","byte_start":10870644,"byte_end":10870649,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7452},{"krate":0,"index":7453},{"krate":0,"index":7454},{"krate":0,"index":7455},{"krate":0,"index":7457},{"krate":0,"index":7459},{"krate":0,"index":7460},{"krate":0,"index":7461},{"krate":0,"index":7463},{"krate":0,"index":7464},{"krate":0,"index":7465},{"krate":0,"index":7467},{"krate":0,"index":7468},{"krate":0,"index":7470}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/block.rs","byte_start":10880748,"byte_end":10880754,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7476}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/block.rs","byte_start":10881236,"byte_end":10881242,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7479},{"krate":0,"index":7480}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10885278,"byte_end":10885286,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7527},{"krate":0,"index":7528},{"krate":0,"index":7535},{"krate":0,"index":7536},{"krate":0,"index":7537}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10891621,"byte_end":10891629,"line_start":304,"line_end":304,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7540}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10891825,"byte_end":10891833,"line_start":312,"line_end":312,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10891849,"byte_end":10891855,"line_start":314,"line_end":314,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7545},{"krate":0,"index":7546},{"krate":0,"index":7549},{"krate":0,"index":7552},{"krate":0,"index":7553},{"krate":0,"index":7556},{"krate":0,"index":7557},{"krate":0,"index":7558},{"krate":0,"index":7561},{"krate":0,"index":7564},{"krate":0,"index":7567},{"krate":0,"index":7568},{"krate":0,"index":7569},{"krate":0,"index":7570}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912218,"byte_end":10912224,"line_start":904,"line_end":904,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7573}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912356,"byte_end":10912362,"line_start":912,"line_end":912,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7576}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912574,"byte_end":10912580,"line_start":922,"line_end":922,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7579}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913830,"byte_end":10913836,"line_start":965,"line_end":965,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7585}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10914303,"byte_end":10914309,"line_start":982,"line_end":982,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7591}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10914525,"byte_end":10914536,"line_start":992,"line_end":992,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7594},{"krate":0,"index":7596}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10917318,"byte_end":10917329,"line_start":1079,"line_end":1079,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7603}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10917992,"byte_end":10918003,"line_start":1102,"line_end":1102,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7609}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10918665,"byte_end":10918667,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7679}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10918960,"byte_end":10918962,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7687}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10919899,"byte_end":10919903,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7705}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10920536,"byte_end":10920544,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7712}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10920810,"byte_end":10920814,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10920863,"byte_end":10920867,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10921374,"byte_end":10921376,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7725},{"krate":0,"index":7726},{"krate":0,"index":7727},{"krate":0,"index":7728},{"krate":0,"index":7729}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10921986,"byte_end":10921988,"line_start":149,"line_end":149,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7733},{"krate":0,"index":7734}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10922538,"byte_end":10922540,"line_start":167,"line_end":167,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7740}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10922879,"byte_end":10922881,"line_start":179,"line_end":179,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7744}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10923204,"byte_end":10923206,"line_start":195,"line_end":195,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7748},{"krate":0,"index":7749},{"krate":0,"index":7751}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10925761,"byte_end":10925763,"line_start":268,"line_end":268,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7758}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10926175,"byte_end":10926179,"line_start":286,"line_end":286,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7766}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10926364,"byte_end":10926368,"line_start":296,"line_end":296,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7770}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10927369,"byte_end":10927380,"line_start":336,"line_end":336,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7791},{"krate":0,"index":7792},{"krate":0,"index":7793},{"krate":0,"index":7794}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/list.rs","byte_start":10929121,"byte_end":10929123,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7845},{"krate":0,"index":7846},{"krate":0,"index":7847},{"krate":0,"index":7849}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/list.rs","byte_start":10934836,"byte_end":10934838,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7852}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/list.rs","byte_start":10935115,"byte_end":10935117,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7855},{"krate":0,"index":7856},{"krate":0,"index":7857},{"krate":0,"index":7858}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/list.rs","byte_start":10938516,"byte_end":10938518,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7861}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10939176,"byte_end":10939191,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7887}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10939332,"byte_end":10939347,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7890}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10940020,"byte_end":10940037,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7896}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941036,"byte_end":10941053,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7902},{"krate":0,"index":7903},{"krate":0,"index":7910},{"krate":0,"index":7911},{"krate":0,"index":7912}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10944351,"byte_end":10944366,"line_start":183,"line_end":183,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7915},{"krate":0,"index":7916},{"krate":0,"index":7917},{"krate":0,"index":7928},{"krate":0,"index":7931},{"krate":0,"index":7932}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10948544,"byte_end":10948553,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7952}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10948713,"byte_end":10948722,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10949208,"byte_end":10949220,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10949253,"byte_end":10949265,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7959}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10949605,"byte_end":10949617,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7962}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10949958,"byte_end":10949967,"line_start":63,"line_end":63,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7964}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10950118,"byte_end":10950127,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10950631,"byte_end":10950647,"line_start":87,"line_end":87,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10950684,"byte_end":10950700,"line_start":89,"line_end":89,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":9361}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958056,"byte_end":10958061,"line_start":179,"line_end":179,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958115,"byte_end":10958120,"line_start":180,"line_end":180,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958174,"byte_end":10958184,"line_start":181,"line_end":181,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958249,"byte_end":10958264,"line_start":182,"line_end":182,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958329,"byte_end":10958345,"line_start":183,"line_end":183,"column_start":29,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958412,"byte_end":10958428,"line_start":184,"line_end":184,"column_start":29,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10959109,"byte_end":10959121,"line_start":203,"line_end":203,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8029}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10959258,"byte_end":10959270,"line_start":209,"line_end":209,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10960078,"byte_end":10960083,"line_start":235,"line_end":235,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":8033},{"krate":0,"index":8034},{"krate":0,"index":8037},{"krate":0,"index":8040},{"krate":0,"index":8044},{"krate":0,"index":8045},{"krate":0,"index":8046},{"krate":0,"index":8047}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965836,"byte_end":10965841,"line_start":438,"line_end":438,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8050}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965925,"byte_end":10965930,"line_start":444,"line_end":444,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8053}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10966054,"byte_end":10966059,"line_start":453,"line_end":453,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8056}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10966449,"byte_end":10966459,"line_start":469,"line_end":469,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8060},{"krate":0,"index":8063}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10969394,"byte_end":10969404,"line_start":566,"line_end":566,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8068}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10969505,"byte_end":10969515,"line_start":572,"line_end":572,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8071},{"krate":0,"index":8072}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10969662,"byte_end":10969672,"line_start":579,"line_end":579,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8075}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10969829,"byte_end":10969839,"line_start":585,"line_end":585,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8078}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10970005,"byte_end":10970015,"line_start":591,"line_end":591,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":8081}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10970193,"byte_end":10970208,"line_start":599,"line_end":599,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8084}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10970305,"byte_end":10970320,"line_start":605,"line_end":605,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8087},{"krate":0,"index":8088}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10970463,"byte_end":10970478,"line_start":612,"line_end":612,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8091}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10970631,"byte_end":10970646,"line_start":618,"line_end":618,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8094}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10970808,"byte_end":10970823,"line_start":624,"line_end":624,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":8097}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10970993,"byte_end":10971009,"line_start":632,"line_end":632,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8101},{"krate":0,"index":8104}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10972847,"byte_end":10972863,"line_start":684,"line_end":684,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8110}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10972963,"byte_end":10972979,"line_start":690,"line_end":690,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8114},{"krate":0,"index":8115}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10973122,"byte_end":10973138,"line_start":697,"line_end":697,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8119}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10973291,"byte_end":10973307,"line_start":703,"line_end":703,"column_start":49,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":8123}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10973477,"byte_end":10973493,"line_start":709,"line_end":709,"column_start":53,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":8127}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10978370,"byte_end":10978378,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10978411,"byte_end":10978419,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10979368,"byte_end":10979374,"line_start":199,"line_end":199,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8203},{"krate":0,"index":8204},{"krate":0,"index":8205},{"krate":0,"index":8206}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10987901,"byte_end":10987907,"line_start":459,"line_end":459,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8210}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10989817,"byte_end":10989825,"line_start":514,"line_end":514,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8213}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10990338,"byte_end":10990346,"line_start":530,"line_end":530,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8215},{"krate":0,"index":8216}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10996042,"byte_end":10996050,"line_start":672,"line_end":672,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8219}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10997913,"byte_end":10997919,"line_start":718,"line_end":718,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8222},{"krate":0,"index":8223},{"krate":0,"index":8224},{"krate":0,"index":8225},{"krate":0,"index":8226}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11002072,"byte_end":11002081,"line_start":149,"line_end":149,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8286}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11002243,"byte_end":11002252,"line_start":155,"line_end":155,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11002321,"byte_end":11002333,"line_start":159,"line_end":159,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8289}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11002632,"byte_end":11002644,"line_start":168,"line_end":168,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11003138,"byte_end":11003142,"line_start":190,"line_end":190,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":8302},{"krate":0,"index":8304},{"krate":0,"index":8308},{"krate":0,"index":8310}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11005178,"byte_end":11005184,"line_start":269,"line_end":269,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8316},{"krate":0,"index":8318},{"krate":0,"index":8325},{"krate":0,"index":8326}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11012811,"byte_end":11012817,"line_start":522,"line_end":522,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8329}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11012956,"byte_end":11012964,"line_start":530,"line_end":530,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8332},{"krate":0,"index":8333}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11017471,"byte_end":11017479,"line_start":683,"line_end":683,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8336}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11017626,"byte_end":11017634,"line_start":691,"line_end":691,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8339},{"krate":0,"index":8340}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11018097,"byte_end":11018102,"line_start":707,"line_end":707,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8343},{"krate":0,"index":8344},{"krate":0,"index":8345},{"krate":0,"index":8346}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11021208,"byte_end":11021213,"line_start":805,"line_end":805,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11021250,"byte_end":11021255,"line_start":806,"line_end":806,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11021356,"byte_end":11021361,"line_start":812,"line_end":812,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8356}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11021738,"byte_end":11021743,"line_start":830,"line_end":830,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8359}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11022138,"byte_end":11022143,"line_start":845,"line_end":845,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8368},{"krate":0,"index":8369},{"krate":0,"index":8370},{"krate":0,"index":8371},{"krate":0,"index":8372},{"krate":0,"index":8373},{"krate":0,"index":8374},{"krate":0,"index":8375},{"krate":0,"index":8376},{"krate":0,"index":8377},{"krate":0,"index":8378},{"krate":0,"index":8379},{"krate":0,"index":8380}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11023856,"byte_end":11023861,"line_start":911,"line_end":911,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8382}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11027920,"byte_end":11027929,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8453},{"krate":0,"index":8454},{"krate":0,"index":8455},{"krate":0,"index":8456},{"krate":0,"index":8457},{"krate":0,"index":8458},{"krate":0,"index":8459},{"krate":0,"index":8461},{"krate":0,"index":8462},{"krate":0,"index":8463},{"krate":0,"index":8464},{"krate":0,"index":8468}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11039009,"byte_end":11039018,"line_start":398,"line_end":398,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8472}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11039217,"byte_end":11039223,"line_start":406,"line_end":406,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8474},{"krate":0,"index":8475}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11040089,"byte_end":11040096,"line_start":435,"line_end":435,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8477},{"krate":0,"index":8478}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11040774,"byte_end":11040781,"line_start":459,"line_end":459,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8481},{"krate":0,"index":8482}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11041580,"byte_end":11041587,"line_start":489,"line_end":489,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":8486}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11042837,"byte_end":11042844,"line_start":519,"line_end":519,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11042891,"byte_end":11042903,"line_start":523,"line_end":523,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8489}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11042996,"byte_end":11043008,"line_start":529,"line_end":529,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8491}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11043152,"byte_end":11043164,"line_start":535,"line_end":535,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11043211,"byte_end":11043226,"line_start":539,"line_end":539,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8494},{"krate":0,"index":8495}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11043744,"byte_end":11043759,"line_start":554,"line_end":554,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8497}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11044045,"byte_end":11044060,"line_start":563,"line_end":563,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11044153,"byte_end":11044159,"line_start":568,"line_end":568,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8500},{"krate":0,"index":8501},{"krate":0,"index":8502},{"krate":0,"index":8503},{"krate":0,"index":8504}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11048737,"byte_end":11048746,"line_start":121,"line_end":121,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8527},{"krate":0,"index":8528},{"krate":0,"index":8529},{"krate":0,"index":8530},{"krate":0,"index":8533},{"krate":0,"index":8536},{"krate":0,"index":8537},{"krate":0,"index":8538},{"krate":0,"index":8541},{"krate":0,"index":8544},{"krate":0,"index":8545},{"krate":0,"index":8546},{"krate":0,"index":8547}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061696,"byte_end":11061711,"line_start":512,"line_end":512,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8550}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061956,"byte_end":11061976,"line_start":521,"line_end":521,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8552}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11062230,"byte_end":11062245,"line_start":530,"line_end":530,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8555}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11062353,"byte_end":11062373,"line_start":536,"line_end":536,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8557}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11086963,"byte_end":11086983,"line_start":24,"line_end":24,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8625},{"krate":0,"index":8628}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11090055,"byte_end":11090075,"line_start":118,"line_end":118,"column_start":43,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":8634},{"krate":0,"index":8635}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11090216,"byte_end":11090236,"line_start":126,"line_end":126,"column_start":43,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":8639}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11090422,"byte_end":11090442,"line_start":135,"line_end":135,"column_start":45,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":8643}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11090624,"byte_end":11090644,"line_start":144,"line_end":144,"column_start":37,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8647}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11091665,"byte_end":11091686,"line_start":26,"line_end":26,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8685},{"krate":0,"index":8688},{"krate":0,"index":8691},{"krate":0,"index":8693}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11097357,"byte_end":11097378,"line_start":197,"line_end":197,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8696},{"krate":0,"index":8697}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11097508,"byte_end":11097529,"line_start":205,"line_end":205,"column_start":35,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":8700}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11097650,"byte_end":11097671,"line_start":211,"line_end":211,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8703}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11097843,"byte_end":11097864,"line_start":220,"line_end":220,"column_start":34,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8706}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11098032,"byte_end":11098053,"line_start":229,"line_end":229,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8709}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099156,"byte_end":11099183,"line_start":25,"line_end":25,"column_start":28,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8743},{"krate":0,"index":8746}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11102730,"byte_end":11102757,"line_start":134,"line_end":134,"column_start":43,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":8752},{"krate":0,"index":8753}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11102901,"byte_end":11102928,"line_start":142,"line_end":142,"column_start":46,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":8757}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11103063,"byte_end":11103090,"line_start":148,"line_end":148,"column_start":43,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":8761}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11103276,"byte_end":11103303,"line_start":157,"line_end":157,"column_start":45,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":8765}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11103485,"byte_end":11103512,"line_start":166,"line_end":166,"column_start":37,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":8769}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104214,"byte_end":11104229,"line_start":21,"line_end":21,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8795},{"krate":0,"index":8798}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11107643,"byte_end":11107658,"line_start":126,"line_end":126,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8803},{"krate":0,"index":8804}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11107793,"byte_end":11107808,"line_start":134,"line_end":134,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8808}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11107988,"byte_end":11108003,"line_start":143,"line_end":143,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8812}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11108179,"byte_end":11108194,"line_start":152,"line_end":152,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8816}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11108979,"byte_end":11108995,"line_start":24,"line_end":24,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8849},{"krate":0,"index":8852},{"krate":0,"index":8855},{"krate":0,"index":8857}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114993,"byte_end":11115009,"line_start":204,"line_end":204,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8860},{"krate":0,"index":8861}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11115143,"byte_end":11115159,"line_start":212,"line_end":212,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8864}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11115288,"byte_end":11115304,"line_start":218,"line_end":218,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":8868}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11115484,"byte_end":11115500,"line_start":227,"line_end":227,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8872}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11115676,"byte_end":11115692,"line_start":236,"line_end":236,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8876}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11116551,"byte_end":11116573,"line_start":23,"line_end":23,"column_start":21,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":8903},{"krate":0,"index":8906}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11120413,"byte_end":11120435,"line_start":140,"line_end":140,"column_start":32,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8911},{"krate":0,"index":8912}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11120569,"byte_end":11120591,"line_start":148,"line_end":148,"column_start":35,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8915}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11120720,"byte_end":11120742,"line_start":154,"line_end":154,"column_start":36,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":8919}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11120922,"byte_end":11120944,"line_start":163,"line_end":163,"column_start":38,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8923}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11121120,"byte_end":11121142,"line_start":172,"line_end":172,"column_start":30,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":8927}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11067820,"byte_end":11067826,"line_start":146,"line_end":146,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11067880,"byte_end":11067886,"line_start":147,"line_end":147,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11068120,"byte_end":11068135,"line_start":151,"line_end":151,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11068193,"byte_end":11068208,"line_start":152,"line_end":152,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11068415,"byte_end":11068435,"line_start":155,"line_end":155,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11068530,"byte_end":11068550,"line_start":161,"line_end":161,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11068649,"byte_end":11068665,"line_start":167,"line_end":167,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11068730,"byte_end":11068751,"line_start":168,"line_end":168,"column_start":25,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11068812,"byte_end":11068834,"line_start":169,"line_end":169,"column_start":25,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11068902,"byte_end":11068929,"line_start":170,"line_end":170,"column_start":28,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069276,"byte_end":11069292,"line_start":180,"line_end":180,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069357,"byte_end":11069378,"line_start":181,"line_end":181,"column_start":25,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069439,"byte_end":11069461,"line_start":182,"line_end":182,"column_start":25,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069529,"byte_end":11069556,"line_start":183,"line_end":183,"column_start":28,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069648,"byte_end":11069654,"line_start":190,"line_end":190,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8981},{"krate":0,"index":8982},{"krate":0,"index":8983},{"krate":0,"index":8987},{"krate":0,"index":8991},{"krate":0,"index":8992},{"krate":0,"index":8993},{"krate":0,"index":8997},{"krate":0,"index":9001},{"krate":0,"index":9002},{"krate":0,"index":9003},{"krate":0,"index":9004}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11086029,"byte_end":11086035,"line_start":690,"line_end":690,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9007}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11086127,"byte_end":11086133,"line_start":696,"line_end":696,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":9010}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/task/atomic_waker.rs","byte_start":11127422,"byte_end":11127433,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":9067},{"krate":0,"index":9068},{"krate":0,"index":9069},{"krate":0,"index":9074},{"krate":0,"index":9075}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/task/atomic_waker.rs","byte_start":11133455,"byte_end":11133466,"line_start":285,"line_end":285,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9078}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/task/atomic_waker.rs","byte_start":11133552,"byte_end":11133563,"line_start":291,"line_end":291,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":9080}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/task/atomic_waker.rs","byte_start":11133696,"byte_end":11133707,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/task/atomic_waker.rs","byte_start":11133732,"byte_end":11133743,"line_start":298,"line_end":298,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/task/atomic_waker.rs","byte_start":11133839,"byte_end":11133844,"line_start":305,"line_end":305,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9087},{"krate":0,"index":9088}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11135132,"byte_end":11135140,"line_start":41,"line_end":41,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9137}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11135248,"byte_end":11135256,"line_start":47,"line_end":47,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9140}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11135461,"byte_end":11135469,"line_start":55,"line_end":55,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":9143}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11135602,"byte_end":11135610,"line_start":61,"line_end":61,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9146}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11135726,"byte_end":11135734,"line_start":67,"line_end":67,"column_start":20,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11135759,"byte_end":11135767,"line_start":69,"line_end":69,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9151}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11136003,"byte_end":11136011,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":9155},{"krate":0,"index":9156},{"krate":0,"index":9157},{"krate":0,"index":9158},{"krate":0,"index":9160},{"krate":0,"index":9162},{"krate":0,"index":9164},{"krate":0,"index":9165},{"krate":0,"index":9166},{"krate":0,"index":9167},{"krate":0,"index":9172},{"krate":0,"index":9178},{"krate":0,"index":9180}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11147704,"byte_end":11147712,"line_start":349,"line_end":349,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11147929,"byte_end":11147937,"line_start":354,"line_end":354,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148549,"byte_end":11148557,"line_start":373,"line_end":373,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":9187}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148864,"byte_end":11148872,"line_start":382,"line_end":382,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148888,"byte_end":11148896,"line_start":384,"line_end":384,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":9192},{"krate":0,"index":9193}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11153481,"byte_end":11153490,"line_start":132,"line_end":132,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":9234}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11153670,"byte_end":11153679,"line_start":138,"line_end":138,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11153872,"byte_end":11153881,"line_start":146,"line_end":146,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9238}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154043,"byte_end":11154052,"line_start":152,"line_end":152,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11155258,"byte_end":11155266,"line_start":202,"line_end":202,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":9245},{"krate":0,"index":9246},{"krate":0,"index":9247}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11158261,"byte_end":11158269,"line_start":303,"line_end":303,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9254}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11158453,"byte_end":11158461,"line_start":312,"line_end":312,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9257}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11158831,"byte_end":11158837,"line_start":323,"line_end":323,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9260},{"krate":0,"index":9261},{"krate":0,"index":9262},{"krate":0,"index":9263},{"krate":0,"index":9266}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11162204,"byte_end":11162210,"line_start":444,"line_end":444,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9269}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11162400,"byte_end":11162403,"line_start":453,"line_end":453,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9272},{"krate":0,"index":9273}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/yield_now.rs","byte_start":11175570,"byte_end":11175578,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9862},{"krate":0,"index":9863}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11186500,"byte_end":11186508,"line_start":323,"line_end":323,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":9675},{"krate":0,"index":9676},{"krate":0,"index":9678},{"krate":0,"index":9680},{"krate":0,"index":9684},{"krate":0,"index":9686},{"krate":0,"index":9689}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11194501,"byte_end":11194509,"line_start":552,"line_end":552,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9693}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11194648,"byte_end":11194656,"line_start":558,"line_end":558,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9695},{"krate":0,"index":9696}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11195621,"byte_end":11195629,"line_start":582,"line_end":582,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9699}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11195710,"byte_end":11195718,"line_start":588,"line_end":588,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":9701}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11196585,"byte_end":11196593,"line_start":618,"line_end":618,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9705},{"krate":0,"index":9706}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11197478,"byte_end":11197484,"line_start":649,"line_end":649,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":9710},{"krate":0,"index":9712}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11198035,"byte_end":11198038,"line_start":668,"line_end":668,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9714},{"krate":0,"index":9716},{"krate":0,"index":9721}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201545,"byte_end":11201553,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9766},{"krate":0,"index":9770},{"krate":0,"index":9774},{"krate":0,"index":9777}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11204053,"byte_end":11204061,"line_start":194,"line_end":194,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9783}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11204269,"byte_end":11204277,"line_start":202,"line_end":202,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9787}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11204579,"byte_end":11204594,"line_start":217,"line_end":217,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9791}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11204871,"byte_end":11204876,"line_start":225,"line_end":225,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9802}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11205417,"byte_end":11205432,"line_start":247,"line_end":247,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":9808},{"krate":0,"index":9809}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11205709,"byte_end":11205710,"line_start":257,"line_end":257,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11205895,"byte_end":11205906,"line_start":265,"line_end":265,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":9815}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11206050,"byte_end":11206061,"line_start":271,"line_end":271,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":9817}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11206208,"byte_end":11206219,"line_start":277,"line_end":277,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/unconstrained.rs","byte_start":11206621,"byte_end":11206634,"line_start":16,"line_end":16,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9841},{"krate":0,"index":9888}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/clock.rs","byte_start":11211049,"byte_end":11211054,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10485},{"krate":0,"index":10486}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11237367,"byte_end":11237376,"line_start":99,"line_end":99,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9953}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11237460,"byte_end":11237469,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":9955}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11237615,"byte_end":11237624,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9957},{"krate":0,"index":9958},{"krate":0,"index":9959},{"krate":0,"index":9960},{"krate":0,"index":9961},{"krate":0,"index":9963},{"krate":0,"index":9964},{"krate":0,"index":9966},{"krate":0,"index":9967},{"krate":0,"index":9968}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11244626,"byte_end":11244636,"line_start":302,"line_end":302,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11244661,"byte_end":11244671,"line_start":303,"line_end":303,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11246112,"byte_end":11246123,"line_start":339,"line_end":339,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":9973},{"krate":0,"index":9974},{"krate":0,"index":9975},{"krate":0,"index":9976},{"krate":0,"index":9977},{"krate":0,"index":9978},{"krate":0,"index":9979},{"krate":0,"index":9980},{"krate":0,"index":9981}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11249646,"byte_end":11249663,"line_start":437,"line_end":437,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":9987}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11249964,"byte_end":11249981,"line_start":446,"line_end":446,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":9989}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11250220,"byte_end":11250231,"line_start":456,"line_end":456,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11250256,"byte_end":11250267,"line_start":457,"line_end":457,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11250306,"byte_end":11250317,"line_start":459,"line_end":459,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":9993},{"krate":0,"index":9994},{"krate":0,"index":9995},{"krate":0,"index":9996},{"krate":0,"index":9997}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11250835,"byte_end":11250845,"line_start":481,"line_end":481,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9999},{"krate":0,"index":10000},{"krate":0,"index":10001},{"krate":0,"index":10002},{"krate":0,"index":10003},{"krate":0,"index":10004}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11253846,"byte_end":11253857,"line_start":560,"line_end":560,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":10006},{"krate":0,"index":10007},{"krate":0,"index":10008},{"krate":0,"index":10009},{"krate":0,"index":10010},{"krate":0,"index":10011}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11256240,"byte_end":11256250,"line_start":620,"line_end":620,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":10013}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/handle.rs","byte_start":11256739,"byte_end":11256745,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":10038},{"krate":0,"index":10039},{"krate":0,"index":10040},{"krate":0,"index":10041}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/handle.rs","byte_start":11257413,"byte_end":11257419,"line_start":36,"line_end":36,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":10525}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/handle.rs","byte_start":11259463,"byte_end":11259469,"line_start":84,"line_end":84,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10043}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/wheel/level.rs","byte_start":11272059,"byte_end":11272064,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":10083},{"krate":0,"index":10085},{"krate":0,"index":10086},{"krate":0,"index":10087},{"krate":0,"index":10088},{"krate":0,"index":10089}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/wheel/level.rs","byte_start":11278132,"byte_end":11278137,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10091}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/wheel/mod.rs","byte_start":11261090,"byte_end":11261095,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":10111},{"krate":0,"index":10112},{"krate":0,"index":10113},{"krate":0,"index":10114},{"krate":0,"index":10115},{"krate":0,"index":10117},{"krate":0,"index":10119},{"krate":0,"index":10120},{"krate":0,"index":10122},{"krate":0,"index":10123},{"krate":0,"index":10124},{"krate":0,"index":10125},{"krate":0,"index":10126}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11284271,"byte_end":11284276,"line_start":168,"line_end":168,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":10166},{"krate":0,"index":10167},{"krate":0,"index":10168},{"krate":0,"index":10169},{"krate":0,"index":10170},{"krate":0,"index":10171}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11286379,"byte_end":11286384,"line_start":238,"line_end":238,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":10174},{"krate":0,"index":10175}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/mod.rs","byte_start":11220501,"byte_end":11220510,"line_start":112,"line_end":112,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10227},{"krate":0,"index":10228},{"krate":0,"index":10229},{"krate":0,"index":10231},{"krate":0,"index":10232}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/mod.rs","byte_start":11222146,"byte_end":11222152,"line_start":173,"line_end":173,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10244},{"krate":0,"index":10245},{"krate":0,"index":10246},{"krate":0,"index":10554}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/mod.rs","byte_start":11225771,"byte_end":11225777,"line_start":283,"line_end":283,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":10250},{"krate":0,"index":10251},{"krate":0,"index":10255},{"krate":0,"index":10256}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/mod.rs","byte_start":11230497,"byte_end":11230503,"line_start":416,"line_end":416,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":10260},{"krate":0,"index":10261},{"krate":0,"index":10262},{"krate":0,"index":10263},{"krate":0,"index":10264},{"krate":0,"index":10265}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/mod.rs","byte_start":11231225,"byte_end":11231231,"line_start":450,"line_end":450,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":10268}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/mod.rs","byte_start":11231491,"byte_end":11231502,"line_start":466,"line_end":466,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10274}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/mod.rs","byte_start":11231766,"byte_end":11231777,"line_start":477,"line_end":477,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10277}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/mod.rs","byte_start":11231968,"byte_end":11231973,"line_start":488,"line_end":488,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":10279},{"krate":0,"index":10280},{"krate":0,"index":10281}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/mod.rs","byte_start":11232686,"byte_end":11232691,"line_start":513,"line_end":513,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10283}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11288535,"byte_end":11288540,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10303}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11288781,"byte_end":11288786,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":10305},{"krate":0,"index":10306},{"krate":0,"index":10307},{"krate":0,"index":10308},{"krate":0,"index":10309},{"krate":0,"index":10310}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11289686,"byte_end":11289691,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11289718,"byte_end":11289723,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":10313}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11290185,"byte_end":11290192,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":10316}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11290280,"byte_end":11290287,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":10318}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11290431,"byte_end":11290438,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11290475,"byte_end":11290480,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10321}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11292022,"byte_end":11292029,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":10333},{"krate":0,"index":10334},{"krate":0,"index":10335},{"krate":0,"index":10336},{"krate":0,"index":10337},{"krate":0,"index":10338},{"krate":0,"index":10339},{"krate":0,"index":10340},{"krate":0,"index":10341},{"krate":0,"index":10342}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11296126,"byte_end":11296133,"line_start":161,"line_end":161,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":10344}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11296262,"byte_end":11296269,"line_start":167,"line_end":167,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":10346}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11296384,"byte_end":11296391,"line_start":173,"line_end":173,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10348},{"krate":0,"index":10349}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11296556,"byte_end":11296563,"line_start":181,"line_end":181,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":10351}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11296668,"byte_end":11296675,"line_start":187,"line_end":187,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10353},{"krate":0,"index":10354}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11296816,"byte_end":11296823,"line_start":195,"line_end":195,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10356},{"krate":0,"index":10357}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11296984,"byte_end":11296991,"line_start":203,"line_end":203,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":10359}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11297098,"byte_end":11297105,"line_start":209,"line_end":209,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":10361}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301283,"byte_end":11301291,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":10403},{"krate":0,"index":10407},{"krate":0,"index":10408}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11306297,"byte_end":11306304,"line_start":118,"line_end":118,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":10458},{"krate":0,"index":10459},{"krate":0,"index":10460},{"krate":0,"index":10461}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11306842,"byte_end":11306849,"line_start":139,"line_end":139,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10464},{"krate":0,"index":10465}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/bit.rs","byte_start":11307494,"byte_end":11307498,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":10627},{"krate":0,"index":10628},{"krate":0,"index":10629},{"krate":0,"index":10630},{"krate":0,"index":10631},{"krate":0,"index":10632},{"krate":0,"index":10633}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/bit.rs","byte_start":11308926,"byte_end":11308930,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":10635}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11314080,"byte_end":11314084,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11314121,"byte_end":11314125,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11314162,"byte_end":11314172,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11314209,"byte_end":11314219,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11314256,"byte_end":11314259,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11314296,"byte_end":11314299,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11314915,"byte_end":11314919,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":10731},{"krate":0,"index":10732},{"krate":0,"index":10733},{"krate":0,"index":10734},{"krate":0,"index":10736}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11320514,"byte_end":11320518,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":10739}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11320657,"byte_end":11320666,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":10742}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11321233,"byte_end":11321242,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":10745}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11321400,"byte_end":11321403,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10748},{"krate":0,"index":10749}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11321665,"byte_end":11321668,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":10752}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11321935,"byte_end":11321938,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10755}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11322059,"byte_end":11322063,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":10758}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11324570,"byte_end":11324574,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":10762},{"krate":0,"index":10763}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11324918,"byte_end":11324922,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":10766}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11325270,"byte_end":11325274,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":10769}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11325636,"byte_end":11325646,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":10772},{"krate":0,"index":10773}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11326583,"byte_end":11326593,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":10776}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11326736,"byte_end":11326741,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":10779}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11327624,"byte_end":11327628,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":10785}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11328188,"byte_end":11328193,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":10788}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11328519,"byte_end":11328526,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":10790},{"krate":0,"index":10791},{"krate":0,"index":10792}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":139687,"byte_end":139697,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":139767,"byte_end":139777,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":142399,"byte_end":142407,"line_start":101,"line_end":101,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":142444,"byte_end":142452,"line_start":102,"line_end":102,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":142503,"byte_end":142513,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":142748,"byte_end":142758,"line_start":117,"line_end":117,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":145764,"byte_end":145774,"line_start":211,"line_end":211,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":146131,"byte_end":146141,"line_start":226,"line_end":226,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":146328,"byte_end":146338,"line_start":233,"line_end":233,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":147516,"byte_end":147526,"line_start":279,"line_end":279,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":10829}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":147895,"byte_end":147906,"line_start":293,"line_end":293,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":10835},{"krate":0,"index":10836}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":148586,"byte_end":148594,"line_start":318,"line_end":318,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":150177,"byte_end":150185,"line_start":367,"line_end":367,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/wake.rs","byte_start":11336129,"byte_end":11336137,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":10864},{"krate":0,"index":10865}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":14285,"byte_end":14291,"line_start":350,"line_end":350,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/mod.rs","byte_start":18539,"byte_end":18546,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":83}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":14344,"byte_end":14346,"line_start":358,"line_end":358,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":130}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":14356,"byte_end":14359,"line_start":359,"line_end":359,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":379}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81610,"byte_end":81613,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":4217}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/mod.rs","byte_start":81800,"byte_end":81804,"line_start":44,"line_end":44,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4928}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/mod.rs","byte_start":10551408,"byte_end":10551416,"line_start":7,"line_end":7,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":4929}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":14524,"byte_end":14531,"line_start":372,"line_end":372,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":5652}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":14762,"byte_end":14766,"line_start":389,"line_end":389,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":7153}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823582,"byte_end":10823591,"line_start":439,"line_end":439,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":7179}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823606,"byte_end":10823610,"line_start":441,"line_end":441,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":7380}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/mod.rs","byte_start":10868044,"byte_end":10868049,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7943}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10823786,"byte_end":10823793,"line_start":449,"line_end":449,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":8232}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mod.rs","byte_start":10824532,"byte_end":10824537,"line_start":472,"line_end":472,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":9201}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":14811,"byte_end":14815,"line_start":395,"line_end":395,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":879}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/lib.rs","byte_start":14879,"byte_end":14883,"line_start":401,"line_end":401,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":9893}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/mod.rs","byte_start":11210253,"byte_end":11210258,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":10294}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/scoped_tls.rs","byte_start":31563,"byte_end":31572,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":61},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/scoped_tls.rs","byte_start":31588,"byte_end":31597,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":61},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/macros/scoped_tls.rs","byte_start":31947,"byte_end":31952,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":72},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/future/poll_fn.rs","byte_start":33750,"byte_end":33756,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/future/poll_fn.rs","byte_start":33970,"byte_end":33976,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/future/poll_fn.rs","byte_start":34118,"byte_end":34124,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/future/ready.rs","byte_start":10127255,"byte_end":10127260,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/future/ready.rs","byte_start":10127287,"byte_end":10127292,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":44522,"byte_end":44531,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":193},"to":{"krate":0,"index":151}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":46981,"byte_end":46984,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":151}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":47144,"byte_end":47147,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":2,"index":37471},"to":{"krate":0,"index":151}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_buf_read.rs","byte_start":47776,"byte_end":47782,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":10}},"from":{"krate":1,"index":9390},"to":{"krate":0,"index":151}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":50849,"byte_end":50852,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":50995,"byte_end":50998,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":2,"index":37471},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_read.rs","byte_start":51667,"byte_end":51673,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"kind":{"Impl":{"id":13}},"from":{"krate":1,"index":9390},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":54667,"byte_end":54670,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":232}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":54813,"byte_end":54816,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":2,"index":37471},"to":{"krate":0,"index":232}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_seek.rs","byte_start":55207,"byte_end":55213,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"kind":{"Impl":{"id":16}},"from":{"krate":1,"index":9390},"to":{"krate":0,"index":232}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":64971,"byte_end":64974,"line_start":217,"line_end":217,"column_start":53,"column_end":56},"kind":{"Impl":{"id":17}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":65122,"byte_end":65125,"line_start":225,"line_end":225,"column_start":24,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":2,"index":37471},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":66002,"byte_end":66005,"line_start":259,"line_end":259,"column_start":21,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":5,"index":6703},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":66803,"byte_end":66809,"line_start":290,"line_end":290,"column_start":25,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":9390},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":67612,"byte_end":67618,"line_start":320,"line_end":320,"column_start":25,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":1,"index":9390},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":68424,"byte_end":68430,"line_start":350,"line_end":350,"column_start":25,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":1,"index":9390},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_write.rs","byte_start":69231,"byte_end":69237,"line_start":380,"line_end":380,"column_start":25,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":1,"index":9390},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":71278,"byte_end":71285,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/read_buf.rs","byte_start":80263,"byte_end":80270,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":336},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10138358,"byte_end":10138366,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10140507,"byte_end":10140515,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1395},"to":{"krate":2,"index":2950}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10140658,"byte_end":10140666,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1395},"to":{"krate":2,"index":2976}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/interest.rs","byte_start":10140794,"byte_end":10140802,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1395},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10141387,"byte_end":10141392,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10145809,"byte_end":10145814,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10146558,"byte_end":10146563,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1408},"to":{"krate":2,"index":2950}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10146724,"byte_end":10146729,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1408},"to":{"krate":2,"index":2976}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10146857,"byte_end":10146862,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1408},"to":{"krate":2,"index":2945}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10147016,"byte_end":10147021,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1408},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/ready.rs","byte_start":10147168,"byte_end":10147173,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1408},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/registration.rs","byte_start":10149758,"byte_end":10149770,"line_start":53,"line_end":53,"column_start":22,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1427},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/registration.rs","byte_start":10149795,"byte_end":10149807,"line_start":54,"line_end":54,"column_start":22,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1427},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/registration.rs","byte_start":10149851,"byte_end":10149863,"line_start":58,"line_end":58,"column_start":6,"column_end":18},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/registration.rs","byte_start":10155291,"byte_end":10155303,"line_start":211,"line_end":211,"column_start":15,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1427},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/registration.rs","byte_start":10155902,"byte_end":10155914,"line_start":229,"line_end":229,"column_start":10,"column_end":22},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10159420,"byte_end":10159431,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1470},"to":{"krate":0,"index":10685}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10159691,"byte_end":10159702,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1470},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10159882,"byte_end":10159893,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10168076,"byte_end":10168087,"line_start":366,"line_end":366,"column_start":15,"column_end":26},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1470},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10168176,"byte_end":10168187,"line_start":372,"line_end":372,"column_start":22,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1470},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10168212,"byte_end":10168223,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1470},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10168257,"byte_end":10168268,"line_start":376,"line_end":376,"column_start":10,"column_end":21},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10169191,"byte_end":10169197,"line_start":401,"line_end":401,"column_start":39,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1497},"to":{"krate":0,"index":915}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10169692,"byte_end":10169701,"line_start":420,"line_end":420,"column_start":21,"column_end":30},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1485},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10174375,"byte_end":10174384,"line_start":529,"line_end":529,"column_start":19,"column_end":28},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1485},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10174749,"byte_end":10174758,"line_start":542,"line_end":542,"column_start":26,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1485},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/scheduled_io.rs","byte_start":10174791,"byte_end":10174800,"line_start":543,"line_end":543,"column_start":26,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1485},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10130930,"byte_end":10130936,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10133742,"byte_end":10133748,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1289},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10133863,"byte_end":10133868,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10134312,"byte_end":10134318,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1289},"to":{"krate":0,"index":841}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10134717,"byte_end":10134723,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1289},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10134873,"byte_end":10134879,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10135710,"byte_end":10135716,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10136533,"byte_end":10136539,"line_start":302,"line_end":302,"column_start":17,"column_end":23},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1526},"to":{"krate":0,"index":848}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10136617,"byte_end":10136623,"line_start":308,"line_end":308,"column_start":21,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10136758,"byte_end":10136763,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/driver/mod.rs","byte_start":10137720,"byte_end":10137729,"line_start":346,"line_end":346,"column_start":6,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/poll_evented.rs","byte_start":10178023,"byte_end":10178034,"line_start":70,"line_end":70,"column_start":17,"column_end":28},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/poll_evented.rs","byte_start":10180796,"byte_end":10180807,"line_start":142,"line_end":142,"column_start":21,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/poll_evented.rs","byte_start":10182350,"byte_end":10182361,"line_start":189,"line_end":189,"column_start":27,"column_end":38},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1555},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/poll_evented.rs","byte_start":10182504,"byte_end":10182515,"line_start":197,"line_end":197,"column_start":45,"column_end":56},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1555},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/poll_evented.rs","byte_start":10182687,"byte_end":10182698,"line_start":203,"line_end":203,"column_start":26,"column_end":37},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1555},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10189911,"byte_end":10189918,"line_start":168,"line_end":168,"column_start":18,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10201886,"byte_end":10201893,"line_start":462,"line_end":462,"column_start":30,"column_end":37},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1623},"to":{"krate":1,"index":11204}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10202047,"byte_end":10202054,"line_start":468,"line_end":468,"column_start":56,"column_end":63},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1623},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10202265,"byte_end":10202272,"line_start":476,"line_end":476,"column_start":27,"column_end":34},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1623},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10202372,"byte_end":10202389,"line_start":482,"line_end":482,"column_start":26,"column_end":43},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10204937,"byte_end":10204957,"line_start":545,"line_end":545,"column_start":26,"column_end":46},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10207467,"byte_end":10207484,"line_start":606,"line_end":606,"column_start":60,"column_end":77},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1627},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/async_fd.rs","byte_start":10207741,"byte_end":10207761,"line_start":614,"line_end":614,"column_start":60,"column_end":80},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1632},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10209803,"byte_end":10209811,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10210728,"byte_end":10210737,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10210987,"byte_end":10210995,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1929},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10211290,"byte_end":10211299,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1932},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10211978,"byte_end":10211983,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10212439,"byte_end":10212444,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10212697,"byte_end":10212702,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1776},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10212825,"byte_end":10212833,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1929},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10212870,"byte_end":10212879,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1932},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10212916,"byte_end":10212924,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1929},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10212961,"byte_end":10212970,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1932},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10213013,"byte_end":10213021,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1929},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/split.rs","byte_start":10213189,"byte_end":10213198,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1932},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/seek.rs","byte_start":10214155,"byte_end":10214159,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":13945},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_buf_read_ext.rs","byte_start":10217170,"byte_end":10217182,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":151},"to":{"krate":0,"index":3623}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_buf_read_ext.rs","byte_start":10226289,"byte_end":10226290,"line_start":259,"line_end":259,"column_start":52,"column_end":53},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1970},"to":{"krate":0,"index":3623}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10228211,"byte_end":10228220,"line_start":61,"line_end":61,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":193},"to":{"krate":0,"index":3631}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_read_ext.rs","byte_start":10265939,"byte_end":10265940,"line_start":1122,"line_end":1122,"column_start":46,"column_end":47},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2087},"to":{"krate":0,"index":3631}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_seek_ext.rs","byte_start":10266865,"byte_end":10266874,"line_start":33,"line_end":33,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":232},"to":{"krate":0,"index":3682}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_seek_ext.rs","byte_start":10268405,"byte_end":10268406,"line_start":83,"line_end":83,"column_start":46,"column_end":47},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2106},"to":{"krate":0,"index":3682}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10270516,"byte_end":10270526,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":272},"to":{"krate":0,"index":3686}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/async_write_ext.rs","byte_start":10306962,"byte_end":10306963,"line_start":1101,"line_end":1101,"column_start":48,"column_end":49},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2226},"to":{"krate":0,"index":3686}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10308407,"byte_end":10308416,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":13889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10310314,"byte_end":10310323,"line_start":100,"line_end":100,"column_start":34,"column_end":43},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":13889},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10311133,"byte_end":10311142,"line_start":122,"line_end":122,"column_start":37,"column_end":46},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":13889},"to":{"krate":0,"index":151}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10313335,"byte_end":10313344,"line_start":176,"line_end":176,"column_start":46,"column_end":55},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":13889},"to":{"krate":0,"index":232}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10317376,"byte_end":10317385,"line_start":262,"line_end":262,"column_start":48,"column_end":57},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":13889},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_reader.rs","byte_start":10317896,"byte_end":10317905,"line_start":280,"line_end":280,"column_start":36,"column_end":45},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":13889},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10319423,"byte_end":10319432,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":13858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10321269,"byte_end":10321278,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":13858},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10321420,"byte_end":10321429,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":13858},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10322309,"byte_end":10322318,"line_start":121,"line_end":121,"column_start":49,"column_end":58},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":13858},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10322848,"byte_end":10322857,"line_start":139,"line_end":139,"column_start":48,"column_end":57},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":13858},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10323992,"byte_end":10324001,"line_start":167,"line_end":167,"column_start":60,"column_end":69},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":13858},"to":{"krate":0,"index":232}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_stream.rs","byte_start":10324343,"byte_end":10324352,"line_start":177,"line_end":177,"column_start":51,"column_end":60},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":13858},"to":{"krate":0,"index":151}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10326351,"byte_end":10326360,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":13808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10328679,"byte_end":10328688,"line_start":118,"line_end":118,"column_start":36,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":13808},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10329981,"byte_end":10329990,"line_start":160,"line_end":160,"column_start":47,"column_end":56},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":13808},"to":{"krate":0,"index":232}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10331531,"byte_end":10331540,"line_start":203,"line_end":203,"column_start":47,"column_end":56},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":13808},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10331794,"byte_end":10331803,"line_start":213,"line_end":213,"column_start":53,"column_end":62},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":13808},"to":{"krate":0,"index":151}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/buf_writer.rs","byte_start":10332090,"byte_end":10332099,"line_start":223,"line_end":223,"column_start":36,"column_end":45},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":13808},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10333277,"byte_end":10333282,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":13759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10334422,"byte_end":10334427,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":13759},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10334706,"byte_end":10334711,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":13759},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/chain.rs","byte_start":10335297,"byte_end":10335302,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":13759},"to":{"krate":0,"index":151}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy.rs","byte_start":10336429,"byte_end":10336439,"line_start":17,"line_end":17,"column_start":6,"column_end":16},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy.rs","byte_start":10340036,"byte_end":10340040,"line_start":136,"line_end":136,"column_start":23,"column_end":27},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3775},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_bidirectional.rs","byte_start":10341620,"byte_end":10341637,"line_start":52,"line_end":52,"column_start":27,"column_end":44},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2597},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/copy_buf.rs","byte_start":10346123,"byte_end":10346130,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3799},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/empty.rs","byte_start":10348397,"byte_end":10348402,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3811},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/empty.rs","byte_start":10348616,"byte_end":10348621,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3811},"to":{"krate":0,"index":151}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/empty.rs","byte_start":10348854,"byte_end":10348859,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3811},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/flush.rs","byte_start":10349986,"byte_end":10349991,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":13717},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10351322,"byte_end":10351327,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":13667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/lines.rs","byte_start":10352579,"byte_end":10352584,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":13667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10357342,"byte_end":10357354,"line_start":101,"line_end":101,"column_start":20,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3814},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10357898,"byte_end":10357910,"line_start":117,"line_end":117,"column_start":21,"column_end":33},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3814},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10358608,"byte_end":10358620,"line_start":144,"line_end":144,"column_start":15,"column_end":27},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3814},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10358816,"byte_end":10358820,"line_start":154,"line_end":154,"column_start":6,"column_end":10},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10359522,"byte_end":10359526,"line_start":182,"line_end":182,"column_start":20,"column_end":24},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3819},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/mem.rs","byte_start":10360392,"byte_end":10360396,"line_start":209,"line_end":209,"column_start":21,"column_end":25},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3819},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read.rs","byte_start":10362583,"byte_end":10362587,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":13616},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_buf.rs","byte_start":10363721,"byte_end":10363728,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":13556},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_exact.rs","byte_start":10366109,"byte_end":10366118,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":13501},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_line.rs","byte_start":10375175,"byte_end":10375183,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":12582},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_to_end.rs","byte_start":10378836,"byte_end":10378845,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":12525},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/vec_with_initialized.rs","byte_start":10379240,"byte_end":10379243,"line_start":7,"line_end":7,"column_start":21,"column_end":24},"kind":{"Impl":{"id":140}},"from":{"krate":5,"index":6703},"to":{"krate":0,"index":3109}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/vec_with_initialized.rs","byte_start":10379480,"byte_end":10379485,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2722},"to":{"krate":0,"index":3112}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/vec_with_initialized.rs","byte_start":10379506,"byte_end":10379512,"line_start":13,"line_end":13,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":3109},"to":{"krate":0,"index":3112}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/vec_with_initialized.rs","byte_start":10379532,"byte_end":10379535,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"kind":{"Impl":{"id":141}},"from":{"krate":5,"index":6703},"to":{"krate":0,"index":3112}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/vec_with_initialized.rs","byte_start":10380235,"byte_end":10380253,"line_start":34,"line_end":34,"column_start":6,"column_end":24},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/vec_with_initialized.rs","byte_start":10380433,"byte_end":10380451,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_to_string.rs","byte_start":10385803,"byte_end":10385815,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":12464},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/read_until.rs","byte_start":10388119,"byte_end":10388128,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":12403},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/repeat.rs","byte_start":10389706,"byte_end":10389712,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3979},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/shutdown.rs","byte_start":10391091,"byte_end":10391099,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":12354},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/sink.rs","byte_start":10392739,"byte_end":10392743,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3983},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/sink.rs","byte_start":10393253,"byte_end":10393257,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3983},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10394414,"byte_end":10394419,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":12304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/split.rs","byte_start":10395158,"byte_end":10395163,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":12304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10397461,"byte_end":10397465,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":12264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10399093,"byte_end":10399097,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":12264},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/take.rs","byte_start":10399741,"byte_end":10399745,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":12264},"to":{"krate":0,"index":151}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write.rs","byte_start":10401544,"byte_end":10401549,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":12213},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_vectored.rs","byte_start":10402714,"byte_end":10402727,"line_start":37,"line_end":37,"column_start":20,"column_end":33},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":12153},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_all.rs","byte_start":10403776,"byte_end":10403784,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":12098},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_buf.rs","byte_start":10405269,"byte_end":10405277,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":12038},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/io/util/write_all_buf.rs","byte_start":10406604,"byte_end":10406615,"line_start":37,"line_end":37,"column_start":23,"column_end":34},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":11976},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":82711,"byte_end":82728,"line_start":20,"line_end":20,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":461},"to":{"krate":0,"index":406}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":83381,"byte_end":83391,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"kind":{"Impl":{"id":160}},"from":{"krate":1,"index":9540},"to":{"krate":0,"index":406}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":83431,"byte_end":83441,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"kind":{"Impl":{"id":161}},"from":{"krate":1,"index":9540},"to":{"krate":0,"index":461}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":83743,"byte_end":83755,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"kind":{"Impl":{"id":162}},"from":{"krate":1,"index":9564},"to":{"krate":0,"index":406}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":83795,"byte_end":83807,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"kind":{"Impl":{"id":163}},"from":{"krate":1,"index":9564},"to":{"krate":0,"index":461}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":84104,"byte_end":84116,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"kind":{"Impl":{"id":164}},"from":{"krate":1,"index":9567},"to":{"krate":0,"index":406}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":84156,"byte_end":84168,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"kind":{"Impl":{"id":165}},"from":{"krate":1,"index":9567},"to":{"krate":0,"index":461}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":88499,"byte_end":88505,"line_start":226,"line_end":226,"column_start":28,"column_end":34},"kind":{"Impl":{"id":168}},"from":{"krate":5,"index":7216},"to":{"krate":0,"index":406}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":88549,"byte_end":88555,"line_start":228,"line_end":228,"column_start":40,"column_end":46},"kind":{"Impl":{"id":169}},"from":{"krate":5,"index":7216},"to":{"krate":0,"index":461}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":90108,"byte_end":90118,"line_start":283,"line_end":283,"column_start":25,"column_end":35},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4190},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/addr.rs","byte_start":90757,"byte_end":90766,"line_start":301,"line_end":301,"column_start":27,"column_end":36},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4204},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10414563,"byte_end":10414574,"line_start":57,"line_end":57,"column_start":6,"column_end":17},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10424349,"byte_end":10424360,"line_start":350,"line_end":350,"column_start":36,"column_end":47},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10424686,"byte_end":10424697,"line_start":362,"line_end":362,"column_start":21,"column_end":32},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/listener.rs","byte_start":10424903,"byte_end":10424914,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":4870},"to":{"krate":1,"index":11204}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10428437,"byte_end":10428446,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10442467,"byte_end":10442476,"line_start":529,"line_end":529,"column_start":21,"column_end":30},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4872},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10442611,"byte_end":10442620,"line_start":536,"line_end":536,"column_start":18,"column_end":27},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4872},"to":{"krate":1,"index":11204}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10442730,"byte_end":10442739,"line_start":543,"line_end":543,"column_start":20,"column_end":29},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4872},"to":{"krate":1,"index":11206}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/socket.rs","byte_start":10443094,"byte_end":10443103,"line_start":557,"line_end":557,"column_start":20,"column_end":29},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4872},"to":{"krate":1,"index":11208}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10445565,"byte_end":10445573,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10448376,"byte_end":10448384,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4874},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10448600,"byte_end":10448609,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4881},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10449526,"byte_end":10449534,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4874},"to":{"krate":2,"index":2719}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split.rs","byte_start":10449628,"byte_end":10449637,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4881},"to":{"krate":2,"index":2719}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10452523,"byte_end":10452535,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4897},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10452738,"byte_end":10452750,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4897},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10452760,"byte_end":10452773,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10455955,"byte_end":10455968,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4888},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10456169,"byte_end":10456183,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10456866,"byte_end":10456880,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4892},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10457044,"byte_end":10457058,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4892},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10458105,"byte_end":10458118,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4888},"to":{"krate":2,"index":2719}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/split_owned.rs","byte_start":10458214,"byte_end":10458228,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4892},"to":{"krate":2,"index":2719}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10460758,"byte_end":10460767,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10499365,"byte_end":10499374,"line_start":1181,"line_end":1181,"column_start":39,"column_end":48},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4906},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10499732,"byte_end":10499741,"line_start":1195,"line_end":1195,"column_start":20,"column_end":29},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4906},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10499951,"byte_end":10499960,"line_start":1205,"line_end":1205,"column_start":21,"column_end":30},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4906},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10500786,"byte_end":10500795,"line_start":1238,"line_end":1238,"column_start":21,"column_end":30},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4906},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/tcp/stream.rs","byte_start":10500999,"byte_end":10501008,"line_start":1249,"line_end":1249,"column_start":22,"column_end":31},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4906},"to":{"krate":1,"index":11204}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10506167,"byte_end":10506176,"line_start":127,"line_end":127,"column_start":6,"column_end":15},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10550251,"byte_end":10550260,"line_start":1397,"line_end":1397,"column_start":39,"column_end":48},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4917},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10550585,"byte_end":10550594,"line_start":1409,"line_end":1409,"column_start":21,"column_end":30},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4917},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/udp.rs","byte_start":10550803,"byte_end":10550812,"line_start":1420,"line_end":1420,"column_start":22,"column_end":31},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":4917},"to":{"krate":1,"index":11204}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10554879,"byte_end":10554891,"line_start":98,"line_end":98,"column_start":6,"column_end":18},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":5496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10593124,"byte_end":10593136,"line_start":1252,"line_end":1252,"column_start":52,"column_end":64},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":5496},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10593480,"byte_end":10593492,"line_start":1264,"line_end":1264,"column_start":21,"column_end":33},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":5496},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/datagram/socket.rs","byte_start":10593607,"byte_end":10593619,"line_start":1270,"line_end":1270,"column_start":18,"column_end":30},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":5496},"to":{"krate":1,"index":11204}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10595372,"byte_end":10595384,"line_start":52,"line_end":52,"column_start":6,"column_end":18},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10599576,"byte_end":10599588,"line_start":157,"line_end":157,"column_start":52,"column_end":64},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5506},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10599923,"byte_end":10599935,"line_start":169,"line_end":169,"column_start":21,"column_end":33},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":5506},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/listener.rs","byte_start":10600050,"byte_end":10600062,"line_start":175,"line_end":175,"column_start":18,"column_end":30},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":5506},"to":{"krate":1,"index":11204}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10601843,"byte_end":10601851,"line_start":50,"line_end":50,"column_start":20,"column_end":28},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":5509},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10602067,"byte_end":10602076,"line_start":60,"line_end":60,"column_start":21,"column_end":30},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":5516},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10602862,"byte_end":10602870,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":5509},"to":{"krate":2,"index":2719}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split.rs","byte_start":10602966,"byte_end":10602975,"line_start":96,"line_end":96,"column_start":28,"column_end":37},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5516},"to":{"krate":2,"index":2719}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10605890,"byte_end":10605902,"line_start":85,"line_end":85,"column_start":23,"column_end":35},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":5532},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10606105,"byte_end":10606117,"line_start":94,"line_end":94,"column_start":16,"column_end":28},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":5532},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10606127,"byte_end":10606140,"line_start":96,"line_end":96,"column_start":6,"column_end":19},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10606556,"byte_end":10606569,"line_start":107,"line_end":107,"column_start":20,"column_end":33},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5523},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10606770,"byte_end":10606784,"line_start":117,"line_end":117,"column_start":6,"column_end":20},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":5527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10607482,"byte_end":10607496,"line_start":136,"line_end":136,"column_start":15,"column_end":29},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5527},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10607660,"byte_end":10607674,"line_start":144,"line_end":144,"column_start":21,"column_end":35},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5527},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10608718,"byte_end":10608731,"line_start":181,"line_end":181,"column_start":28,"column_end":41},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5523},"to":{"krate":2,"index":2719}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/split_owned.rs","byte_start":10608829,"byte_end":10608843,"line_start":187,"line_end":187,"column_start":28,"column_end":42},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":5527},"to":{"krate":2,"index":2719}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/socketaddr.rs","byte_start":10609064,"byte_end":10609074,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":5252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/socketaddr.rs","byte_start":10609626,"byte_end":10609636,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":5252},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10611118,"byte_end":10611128,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":5541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10638571,"byte_end":10638581,"line_start":773,"line_end":773,"column_start":35,"column_end":45},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":5541},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10638894,"byte_end":10638904,"line_start":785,"line_end":785,"column_start":20,"column_end":30},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":5541},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10639114,"byte_end":10639124,"line_start":795,"line_end":795,"column_start":21,"column_end":31},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":5541},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10639889,"byte_end":10639899,"line_start":826,"line_end":826,"column_start":6,"column_end":16},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":5541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10641162,"byte_end":10641172,"line_start":864,"line_end":864,"column_start":21,"column_end":31},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5541},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/stream.rs","byte_start":10641287,"byte_end":10641297,"line_start":870,"line_end":870,"column_start":18,"column_end":28},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":5541},"to":{"krate":1,"index":11204}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/net/unix/ucred.rs","byte_start":10641684,"byte_end":10641689,"line_start":14,"line_end":14,"column_start":6,"column_end":11},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":5549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_ptr.rs","byte_start":94520,"byte_end":94529,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_ptr.rs","byte_start":94703,"byte_end":94712,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":486},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_ptr.rs","byte_start":94859,"byte_end":94868,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":486},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_ptr.rs","byte_start":94981,"byte_end":94990,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":486},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u16.rs","byte_start":95334,"byte_end":95343,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":512},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u16.rs","byte_start":95368,"byte_end":95377,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":512},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u16.rs","byte_start":95387,"byte_end":95396,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u16.rs","byte_start":95888,"byte_end":95897,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":512},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u16.rs","byte_start":96182,"byte_end":96191,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":512},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u32.rs","byte_start":96532,"byte_end":96541,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":534},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u32.rs","byte_start":96566,"byte_end":96575,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":534},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u32.rs","byte_start":96585,"byte_end":96594,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u32.rs","byte_start":96779,"byte_end":96788,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":534},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u32.rs","byte_start":97073,"byte_end":97082,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":534},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u8.rs","byte_start":99593,"byte_end":99601,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":563},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u8.rs","byte_start":99626,"byte_end":99634,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":563},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u8.rs","byte_start":99644,"byte_end":99652,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u8.rs","byte_start":99833,"byte_end":99841,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":563},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_u8.rs","byte_start":100125,"byte_end":100133,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":563},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_usize.rs","byte_start":100473,"byte_end":100484,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":584},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_usize.rs","byte_start":100509,"byte_end":100520,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":584},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_usize.rs","byte_start":100530,"byte_end":100541,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_usize.rs","byte_start":101230,"byte_end":101241,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":584},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_usize.rs","byte_start":101531,"byte_end":101542,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":584},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/atomic_usize.rs","byte_start":101706,"byte_end":101717,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":584},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/mutex.rs","byte_start":102048,"byte_end":102053,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/loom/std/unsafe_cell.rs","byte_start":102731,"byte_end":102741,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/either.rs","byte_start":10647589,"byte_end":10647595,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5596},"to":{"krate":0,"index":841}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/either.rs","byte_start":10648552,"byte_end":10648558,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5596},"to":{"krate":0,"index":848}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/either.rs","byte_start":10648772,"byte_end":10648778,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5596},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/thread.rs","byte_start":107933,"byte_end":107943,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/thread.rs","byte_start":108208,"byte_end":108218,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5622},"to":{"krate":0,"index":841}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/thread.rs","byte_start":108744,"byte_end":108749,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/thread.rs","byte_start":113514,"byte_end":113524,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5622},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/thread.rs","byte_start":113633,"byte_end":113645,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5626},"to":{"krate":0,"index":848}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/thread.rs","byte_start":114000,"byte_end":114016,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/thread.rs","byte_start":115279,"byte_end":115295,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5642},"to":{"krate":0,"index":841}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/thread.rs","byte_start":115890,"byte_end":115902,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/thread.rs","byte_start":116082,"byte_end":116087,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/mod.rs","byte_start":106500,"byte_end":106504,"line_start":93,"line_end":93,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2834},"to":{"krate":0,"index":848}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/mod.rs","byte_start":106507,"byte_end":106511,"line_start":93,"line_end":93,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2822},"to":{"krate":0,"index":848}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/mod.rs","byte_start":106980,"byte_end":106983,"line_start":107,"line_end":107,"column_start":17,"column_end":20},"kind":{"Impl":{"id":275}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":848}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/park/mod.rs","byte_start":107072,"byte_end":107075,"line_start":113,"line_end":113,"column_start":17,"column_end":20},"kind":{"Impl":{"id":276}},"from":{"krate":5,"index":5619},"to":{"krate":0,"index":848}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/enter.rs","byte_start":10669271,"byte_end":10669283,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":6334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/enter.rs","byte_start":10672229,"byte_end":10672250,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":6359},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/enter.rs","byte_start":10672966,"byte_end":10672971,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":5669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/enter.rs","byte_start":10674611,"byte_end":10674616,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":5669},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/enter.rs","byte_start":10674746,"byte_end":10674751,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5669},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/core.rs","byte_start":10682722,"byte_end":10682728,"line_start":80,"line_end":80,"column_start":22,"column_end":28},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5740},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/core.rs","byte_start":10682753,"byte_end":10682759,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5740},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/core.rs","byte_start":10683118,"byte_end":10683122,"line_start":96,"line_end":96,"column_start":30,"column_end":34},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/core.rs","byte_start":10684181,"byte_end":10684190,"line_start":127,"line_end":127,"column_start":19,"column_end":28},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5729},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/core.rs","byte_start":10687344,"byte_end":10687353,"line_start":213,"line_end":213,"column_start":17,"column_end":26},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/core.rs","byte_start":10690404,"byte_end":10690411,"line_start":315,"line_end":315,"column_start":6,"column_end":13},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10691342,"byte_end":10691351,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":6389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10694077,"byte_end":10694086,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":6389},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10694329,"byte_end":10694338,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":6389},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10694615,"byte_end":10694624,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":6389},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/error.rs","byte_start":10694658,"byte_end":10694663,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"kind":{"Impl":{"id":292}},"from":{"krate":1,"index":3733},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/harness.rs","byte_start":10695418,"byte_end":10695425,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":5908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/harness.rs","byte_start":10696080,"byte_end":10696087,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":5908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/harness.rs","byte_start":10701608,"byte_end":10701621,"line_start":214,"line_end":214,"column_start":13,"column_end":26},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":5940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/harness.rs","byte_start":10708602,"byte_end":10708607,"line_start":419,"line_end":419,"column_start":38,"column_end":43},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":5974},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714080,"byte_end":10714090,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":6391},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714127,"byte_end":10714137,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":6391},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10714153,"byte_end":10714163,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":6391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10715398,"byte_end":10715408,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":6391},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10715435,"byte_end":10715445,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":6391},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10716671,"byte_end":10716681,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":6391},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/join.rs","byte_start":10716947,"byte_end":10716957,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":6391},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/raw.rs","byte_start":10718206,"byte_end":10718213,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":6060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/raw.rs","byte_start":10719744,"byte_end":10719751,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":6060},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/raw.rs","byte_start":10719841,"byte_end":10719848,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":6060},"to":{"krate":2,"index":2832}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/state.rs","byte_start":10722822,"byte_end":10722827,"line_start":65,"line_end":65,"column_start":6,"column_end":11},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/state.rs","byte_start":10731676,"byte_end":10731684,"line_start":347,"line_end":347,"column_start":6,"column_end":14},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":6395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/state.rs","byte_start":10733553,"byte_end":10733558,"line_start":430,"line_end":430,"column_start":21,"column_end":26},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6123},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/state.rs","byte_start":10733717,"byte_end":10733725,"line_start":437,"line_end":437,"column_start":21,"column_end":29},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":6395},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/waker.rs","byte_start":10735545,"byte_end":10735553,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":6237},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10675748,"byte_end":10675752,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6283},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10675783,"byte_end":10675787,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":6283},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10675924,"byte_end":10675932,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6291},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10675973,"byte_end":10675981,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6291},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10676106,"byte_end":10676110,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2834},"to":{"krate":0,"index":6301}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10676113,"byte_end":10676118,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2827},"to":{"krate":0,"index":6301}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10677968,"byte_end":10677972,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10678868,"byte_end":10678872,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10679041,"byte_end":10679049,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10679335,"byte_end":10679339,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6283},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10679579,"byte_end":10679583,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6283},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10679735,"byte_end":10679743,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":6291},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/task/mod.rs","byte_start":10679959,"byte_end":10679963,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6283},"to":{"krate":0,"index":915}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10740002,"byte_end":10740007,"line_start":83,"line_end":83,"column_start":22,"column_end":27},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":6510},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10740882,"byte_end":10740896,"line_start":121,"line_end":121,"column_start":15,"column_end":29},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":6496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10743187,"byte_end":10743192,"line_start":199,"line_end":199,"column_start":15,"column_end":20},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":6501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10747472,"byte_end":10747477,"line_start":302,"line_end":302,"column_start":28,"column_end":33},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":6549},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10748170,"byte_end":10748184,"line_start":326,"line_end":326,"column_start":24,"column_end":38},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":6496},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10750315,"byte_end":10750329,"line_start":383,"line_end":383,"column_start":30,"column_end":44},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":6496},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10750495,"byte_end":10750502,"line_start":391,"line_end":391,"column_start":6,"column_end":13},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":6980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10751271,"byte_end":10751278,"line_start":421,"line_end":421,"column_start":21,"column_end":28},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":6980},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10751446,"byte_end":10751449,"line_start":429,"line_end":429,"column_start":19,"column_end":22},"kind":{"Impl":{"id":331}},"from":{"krate":5,"index":5619},"to":{"krate":0,"index":6301}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10753862,"byte_end":10753868,"line_start":490,"line_end":490,"column_start":15,"column_end":21},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":6518},"to":{"krate":0,"index":10860}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10754375,"byte_end":10754385,"line_start":512,"line_end":512,"column_start":15,"column_end":25},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":6583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/basic_scheduler.rs","byte_start":10754660,"byte_end":10754670,"line_start":520,"line_end":520,"column_start":24,"column_end":34},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":6583},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/pool.rs","byte_start":10758774,"byte_end":10758786,"line_start":90,"line_end":90,"column_start":6,"column_end":18},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":6658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/pool.rs","byte_start":10761342,"byte_end":10761354,"line_start":160,"line_end":160,"column_start":15,"column_end":27},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":6658},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/pool.rs","byte_start":10761440,"byte_end":10761452,"line_start":166,"line_end":166,"column_start":21,"column_end":33},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":6658},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/pool.rs","byte_start":10761613,"byte_end":10761620,"line_start":174,"line_end":174,"column_start":6,"column_end":13},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":6989},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/pool.rs","byte_start":10764052,"byte_end":10764057,"line_start":252,"line_end":252,"column_start":6,"column_end":11},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":6661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/pool.rs","byte_start":10767296,"byte_end":10767303,"line_start":348,"line_end":348,"column_start":21,"column_end":28},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":6989},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/schedule.rs","byte_start":10767806,"byte_end":10767818,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":6721},"to":{"krate":0,"index":6301}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/shutdown.rs","byte_start":10768691,"byte_end":10768699,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":6999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/task.rs","byte_start":10770448,"byte_end":10770460,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":6757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/task.rs","byte_start":10770686,"byte_end":10770698,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":6757},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/blocking/task.rs","byte_start":10770728,"byte_end":10770740,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":6757},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10773934,"byte_end":10773941,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":6809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10785571,"byte_end":10785578,"line_start":467,"line_end":467,"column_start":10,"column_end":17},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":6809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10786140,"byte_end":10786147,"line_start":491,"line_end":491,"column_start":10,"column_end":17},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":6809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/builder.rs","byte_start":10788835,"byte_end":10788842,"line_start":579,"line_end":579,"column_start":21,"column_end":28},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":6809},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/context.rs","byte_start":10791234,"byte_end":10791244,"line_start":67,"line_end":67,"column_start":15,"column_end":25},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":7018},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/driver.rs","byte_start":10795757,"byte_end":10795763,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":7043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/driver.rs","byte_start":10796347,"byte_end":10796353,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":7043},"to":{"krate":0,"index":841}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10798160,"byte_end":10798166,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":7047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10806914,"byte_end":10806929,"line_start":297,"line_end":297,"column_start":21,"column_end":36},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":6959},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10807077,"byte_end":10807092,"line_start":303,"line_end":303,"column_start":23,"column_end":38},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":6959},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/handle.rs","byte_start":10807232,"byte_end":10807247,"line_start":309,"line_end":309,"column_start":23,"column_end":38},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":6959},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/spawner.rs","byte_start":10807633,"byte_end":10807640,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":7074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/spawner.rs","byte_start":10807882,"byte_end":10807889,"line_start":31,"line_end":31,"column_start":10,"column_end":17},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":7074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/runtime/mod.rs","byte_start":10658831,"byte_end":10658838,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":7107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/coop.rs","byte_start":119740,"byte_end":119746,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":7123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/coop.rs","byte_start":121393,"byte_end":121403,"line_start":93,"line_end":93,"column_start":23,"column_end":33},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":871},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/coop.rs","byte_start":122374,"byte_end":122390,"line_start":141,"line_end":141,"column_start":10,"column_end":26},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":7140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/coop.rs","byte_start":122522,"byte_end":122538,"line_start":147,"line_end":147,"column_start":19,"column_end":35},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":7140},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/coop.rs","byte_start":124278,"byte_end":124284,"line_start":188,"line_end":188,"column_start":10,"column_end":16},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":7123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10826441,"byte_end":10826448,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":9274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/barrier.rs","byte_start":10829713,"byte_end":10829730,"line_start":136,"line_end":136,"column_start":6,"column_end":23},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":9286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837161,"byte_end":10837170,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":9293},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10837346,"byte_end":10837355,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":9293},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10838003,"byte_end":10838012,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":9300},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10838317,"byte_end":10838326,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":9300},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10839249,"byte_end":10839261,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":9312},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10839639,"byte_end":10839651,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":9312},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10841614,"byte_end":10841618,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":7286},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10841663,"byte_end":10841667,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":7286},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844441,"byte_end":10844447,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":7237},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844484,"byte_end":10844490,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":7237},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844528,"byte_end":10844536,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":7240},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844573,"byte_end":10844581,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":7240},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10844597,"byte_end":10844603,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":7237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10850213,"byte_end":10850217,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":7266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10850609,"byte_end":10850615,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":7237},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10850795,"byte_end":10850801,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":7237},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10850955,"byte_end":10850963,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":7240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10855826,"byte_end":10855834,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":7240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10860010,"byte_end":10860018,"line_start":928,"line_end":928,"column_start":18,"column_end":26},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":7240},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10860644,"byte_end":10860648,"line_start":951,"line_end":951,"column_start":13,"column_end":17},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":7286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10861427,"byte_end":10861431,"line_start":977,"line_end":977,"column_start":24,"column_end":28},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":7286},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10862092,"byte_end":10862096,"line_start":997,"line_end":997,"column_start":22,"column_end":26},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":7286},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10862844,"byte_end":10862850,"line_start":1023,"line_end":1023,"column_start":35,"column_end":41},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":7277},"to":{"krate":0,"index":915}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10863265,"byte_end":10863271,"line_start":1040,"line_end":1040,"column_start":24,"column_end":30},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":7237},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10863415,"byte_end":10863423,"line_start":1046,"line_end":1046,"column_start":24,"column_end":32},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":7240},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10863558,"byte_end":10863567,"line_start":1052,"line_end":1052,"column_start":13,"column_end":22},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":7282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/broadcast.rs","byte_start":10863740,"byte_end":10863749,"line_start":1061,"line_end":1061,"column_start":22,"column_end":31},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":7282},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/block.rs","byte_start":10870644,"byte_end":10870649,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":7421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/block.rs","byte_start":10880748,"byte_end":10880754,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":7435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/block.rs","byte_start":10881236,"byte_end":10881242,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":7435},"to":{"krate":2,"index":3111}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10885278,"byte_end":10885286,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":7519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10891621,"byte_end":10891629,"line_start":304,"line_end":304,"column_start":24,"column_end":32},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":7519},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10891825,"byte_end":10891833,"line_start":312,"line_end":312,"column_start":19,"column_end":27},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":7519},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10891849,"byte_end":10891855,"line_start":314,"line_end":314,"column_start":9,"column_end":15},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":7509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912218,"byte_end":10912224,"line_start":904,"line_end":904,"column_start":19,"column_end":25},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":7509},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912356,"byte_end":10912362,"line_start":912,"line_end":912,"column_start":24,"column_end":30},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":7509},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10912574,"byte_end":10912580,"line_start":922,"line_end":922,"column_start":9,"column_end":15},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":7512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10913830,"byte_end":10913836,"line_start":965,"line_end":965,"column_start":18,"column_end":24},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":7512},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10914303,"byte_end":10914309,"line_start":982,"line_end":982,"column_start":24,"column_end":30},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":7512},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10914525,"byte_end":10914536,"line_start":992,"line_end":992,"column_start":9,"column_end":20},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":7516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10917318,"byte_end":10917329,"line_start":1079,"line_end":1079,"column_start":18,"column_end":29},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":7516},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/bounded.rs","byte_start":10917992,"byte_end":10918003,"line_start":1102,"line_end":1102,"column_start":24,"column_end":35},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":7516},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10918665,"byte_end":10918667,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":7672},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10918960,"byte_end":10918962,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":7680},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10919899,"byte_end":10919903,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":7693},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10920536,"byte_end":10920544,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":7706},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10920810,"byte_end":10920814,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":7693},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10920863,"byte_end":10920867,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":7693},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10921374,"byte_end":10921376,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":7672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10921986,"byte_end":10921988,"line_start":149,"line_end":149,"column_start":23,"column_end":25},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":7672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10922538,"byte_end":10922540,"line_start":167,"line_end":167,"column_start":22,"column_end":24},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":7672},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10922879,"byte_end":10922881,"line_start":179,"line_end":179,"column_start":21,"column_end":23},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":7672},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10923204,"byte_end":10923206,"line_start":195,"line_end":195,"column_start":23,"column_end":25},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":7680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10925761,"byte_end":10925763,"line_start":268,"line_end":268,"column_start":32,"column_end":34},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":7680},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10926175,"byte_end":10926179,"line_start":286,"line_end":286,"column_start":12,"column_end":16},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":7693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10926364,"byte_end":10926368,"line_start":296,"line_end":296,"column_start":21,"column_end":25},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":7693},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/chan.rs","byte_start":10927369,"byte_end":10927380,"line_start":336,"line_end":336,"column_start":20,"column_end":31},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":584},"to":{"krate":0,"index":7688}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/list.rs","byte_start":10929121,"byte_end":10929123,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":7832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/list.rs","byte_start":10934836,"byte_end":10934838,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":7832},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/list.rs","byte_start":10935115,"byte_end":10935117,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":7836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/list.rs","byte_start":10938516,"byte_end":10938518,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":7836},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10939176,"byte_end":10939191,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":7882},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10939332,"byte_end":10939347,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":7882},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10940020,"byte_end":10940037,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":7891},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10941036,"byte_end":10941053,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":7891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/unbounded.rs","byte_start":10944351,"byte_end":10944366,"line_start":183,"line_end":183,"column_start":9,"column_end":24},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":7882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10948544,"byte_end":10948553,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":9334},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10948713,"byte_end":10948722,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":9334},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10949208,"byte_end":10949220,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":9341},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10949253,"byte_end":10949265,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":9341},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10949605,"byte_end":10949617,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":9341},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10949958,"byte_end":10949967,"line_start":63,"line_end":63,"column_start":23,"column_end":32},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":9352},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10950118,"byte_end":10950127,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":9352},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10950631,"byte_end":10950647,"line_start":87,"line_end":87,"column_start":35,"column_end":51},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":9362},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mpsc/error.rs","byte_start":10950684,"byte_end":10950700,"line_start":89,"line_end":89,"column_start":30,"column_end":46},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":9362},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958056,"byte_end":10958061,"line_start":179,"line_end":179,"column_start":25,"column_end":30},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":7997},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958115,"byte_end":10958120,"line_start":180,"line_end":180,"column_start":25,"column_end":30},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":7997},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958174,"byte_end":10958184,"line_start":181,"line_end":181,"column_start":25,"column_end":35},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":8001},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958249,"byte_end":10958264,"line_start":182,"line_end":182,"column_start":25,"column_end":40},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":8005},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958329,"byte_end":10958345,"line_start":183,"line_end":183,"column_start":29,"column_end":45},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":8008},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10958412,"byte_end":10958428,"line_start":184,"line_end":184,"column_start":29,"column_end":45},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":8008},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10959109,"byte_end":10959121,"line_start":203,"line_end":203,"column_start":23,"column_end":35},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":9373},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10959258,"byte_end":10959270,"line_start":209,"line_end":209,"column_start":16,"column_end":28},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":9373},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10960078,"byte_end":10960083,"line_start":235,"line_end":235,"column_start":17,"column_end":22},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":7997},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965836,"byte_end":10965841,"line_start":438,"line_end":438,"column_start":21,"column_end":26},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":7997},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10965925,"byte_end":10965930,"line_start":444,"line_end":444,"column_start":21,"column_end":26},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":7997},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10966054,"byte_end":10966059,"line_start":453,"line_end":453,"column_start":29,"column_end":34},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":7997},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10966449,"byte_end":10966459,"line_start":469,"line_end":469,"column_start":21,"column_end":31},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":8001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10969394,"byte_end":10969404,"line_start":566,"line_end":566,"column_start":26,"column_end":36},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":8001},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10969505,"byte_end":10969515,"line_start":572,"line_end":572,"column_start":27,"column_end":37},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":8001},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10969662,"byte_end":10969672,"line_start":579,"line_end":579,"column_start":30,"column_end":40},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":8001},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10969829,"byte_end":10969839,"line_start":585,"line_end":585,"column_start":45,"column_end":55},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":8001},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10970005,"byte_end":10970015,"line_start":591,"line_end":591,"column_start":49,"column_end":59},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":8001},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10970193,"byte_end":10970208,"line_start":599,"line_end":599,"column_start":26,"column_end":41},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":8005},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10970305,"byte_end":10970320,"line_start":605,"line_end":605,"column_start":27,"column_end":42},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":8005},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10970463,"byte_end":10970478,"line_start":612,"line_end":612,"column_start":30,"column_end":45},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":8005},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10970631,"byte_end":10970646,"line_start":618,"line_end":618,"column_start":45,"column_end":60},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":8005},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10970808,"byte_end":10970823,"line_start":624,"line_end":624,"column_start":49,"column_end":64},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":8005},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10970993,"byte_end":10971009,"line_start":632,"line_end":632,"column_start":21,"column_end":37},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":8008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10972847,"byte_end":10972863,"line_start":684,"line_end":684,"column_start":30,"column_end":46},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":8008},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10972963,"byte_end":10972979,"line_start":690,"line_end":690,"column_start":31,"column_end":47},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":8008},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10973122,"byte_end":10973138,"line_start":697,"line_end":697,"column_start":34,"column_end":50},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":8008},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10973291,"byte_end":10973307,"line_start":703,"line_end":703,"column_start":49,"column_end":65},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":8008},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/mutex.rs","byte_start":10973477,"byte_end":10973493,"line_start":709,"line_end":709,"column_start":53,"column_end":69},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":8008},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10978370,"byte_end":10978378,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":9400},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10978411,"byte_end":10978419,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":9400},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10979368,"byte_end":10979374,"line_start":199,"line_end":199,"column_start":6,"column_end":12},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":9378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10987901,"byte_end":10987907,"line_start":459,"line_end":459,"column_start":18,"column_end":24},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":9378},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10989817,"byte_end":10989825,"line_start":514,"line_end":514,"column_start":6,"column_end":14},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":9400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10990338,"byte_end":10990346,"line_start":530,"line_end":530,"column_start":17,"column_end":25},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":9400},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10996042,"byte_end":10996050,"line_start":672,"line_end":672,"column_start":15,"column_end":23},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":9400},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/notify.rs","byte_start":10997913,"byte_end":10997919,"line_start":718,"line_end":718,"column_start":35,"column_end":41},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":9393},"to":{"krate":0,"index":915}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11002072,"byte_end":11002081,"line_start":149,"line_end":149,"column_start":27,"column_end":36},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":9430},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11002243,"byte_end":11002252,"line_start":155,"line_end":155,"column_start":32,"column_end":41},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":9430},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11002321,"byte_end":11002333,"line_start":159,"line_end":159,"column_start":27,"column_end":39},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":9442},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11002632,"byte_end":11002644,"line_start":168,"line_end":168,"column_start":32,"column_end":44},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":9442},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11003138,"byte_end":11003142,"line_start":190,"line_end":190,"column_start":6,"column_end":10},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":8298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11005178,"byte_end":11005184,"line_start":269,"line_end":269,"column_start":9,"column_end":15},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":9418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11012811,"byte_end":11012817,"line_start":522,"line_end":522,"column_start":18,"column_end":24},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":9418},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11012956,"byte_end":11012964,"line_start":530,"line_end":530,"column_start":9,"column_end":17},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":9424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11017471,"byte_end":11017479,"line_start":683,"line_end":683,"column_start":18,"column_end":26},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":9424},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11017626,"byte_end":11017634,"line_start":691,"line_end":691,"column_start":20,"column_end":28},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":9424},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11018097,"byte_end":11018102,"line_start":707,"line_end":707,"column_start":9,"column_end":14},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":8292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11021208,"byte_end":11021213,"line_start":805,"line_end":805,"column_start":31,"column_end":36},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":8292},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11021250,"byte_end":11021255,"line_start":806,"line_end":806,"column_start":31,"column_end":36},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":8292},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11021356,"byte_end":11021361,"line_start":812,"line_end":812,"column_start":18,"column_end":23},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":8292},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11021738,"byte_end":11021743,"line_start":830,"line_end":830,"column_start":36,"column_end":41},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":8292},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11022138,"byte_end":11022143,"line_start":845,"line_end":845,"column_start":6,"column_end":11},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":9455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/oneshot.rs","byte_start":11023856,"byte_end":11023861,"line_start":911,"line_end":911,"column_start":21,"column_end":26},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":9455},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11027920,"byte_end":11027929,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":8435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11039009,"byte_end":11039018,"line_start":398,"line_end":398,"column_start":21,"column_end":30},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":8435},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11039217,"byte_end":11039223,"line_start":406,"line_end":406,"column_start":6,"column_end":12},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":8447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11040089,"byte_end":11040096,"line_start":435,"line_end":435,"column_start":17,"column_end":24},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":8441},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11040774,"byte_end":11040781,"line_start":459,"line_end":459,"column_start":10,"column_end":17},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":8441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11041580,"byte_end":11041587,"line_start":489,"line_end":489,"column_start":15,"column_end":22},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":8441},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11042837,"byte_end":11042844,"line_start":519,"line_end":519,"column_start":22,"column_end":29},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":8441},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11042891,"byte_end":11042903,"line_start":523,"line_end":523,"column_start":6,"column_end":18},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":9471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11042996,"byte_end":11043008,"line_start":529,"line_end":529,"column_start":23,"column_end":35},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":9471},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11043152,"byte_end":11043164,"line_start":535,"line_end":535,"column_start":28,"column_end":40},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":9471},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11043211,"byte_end":11043226,"line_start":539,"line_end":539,"column_start":6,"column_end":21},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":9461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11043744,"byte_end":11043759,"line_start":554,"line_end":554,"column_start":23,"column_end":38},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":9461},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11044045,"byte_end":11044060,"line_start":563,"line_end":563,"column_start":28,"column_end":43},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":9461},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/batch_semaphore.rs","byte_start":11044153,"byte_end":11044159,"line_start":568,"line_end":568,"column_start":35,"column_end":41},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":8447},"to":{"krate":0,"index":915}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11048737,"byte_end":11048746,"line_start":121,"line_end":121,"column_start":6,"column_end":15},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":9476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061696,"byte_end":11061711,"line_start":512,"line_end":512,"column_start":10,"column_end":25},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":9480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11061956,"byte_end":11061976,"line_start":521,"line_end":521,"column_start":6,"column_end":26},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":9487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11062230,"byte_end":11062245,"line_start":530,"line_end":530,"column_start":19,"column_end":34},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":9480},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/semaphore.rs","byte_start":11062353,"byte_end":11062373,"line_start":536,"line_end":536,"column_start":15,"column_end":35},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":9487},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11086963,"byte_end":11086983,"line_start":24,"line_end":24,"column_start":28,"column_end":48},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":8616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11090055,"byte_end":11090075,"line_start":118,"line_end":118,"column_start":43,"column_end":63},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":8616},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11090216,"byte_end":11090236,"line_start":126,"line_end":126,"column_start":43,"column_end":63},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":8616},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11090422,"byte_end":11090442,"line_start":135,"line_end":135,"column_start":45,"column_end":65},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":8616},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11090624,"byte_end":11090644,"line_start":144,"line_end":144,"column_start":37,"column_end":57},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":8616},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11091665,"byte_end":11091686,"line_start":26,"line_end":26,"column_start":17,"column_end":38},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":8677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11097357,"byte_end":11097378,"line_start":197,"line_end":197,"column_start":32,"column_end":53},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":8677},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11097508,"byte_end":11097529,"line_start":205,"line_end":205,"column_start":35,"column_end":56},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":8677},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11097650,"byte_end":11097671,"line_start":211,"line_end":211,"column_start":32,"column_end":53},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":8677},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11097843,"byte_end":11097864,"line_start":220,"line_end":220,"column_start":34,"column_end":55},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":8677},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11098032,"byte_end":11098053,"line_start":229,"line_end":229,"column_start":26,"column_end":47},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":8677},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11099156,"byte_end":11099183,"line_start":25,"line_end":25,"column_start":28,"column_end":55},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":8733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11102730,"byte_end":11102757,"line_start":134,"line_end":134,"column_start":43,"column_end":70},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":8733},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11102901,"byte_end":11102928,"line_start":142,"line_end":142,"column_start":46,"column_end":73},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":8733},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11103063,"byte_end":11103090,"line_start":148,"line_end":148,"column_start":43,"column_end":70},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":8733},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11103276,"byte_end":11103303,"line_start":157,"line_end":157,"column_start":45,"column_end":72},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":8733},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11103485,"byte_end":11103512,"line_start":166,"line_end":166,"column_start":37,"column_end":64},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":8733},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11104214,"byte_end":11104229,"line_start":21,"line_end":21,"column_start":21,"column_end":36},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":8786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11107643,"byte_end":11107658,"line_start":126,"line_end":126,"column_start":32,"column_end":47},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":8786},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11107793,"byte_end":11107808,"line_start":134,"line_end":134,"column_start":36,"column_end":51},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":8786},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11107988,"byte_end":11108003,"line_start":143,"line_end":143,"column_start":38,"column_end":53},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":8786},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/read_guard.rs","byte_start":11108179,"byte_end":11108194,"line_start":152,"line_end":152,"column_start":30,"column_end":45},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":8786},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11108979,"byte_end":11108995,"line_start":24,"line_end":24,"column_start":21,"column_end":37},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":8839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11114993,"byte_end":11115009,"line_start":204,"line_end":204,"column_start":32,"column_end":48},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":8839},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11115143,"byte_end":11115159,"line_start":212,"line_end":212,"column_start":35,"column_end":51},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":8839},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11115288,"byte_end":11115304,"line_start":218,"line_end":218,"column_start":36,"column_end":52},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":8839},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11115484,"byte_end":11115500,"line_start":227,"line_end":227,"column_start":38,"column_end":54},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":8839},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard.rs","byte_start":11115676,"byte_end":11115692,"line_start":236,"line_end":236,"column_start":30,"column_end":46},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":8839},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11116551,"byte_end":11116573,"line_start":23,"line_end":23,"column_start":21,"column_end":43},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":8893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11120413,"byte_end":11120435,"line_start":140,"line_end":140,"column_start":32,"column_end":54},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":8893},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11120569,"byte_end":11120591,"line_start":148,"line_end":148,"column_start":35,"column_end":57},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":8893},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11120720,"byte_end":11120742,"line_start":154,"line_end":154,"column_start":36,"column_end":58},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":8893},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11120922,"byte_end":11120944,"line_start":163,"line_end":163,"column_start":38,"column_end":60},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":8893},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11121120,"byte_end":11121142,"line_start":172,"line_end":172,"column_start":30,"column_end":52},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":8893},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11067820,"byte_end":11067826,"line_start":146,"line_end":146,"column_start":25,"column_end":31},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":9492},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11067880,"byte_end":11067886,"line_start":147,"line_end":147,"column_start":25,"column_end":31},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":9492},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11068120,"byte_end":11068135,"line_start":151,"line_end":151,"column_start":25,"column_end":40},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":8786},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11068193,"byte_end":11068208,"line_start":152,"line_end":152,"column_start":25,"column_end":40},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":8786},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11068415,"byte_end":11068435,"line_start":155,"line_end":155,"column_start":28,"column_end":48},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":8616},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11068530,"byte_end":11068550,"line_start":161,"line_end":161,"column_start":28,"column_end":48},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":8616},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11068649,"byte_end":11068665,"line_start":167,"line_end":167,"column_start":25,"column_end":41},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":8839},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11068730,"byte_end":11068751,"line_start":168,"line_end":168,"column_start":25,"column_end":46},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":8677},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11068812,"byte_end":11068834,"line_start":169,"line_end":169,"column_start":25,"column_end":47},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":8893},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11068902,"byte_end":11068929,"line_start":170,"line_end":170,"column_start":28,"column_end":55},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":8733},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069276,"byte_end":11069292,"line_start":180,"line_end":180,"column_start":25,"column_end":41},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":8839},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069357,"byte_end":11069378,"line_start":181,"line_end":181,"column_start":25,"column_end":46},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":8677},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069439,"byte_end":11069461,"line_start":182,"line_end":182,"column_start":25,"column_end":47},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":8893},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069529,"byte_end":11069556,"line_start":183,"line_end":183,"column_start":28,"column_end":55},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":8733},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11069648,"byte_end":11069654,"line_start":190,"line_end":190,"column_start":17,"column_end":23},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":9492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11086029,"byte_end":11086035,"line_start":690,"line_end":690,"column_start":21,"column_end":27},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":9492},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/rwlock.rs","byte_start":11086127,"byte_end":11086133,"line_start":696,"line_end":696,"column_start":29,"column_end":35},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":9492},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/task/atomic_waker.rs","byte_start":11127422,"byte_end":11127433,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":9060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/task/atomic_waker.rs","byte_start":11133455,"byte_end":11133466,"line_start":285,"line_end":285,"column_start":18,"column_end":29},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":9060},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/task/atomic_waker.rs","byte_start":11133552,"byte_end":11133563,"line_start":291,"line_end":291,"column_start":21,"column_end":32},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":9060},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/task/atomic_waker.rs","byte_start":11133696,"byte_end":11133707,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":9060},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/task/atomic_waker.rs","byte_start":11133732,"byte_end":11133743,"line_start":298,"line_end":298,"column_start":22,"column_end":33},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":9060},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/task/atomic_waker.rs","byte_start":11133839,"byte_end":11133844,"line_start":305,"line_end":305,"column_start":19,"column_end":24},"kind":{"Impl":{"id":571}},"from":{"krate":2,"index":12082},"to":{"krate":0,"index":9083}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11135132,"byte_end":11135140,"line_start":41,"line_end":41,"column_start":21,"column_end":29},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":9130},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11135248,"byte_end":11135256,"line_start":47,"line_end":47,"column_start":36,"column_end":44},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":9130},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11135461,"byte_end":11135469,"line_start":55,"line_end":55,"column_start":26,"column_end":34},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":9130},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11135602,"byte_end":11135610,"line_start":61,"line_end":61,"column_start":34,"column_end":42},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":9130},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11135726,"byte_end":11135734,"line_start":67,"line_end":67,"column_start":20,"column_end":28},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":9130},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11135759,"byte_end":11135767,"line_start":69,"line_end":69,"column_start":18,"column_end":26},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":9130},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11136003,"byte_end":11136011,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":9130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11147704,"byte_end":11147712,"line_start":349,"line_end":349,"column_start":38,"column_end":46},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":9130},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11147929,"byte_end":11147937,"line_start":354,"line_end":354,"column_start":31,"column_end":39},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":9130},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148549,"byte_end":11148557,"line_start":373,"line_end":373,"column_start":26,"column_end":34},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":9500},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148864,"byte_end":11148872,"line_start":382,"line_end":382,"column_start":31,"column_end":39},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":9500},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/once_cell.rs","byte_start":11148888,"byte_end":11148896,"line_start":384,"line_end":384,"column_start":9,"column_end":17},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":9500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11153481,"byte_end":11153490,"line_start":132,"line_end":132,"column_start":42,"column_end":51},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":9548},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11153670,"byte_end":11153679,"line_start":138,"line_end":138,"column_start":47,"column_end":56},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":9548},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11153872,"byte_end":11153881,"line_start":146,"line_end":146,"column_start":27,"column_end":36},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":9554},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11154043,"byte_end":11154052,"line_start":152,"line_end":152,"column_start":32,"column_end":41},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":9554},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11155258,"byte_end":11155266,"line_start":202,"line_end":202,"column_start":9,"column_end":17},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":9517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11158261,"byte_end":11158269,"line_start":303,"line_end":303,"column_start":19,"column_end":27},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":9517},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11158453,"byte_end":11158461,"line_start":312,"line_end":312,"column_start":18,"column_end":26},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":9517},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11158831,"byte_end":11158837,"line_start":323,"line_end":323,"column_start":9,"column_end":15},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":9524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11162204,"byte_end":11162210,"line_start":444,"line_end":444,"column_start":18,"column_end":24},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":9524},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/sync/watch.rs","byte_start":11162400,"byte_end":11162403,"line_start":453,"line_end":453,"column_start":24,"column_end":27},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":9530},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/yield_now.rs","byte_start":11175570,"byte_end":11175578,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":9859},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11186500,"byte_end":11186508,"line_start":323,"line_end":323,"column_start":6,"column_end":14},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":9864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11194501,"byte_end":11194509,"line_start":552,"line_end":552,"column_start":21,"column_end":29},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":9864},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11194648,"byte_end":11194656,"line_start":558,"line_end":558,"column_start":17,"column_end":25},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":9864},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11195621,"byte_end":11195629,"line_start":582,"line_end":582,"column_start":18,"column_end":26},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":9864},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11195710,"byte_end":11195718,"line_start":588,"line_end":588,"column_start":15,"column_end":23},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":9864},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11196585,"byte_end":11196593,"line_start":618,"line_end":618,"column_start":28,"column_end":36},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":11059},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11197478,"byte_end":11197484,"line_start":649,"line_end":649,"column_start":6,"column_end":12},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":9668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/local.rs","byte_start":11198035,"byte_end":11198038,"line_start":668,"line_end":668,"column_start":25,"column_end":28},"kind":{"Impl":{"id":602}},"from":{"krate":5,"index":5619},"to":{"krate":0,"index":6301}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11201545,"byte_end":11201553,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":9761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11204053,"byte_end":11204061,"line_start":194,"line_end":194,"column_start":25,"column_end":33},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":9761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11204269,"byte_end":11204277,"line_start":202,"line_end":202,"column_start":33,"column_end":41},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":9761},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11204579,"byte_end":11204594,"line_start":217,"line_end":217,"column_start":21,"column_end":36},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":11003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11204871,"byte_end":11204876,"line_start":225,"line_end":225,"column_start":26,"column_end":31},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":9794},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11205417,"byte_end":11205432,"line_start":247,"line_end":247,"column_start":40,"column_end":55},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":11003},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11205709,"byte_end":11205710,"line_start":257,"line_end":257,"column_start":37,"column_end":38},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":9813},"to":{"krate":0,"index":9811}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11205895,"byte_end":11205906,"line_start":265,"line_end":265,"column_start":21,"column_end":32},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":9876},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11206050,"byte_end":11206061,"line_start":271,"line_end":271,"column_start":23,"column_end":34},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":9876},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/task_local.rs","byte_start":11206208,"byte_end":11206219,"line_start":277,"line_end":277,"column_start":16,"column_end":27},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":9876},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/task/unconstrained.rs","byte_start":11206621,"byte_end":11206634,"line_start":16,"line_end":16,"column_start":20,"column_end":33},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":10970},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/clock.rs","byte_start":11211049,"byte_end":11211054,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":10487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11237367,"byte_end":11237376,"line_start":99,"line_end":99,"column_start":18,"column_end":27},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":9948},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11237460,"byte_end":11237469,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":9948},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11237615,"byte_end":11237624,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":9948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11244626,"byte_end":11244636,"line_start":302,"line_end":302,"column_start":22,"column_end":32},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":10492},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11244661,"byte_end":11244671,"line_start":303,"line_end":303,"column_start":22,"column_end":32},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":10492},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11246112,"byte_end":11246123,"line_start":339,"line_end":339,"column_start":6,"column_end":17},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":10503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11249646,"byte_end":11249663,"line_start":437,"line_end":437,"column_start":26,"column_end":43},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":9982},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11249964,"byte_end":11249981,"line_start":446,"line_end":446,"column_start":6,"column_end":23},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":9982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11250220,"byte_end":11250231,"line_start":456,"line_end":456,"column_start":22,"column_end":33},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":10503},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11250256,"byte_end":11250267,"line_start":457,"line_end":457,"column_start":22,"column_end":33},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":10503},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11250306,"byte_end":11250317,"line_start":459,"line_end":459,"column_start":35,"column_end":46},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":10503},"to":{"krate":0,"index":915}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11250835,"byte_end":11250845,"line_start":481,"line_end":481,"column_start":6,"column_end":16},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":10492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11253846,"byte_end":11253857,"line_start":560,"line_end":560,"column_start":6,"column_end":17},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":10499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/entry.rs","byte_start":11256240,"byte_end":11256250,"line_start":620,"line_end":620,"column_start":15,"column_end":25},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":10492},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/handle.rs","byte_start":11256739,"byte_end":11256745,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":10519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/handle.rs","byte_start":11257413,"byte_end":11257419,"line_start":36,"line_end":36,"column_start":10,"column_end":16},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":10519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/handle.rs","byte_start":11259463,"byte_end":11259469,"line_start":84,"line_end":84,"column_start":21,"column_end":27},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":10519},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/wheel/level.rs","byte_start":11272059,"byte_end":11272064,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":10076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/wheel/level.rs","byte_start":11278132,"byte_end":11278137,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":10076},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/wheel/mod.rs","byte_start":11261090,"byte_end":11261095,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":10532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11284271,"byte_end":11284276,"line_start":168,"line_end":168,"column_start":6,"column_end":11},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":10942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/sleep.rs","byte_start":11286379,"byte_end":11286384,"line_start":238,"line_end":238,"column_start":17,"column_end":22},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":10942},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/mod.rs","byte_start":11220501,"byte_end":11220510,"line_start":112,"line_end":112,"column_start":6,"column_end":15},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":10547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/mod.rs","byte_start":11222146,"byte_end":11222152,"line_start":173,"line_end":173,"column_start":9,"column_end":15},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":10539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/mod.rs","byte_start":11225771,"byte_end":11225777,"line_start":283,"line_end":283,"column_start":6,"column_end":12},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":10519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/mod.rs","byte_start":11230497,"byte_end":11230503,"line_start":416,"line_end":416,"column_start":18,"column_end":24},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":10539},"to":{"krate":0,"index":841}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/mod.rs","byte_start":11231225,"byte_end":11231231,"line_start":450,"line_end":450,"column_start":18,"column_end":24},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":10539},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/mod.rs","byte_start":11231491,"byte_end":11231502,"line_start":466,"line_end":466,"column_start":25,"column_end":36},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":10269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/mod.rs","byte_start":11231766,"byte_end":11231777,"line_start":477,"line_end":477,"column_start":36,"column_end":47},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":10269},"to":{"krate":0,"index":848}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/mod.rs","byte_start":11231968,"byte_end":11231973,"line_start":488,"line_end":488,"column_start":6,"column_end":11},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":10233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/driver/mod.rs","byte_start":11232686,"byte_end":11232691,"line_start":513,"line_end":513,"column_start":21,"column_end":26},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":10233},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11288535,"byte_end":11288540,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":10555},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11288781,"byte_end":11288786,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":10555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11289686,"byte_end":11289691,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":10555},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11289718,"byte_end":11289723,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":10555},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11290185,"byte_end":11290192,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":10584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11290280,"byte_end":11290287,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":10584},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11290431,"byte_end":11290438,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":10584},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/error.rs","byte_start":11290475,"byte_end":11290480,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"kind":{"Impl":{"id":653}},"from":{"krate":1,"index":3733},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11292022,"byte_end":11292029,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":10598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11296126,"byte_end":11296133,"line_start":161,"line_end":161,"column_start":35,"column_end":42},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":10598},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11296262,"byte_end":11296269,"line_start":167,"line_end":167,"column_start":35,"column_end":42},"kind":{"Impl":{"id":656}},"from":{"krate":1,"index":10469},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11296384,"byte_end":11296391,"line_start":173,"line_end":173,"column_start":29,"column_end":36},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":10598},"to":{"krate":2,"index":2889}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11296556,"byte_end":11296563,"line_start":181,"line_end":181,"column_start":35,"column_end":42},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":10598},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11296668,"byte_end":11296675,"line_start":187,"line_end":187,"column_start":19,"column_end":26},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":10598},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11296816,"byte_end":11296823,"line_start":195,"line_end":195,"column_start":29,"column_end":36},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":10598},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11296984,"byte_end":11296991,"line_start":203,"line_end":203,"column_start":35,"column_end":42},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":10598},"to":{"krate":2,"index":2924}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/instant.rs","byte_start":11297098,"byte_end":11297105,"line_start":209,"line_end":209,"column_start":21,"column_end":28},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":10598},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/interval.rs","byte_start":11301283,"byte_end":11301291,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":10617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11306297,"byte_end":11306304,"line_start":118,"line_end":118,"column_start":9,"column_end":16},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":10904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/time/timeout.rs","byte_start":11306842,"byte_end":11306849,"line_start":139,"line_end":139,"column_start":20,"column_end":27},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":10904},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/bit.rs","byte_start":11307494,"byte_end":11307498,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":10795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/bit.rs","byte_start":11308926,"byte_end":11308930,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":10795},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11312873,"byte_end":11312880,"line_start":87,"line_end":87,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2800},"to":{"krate":0,"index":10685}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11314080,"byte_end":11314084,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":10693},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11314121,"byte_end":11314125,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":10693},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11314162,"byte_end":11314172,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":10700},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11314209,"byte_end":11314219,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":10700},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11314256,"byte_end":11314259,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":10687},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11314296,"byte_end":11314299,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":10687},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11314915,"byte_end":11314919,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":10675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11320514,"byte_end":11320518,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":10675},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11320657,"byte_end":11320666,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":10681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11321233,"byte_end":11321242,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":10681},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11321400,"byte_end":11321403,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":10687},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11321665,"byte_end":11321668,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":10687},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11321935,"byte_end":11321938,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":10687},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11322059,"byte_end":11322063,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":10693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11324570,"byte_end":11324574,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":10693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11324918,"byte_end":11324922,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":10693},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11325270,"byte_end":11325274,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":10693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11325636,"byte_end":11325646,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":10700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11326583,"byte_end":11326593,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":10700},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11326736,"byte_end":11326741,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":10704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11327624,"byte_end":11327628,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":10721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11328188,"byte_end":11328193,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":10725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/slab.rs","byte_start":11328519,"byte_end":11328526,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":10805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":139687,"byte_end":139697,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":139767,"byte_end":139777,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":142399,"byte_end":142407,"line_start":101,"line_end":101,"column_start":31,"column_end":39},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":921},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":142444,"byte_end":142452,"line_start":102,"line_end":102,"column_start":31,"column_end":39},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":921},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":142503,"byte_end":142513,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":142748,"byte_end":142758,"line_start":117,"line_end":117,"column_start":15,"column_end":25},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":145764,"byte_end":145774,"line_start":211,"line_end":211,"column_start":30,"column_end":40},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":146131,"byte_end":146141,"line_start":226,"line_end":226,"column_start":15,"column_end":25},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":146328,"byte_end":146338,"line_start":233,"line_end":233,"column_start":27,"column_end":37},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":147516,"byte_end":147526,"line_start":279,"line_end":279,"column_start":19,"column_end":29},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":147895,"byte_end":147906,"line_start":293,"line_end":293,"column_start":33,"column_end":44},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":10820},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":148586,"byte_end":148594,"line_start":318,"line_end":318,"column_start":9,"column_end":17},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/linked_list.rs","byte_start":150177,"byte_end":150185,"line_start":367,"line_end":367,"column_start":24,"column_end":32},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":921},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/wake.rs","byte_start":11335807,"byte_end":11335811,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2822},"to":{"krate":0,"index":10860}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/wake.rs","byte_start":11335814,"byte_end":11335818,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2834},"to":{"krate":0,"index":10860}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.7.0/src/util/wake.rs","byte_start":11336129,"byte_end":11336137,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":10890},"to":{"krate":2,"index":3026}}]}