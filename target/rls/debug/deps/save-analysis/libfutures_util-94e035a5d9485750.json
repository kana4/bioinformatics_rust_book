{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15","program":"/Users/l/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=94e035a5d9485750","-C","extra-filename=-94e035a5d9485750","--out-dir","/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps","-L","dependency=/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps","--extern","futures_core=/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps/libfutures_core-d21f33cccef5b53a.rmeta","--extern","futures_task=/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps/libfutures_task-aba75040f479e6b5.rmeta","--extern","pin_project_lite=/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps/libpin_project_lite-f5a82d4a38810324.rmeta","--extern","pin_utils=/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps/libpin_utils-e02d2064fe1f4fad.rmeta","--cap-lints","allow","--cfg","fn_like_proc_macro","--error-format=json","--sysroot","/Users/l/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps/libfutures_util-94e035a5d9485750.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[955103844944665509,7893255078813879726]},"crate_root":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src","external_crates":[{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11698766721189094488,12060600386163665861]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[7682173449702177568,11032960836976215208]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4743338922599007115,7423637119316760057]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":4,"id":{"name":"futures_core","disambiguator":[4668153313673250569,10704340197495744606]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[11266178634318078844,10430434914575217037]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[2427264904945132901,10184032034968735412]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[9774951351864599068,14817832832842499961]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[10809433593918525561,458952361993985826]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[15028772050842969220,14160812736163645060]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":10,"id":{"name":"hashbrown","disambiguator":[6995225455969351707,4449664983666090491]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8140348155906305511,16205222570971502248]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[233178625001733801,10631967199943834554]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1525994598401419908,3288373240607898362]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[6171023582747105604,8380219937402072808]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[16379221974889702373,16836676840445794723]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[17037182358159064978,13693302728723089691]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":17,"id":{"name":"pin_utils","disambiguator":[8358838914039702727,8672429247238547397]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","num":18,"id":{"name":"futures_task","disambiguator":[4160729551248730685,10624135722420974948]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","num":19,"id":{"name":"pin_project_lite","disambiguator":[3355192339277488526,8000598072596209988]}}],"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":0,"byte_end":12175,"line_start":1,"line_end":345,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":169},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1182,"byte_end":1187,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":7},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1208,"byte_end":1215,"line_start":25,"line_end":25,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":11835},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12644,"byte_end":12650,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":4,"index":27},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12769,"byte_end":12780,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":4,"index":44},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12782,"byte_end":12791,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":18,"index":115},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12817,"byte_end":12826,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":18,"index":81},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12828,"byte_end":12842,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":18,"index":136},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12844,"byte_end":12859,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4505},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12974,"byte_end":12981,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4419},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12983,"byte_end":12987,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":222},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12989,"byte_end":12998,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4848},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13000,"byte_end":13007,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4663},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13009,"byte_end":13019,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4603},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13021,"byte_end":13024,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4713},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13026,"byte_end":13033,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4908},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13035,"byte_end":13045,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4775},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13047,"byte_end":13051,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4956},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13053,"byte_end":13062,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4553},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13158,"byte_end":13171,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5307},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13501,"byte_end":13508,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5454},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13510,"byte_end":13517,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5637},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13519,"byte_end":13529,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5576},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13531,"byte_end":13540,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5007},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13542,"byte_end":13552,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5759},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13554,"byte_end":13560,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5698},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13562,"byte_end":13567,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5821},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13569,"byte_end":13580,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5515},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13582,"byte_end":13588,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5381},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13594,"byte_end":13600,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5135},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13602,"byte_end":13612,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5256},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13614,"byte_end":13630,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":485},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13632,"byte_end":13644,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5894},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13646,"byte_end":13658,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":582},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13830,"byte_end":13834,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5952},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13836,"byte_end":13840,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":628},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13881,"byte_end":13888,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5958},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13890,"byte_end":13897,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":675},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13944,"byte_end":13954,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5964},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13956,"byte_end":13965,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":727},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14020,"byte_end":14034,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5977},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14036,"byte_end":14048,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5995},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14086,"byte_end":14098,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":806},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14138,"byte_end":14145,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":801},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14147,"byte_end":14153,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":862},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14190,"byte_end":14193,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":859},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14195,"byte_end":14197,"line_start":72,"line_end":72,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":857},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14199,"byte_end":14204,"line_start":72,"line_end":72,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6029},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14206,"byte_end":14211,"line_start":72,"line_end":72,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":913},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14246,"byte_end":14250,"line_start":75,"line_end":75,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":916},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14252,"byte_end":14257,"line_start":75,"line_end":75,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":920},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14259,"byte_end":14264,"line_start":75,"line_end":75,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":925},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14266,"byte_end":14271,"line_start":75,"line_end":75,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6131},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14273,"byte_end":14277,"line_start":75,"line_end":75,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6176},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14279,"byte_end":14284,"line_start":75,"line_end":75,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6233},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14286,"byte_end":14291,"line_start":75,"line_end":75,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6302},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14293,"byte_end":14298,"line_start":75,"line_end":75,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":987},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14449,"byte_end":14455,"line_start":83,"line_end":83,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6383},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14457,"byte_end":14463,"line_start":83,"line_end":83,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1041},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14631,"byte_end":14639,"line_start":92,"line_end":92,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1044},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14641,"byte_end":14650,"line_start":92,"line_end":92,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1048},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14652,"byte_end":14661,"line_start":92,"line_end":92,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1053},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14663,"byte_end":14672,"line_start":92,"line_end":92,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6461},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14674,"byte_end":14681,"line_start":92,"line_end":92,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6506},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14683,"byte_end":14691,"line_start":92,"line_end":92,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6563},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14693,"byte_end":14701,"line_start":92,"line_end":92,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6632},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14703,"byte_end":14711,"line_start":92,"line_end":92,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1112},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14887,"byte_end":14897,"line_start":101,"line_end":101,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6713},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14899,"byte_end":14908,"line_start":101,"line_end":101,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6721},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":15062,"byte_end":15068,"line_start":109,"line_end":109,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":1,"index":11835},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11285,"byte_end":11291,"line_start":303,"line_end":303,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":222},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11293,"byte_end":11302,"line_start":303,"line_end":303,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":44},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11304,"byte_end":11313,"line_start":303,"line_end":303,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":485},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11315,"byte_end":11327,"line_start":303,"line_end":303,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":110},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116275,"byte_end":116286,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":4,"index":96},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116288,"byte_end":116294,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":4,"index":127},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116296,"byte_end":116305,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":6745},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116421,"byte_end":116426,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":6794},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116428,"byte_end":116435,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":6903},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116437,"byte_end":116443,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":6943},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116445,"byte_end":116450,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":6983},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116452,"byte_end":116461,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7022},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116463,"byte_end":116469,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7087},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116471,"byte_end":116480,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7554},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116482,"byte_end":116489,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7203},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116491,"byte_end":116498,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7256},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116500,"byte_end":116504,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7325},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116506,"byte_end":116513,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7387},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116519,"byte_end":116523,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7435},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116525,"byte_end":116532,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7501},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116534,"byte_end":116537,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7633},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116539,"byte_end":116543,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7734},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116545,"byte_end":116551,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7783},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116553,"byte_end":116561,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7693},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116563,"byte_end":116567,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7654},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116569,"byte_end":116577,"line_start":22,"line_end":22,"column_start":55,"column_end":63},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":8233},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116579,"byte_end":116583,"line_start":22,"line_end":22,"column_start":65,"column_end":69},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7641},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116585,"byte_end":116599,"line_start":22,"line_end":22,"column_start":71,"column_end":85},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7837},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116601,"byte_end":116605,"line_start":22,"line_end":22,"column_start":87,"column_end":91},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7876},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116611,"byte_end":116620,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":2578},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116622,"byte_end":116631,"line_start":23,"line_end":23,"column_start":16,"column_end":25},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7426},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116633,"byte_end":116645,"line_start":23,"line_end":23,"column_start":27,"column_end":39},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7950},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116647,"byte_end":116651,"line_start":23,"line_end":23,"column_start":41,"column_end":45},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":8058},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116653,"byte_end":116662,"line_start":23,"line_end":23,"column_start":47,"column_end":56},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":7989},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116664,"byte_end":116673,"line_start":23,"line_end":23,"column_start":58,"column_end":67},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":8115},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116675,"byte_end":116679,"line_start":23,"line_end":23,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":6845},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116681,"byte_end":116686,"line_start":23,"line_end":23,"column_start":75,"column_end":80},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":8183},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116688,"byte_end":116691,"line_start":23,"line_end":23,"column_start":82,"column_end":85},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":3383},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117358,"byte_end":117368,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":8302},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117370,"byte_end":117377,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":8366},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117379,"byte_end":117386,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":8504},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117388,"byte_end":117398,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":8435},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117400,"byte_end":117409,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":8575},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117411,"byte_end":117421,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":8682},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117423,"byte_end":117429,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":8613},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117431,"byte_end":117436,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":8748},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117438,"byte_end":117444,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":9051},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117450,"byte_end":117460,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":9098},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117462,"byte_end":117471,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":8874},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117473,"byte_end":117482,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":8939},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117484,"byte_end":117496,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":9005},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117498,"byte_end":117508,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":9133},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117510,"byte_end":117517,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":8817},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117519,"byte_end":117529,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":8809},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117531,"byte_end":117538,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":9259},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117544,"byte_end":117556,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":3525},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117558,"byte_end":117570,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":9328},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117572,"byte_end":117584,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":9202},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117586,"byte_end":117595,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":3654},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117934,"byte_end":117938,"line_start":68,"line_end":68,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":9397},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117940,"byte_end":117944,"line_start":68,"line_end":68,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":3689},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117983,"byte_end":117989,"line_start":71,"line_end":71,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":9406},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":117991,"byte_end":117997,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":3742},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":118046,"byte_end":118057,"line_start":74,"line_end":74,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":9415},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":118059,"byte_end":118069,"line_start":74,"line_end":74,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":3776},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":118106,"byte_end":118111,"line_start":77,"line_end":77,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":9424},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":118113,"byte_end":118118,"line_start":77,"line_end":77,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":3828},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":118153,"byte_end":118157,"line_start":80,"line_end":80,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":9435},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":118159,"byte_end":118163,"line_start":80,"line_end":80,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":3872},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":118204,"byte_end":118211,"line_start":83,"line_end":83,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":9466},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":118213,"byte_end":118220,"line_start":83,"line_end":83,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":3922},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":118261,"byte_end":118268,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":3914},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":118270,"byte_end":118276,"line_start":86,"line_end":86,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":3968},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":118315,"byte_end":118321,"line_start":89,"line_end":89,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":9479},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":118323,"byte_end":118329,"line_start":89,"line_end":89,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":4033},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":118368,"byte_end":118374,"line_start":92,"line_end":92,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":9525},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":118376,"byte_end":118382,"line_start":92,"line_end":92,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":4,"index":96},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11386,"byte_end":11392,"line_start":307,"line_end":307,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2578},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11394,"byte_end":11403,"line_start":307,"line_end":307,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":127},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11405,"byte_end":11414,"line_start":307,"line_end":307,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3525},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11416,"byte_end":11428,"line_start":307,"line_end":307,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":12072},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":328181,"byte_end":328188,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":4079}},{"kind":"Use","ref_id":{"krate":1,"index":40046},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":328190,"byte_end":328194,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":4079}},{"kind":"Use","ref_id":{"krate":1,"index":40082},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":328196,"byte_end":328204,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":4079}},{"kind":"Use","ref_id":{"krate":1,"index":40091},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":328206,"byte_end":328220,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":4079}},{"kind":"Use","ref_id":{"krate":1,"index":12082},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":328222,"byte_end":328227,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":4079}},{"kind":"Use","ref_id":{"krate":18,"index":115},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":328254,"byte_end":328263,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":4079}},{"kind":"Use","ref_id":{"krate":18,"index":81},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":328265,"byte_end":328279,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":4079}},{"kind":"Use","ref_id":{"krate":18,"index":19},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":328281,"byte_end":328291,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":4079}},{"kind":"Use","ref_id":{"krate":18,"index":16},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":328293,"byte_end":328298,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":4079}},{"kind":"Use","ref_id":{"krate":18,"index":22},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":328300,"byte_end":328310,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":4079}},{"kind":"Use","ref_id":{"krate":18,"index":136},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":328312,"byte_end":328327,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":4079}},{"kind":"Use","ref_id":{"krate":18,"index":191},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":328353,"byte_end":328363,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":4079}},{"kind":"Use","ref_id":{"krate":4,"index":194},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":328707,"byte_end":328718,"line_start":32,"line_end":32,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":4079}},{"kind":"Use","ref_id":{"krate":0,"index":4131},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":328756,"byte_end":328769,"line_start":36,"line_end":36,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":4079}},{"kind":"Use","ref_id":{"krate":0,"index":4130},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":328771,"byte_end":328779,"line_start":36,"line_end":36,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":4079}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":0,"byte_end":12175,"line_start":1,"line_end":345,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":15},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1198},{"krate":0,"index":1201},{"krate":0,"index":1204},{"krate":0,"index":1207},{"krate":0,"index":4066},{"krate":0,"index":4067},{"krate":0,"index":4070},{"krate":0,"index":4073},{"krate":0,"index":4076},{"krate":0,"index":4079},{"krate":0,"index":4139},{"krate":0,"index":4141},{"krate":0,"index":4355}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"no_std","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":304,"byte_end":310,"line_start":6,"line_end":6,"column_start":35,"column_end":41}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":313,"byte_end":401,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":569,"byte_end":590,"line_start":10,"line_end":10,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":15},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":695},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1063},{"krate":0,"index":1066},{"krate":0,"index":1069},{"krate":0,"index":1072},{"krate":0,"index":1075},{"krate":0,"index":1078},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":1188},{"krate":0,"index":1191}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12177,"byte_end":12201,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12202,"byte_end":12205,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12206,"byte_end":12231,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12232,"byte_end":12235,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12236,"byte_end":12263,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12264,"byte_end":12343,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12344,"byte_end":12381,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12382,"byte_end":12461,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12462,"byte_end":12537,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12538,"byte_end":12602,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":4374},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":35846,"byte_end":35851,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":4371},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4376},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":35880,"byte_end":35886,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":4371},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4378},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":35915,"byte_end":35920,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":4371},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4371},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":35816,"byte_end":35823,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":4374},{"krate":0,"index":4376},{"krate":0,"index":4378}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4419},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40277,"byte_end":40281,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":4421}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":42100,"byte_end":42110,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40478,"byte_end":40546,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40551,"byte_end":40554,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40559,"byte_end":40627,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40632,"byte_end":40677,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40682,"byte_end":40685,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40690,"byte_end":40704,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40709,"byte_end":40712,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40717,"byte_end":40724,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40729,"byte_end":40770,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40775,"byte_end":40806,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40811,"byte_end":40867,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40872,"byte_end":40896,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40901,"byte_end":40936,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40941,"byte_end":40966,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40971,"byte_end":40974,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40979,"byte_end":41028,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41033,"byte_end":41036,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41041,"byte_end":41083,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41088,"byte_end":41127,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41132,"byte_end":41171,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41176,"byte_end":41193,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41198,"byte_end":41201,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41206,"byte_end":41276,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41281,"byte_end":41320,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41325,"byte_end":41366,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41371,"byte_end":41397,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41402,"byte_end":41405,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41410,"byte_end":41420,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41425,"byte_end":41442,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41447,"byte_end":41481,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41486,"byte_end":41533,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41538,"byte_end":41587,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41592,"byte_end":41654,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41659,"byte_end":41683,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41688,"byte_end":41731,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41736,"byte_end":41793,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41798,"byte_end":41873,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41878,"byte_end":41908,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41913,"byte_end":41930,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41935,"byte_end":41949,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41954,"byte_end":42038,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":42043,"byte_end":42052,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":42057,"byte_end":42062,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":42067,"byte_end":42076,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":42081,"byte_end":42088,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":4457},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":43168,"byte_end":43178,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":4454},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4460},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":43262,"byte_end":43270,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":4454},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4454},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":43146,"byte_end":43149,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":4457},{"krate":0,"index":4460}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7295139,"byte_end":7295148,"line_start":542,"line_end":542,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4505},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":16272,"byte_end":16279,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":4507}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4553},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":16530,"byte_end":16543,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":4555}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4603},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":16883,"byte_end":16886,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":4606}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4663},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":17093,"byte_end":17103,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":4665}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4713},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":17309,"byte_end":17316,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":4716}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4775},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":17509,"byte_end":17513,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":4779}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4848},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":17758,"byte_end":17765,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":4851}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4908},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":18006,"byte_end":18016,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":4910}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4956},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":18229,"byte_end":18238,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":4958}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":222},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19220,"byte_end":19229,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19121,"byte_end":19195,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19196,"byte_end":19209,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20061,"byte_end":20064,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19244,"byte_end":19319,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19324,"byte_end":19347,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19352,"byte_end":19355,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19360,"byte_end":19434,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19439,"byte_end":19510,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19515,"byte_end":19577,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19582,"byte_end":19585,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19590,"byte_end":19661,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19666,"byte_end":19737,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19742,"byte_end":19763,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19768,"byte_end":19771,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19776,"byte_end":19790,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19795,"byte_end":19798,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19803,"byte_end":19810,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19815,"byte_end":19856,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19861,"byte_end":19896,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19901,"byte_end":19904,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19909,"byte_end":19938,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19943,"byte_end":19986,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19991,"byte_end":20027,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20032,"byte_end":20041,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20046,"byte_end":20053,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20461,"byte_end":20469,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20234,"byte_end":20309,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20314,"byte_end":20337,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20342,"byte_end":20345,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20350,"byte_end":20428,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20433,"byte_end":20453,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21481,"byte_end":21485,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20628,"byte_end":20704,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20709,"byte_end":20752,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20757,"byte_end":20760,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20765,"byte_end":20836,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20841,"byte_end":20915,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20920,"byte_end":20936,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20941,"byte_end":20944,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20949,"byte_end":21024,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21029,"byte_end":21040,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21045,"byte_end":21048,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21053,"byte_end":21124,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21129,"byte_end":21155,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21160,"byte_end":21163,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21168,"byte_end":21182,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21187,"byte_end":21190,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21195,"byte_end":21202,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21207,"byte_end":21248,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21253,"byte_end":21288,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21293,"byte_end":21296,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21301,"byte_end":21335,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21340,"byte_end":21405,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21410,"byte_end":21447,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21452,"byte_end":21461,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21466,"byte_end":21473,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22355,"byte_end":22366,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21697,"byte_end":21772,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21777,"byte_end":21798,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21803,"byte_end":21806,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21811,"byte_end":21891,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21896,"byte_end":21968,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21973,"byte_end":21976,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21981,"byte_end":21995,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22000,"byte_end":22003,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22008,"byte_end":22015,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22020,"byte_end":22061,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22066,"byte_end":22101,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22106,"byte_end":22109,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22114,"byte_end":22128,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22133,"byte_end":22161,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22166,"byte_end":22202,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22207,"byte_end":22219,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22224,"byte_end":22262,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22267,"byte_end":22273,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22278,"byte_end":22281,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22286,"byte_end":22321,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22326,"byte_end":22335,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22340,"byte_end":22347,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23205,"byte_end":23217,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22546,"byte_end":22622,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22627,"byte_end":22648,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22653,"byte_end":22656,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22661,"byte_end":22740,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22745,"byte_end":22817,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22822,"byte_end":22825,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22830,"byte_end":22844,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22849,"byte_end":22852,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22857,"byte_end":22864,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22869,"byte_end":22910,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22915,"byte_end":22950,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22955,"byte_end":22958,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22963,"byte_end":22977,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22982,"byte_end":23010,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23015,"byte_end":23051,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23056,"byte_end":23068,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23073,"byte_end":23111,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23116,"byte_end":23122,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23127,"byte_end":23130,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23135,"byte_end":23171,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23176,"byte_end":23185,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23190,"byte_end":23197,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23996,"byte_end":24007,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23398,"byte_end":23451,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23456,"byte_end":23459,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23464,"byte_end":23538,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23543,"byte_end":23606,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23611,"byte_end":23614,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23619,"byte_end":23633,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23638,"byte_end":23641,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23646,"byte_end":23653,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23658,"byte_end":23699,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23704,"byte_end":23739,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23744,"byte_end":23779,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23784,"byte_end":23787,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23792,"byte_end":23822,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23827,"byte_end":23865,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23870,"byte_end":23921,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23926,"byte_end":23962,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23967,"byte_end":23976,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23981,"byte_end":23988,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24872,"byte_end":24879,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24146,"byte_end":24210,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24215,"byte_end":24251,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24256,"byte_end":24259,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24264,"byte_end":24333,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24338,"byte_end":24375,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24380,"byte_end":24383,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24388,"byte_end":24448,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24453,"byte_end":24456,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24461,"byte_end":24532,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24537,"byte_end":24563,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24568,"byte_end":24571,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24576,"byte_end":24590,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24595,"byte_end":24598,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24603,"byte_end":24610,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24615,"byte_end":24656,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24661,"byte_end":24696,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24701,"byte_end":24704,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24709,"byte_end":24755,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24760,"byte_end":24801,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24806,"byte_end":24838,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24843,"byte_end":24852,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24857,"byte_end":24864,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25984,"byte_end":25998,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25093,"byte_end":25168,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25173,"byte_end":25196,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25201,"byte_end":25204,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25209,"byte_end":25281,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25286,"byte_end":25359,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25364,"byte_end":25378,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25383,"byte_end":25386,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25391,"byte_end":25461,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25466,"byte_end":25484,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25489,"byte_end":25492,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25497,"byte_end":25511,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25516,"byte_end":25519,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25524,"byte_end":25531,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25536,"byte_end":25577,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25582,"byte_end":25617,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25622,"byte_end":25665,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25670,"byte_end":25673,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25678,"byte_end":25718,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25723,"byte_end":25789,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25794,"byte_end":25797,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25802,"byte_end":25855,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25860,"byte_end":25906,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25911,"byte_end":25950,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25955,"byte_end":25964,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25969,"byte_end":25976,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27086,"byte_end":27090,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26191,"byte_end":26264,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26269,"byte_end":26335,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26340,"byte_end":26358,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26363,"byte_end":26366,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26371,"byte_end":26438,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26443,"byte_end":26508,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26513,"byte_end":26585,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26590,"byte_end":26664,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26669,"byte_end":26695,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26700,"byte_end":26703,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26708,"byte_end":26779,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26784,"byte_end":26859,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26864,"byte_end":26918,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26923,"byte_end":26926,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26931,"byte_end":27005,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27010,"byte_end":27078,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27930,"byte_end":27937,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27236,"byte_end":27302,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27307,"byte_end":27310,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27315,"byte_end":27390,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27395,"byte_end":27468,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27473,"byte_end":27542,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27547,"byte_end":27597,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27602,"byte_end":27605,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27610,"byte_end":27624,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27629,"byte_end":27632,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27637,"byte_end":27644,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27649,"byte_end":27690,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27695,"byte_end":27730,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27735,"byte_end":27738,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27743,"byte_end":27772,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27777,"byte_end":27855,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27860,"byte_end":27896,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27901,"byte_end":27910,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27915,"byte_end":27922,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33173,"byte_end":33183,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33040,"byte_end":33089,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33094,"byte_end":33165,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33468,"byte_end":33479,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33332,"byte_end":33381,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33386,"byte_end":33460,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33710,"byte_end":33720,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33633,"byte_end":33702,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":35116,"byte_end":35128,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33856,"byte_end":33928,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33933,"byte_end":33996,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34001,"byte_end":34004,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34009,"byte_end":34075,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34080,"byte_end":34083,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34088,"byte_end":34161,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34166,"byte_end":34235,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34240,"byte_end":34310,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34315,"byte_end":34318,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34323,"byte_end":34337,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34342,"byte_end":34345,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34350,"byte_end":34357,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34362,"byte_end":34392,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34397,"byte_end":34447,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34452,"byte_end":34491,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34496,"byte_end":34547,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34552,"byte_end":34555,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34560,"byte_end":34620,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34625,"byte_end":34677,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34682,"byte_end":34689,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34694,"byte_end":34697,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34702,"byte_end":34771,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34776,"byte_end":34849,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34854,"byte_end":34886,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34891,"byte_end":34894,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34899,"byte_end":34906,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34911,"byte_end":34958,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34963,"byte_end":35002,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":35007,"byte_end":35010,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":35015,"byte_end":35096,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":35101,"byte_end":35108,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5007},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":66468,"byte_end":66478,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":5009}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":5045},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":67452,"byte_end":67457,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":5042},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5047},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":67486,"byte_end":67492,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":5042},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5049},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":67521,"byte_end":67526,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":5042},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5042},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":67419,"byte_end":67429,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":5045},{"krate":0,"index":5047},{"krate":0,"index":5049}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5092},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":72395,"byte_end":72400,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":5089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5094},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":72429,"byte_end":72435,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":5089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5096},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":72464,"byte_end":72469,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":5089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5089},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":72359,"byte_end":72372,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":5092},{"krate":0,"index":5094},{"krate":0,"index":5096}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5135},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":45303,"byte_end":45313,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":5138}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5196},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":45561,"byte_end":45574,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":5199}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5256},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":45842,"byte_end":45858,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":5258}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5307},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":46446,"byte_end":46453,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":5311}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5381},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":46693,"byte_end":46699,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":5385}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5454},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":46949,"byte_end":46956,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":5457}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5515},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":47164,"byte_end":47170,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":5518}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5576},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":47389,"byte_end":47398,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":5579}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5637},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":47670,"byte_end":47680,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":5640}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5698},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":48053,"byte_end":48058,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":5701}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5759},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":48299,"byte_end":48305,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":5762}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5821},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":48562,"byte_end":48573,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":5825}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5894},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":48857,"byte_end":48869,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":5897}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":485},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":49159,"byte_end":49171,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":489},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":515}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":49095,"byte_end":49148,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51931,"byte_end":51937,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":50559,"byte_end":50617,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":50622,"byte_end":50625,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":50630,"byte_end":50705,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":50710,"byte_end":50780,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":50785,"byte_end":50858,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":50863,"byte_end":50892,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":50897,"byte_end":50900,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":50905,"byte_end":50980,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":50985,"byte_end":51060,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51065,"byte_end":51112,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51117,"byte_end":51120,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51125,"byte_end":51200,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51205,"byte_end":51231,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51236,"byte_end":51239,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51244,"byte_end":51258,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51263,"byte_end":51266,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51271,"byte_end":51278,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51283,"byte_end":51321,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51326,"byte_end":51329,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51334,"byte_end":51375,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51380,"byte_end":51425,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51430,"byte_end":51472,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51477,"byte_end":51513,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51518,"byte_end":51527,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51532,"byte_end":51539,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51544,"byte_end":51547,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51552,"byte_end":51624,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51629,"byte_end":51640,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51645,"byte_end":51648,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51653,"byte_end":51660,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51665,"byte_end":51703,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51708,"byte_end":51711,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51716,"byte_end":51757,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51762,"byte_end":51808,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51813,"byte_end":51855,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51860,"byte_end":51897,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51902,"byte_end":51911,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":51916,"byte_end":51923,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53496,"byte_end":53510,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":52128,"byte_end":52245,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":52250,"byte_end":52253,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":52258,"byte_end":52380,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":52385,"byte_end":52435,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":52440,"byte_end":52443,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":52448,"byte_end":52523,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":52528,"byte_end":52603,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":52608,"byte_end":52655,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":52660,"byte_end":52663,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":52668,"byte_end":52743,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":52748,"byte_end":52823,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":52828,"byte_end":52875,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":52880,"byte_end":52883,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":52888,"byte_end":52963,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":52968,"byte_end":52994,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":52999,"byte_end":53002,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53007,"byte_end":53021,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53026,"byte_end":53029,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53034,"byte_end":53041,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53046,"byte_end":53084,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53089,"byte_end":53092,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53097,"byte_end":53138,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53143,"byte_end":53188,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53193,"byte_end":53254,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53259,"byte_end":53291,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53296,"byte_end":53299,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53304,"byte_end":53350,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53355,"byte_end":53416,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53421,"byte_end":53454,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53459,"byte_end":53468,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53473,"byte_end":53480,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53485,"byte_end":53488,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":55193,"byte_end":55200,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53744,"byte_end":53800,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53805,"byte_end":53808,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53813,"byte_end":53887,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53892,"byte_end":53953,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":53958,"byte_end":54028,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54033,"byte_end":54108,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54113,"byte_end":54148,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54153,"byte_end":54156,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54161,"byte_end":54236,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54241,"byte_end":54316,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54321,"byte_end":54368,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54373,"byte_end":54376,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54381,"byte_end":54456,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54461,"byte_end":54487,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54492,"byte_end":54495,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54500,"byte_end":54514,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54519,"byte_end":54522,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54527,"byte_end":54534,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54539,"byte_end":54577,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54582,"byte_end":54585,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54590,"byte_end":54631,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54636,"byte_end":54682,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54687,"byte_end":54730,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54735,"byte_end":54772,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54777,"byte_end":54786,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54791,"byte_end":54798,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54803,"byte_end":54806,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54811,"byte_end":54884,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54889,"byte_end":54903,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54908,"byte_end":54911,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54916,"byte_end":54923,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54928,"byte_end":54966,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54971,"byte_end":54974,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":54979,"byte_end":55020,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":55025,"byte_end":55070,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":55075,"byte_end":55118,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":55123,"byte_end":55159,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":55164,"byte_end":55173,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":55178,"byte_end":55185,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":56290,"byte_end":56298,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":55393,"byte_end":55463,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":55468,"byte_end":55517,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":55522,"byte_end":55525,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":55530,"byte_end":55593,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":55598,"byte_end":55666,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":55671,"byte_end":55744,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":55749,"byte_end":55825,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":55830,"byte_end":55875,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":55880,"byte_end":55883,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":55888,"byte_end":55963,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":55968,"byte_end":55994,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":55999,"byte_end":56002,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":56007,"byte_end":56021,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":56026,"byte_end":56029,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":56034,"byte_end":56041,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":56046,"byte_end":56084,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":56089,"byte_end":56092,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":56097,"byte_end":56138,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":56143,"byte_end":56194,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":56199,"byte_end":56256,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":56261,"byte_end":56270,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":56275,"byte_end":56282,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":56594,"byte_end":56601,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":56474,"byte_end":56532,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":56537,"byte_end":56586,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":58156,"byte_end":58164,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":56775,"byte_end":56844,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":56849,"byte_end":56923,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":56928,"byte_end":56931,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":56936,"byte_end":57011,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57016,"byte_end":57086,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57091,"byte_end":57156,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57161,"byte_end":57227,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57232,"byte_end":57266,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57271,"byte_end":57274,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57279,"byte_end":57354,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57359,"byte_end":57385,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57390,"byte_end":57393,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57398,"byte_end":57412,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57417,"byte_end":57420,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57425,"byte_end":57432,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57437,"byte_end":57475,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57480,"byte_end":57483,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57488,"byte_end":57529,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57534,"byte_end":57579,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57584,"byte_end":57659,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57664,"byte_end":57700,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57705,"byte_end":57714,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57719,"byte_end":57726,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57731,"byte_end":57734,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57739,"byte_end":57815,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57820,"byte_end":57831,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57836,"byte_end":57839,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57844,"byte_end":57851,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57856,"byte_end":57894,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57899,"byte_end":57902,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57907,"byte_end":57948,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57953,"byte_end":57999,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":58004,"byte_end":58080,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":58085,"byte_end":58122,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":58127,"byte_end":58136,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":58141,"byte_end":58148,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59785,"byte_end":59792,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":58418,"byte_end":58483,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":58488,"byte_end":58560,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":58565,"byte_end":58568,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":58573,"byte_end":58648,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":58653,"byte_end":58723,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":58728,"byte_end":58793,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":58798,"byte_end":58874,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":58879,"byte_end":58897,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":58902,"byte_end":58905,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":58910,"byte_end":58985,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":58990,"byte_end":59016,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59021,"byte_end":59024,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59029,"byte_end":59043,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59048,"byte_end":59051,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59056,"byte_end":59063,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59068,"byte_end":59106,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59111,"byte_end":59114,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59119,"byte_end":59160,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59165,"byte_end":59211,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59216,"byte_end":59291,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59296,"byte_end":59333,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59338,"byte_end":59347,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59352,"byte_end":59359,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59364,"byte_end":59367,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59372,"byte_end":59445,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59450,"byte_end":59464,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59469,"byte_end":59472,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59477,"byte_end":59484,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59489,"byte_end":59527,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59532,"byte_end":59535,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59540,"byte_end":59581,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59586,"byte_end":59631,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59636,"byte_end":59710,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59715,"byte_end":59751,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59756,"byte_end":59765,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59770,"byte_end":59777,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60768,"byte_end":60778,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60041,"byte_end":60114,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60119,"byte_end":60122,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60127,"byte_end":60202,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60207,"byte_end":60280,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60285,"byte_end":60354,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60359,"byte_end":60412,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60417,"byte_end":60420,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60425,"byte_end":60439,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60444,"byte_end":60447,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60452,"byte_end":60459,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60464,"byte_end":60505,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60510,"byte_end":60548,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60553,"byte_end":60556,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60561,"byte_end":60603,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60608,"byte_end":60689,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60694,"byte_end":60734,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60739,"byte_end":60748,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60753,"byte_end":60760,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61704,"byte_end":61715,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60977,"byte_end":61048,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61053,"byte_end":61056,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61061,"byte_end":61136,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61141,"byte_end":61214,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61219,"byte_end":61288,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61293,"byte_end":61347,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61352,"byte_end":61355,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61360,"byte_end":61374,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61379,"byte_end":61382,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61387,"byte_end":61394,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61399,"byte_end":61440,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61445,"byte_end":61483,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61488,"byte_end":61491,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61496,"byte_end":61539,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61544,"byte_end":61624,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61629,"byte_end":61670,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61675,"byte_end":61684,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61689,"byte_end":61696,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62100,"byte_end":62111,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61919,"byte_end":61994,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61999,"byte_end":62028,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62033,"byte_end":62036,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62041,"byte_end":62092,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63290,"byte_end":63308,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62346,"byte_end":62421,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62426,"byte_end":62449,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62454,"byte_end":62457,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62462,"byte_end":62534,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62539,"byte_end":62612,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62617,"byte_end":62631,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62636,"byte_end":62639,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62644,"byte_end":62714,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62719,"byte_end":62737,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62742,"byte_end":62745,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62750,"byte_end":62764,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62769,"byte_end":62772,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62777,"byte_end":62784,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62789,"byte_end":62830,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62835,"byte_end":62873,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62878,"byte_end":62924,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62929,"byte_end":62932,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62937,"byte_end":62997,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63002,"byte_end":63081,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63086,"byte_end":63089,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63094,"byte_end":63151,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63156,"byte_end":63208,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63213,"byte_end":63256,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63261,"byte_end":63270,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63275,"byte_end":63282,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64399,"byte_end":64413,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63568,"byte_end":63639,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63644,"byte_end":63681,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63686,"byte_end":63735,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63740,"byte_end":63743,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63748,"byte_end":63817,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63822,"byte_end":63895,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63900,"byte_end":63970,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63975,"byte_end":63993,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63998,"byte_end":64001,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64006,"byte_end":64074,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64079,"byte_end":64082,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64087,"byte_end":64101,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64106,"byte_end":64109,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64114,"byte_end":64121,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64126,"byte_end":64164,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64169,"byte_end":64172,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64177,"byte_end":64218,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64223,"byte_end":64275,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64280,"byte_end":64327,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64332,"byte_end":64365,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64370,"byte_end":64379,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64384,"byte_end":64391,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65668,"byte_end":65679,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64967,"byte_end":65020,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65025,"byte_end":65061,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65066,"byte_end":65069,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65074,"byte_end":65123,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65128,"byte_end":65195,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65200,"byte_end":65213,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65218,"byte_end":65221,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65226,"byte_end":65240,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65245,"byte_end":65248,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65253,"byte_end":65260,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65265,"byte_end":65324,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65329,"byte_end":65332,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65337,"byte_end":65356,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65361,"byte_end":65379,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65384,"byte_end":65456,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65461,"byte_end":65493,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65498,"byte_end":65505,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65510,"byte_end":65586,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65591,"byte_end":65594,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65599,"byte_end":65648,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65653,"byte_end":65660,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65938,"byte_end":65952,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65835,"byte_end":65908,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65913,"byte_end":65930,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":5952},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74121,"byte_end":74125,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":5954}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":73987,"byte_end":74024,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74042,"byte_end":74109,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":582},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74667,"byte_end":74671,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74230,"byte_end":74298,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74299,"byte_end":74302,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74303,"byte_end":74366,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74367,"byte_end":74370,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74371,"byte_end":74385,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74386,"byte_end":74389,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74390,"byte_end":74397,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74398,"byte_end":74439,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74440,"byte_end":74464,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74465,"byte_end":74468,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74469,"byte_end":74501,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74502,"byte_end":74529,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74530,"byte_end":74533,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74534,"byte_end":74571,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74572,"byte_end":74596,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74597,"byte_end":74604,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74605,"byte_end":74641,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74642,"byte_end":74651,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74652,"byte_end":74659,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5958},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75498,"byte_end":75505,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":5960}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75359,"byte_end":75401,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75419,"byte_end":75486,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":628},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":76024,"byte_end":76031,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75646,"byte_end":75726,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75727,"byte_end":75740,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75741,"byte_end":75744,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75745,"byte_end":75807,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75808,"byte_end":75811,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75812,"byte_end":75826,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75827,"byte_end":75830,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75831,"byte_end":75844,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75845,"byte_end":75886,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75887,"byte_end":75911,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75912,"byte_end":75915,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75916,"byte_end":75951,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75952,"byte_end":75978,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75979,"byte_end":75998,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75999,"byte_end":76008,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":76009,"byte_end":76016,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5966},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":76803,"byte_end":76809,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":5964},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":76768,"byte_end":76798,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5969},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":76876,"byte_end":76880,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":5964},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":76833,"byte_end":76871,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5972},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77042,"byte_end":77046,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":5964},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":76899,"byte_end":76965,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":76970,"byte_end":77037,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":5964},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":76739,"byte_end":76748,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":5966},{"krate":0,"index":5969},{"krate":0,"index":5972}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":76617,"byte_end":76654,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":76655,"byte_end":76658,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":76659,"byte_end":76712,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":675},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77567,"byte_end":77577,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77106,"byte_end":77143,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77144,"byte_end":77147,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77148,"byte_end":77162,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77163,"byte_end":77166,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77167,"byte_end":77174,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77175,"byte_end":77216,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77217,"byte_end":77241,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77242,"byte_end":77267,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77268,"byte_end":77271,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77272,"byte_end":77321,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77322,"byte_end":77343,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77344,"byte_end":77396,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77397,"byte_end":77432,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77433,"byte_end":77488,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77489,"byte_end":77541,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77542,"byte_end":77551,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77552,"byte_end":77559,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":78018,"byte_end":78028,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77720,"byte_end":77805,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77810,"byte_end":77881,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77886,"byte_end":77959,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77964,"byte_end":77992,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77997,"byte_end":78006,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":78376,"byte_end":78387,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":78256,"byte_end":78322,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":78327,"byte_end":78350,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":78355,"byte_end":78364,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5979},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":80012,"byte_end":80018,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":5977},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":79977,"byte_end":80007,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5982},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":80085,"byte_end":80089,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":5977},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":80042,"byte_end":80080,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5985},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":80297,"byte_end":80301,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":5977},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":80104,"byte_end":80173,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":80178,"byte_end":80248,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":80253,"byte_end":80292,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":5977},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":79942,"byte_end":79954,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> { Future(Fut), Done(Fut::Ok), Gone, }","parent":null,"children":[{"krate":0,"index":5979},{"krate":0,"index":5982},{"krate":0,"index":5985}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":79802,"byte_end":79853,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":79854,"byte_end":79857,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":79858,"byte_end":79915,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":727},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":80415,"byte_end":80429,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":80367,"byte_end":80407,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":80916,"byte_end":80926,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":80607,"byte_end":80692,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":80697,"byte_end":80768,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":80773,"byte_end":80857,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":80862,"byte_end":80890,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":80895,"byte_end":80904,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":81276,"byte_end":81287,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":81153,"byte_end":81222,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":81227,"byte_end":81250,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":81255,"byte_end":81264,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5995},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":83498,"byte_end":83510,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":5997}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":801},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84525,"byte_end":84531,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":803}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84405,"byte_end":84445,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84446,"byte_end":84513,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":806},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":85118,"byte_end":85125,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84582,"byte_end":84653,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84654,"byte_end":84657,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84658,"byte_end":84724,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84725,"byte_end":84728,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84729,"byte_end":84743,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84744,"byte_end":84747,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84748,"byte_end":84755,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84756,"byte_end":84797,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84798,"byte_end":84831,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84832,"byte_end":84871,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84872,"byte_end":84875,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84876,"byte_end":84933,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84934,"byte_end":84977,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84978,"byte_end":84983,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84984,"byte_end":84987,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84988,"byte_end":85029,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":85030,"byte_end":85092,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":85093,"byte_end":85102,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":85103,"byte_end":85110,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6029},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":85895,"byte_end":85900,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":85744,"byte_end":85791,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":85816,"byte_end":85883,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86023,"byte_end":86033,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":85940,"byte_end":85997,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86002,"byte_end":86011,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":857},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86699,"byte_end":86704,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86453,"byte_end":86513,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86514,"byte_end":86517,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86518,"byte_end":86532,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86533,"byte_end":86536,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86537,"byte_end":86544,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86545,"byte_end":86586,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86587,"byte_end":86611,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86612,"byte_end":86615,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86616,"byte_end":86645,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86646,"byte_end":86673,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86674,"byte_end":86683,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86684,"byte_end":86691,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":859},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":87039,"byte_end":87041,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86773,"byte_end":86840,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86841,"byte_end":86844,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86845,"byte_end":86859,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86860,"byte_end":86863,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86864,"byte_end":86871,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86872,"byte_end":86913,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86914,"byte_end":86938,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86939,"byte_end":86942,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86943,"byte_end":86981,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86982,"byte_end":87013,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":87014,"byte_end":87023,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":87024,"byte_end":87031,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":862},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":87372,"byte_end":87375,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":87105,"byte_end":87171,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":87172,"byte_end":87175,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":87176,"byte_end":87190,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":87191,"byte_end":87194,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":87195,"byte_end":87202,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":87203,"byte_end":87244,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":87245,"byte_end":87269,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":87270,"byte_end":87273,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":87274,"byte_end":87313,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":87314,"byte_end":87346,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":87347,"byte_end":87356,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":87357,"byte_end":87364,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6131},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":89661,"byte_end":89665,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":6134},{"krate":0,"index":6135}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6176},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":89731,"byte_end":89736,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":6180},{"krate":0,"index":6181},{"krate":0,"index":6182}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6233},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":89808,"byte_end":89813,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":6238},{"krate":0,"index":6239},{"krate":0,"index":6240},{"krate":0,"index":6241}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6302},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":89891,"byte_end":89896,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":6308},{"krate":0,"index":6309},{"krate":0,"index":6310},{"krate":0,"index":6311},{"krate":0,"index":6312}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":913},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90511,"byte_end":90515,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":89934,"byte_end":90005,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90006,"byte_end":90009,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90010,"byte_end":90081,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90082,"byte_end":90157,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90158,"byte_end":90161,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90162,"byte_end":90231,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90232,"byte_end":90258,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90259,"byte_end":90262,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90263,"byte_end":90277,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90278,"byte_end":90281,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90282,"byte_end":90289,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90290,"byte_end":90331,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90332,"byte_end":90356,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90357,"byte_end":90360,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90361,"byte_end":90385,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90386,"byte_end":90410,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90411,"byte_end":90445,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90446,"byte_end":90449,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90450,"byte_end":90485,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90486,"byte_end":90495,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90496,"byte_end":90503,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":916},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91061,"byte_end":91066,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90722,"byte_end":90774,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90775,"byte_end":90778,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90779,"byte_end":90793,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90794,"byte_end":90797,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90798,"byte_end":90805,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90806,"byte_end":90847,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90848,"byte_end":90872,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90873,"byte_end":90876,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90877,"byte_end":90901,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90902,"byte_end":90926,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90927,"byte_end":90951,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90952,"byte_end":90991,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90992,"byte_end":90995,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":90996,"byte_end":91035,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91036,"byte_end":91045,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91046,"byte_end":91053,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":920},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91728,"byte_end":91733,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91358,"byte_end":91410,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91411,"byte_end":91414,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91415,"byte_end":91429,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91430,"byte_end":91433,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91434,"byte_end":91441,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91442,"byte_end":91483,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91484,"byte_end":91508,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91509,"byte_end":91512,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91513,"byte_end":91537,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91538,"byte_end":91562,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91563,"byte_end":91587,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91588,"byte_end":91612,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91613,"byte_end":91655,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91656,"byte_end":91659,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91660,"byte_end":91702,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91703,"byte_end":91712,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":91713,"byte_end":91720,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":925},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":92498,"byte_end":92503,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":92097,"byte_end":92149,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":92150,"byte_end":92153,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":92154,"byte_end":92168,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":92169,"byte_end":92172,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":92173,"byte_end":92180,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":92181,"byte_end":92222,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":92223,"byte_end":92247,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":92248,"byte_end":92251,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":92252,"byte_end":92276,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":92277,"byte_end":92301,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":92302,"byte_end":92326,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":92327,"byte_end":92351,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":92352,"byte_end":92376,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":92377,"byte_end":92422,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":92423,"byte_end":92426,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":92427,"byte_end":92472,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":92473,"byte_end":92482,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":92483,"byte_end":92490,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6383},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93254,"byte_end":93260,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":6386}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93116,"byte_end":93157,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93158,"byte_end":93225,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":987},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":95524,"byte_end":95530,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93351,"byte_end":93421,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93422,"byte_end":93425,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93426,"byte_end":93504,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93505,"byte_end":93581,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93582,"byte_end":93654,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93655,"byte_end":93658,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93659,"byte_end":93731,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93732,"byte_end":93760,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93761,"byte_end":93764,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93765,"byte_end":93832,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93833,"byte_end":93897,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93898,"byte_end":93948,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93949,"byte_end":93952,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93953,"byte_end":93967,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93968,"byte_end":93971,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93972,"byte_end":93992,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93993,"byte_end":93996,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93997,"byte_end":94004,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94005,"byte_end":94046,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94047,"byte_end":94065,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94066,"byte_end":94082,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94083,"byte_end":94106,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94107,"byte_end":94128,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94129,"byte_end":94135,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94136,"byte_end":94139,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94140,"byte_end":94231,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94232,"byte_end":94257,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94258,"byte_end":94317,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94318,"byte_end":94327,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94328,"byte_end":94334,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94335,"byte_end":94360,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94361,"byte_end":94391,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94392,"byte_end":94398,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94399,"byte_end":94402,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94403,"byte_end":94449,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94450,"byte_end":94472,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94473,"byte_end":94495,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94496,"byte_end":94499,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94500,"byte_end":94562,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94563,"byte_end":94647,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94648,"byte_end":94721,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94722,"byte_end":94806,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94807,"byte_end":94880,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94881,"byte_end":94887,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94888,"byte_end":94891,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94892,"byte_end":94916,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94917,"byte_end":94926,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94927,"byte_end":94934,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94935,"byte_end":94938,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94939,"byte_end":94965,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94966,"byte_end":94969,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94970,"byte_end":94977,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":94978,"byte_end":95037,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":95038,"byte_end":95041,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":95042,"byte_end":95095,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":95096,"byte_end":95099,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":95100,"byte_end":95175,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":95176,"byte_end":95208,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":95209,"byte_end":95241,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":95242,"byte_end":95247,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":95248,"byte_end":95292,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":95293,"byte_end":95319,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":95320,"byte_end":95397,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":95398,"byte_end":95477,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":95478,"byte_end":95491,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":95492,"byte_end":95502,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":95503,"byte_end":95508,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":95509,"byte_end":95516,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6461},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":99509,"byte_end":99516,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":6464},{"krate":0,"index":6465}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6506},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":99586,"byte_end":99594,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":6510},{"krate":0,"index":6511},{"krate":0,"index":6512}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6563},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":99670,"byte_end":99678,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":6568},{"krate":0,"index":6569},{"krate":0,"index":6570},{"krate":0,"index":6571}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6632},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":99760,"byte_end":99768,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":6638},{"krate":0,"index":6639},{"krate":0,"index":6640},{"krate":0,"index":6641},{"krate":0,"index":6642}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1041},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101041,"byte_end":101049,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":99806,"byte_end":99879,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":99880,"byte_end":99912,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":99913,"byte_end":99916,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":99917,"byte_end":99988,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":99989,"byte_end":100065,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100066,"byte_end":100138,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100139,"byte_end":100155,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100156,"byte_end":100159,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100160,"byte_end":100229,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100230,"byte_end":100256,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100257,"byte_end":100260,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100261,"byte_end":100275,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100276,"byte_end":100279,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100280,"byte_end":100356,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100357,"byte_end":100393,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100394,"byte_end":100397,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100398,"byte_end":100405,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100406,"byte_end":100447,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100448,"byte_end":100472,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100473,"byte_end":100476,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100477,"byte_end":100522,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100523,"byte_end":100568,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100569,"byte_end":100607,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100608,"byte_end":100611,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100612,"byte_end":100651,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100652,"byte_end":100661,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100662,"byte_end":100669,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100670,"byte_end":100673,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100674,"byte_end":100744,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100745,"byte_end":100760,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100761,"byte_end":100764,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100765,"byte_end":100772,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100773,"byte_end":100814,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100815,"byte_end":100839,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100840,"byte_end":100843,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100844,"byte_end":100889,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100890,"byte_end":100936,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100937,"byte_end":100975,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100976,"byte_end":100979,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":100980,"byte_end":101015,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101016,"byte_end":101025,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101026,"byte_end":101033,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101705,"byte_end":101714,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101287,"byte_end":101347,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101348,"byte_end":101351,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101352,"byte_end":101366,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101367,"byte_end":101370,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101371,"byte_end":101378,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101379,"byte_end":101420,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101421,"byte_end":101445,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101446,"byte_end":101449,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101450,"byte_end":101495,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101496,"byte_end":101541,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101542,"byte_end":101587,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101588,"byte_end":101631,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101632,"byte_end":101635,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101636,"byte_end":101679,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101680,"byte_end":101689,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":101690,"byte_end":101697,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":102542,"byte_end":102551,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":102072,"byte_end":102132,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":102133,"byte_end":102136,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":102137,"byte_end":102151,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":102152,"byte_end":102155,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":102156,"byte_end":102163,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":102164,"byte_end":102205,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":102206,"byte_end":102230,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":102231,"byte_end":102234,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":102235,"byte_end":102280,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":102281,"byte_end":102326,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":102327,"byte_end":102372,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":102373,"byte_end":102418,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":102419,"byte_end":102465,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":102466,"byte_end":102469,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":102470,"byte_end":102516,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":102517,"byte_end":102526,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":102527,"byte_end":102534,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":103523,"byte_end":103532,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":103001,"byte_end":103061,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":103062,"byte_end":103065,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":103066,"byte_end":103080,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":103081,"byte_end":103084,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":103085,"byte_end":103092,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":103093,"byte_end":103134,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":103135,"byte_end":103159,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":103160,"byte_end":103163,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":103164,"byte_end":103209,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":103210,"byte_end":103255,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":103256,"byte_end":103301,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":103302,"byte_end":103347,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":103348,"byte_end":103393,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":103394,"byte_end":103443,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":103444,"byte_end":103447,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":103448,"byte_end":103497,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":103498,"byte_end":103507,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":103508,"byte_end":103515,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6713},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":104368,"byte_end":104377,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":6716}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":104226,"byte_end":104271,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":104272,"byte_end":104339,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105962,"byte_end":105972,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":104471,"byte_end":104541,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":104542,"byte_end":104545,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":104546,"byte_end":104624,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":104625,"byte_end":104701,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":104702,"byte_end":104774,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":104775,"byte_end":104778,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":104779,"byte_end":104851,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":104852,"byte_end":104880,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":104881,"byte_end":104884,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":104885,"byte_end":104952,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":104953,"byte_end":105024,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105025,"byte_end":105075,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105076,"byte_end":105079,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105080,"byte_end":105094,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105095,"byte_end":105098,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105099,"byte_end":105106,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105107,"byte_end":105191,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105192,"byte_end":105195,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105196,"byte_end":105253,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105254,"byte_end":105257,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105258,"byte_end":105340,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105341,"byte_end":105398,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105399,"byte_end":105456,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105457,"byte_end":105483,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105484,"byte_end":105489,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105490,"byte_end":105585,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105586,"byte_end":105609,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105610,"byte_end":105690,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105691,"byte_end":105772,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105773,"byte_end":105843,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105844,"byte_end":105915,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105916,"byte_end":105929,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105930,"byte_end":105940,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105941,"byte_end":105946,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":105947,"byte_end":105954,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6724},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":108006,"byte_end":108010,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":6721},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107973,"byte_end":108001,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6727},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":108066,"byte_end":108071,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":6721},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":108032,"byte_end":108061,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":6721},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107954,"byte_end":107960,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":6724},{"krate":0,"index":6727}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107431,"byte_end":107537,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107538,"byte_end":107541,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107542,"byte_end":107623,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107624,"byte_end":107627,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107628,"byte_end":107639,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107640,"byte_end":107672,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107673,"byte_end":107676,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107677,"byte_end":107718,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107719,"byte_end":107739,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107740,"byte_end":107743,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107744,"byte_end":107767,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107768,"byte_end":107807,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107808,"byte_end":107820,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107821,"byte_end":107861,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107862,"byte_end":107868,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107869,"byte_end":107872,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107873,"byte_end":107903,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107904,"byte_end":107912,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":107913,"byte_end":107920,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":108625,"byte_end":108637,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":108477,"byte_end":108535,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":108540,"byte_end":108543,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":108548,"byte_end":108613,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":109017,"byte_end":109030,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":108868,"byte_end":108926,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":108931,"byte_end":108934,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":108939,"byte_end":109005,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":109318,"byte_end":109328,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":109245,"byte_end":109306,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":1207},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1212},{"krate":0,"index":1215},{"krate":0,"index":1218},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2649},{"krate":0,"index":2652},{"krate":0,"index":2655},{"krate":0,"index":2658},{"krate":0,"index":2661},{"krate":0,"index":2664},{"krate":0,"index":2667},{"krate":0,"index":2670},{"krate":0,"index":2673},{"krate":0,"index":2676},{"krate":0,"index":2679},{"krate":0,"index":2682},{"krate":0,"index":2685},{"krate":0,"index":2688},{"krate":0,"index":2691},{"krate":0,"index":2694},{"krate":0,"index":2697},{"krate":0,"index":2700},{"krate":0,"index":2703},{"krate":0,"index":2706},{"krate":0,"index":2709},{"krate":0,"index":2712},{"krate":0,"index":2715},{"krate":0,"index":2718},{"krate":0,"index":2721},{"krate":0,"index":2724},{"krate":0,"index":2727},{"krate":0,"index":2730},{"krate":0,"index":2733},{"krate":0,"index":2736},{"krate":0,"index":2739},{"krate":0,"index":3571},{"krate":0,"index":3572},{"krate":0,"index":3575},{"krate":0,"index":3578},{"krate":0,"index":3581},{"krate":0,"index":3584},{"krate":0,"index":3587},{"krate":0,"index":3590},{"krate":0,"index":3593},{"krate":0,"index":3596},{"krate":0,"index":3599},{"krate":0,"index":3602},{"krate":0,"index":3605},{"krate":0,"index":3608},{"krate":0,"index":3611},{"krate":0,"index":3614},{"krate":0,"index":3617},{"krate":0,"index":3620},{"krate":0,"index":3623},{"krate":0,"index":3626},{"krate":0,"index":3629},{"krate":0,"index":3632},{"krate":0,"index":3635},{"krate":0,"index":3661},{"krate":0,"index":3662},{"krate":0,"index":3665},{"krate":0,"index":3668},{"krate":0,"index":3701},{"krate":0,"index":3702},{"krate":0,"index":3705},{"krate":0,"index":3708},{"krate":0,"index":3745},{"krate":0,"index":3746},{"krate":0,"index":3749},{"krate":0,"index":3752},{"krate":0,"index":3791},{"krate":0,"index":3792},{"krate":0,"index":3795},{"krate":0,"index":3798},{"krate":0,"index":3841},{"krate":0,"index":3842},{"krate":0,"index":3845},{"krate":0,"index":3848},{"krate":0,"index":3887},{"krate":0,"index":3888},{"krate":0,"index":3891},{"krate":0,"index":3894},{"krate":0,"index":3930},{"krate":0,"index":3931},{"krate":0,"index":3934},{"krate":0,"index":3937},{"krate":0,"index":3990},{"krate":0,"index":3991},{"krate":0,"index":3994},{"krate":0,"index":3997},{"krate":0,"index":4056},{"krate":0,"index":4057},{"krate":0,"index":4060},{"krate":0,"index":4063}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":115775,"byte_end":115800,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":115801,"byte_end":115804,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":115805,"byte_end":115830,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":115831,"byte_end":115834,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":115835,"byte_end":115908,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":115909,"byte_end":115934,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":115935,"byte_end":116014,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116015,"byte_end":116052,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116053,"byte_end":116126,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":116127,"byte_end":116157,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6745},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":170316,"byte_end":170321,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6748},{"krate":0,"index":6749}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6794},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":172446,"byte_end":172453,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":6797},{"krate":0,"index":6798}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6845},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":173887,"byte_end":173892,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":6849},{"krate":0,"index":6850},{"krate":0,"index":6851}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6903},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":175726,"byte_end":175732,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":6905},{"krate":0,"index":6906}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6943},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":177359,"byte_end":177364,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":6945},{"krate":0,"index":6946}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6983},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":179011,"byte_end":179020,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":6985},{"krate":0,"index":6986}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7022},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":180652,"byte_end":180658,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":7026},{"krate":0,"index":7027},{"krate":0,"index":7028},{"krate":0,"index":7029}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7087},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":184052,"byte_end":184061,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":7091},{"krate":0,"index":7092},{"krate":0,"index":7093}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7155},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":187067,"byte_end":187074,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7158},{"krate":0,"index":7159}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7203},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":121046,"byte_end":121053,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7205}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7256},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":188891,"byte_end":188895,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":7261},{"krate":0,"index":7262},{"krate":0,"index":7263},{"krate":0,"index":7264}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7325},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":191377,"byte_end":191384,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":7329},{"krate":0,"index":7330},{"krate":0,"index":7331}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7387},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":193341,"byte_end":193345,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":7389},{"krate":0,"index":7390}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1828},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":193797,"byte_end":193804,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":193528,"byte_end":193590,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":193595,"byte_end":193598,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":193603,"byte_end":193671,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":193676,"byte_end":193742,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":193747,"byte_end":193785,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":7426},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":195163,"byte_end":195175,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":7428}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":194993,"byte_end":195066,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":195084,"byte_end":195151,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":195738,"byte_end":195745,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":195346,"byte_end":195419,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":195424,"byte_end":195441,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":195446,"byte_end":195449,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":195454,"byte_end":195535,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":195540,"byte_end":195622,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":195627,"byte_end":195706,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":195711,"byte_end":195726,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1871},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":196356,"byte_end":196363,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":195810,"byte_end":195877,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":195882,"byte_end":195913,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":195918,"byte_end":195921,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":195926,"byte_end":195999,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":196004,"byte_end":196059,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":196064,"byte_end":196067,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":196072,"byte_end":196153,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":196158,"byte_end":196240,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":196245,"byte_end":196324,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":196329,"byte_end":196344,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":196989,"byte_end":197000,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":196436,"byte_end":196510,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":196515,"byte_end":196546,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":196551,"byte_end":196554,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":196559,"byte_end":196632,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":196637,"byte_end":196692,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":196697,"byte_end":196700,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":196705,"byte_end":196786,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":196791,"byte_end":196873,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":196878,"byte_end":196957,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":196962,"byte_end":196977,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":197633,"byte_end":197643,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":197113,"byte_end":197175,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":197180,"byte_end":197183,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":197188,"byte_end":197260,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":197265,"byte_end":197336,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":197341,"byte_end":197344,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":197349,"byte_end":197430,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":197435,"byte_end":197517,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":197522,"byte_end":197601,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":197606,"byte_end":197621,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7435},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":122173,"byte_end":122180,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":7438}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7501},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":198667,"byte_end":198670,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":7504},{"krate":0,"index":7505}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7554},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":122541,"byte_end":122548,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":7558}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7633},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":200330,"byte_end":200334,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":7636}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":200174,"byte_end":200233,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":200251,"byte_end":200318,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7641},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":201342,"byte_end":201356,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":7644}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":201158,"byte_end":201233,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":201234,"byte_end":201245,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":201263,"byte_end":201330,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7654},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":202947,"byte_end":202955,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":7656},{"krate":0,"index":7657}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":203395,"byte_end":203399,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":203240,"byte_end":203313,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":203318,"byte_end":203383,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":203724,"byte_end":203733,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":203486,"byte_end":203548,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":203553,"byte_end":203556,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":203561,"byte_end":203634,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":203639,"byte_end":203712,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205697,"byte_end":205704,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"pub fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where\nF: FnOnce(&St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204169,"byte_end":204242,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204247,"byte_end":204281,"line_start":61,"line_end":61,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204286,"byte_end":204289,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204294,"byte_end":204369,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204374,"byte_end":204414,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204419,"byte_end":204422,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204427,"byte_end":204441,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204446,"byte_end":204449,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204454,"byte_end":204494,"line_start":68,"line_end":68,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204499,"byte_end":204502,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204507,"byte_end":204514,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204519,"byte_end":204560,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204565,"byte_end":204608,"line_start":72,"line_end":72,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204613,"byte_end":204638,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204643,"byte_end":204646,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204651,"byte_end":204698,"line_start":75,"line_end":75,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204703,"byte_end":204724,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204729,"byte_end":204782,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204787,"byte_end":204855,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204860,"byte_end":204933,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":204938,"byte_end":205003,"line_start":80,"line_end":80,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205008,"byte_end":205092,"line_start":81,"line_end":81,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205097,"byte_end":205142,"line_start":82,"line_end":82,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205147,"byte_end":205156,"line_start":83,"line_end":83,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205161,"byte_end":205168,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205173,"byte_end":205176,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205181,"byte_end":205217,"line_start":86,"line_end":86,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205222,"byte_end":205225,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205230,"byte_end":205237,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205242,"byte_end":205283,"line_start":89,"line_end":89,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205288,"byte_end":205331,"line_start":90,"line_end":90,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205336,"byte_end":205361,"line_start":91,"line_end":91,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205366,"byte_end":205369,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205374,"byte_end":205422,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205427,"byte_end":205448,"line_start":94,"line_end":94,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205453,"byte_end":205492,"line_start":95,"line_end":95,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205497,"byte_end":205562,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205567,"byte_end":205608,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205613,"byte_end":205659,"line_start":98,"line_end":98,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205664,"byte_end":205673,"line_start":99,"line_end":99,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205678,"byte_end":205685,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":206728,"byte_end":206738,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"pub fn next_if_eq<'a, T: ?Sized>(Pin<&'a mut Self>, &'a T) -> NextIfEq where\nT, St::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205870,"byte_end":205943,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205948,"byte_end":205972,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205977,"byte_end":205980,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":205985,"byte_end":205998,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":206003,"byte_end":206006,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":206011,"byte_end":206051,"line_start":113,"line_end":113,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":206056,"byte_end":206059,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":206064,"byte_end":206071,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":206076,"byte_end":206117,"line_start":116,"line_end":116,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":206122,"byte_end":206165,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":206170,"byte_end":206195,"line_start":118,"line_end":118,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":206200,"byte_end":206203,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":206208,"byte_end":206255,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":206260,"byte_end":206281,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":206286,"byte_end":206339,"line_start":122,"line_end":122,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":206344,"byte_end":206406,"line_start":123,"line_end":123,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":206411,"byte_end":206484,"line_start":124,"line_end":124,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":206489,"byte_end":206548,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":206553,"byte_end":206640,"line_start":126,"line_end":126,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":206645,"byte_end":206690,"line_start":127,"line_end":127,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":206695,"byte_end":206704,"line_start":128,"line_end":128,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":206709,"byte_end":206716,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7693},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":208256,"byte_end":208260,"line_start":184,"line_end":184,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":7696}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7734},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":209316,"byte_end":209322,"line_start":226,"line_end":226,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":7738}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7783},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":211186,"byte_end":211194,"line_start":285,"line_end":285,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":7787}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7837},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":212811,"byte_end":212815,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":7839},{"krate":0,"index":7840}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7876},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":214578,"byte_end":214587,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7880},{"krate":0,"index":7881},{"krate":0,"index":7882},{"krate":0,"index":7883},{"krate":0,"index":7884}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7950},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":218091,"byte_end":218095,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7952},{"krate":0,"index":7953}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7989},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":220131,"byte_end":220140,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":7993},{"krate":0,"index":7994},{"krate":0,"index":7995},{"krate":0,"index":7996},{"krate":0,"index":7997}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8058},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":223620,"byte_end":223629,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":8061},{"krate":0,"index":8062},{"krate":0,"index":8063},{"krate":0,"index":8064}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2379},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":224913,"byte_end":224924,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":224613,"byte_end":224667,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":224672,"byte_end":224766,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":224771,"byte_end":224834,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":224839,"byte_end":224901,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":226208,"byte_end":226219,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225061,"byte_end":225126,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225131,"byte_end":225188,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225193,"byte_end":225196,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225201,"byte_end":225266,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225271,"byte_end":225331,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225336,"byte_end":225339,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225344,"byte_end":225412,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225417,"byte_end":225460,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225465,"byte_end":225468,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225473,"byte_end":225487,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225492,"byte_end":225495,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225500,"byte_end":225507,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225512,"byte_end":225553,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225558,"byte_end":225582,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225587,"byte_end":225630,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225635,"byte_end":225663,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225668,"byte_end":225671,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225676,"byte_end":225714,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225719,"byte_end":225722,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225727,"byte_end":225745,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225750,"byte_end":225792,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225797,"byte_end":225812,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225817,"byte_end":225836,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225841,"byte_end":225866,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225871,"byte_end":225887,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225892,"byte_end":225925,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225930,"byte_end":225939,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225944,"byte_end":225951,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225956,"byte_end":225959,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":225964,"byte_end":226013,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":226018,"byte_end":226072,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":226077,"byte_end":226080,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":226085,"byte_end":226132,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":226137,"byte_end":226170,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":226175,"byte_end":226184,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":226189,"byte_end":226196,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2381},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":226395,"byte_end":226405,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":226298,"byte_end":226359,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":226364,"byte_end":226383,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8115},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":228337,"byte_end":228341,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":8119},{"krate":0,"index":8120},{"krate":0,"index":8121}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8183},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":230881,"byte_end":230884,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":8186},{"krate":0,"index":8187},{"krate":0,"index":8188},{"krate":0,"index":8189}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2485},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":231402,"byte_end":231409,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":231294,"byte_end":231368,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":231373,"byte_end":231390,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2486},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":231765,"byte_end":231772,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":231503,"byte_end":231571,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":231576,"byte_end":231607,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":231612,"byte_end":231615,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":231620,"byte_end":231693,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":231698,"byte_end":231753,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2487},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":232147,"byte_end":232158,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":231878,"byte_end":231953,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":231958,"byte_end":231989,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":231994,"byte_end":231997,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":232002,"byte_end":232075,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":232080,"byte_end":232135,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2488},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":232564,"byte_end":232574,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":232328,"byte_end":232391,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":232396,"byte_end":232399,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":232404,"byte_end":232476,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":232481,"byte_end":232552,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":8233},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":235416,"byte_end":235420,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":8238},{"krate":0,"index":8239},{"krate":0,"index":8240}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2578},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":125847,"byte_end":125856,"line_start":212,"line_end":212,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2584},{"krate":0,"index":2585},{"krate":0,"index":2588},{"krate":0,"index":2592},{"krate":0,"index":2595},{"krate":0,"index":2597},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2608},{"krate":0,"index":2609},{"krate":0,"index":2612},{"krate":0,"index":2617},{"krate":0,"index":2620},{"krate":0,"index":2623},{"krate":0,"index":2625},{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":2630},{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2634},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2639},{"krate":0,"index":2641},{"krate":0,"index":2643},{"krate":0,"index":2644}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":125736,"byte_end":125810,"line_start":210,"line_end":210,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":125811,"byte_end":125836,"line_start":211,"line_end":211,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126766,"byte_end":126770,"line_start":236,"line_end":236,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":125871,"byte_end":125937,"line_start":213,"line_end":213,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":125942,"byte_end":125945,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":125950,"byte_end":126018,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126023,"byte_end":126098,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126103,"byte_end":126178,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126183,"byte_end":126237,"line_start":218,"line_end":218,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126242,"byte_end":126317,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126322,"byte_end":126332,"line_start":220,"line_end":220,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126337,"byte_end":126340,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126345,"byte_end":126359,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126364,"byte_end":126367,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126372,"byte_end":126379,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126384,"byte_end":126425,"line_start":225,"line_end":225,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126430,"byte_end":126473,"line_start":226,"line_end":226,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126478,"byte_end":126481,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126486,"byte_end":126527,"line_start":228,"line_end":228,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126532,"byte_end":126535,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126540,"byte_end":126585,"line_start":230,"line_end":230,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126590,"byte_end":126635,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126640,"byte_end":126685,"line_start":232,"line_end":232,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126690,"byte_end":126732,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126737,"byte_end":126746,"line_start":234,"line_end":234,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126751,"byte_end":126758,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2580},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128009,"byte_end":128020,"line_start":271,"line_end":271,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126912,"byte_end":126984,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":126989,"byte_end":127050,"line_start":244,"line_end":244,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127055,"byte_end":127058,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127063,"byte_end":127138,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127143,"byte_end":127197,"line_start":247,"line_end":247,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127202,"byte_end":127205,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127210,"byte_end":127283,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127288,"byte_end":127350,"line_start":250,"line_end":250,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127355,"byte_end":127430,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127435,"byte_end":127489,"line_start":252,"line_end":252,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127494,"byte_end":127569,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127574,"byte_end":127584,"line_start":254,"line_end":254,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127589,"byte_end":127592,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127597,"byte_end":127611,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127616,"byte_end":127619,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127624,"byte_end":127631,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127636,"byte_end":127677,"line_start":259,"line_end":259,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127682,"byte_end":127725,"line_start":260,"line_end":260,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127730,"byte_end":127733,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127738,"byte_end":127775,"line_start":262,"line_end":262,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127780,"byte_end":127783,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127788,"byte_end":127840,"line_start":264,"line_end":264,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127845,"byte_end":127875,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127880,"byte_end":127883,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127888,"byte_end":127940,"line_start":267,"line_end":267,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127945,"byte_end":127975,"line_start":268,"line_end":268,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127980,"byte_end":127989,"line_start":269,"line_end":269,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":127994,"byte_end":128001,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129021,"byte_end":129024,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128185,"byte_end":128260,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128265,"byte_end":128288,"line_start":279,"line_end":279,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128293,"byte_end":128296,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128301,"byte_end":128373,"line_start":281,"line_end":281,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128378,"byte_end":128442,"line_start":282,"line_end":282,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128447,"byte_end":128484,"line_start":283,"line_end":283,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128489,"byte_end":128492,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128497,"byte_end":128573,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128578,"byte_end":128649,"line_start":286,"line_end":286,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128654,"byte_end":128675,"line_start":287,"line_end":287,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128680,"byte_end":128683,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128688,"byte_end":128702,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128707,"byte_end":128710,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128715,"byte_end":128722,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128727,"byte_end":128768,"line_start":292,"line_end":292,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128773,"byte_end":128816,"line_start":293,"line_end":293,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128821,"byte_end":128824,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128829,"byte_end":128866,"line_start":295,"line_end":295,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128871,"byte_end":128910,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128915,"byte_end":128918,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128923,"byte_end":128987,"line_start":298,"line_end":298,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":128992,"byte_end":129001,"line_start":299,"line_end":299,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129006,"byte_end":129013,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2584},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130584,"byte_end":130593,"line_start":347,"line_end":347,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129191,"byte_end":129262,"line_start":309,"line_end":309,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129267,"byte_end":129286,"line_start":310,"line_end":310,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129291,"byte_end":129294,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129299,"byte_end":129364,"line_start":312,"line_end":312,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129369,"byte_end":129438,"line_start":313,"line_end":313,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129443,"byte_end":129454,"line_start":314,"line_end":314,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129459,"byte_end":129462,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129467,"byte_end":129542,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129547,"byte_end":129629,"line_start":317,"line_end":317,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129634,"byte_end":129652,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129657,"byte_end":129660,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129665,"byte_end":129688,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129693,"byte_end":129696,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129701,"byte_end":129776,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129781,"byte_end":129868,"line_start":323,"line_end":323,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129873,"byte_end":129929,"line_start":324,"line_end":324,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129934,"byte_end":129937,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129942,"byte_end":129954,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129959,"byte_end":129962,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":129967,"byte_end":130036,"line_start":328,"line_end":328,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130041,"byte_end":130066,"line_start":329,"line_end":329,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130071,"byte_end":130074,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130079,"byte_end":130093,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130098,"byte_end":130101,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130106,"byte_end":130113,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130118,"byte_end":130159,"line_start":334,"line_end":334,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130164,"byte_end":130207,"line_start":335,"line_end":335,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130212,"byte_end":130215,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130220,"byte_end":130271,"line_start":337,"line_end":337,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130276,"byte_end":130279,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130284,"byte_end":130324,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130329,"byte_end":130332,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130337,"byte_end":130389,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130394,"byte_end":130446,"line_start":342,"line_end":342,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130451,"byte_end":130503,"line_start":343,"line_end":343,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130508,"byte_end":130550,"line_start":344,"line_end":344,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130555,"byte_end":130564,"line_start":345,"line_end":345,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130569,"byte_end":130576,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131822,"byte_end":131828,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130737,"byte_end":130809,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130814,"byte_end":130841,"line_start":355,"line_end":355,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130846,"byte_end":130849,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130854,"byte_end":130929,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":130934,"byte_end":131005,"line_start":358,"line_end":358,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131010,"byte_end":131082,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131087,"byte_end":131161,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131166,"byte_end":131224,"line_start":361,"line_end":361,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131229,"byte_end":131232,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131237,"byte_end":131313,"line_start":363,"line_end":363,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131318,"byte_end":131392,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131397,"byte_end":131418,"line_start":365,"line_end":365,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131423,"byte_end":131426,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131431,"byte_end":131445,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131450,"byte_end":131453,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131458,"byte_end":131465,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131470,"byte_end":131511,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131516,"byte_end":131540,"line_start":371,"line_end":371,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131545,"byte_end":131588,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131593,"byte_end":131596,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131601,"byte_end":131639,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131644,"byte_end":131705,"line_start":375,"line_end":375,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131710,"byte_end":131713,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131718,"byte_end":131788,"line_start":377,"line_end":377,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131793,"byte_end":131802,"line_start":378,"line_end":378,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":131807,"byte_end":131814,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133153,"byte_end":133163,"line_start":414,"line_end":414,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132056,"byte_end":132131,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132136,"byte_end":132212,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132217,"byte_end":132220,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132225,"byte_end":132300,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132305,"byte_end":132380,"line_start":393,"line_end":393,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132385,"byte_end":132461,"line_start":394,"line_end":394,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132466,"byte_end":132531,"line_start":395,"line_end":395,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132536,"byte_end":132539,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132544,"byte_end":132620,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132625,"byte_end":132699,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132704,"byte_end":132729,"line_start":399,"line_end":399,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132734,"byte_end":132737,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132742,"byte_end":132756,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132761,"byte_end":132768,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132773,"byte_end":132814,"line_start":403,"line_end":403,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132819,"byte_end":132862,"line_start":404,"line_end":404,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132867,"byte_end":132870,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132875,"byte_end":132913,"line_start":406,"line_end":406,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132918,"byte_end":132968,"line_start":407,"line_end":407,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":132973,"byte_end":133024,"line_start":408,"line_end":408,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133029,"byte_end":133036,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133041,"byte_end":133044,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133049,"byte_end":133119,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133124,"byte_end":133133,"line_start":412,"line_end":412,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133138,"byte_end":133145,"line_start":413,"line_end":413,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2592},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134192,"byte_end":134196,"line_start":445,"line_end":445,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133395,"byte_end":133468,"line_start":423,"line_end":423,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133473,"byte_end":133501,"line_start":424,"line_end":424,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133506,"byte_end":133509,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133514,"byte_end":133588,"line_start":426,"line_end":426,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133593,"byte_end":133660,"line_start":427,"line_end":427,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133665,"byte_end":133710,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133715,"byte_end":133718,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133723,"byte_end":133799,"line_start":430,"line_end":430,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133804,"byte_end":133830,"line_start":431,"line_end":431,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133835,"byte_end":133838,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133843,"byte_end":133857,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133862,"byte_end":133865,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133870,"byte_end":133877,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133882,"byte_end":133923,"line_start":436,"line_end":436,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133928,"byte_end":133971,"line_start":437,"line_end":437,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133976,"byte_end":133979,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":133984,"byte_end":134021,"line_start":439,"line_end":439,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134026,"byte_end":134081,"line_start":440,"line_end":440,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134086,"byte_end":134089,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134094,"byte_end":134158,"line_start":442,"line_end":442,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134163,"byte_end":134172,"line_start":443,"line_end":443,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134177,"byte_end":134184,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135130,"byte_end":135137,"line_start":479,"line_end":479,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134405,"byte_end":134459,"line_start":454,"line_end":454,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134464,"byte_end":134519,"line_start":455,"line_end":455,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134524,"byte_end":134527,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134532,"byte_end":134600,"line_start":457,"line_end":457,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134605,"byte_end":134608,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134613,"byte_end":134627,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134632,"byte_end":134635,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134640,"byte_end":134647,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134652,"byte_end":134693,"line_start":462,"line_end":462,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134698,"byte_end":134729,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134734,"byte_end":134769,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134774,"byte_end":134794,"line_start":465,"line_end":465,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134799,"byte_end":134802,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134807,"byte_end":134844,"line_start":467,"line_end":467,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134849,"byte_end":134852,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134857,"byte_end":134884,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134889,"byte_end":134913,"line_start":470,"line_end":470,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134918,"byte_end":134960,"line_start":471,"line_end":471,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134965,"byte_end":134974,"line_start":472,"line_end":472,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134979,"byte_end":134986,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134991,"byte_end":134994,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":134999,"byte_end":135047,"line_start":475,"line_end":475,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135052,"byte_end":135096,"line_start":476,"line_end":476,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135101,"byte_end":135110,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135115,"byte_end":135122,"line_start":478,"line_end":478,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2597},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136256,"byte_end":136261,"line_start":516,"line_end":516,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135295,"byte_end":135346,"line_start":486,"line_end":486,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135351,"byte_end":135386,"line_start":487,"line_end":487,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135391,"byte_end":135394,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135399,"byte_end":135453,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135458,"byte_end":135515,"line_start":490,"line_end":490,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135520,"byte_end":135556,"line_start":491,"line_end":491,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135561,"byte_end":135564,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135569,"byte_end":135637,"line_start":493,"line_end":493,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135642,"byte_end":135645,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135650,"byte_end":135664,"line_start":495,"line_end":495,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135669,"byte_end":135672,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135677,"byte_end":135684,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135689,"byte_end":135730,"line_start":498,"line_end":498,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135735,"byte_end":135766,"line_start":499,"line_end":499,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135771,"byte_end":135806,"line_start":500,"line_end":500,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135811,"byte_end":135831,"line_start":501,"line_end":501,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135836,"byte_end":135839,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135844,"byte_end":135881,"line_start":503,"line_end":503,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135886,"byte_end":135889,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135894,"byte_end":135921,"line_start":505,"line_end":505,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135926,"byte_end":135969,"line_start":506,"line_end":506,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":135974,"byte_end":136017,"line_start":507,"line_end":507,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136022,"byte_end":136065,"line_start":508,"line_end":508,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136070,"byte_end":136077,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136082,"byte_end":136085,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136090,"byte_end":136144,"line_start":511,"line_end":511,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136149,"byte_end":136183,"line_start":512,"line_end":512,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136188,"byte_end":136222,"line_start":513,"line_end":513,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136227,"byte_end":136236,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136241,"byte_end":136248,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137557,"byte_end":137563,"line_start":557,"line_end":557,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136522,"byte_end":136584,"line_start":525,"line_end":525,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136589,"byte_end":136653,"line_start":526,"line_end":526,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136658,"byte_end":136661,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136666,"byte_end":136730,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136735,"byte_end":136800,"line_start":529,"line_end":529,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136805,"byte_end":136851,"line_start":530,"line_end":530,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136856,"byte_end":136859,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136864,"byte_end":136913,"line_start":532,"line_end":532,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136918,"byte_end":136958,"line_start":533,"line_end":533,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136963,"byte_end":136966,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136971,"byte_end":136985,"line_start":535,"line_end":535,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136990,"byte_end":136993,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":136998,"byte_end":137005,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137010,"byte_end":137051,"line_start":538,"line_end":538,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137056,"byte_end":137087,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137092,"byte_end":137127,"line_start":540,"line_end":540,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137132,"byte_end":137152,"line_start":541,"line_end":541,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137157,"byte_end":137160,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137165,"byte_end":137202,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137207,"byte_end":137210,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137215,"byte_end":137242,"line_start":545,"line_end":545,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137247,"byte_end":137278,"line_start":546,"line_end":546,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137283,"byte_end":137309,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137314,"byte_end":137380,"line_start":548,"line_end":548,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137385,"byte_end":137394,"line_start":549,"line_end":549,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137399,"byte_end":137406,"line_start":550,"line_end":550,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137411,"byte_end":137414,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137419,"byte_end":137454,"line_start":552,"line_end":552,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137459,"byte_end":137462,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137467,"byte_end":137523,"line_start":554,"line_end":554,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137528,"byte_end":137537,"line_start":555,"line_end":555,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137542,"byte_end":137549,"line_start":556,"line_end":556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2603},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138627,"byte_end":138632,"line_start":588,"line_end":588,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137793,"byte_end":137824,"line_start":565,"line_end":565,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137829,"byte_end":137832,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137837,"byte_end":137904,"line_start":567,"line_end":567,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137909,"byte_end":137981,"line_start":568,"line_end":568,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":137986,"byte_end":138043,"line_start":569,"line_end":569,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138048,"byte_end":138051,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138056,"byte_end":138070,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138075,"byte_end":138078,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138083,"byte_end":138090,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138095,"byte_end":138136,"line_start":574,"line_end":574,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138141,"byte_end":138184,"line_start":575,"line_end":575,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138189,"byte_end":138211,"line_start":576,"line_end":576,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138216,"byte_end":138263,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138268,"byte_end":138271,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138276,"byte_end":138317,"line_start":579,"line_end":579,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138322,"byte_end":138363,"line_start":580,"line_end":580,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138368,"byte_end":138409,"line_start":581,"line_end":581,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138414,"byte_end":138455,"line_start":582,"line_end":582,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138460,"byte_end":138501,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138506,"byte_end":138547,"line_start":584,"line_end":584,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138552,"byte_end":138593,"line_start":585,"line_end":585,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138598,"byte_end":138607,"line_start":586,"line_end":586,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138612,"byte_end":138619,"line_start":587,"line_end":587,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2604},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139582,"byte_end":139586,"line_start":615,"line_end":615,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138767,"byte_end":138834,"line_start":595,"line_end":595,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138839,"byte_end":138891,"line_start":596,"line_end":596,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138896,"byte_end":138899,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138904,"byte_end":138974,"line_start":598,"line_end":598,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":138979,"byte_end":139055,"line_start":599,"line_end":599,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139060,"byte_end":139136,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139141,"byte_end":139211,"line_start":601,"line_end":601,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139216,"byte_end":139242,"line_start":602,"line_end":602,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139247,"byte_end":139250,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139255,"byte_end":139269,"line_start":604,"line_end":604,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139274,"byte_end":139277,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139282,"byte_end":139289,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139294,"byte_end":139335,"line_start":607,"line_end":607,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139340,"byte_end":139383,"line_start":608,"line_end":608,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139388,"byte_end":139391,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139396,"byte_end":139439,"line_start":610,"line_end":610,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139444,"byte_end":139513,"line_start":611,"line_end":611,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139518,"byte_end":139548,"line_start":612,"line_end":612,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139553,"byte_end":139562,"line_start":613,"line_end":613,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139567,"byte_end":139574,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2608},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140780,"byte_end":140787,"line_start":655,"line_end":655,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139821,"byte_end":139886,"line_start":624,"line_end":624,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139891,"byte_end":139894,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139899,"byte_end":139913,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139918,"byte_end":139921,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139926,"byte_end":139933,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139938,"byte_end":139979,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":139984,"byte_end":140015,"line_start":630,"line_end":630,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140020,"byte_end":140055,"line_start":631,"line_end":631,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140060,"byte_end":140080,"line_start":632,"line_end":632,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140085,"byte_end":140088,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140093,"byte_end":140132,"line_start":634,"line_end":634,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140137,"byte_end":140176,"line_start":635,"line_end":635,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140181,"byte_end":140220,"line_start":636,"line_end":636,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140225,"byte_end":140228,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140233,"byte_end":140260,"line_start":638,"line_end":638,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140265,"byte_end":140304,"line_start":639,"line_end":639,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140309,"byte_end":140348,"line_start":640,"line_end":640,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140353,"byte_end":140360,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140365,"byte_end":140392,"line_start":642,"line_end":642,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140397,"byte_end":140436,"line_start":643,"line_end":643,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140441,"byte_end":140480,"line_start":644,"line_end":644,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140485,"byte_end":140492,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140497,"byte_end":140524,"line_start":646,"line_end":646,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140529,"byte_end":140570,"line_start":647,"line_end":647,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140575,"byte_end":140616,"line_start":648,"line_end":648,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140621,"byte_end":140628,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140633,"byte_end":140636,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140641,"byte_end":140700,"line_start":651,"line_end":651,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140705,"byte_end":140746,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140751,"byte_end":140760,"line_start":653,"line_end":653,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140765,"byte_end":140772,"line_start":654,"line_end":654,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142049,"byte_end":142057,"line_start":688,"line_end":688,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":140964,"byte_end":141036,"line_start":663,"line_end":663,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141041,"byte_end":141044,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141049,"byte_end":141126,"line_start":665,"line_end":665,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141131,"byte_end":141206,"line_start":666,"line_end":666,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141211,"byte_end":141287,"line_start":667,"line_end":667,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141292,"byte_end":141295,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141300,"byte_end":141382,"line_start":669,"line_end":669,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141387,"byte_end":141470,"line_start":670,"line_end":670,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141475,"byte_end":141478,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141483,"byte_end":141559,"line_start":672,"line_end":672,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141564,"byte_end":141640,"line_start":673,"line_end":673,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141645,"byte_end":141666,"line_start":674,"line_end":674,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141671,"byte_end":141674,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141679,"byte_end":141693,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141698,"byte_end":141701,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141706,"byte_end":141713,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141718,"byte_end":141759,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141764,"byte_end":141807,"line_start":680,"line_end":680,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141812,"byte_end":141815,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141820,"byte_end":141857,"line_start":682,"line_end":682,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141862,"byte_end":141929,"line_start":683,"line_end":683,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141934,"byte_end":141937,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":141942,"byte_end":142015,"line_start":685,"line_end":685,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142020,"byte_end":142029,"line_start":686,"line_end":686,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142034,"byte_end":142041,"line_start":687,"line_end":687,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143069,"byte_end":143073,"line_start":721,"line_end":721,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142260,"byte_end":142331,"line_start":697,"line_end":697,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142336,"byte_end":142366,"line_start":698,"line_end":698,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142371,"byte_end":142374,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142379,"byte_end":142454,"line_start":700,"line_end":700,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142459,"byte_end":142530,"line_start":701,"line_end":701,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142535,"byte_end":142575,"line_start":702,"line_end":702,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142580,"byte_end":142583,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142588,"byte_end":142602,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142607,"byte_end":142610,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142615,"byte_end":142622,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142627,"byte_end":142668,"line_start":707,"line_end":707,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142673,"byte_end":142697,"line_start":708,"line_end":708,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142702,"byte_end":142745,"line_start":709,"line_end":709,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142750,"byte_end":142753,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142758,"byte_end":142796,"line_start":711,"line_end":711,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142801,"byte_end":142804,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142809,"byte_end":142853,"line_start":713,"line_end":713,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142858,"byte_end":142878,"line_start":714,"line_end":714,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142883,"byte_end":142946,"line_start":715,"line_end":715,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142951,"byte_end":142958,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142963,"byte_end":142966,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":142971,"byte_end":143035,"line_start":718,"line_end":718,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143040,"byte_end":143049,"line_start":719,"line_end":719,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143054,"byte_end":143061,"line_start":720,"line_end":720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144120,"byte_end":144130,"line_start":752,"line_end":752,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143342,"byte_end":143416,"line_start":730,"line_end":730,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143421,"byte_end":143444,"line_start":731,"line_end":731,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143449,"byte_end":143452,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143457,"byte_end":143530,"line_start":733,"line_end":733,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143535,"byte_end":143607,"line_start":734,"line_end":734,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143612,"byte_end":143689,"line_start":735,"line_end":735,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143694,"byte_end":143705,"line_start":736,"line_end":736,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143710,"byte_end":143713,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143718,"byte_end":143732,"line_start":738,"line_end":738,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143737,"byte_end":143740,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143745,"byte_end":143752,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143757,"byte_end":143798,"line_start":741,"line_end":741,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143803,"byte_end":143827,"line_start":742,"line_end":742,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143832,"byte_end":143875,"line_start":743,"line_end":743,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143880,"byte_end":143883,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143888,"byte_end":143926,"line_start":745,"line_end":745,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143931,"byte_end":143934,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":143939,"byte_end":144002,"line_start":747,"line_end":747,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144007,"byte_end":144010,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144015,"byte_end":144086,"line_start":749,"line_end":749,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144091,"byte_end":144100,"line_start":750,"line_end":750,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144105,"byte_end":144112,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2620},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":145119,"byte_end":145129,"line_start":782,"line_end":782,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144364,"byte_end":144440,"line_start":761,"line_end":761,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144445,"byte_end":144468,"line_start":762,"line_end":762,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144473,"byte_end":144476,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144481,"byte_end":144556,"line_start":764,"line_end":764,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144561,"byte_end":144633,"line_start":765,"line_end":765,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144638,"byte_end":144705,"line_start":766,"line_end":766,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144710,"byte_end":144713,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144718,"byte_end":144732,"line_start":768,"line_end":768,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144737,"byte_end":144740,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144745,"byte_end":144752,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144757,"byte_end":144798,"line_start":771,"line_end":771,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144803,"byte_end":144827,"line_start":772,"line_end":772,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144832,"byte_end":144875,"line_start":773,"line_end":773,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144880,"byte_end":144883,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144888,"byte_end":144926,"line_start":775,"line_end":775,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144931,"byte_end":144934,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":144939,"byte_end":145002,"line_start":777,"line_end":777,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":145007,"byte_end":145010,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":145015,"byte_end":145085,"line_start":779,"line_end":779,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":145090,"byte_end":145099,"line_start":780,"line_end":780,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":145104,"byte_end":145111,"line_start":781,"line_end":781,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2623},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146645,"byte_end":146655,"line_start":827,"line_end":827,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":145363,"byte_end":145433,"line_start":791,"line_end":791,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":145438,"byte_end":145441,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":145446,"byte_end":145517,"line_start":793,"line_end":793,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":145522,"byte_end":145594,"line_start":794,"line_end":794,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":145599,"byte_end":145669,"line_start":795,"line_end":795,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":145674,"byte_end":145677,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":145682,"byte_end":145753,"line_start":797,"line_end":797,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":145758,"byte_end":145844,"line_start":798,"line_end":798,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":145849,"byte_end":145916,"line_start":799,"line_end":799,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":145921,"byte_end":145985,"line_start":800,"line_end":800,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":145990,"byte_end":145993,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":145998,"byte_end":146012,"line_start":802,"line_end":802,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146017,"byte_end":146020,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146025,"byte_end":146032,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146037,"byte_end":146078,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146083,"byte_end":146107,"line_start":806,"line_end":806,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146112,"byte_end":146155,"line_start":807,"line_end":807,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146160,"byte_end":146188,"line_start":808,"line_end":808,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146193,"byte_end":146196,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146201,"byte_end":146239,"line_start":810,"line_end":810,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146244,"byte_end":146247,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146252,"byte_end":146270,"line_start":812,"line_end":812,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146275,"byte_end":146317,"line_start":813,"line_end":813,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146322,"byte_end":146337,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146342,"byte_end":146361,"line_start":815,"line_end":815,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146366,"byte_end":146391,"line_start":816,"line_end":816,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146396,"byte_end":146412,"line_start":817,"line_end":817,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146417,"byte_end":146444,"line_start":818,"line_end":818,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146449,"byte_end":146458,"line_start":819,"line_end":819,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146463,"byte_end":146470,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146475,"byte_end":146478,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146483,"byte_end":146528,"line_start":822,"line_end":822,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146533,"byte_end":146536,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146541,"byte_end":146611,"line_start":824,"line_end":824,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146616,"byte_end":146625,"line_start":825,"line_end":825,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146630,"byte_end":146637,"line_start":826,"line_end":826,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2625},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147894,"byte_end":147902,"line_start":868,"line_end":868,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146836,"byte_end":146907,"line_start":835,"line_end":835,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146912,"byte_end":146955,"line_start":836,"line_end":836,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146960,"byte_end":146963,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146968,"byte_end":147043,"line_start":838,"line_end":838,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147048,"byte_end":147118,"line_start":839,"line_end":839,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147123,"byte_end":147161,"line_start":840,"line_end":840,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147166,"byte_end":147169,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147174,"byte_end":147249,"line_start":842,"line_end":842,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147254,"byte_end":147297,"line_start":843,"line_end":843,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147302,"byte_end":147305,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147310,"byte_end":147383,"line_start":845,"line_end":845,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147388,"byte_end":147431,"line_start":846,"line_end":846,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147436,"byte_end":147439,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147444,"byte_end":147458,"line_start":848,"line_end":848,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147463,"byte_end":147466,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147471,"byte_end":147478,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147483,"byte_end":147524,"line_start":851,"line_end":851,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147529,"byte_end":147553,"line_start":852,"line_end":852,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147558,"byte_end":147601,"line_start":853,"line_end":853,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147606,"byte_end":147609,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147614,"byte_end":147632,"line_start":855,"line_end":855,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147637,"byte_end":147640,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147645,"byte_end":147650,"line_start":857,"line_end":857,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147655,"byte_end":147716,"line_start":858,"line_end":858,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147721,"byte_end":147743,"line_start":859,"line_end":859,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147748,"byte_end":147777,"line_start":860,"line_end":860,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147782,"byte_end":147793,"line_start":861,"line_end":861,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147798,"byte_end":147816,"line_start":862,"line_end":862,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147821,"byte_end":147826,"line_start":863,"line_end":863,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147831,"byte_end":147834,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147839,"byte_end":147860,"line_start":865,"line_end":865,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147865,"byte_end":147874,"line_start":866,"line_end":866,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147879,"byte_end":147886,"line_start":867,"line_end":867,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2628},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":150908,"byte_end":150912,"line_start":953,"line_end":953,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":150400,"byte_end":150471,"line_start":937,"line_end":937,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":150476,"byte_end":150479,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":150484,"byte_end":150557,"line_start":939,"line_end":939,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":150562,"byte_end":150597,"line_start":940,"line_end":940,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":150602,"byte_end":150605,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":150610,"byte_end":150624,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":150629,"byte_end":150632,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":150637,"byte_end":150644,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":150649,"byte_end":150690,"line_start":945,"line_end":945,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":150695,"byte_end":150738,"line_start":946,"line_end":946,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":150743,"byte_end":150746,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":150751,"byte_end":150797,"line_start":948,"line_end":948,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":150802,"byte_end":150805,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":150810,"byte_end":150874,"line_start":950,"line_end":950,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":150879,"byte_end":150888,"line_start":951,"line_end":951,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":150893,"byte_end":150900,"line_start":952,"line_end":952,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2629},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151577,"byte_end":151581,"line_start":976,"line_end":976,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151050,"byte_end":151122,"line_start":960,"line_end":960,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151127,"byte_end":151130,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151135,"byte_end":151208,"line_start":962,"line_end":962,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151213,"byte_end":151259,"line_start":963,"line_end":963,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151264,"byte_end":151267,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151272,"byte_end":151286,"line_start":965,"line_end":965,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151291,"byte_end":151294,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151299,"byte_end":151306,"line_start":967,"line_end":967,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151311,"byte_end":151352,"line_start":968,"line_end":968,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151357,"byte_end":151400,"line_start":969,"line_end":969,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151405,"byte_end":151408,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151413,"byte_end":151459,"line_start":971,"line_end":971,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151464,"byte_end":151467,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151472,"byte_end":151543,"line_start":973,"line_end":973,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151548,"byte_end":151557,"line_start":974,"line_end":974,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151562,"byte_end":151569,"line_start":975,"line_end":975,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2630},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153202,"byte_end":153206,"line_start":1022,"line_end":1022,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151719,"byte_end":151790,"line_start":983,"line_end":983,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151795,"byte_end":151868,"line_start":984,"line_end":984,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151873,"byte_end":151911,"line_start":985,"line_end":985,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151916,"byte_end":151919,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151924,"byte_end":151978,"line_start":987,"line_end":987,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151983,"byte_end":152055,"line_start":988,"line_end":988,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152060,"byte_end":152136,"line_start":989,"line_end":989,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152141,"byte_end":152209,"line_start":990,"line_end":990,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152214,"byte_end":152290,"line_start":991,"line_end":991,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152295,"byte_end":152317,"line_start":992,"line_end":992,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152322,"byte_end":152325,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152330,"byte_end":152397,"line_start":994,"line_end":994,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152402,"byte_end":152470,"line_start":995,"line_end":995,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152475,"byte_end":152488,"line_start":996,"line_end":996,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152493,"byte_end":152496,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152501,"byte_end":152515,"line_start":998,"line_end":998,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152520,"byte_end":152523,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152528,"byte_end":152535,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152540,"byte_end":152583,"line_start":1001,"line_end":1001,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152588,"byte_end":152631,"line_start":1002,"line_end":1002,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152636,"byte_end":152664,"line_start":1003,"line_end":1003,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152669,"byte_end":152672,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152677,"byte_end":152695,"line_start":1005,"line_end":1005,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152700,"byte_end":152738,"line_start":1006,"line_end":1006,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152743,"byte_end":152758,"line_start":1007,"line_end":1007,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152763,"byte_end":152780,"line_start":1008,"line_end":1008,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152785,"byte_end":152827,"line_start":1009,"line_end":1009,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152832,"byte_end":152867,"line_start":1010,"line_end":1010,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152872,"byte_end":152916,"line_start":1011,"line_end":1011,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152921,"byte_end":152930,"line_start":1012,"line_end":1012,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152935,"byte_end":152949,"line_start":1013,"line_end":1013,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152954,"byte_end":152957,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152962,"byte_end":153005,"line_start":1015,"line_end":1015,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153010,"byte_end":153047,"line_start":1016,"line_end":1016,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153052,"byte_end":153089,"line_start":1017,"line_end":1017,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153094,"byte_end":153128,"line_start":1018,"line_end":1018,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153133,"byte_end":153167,"line_start":1019,"line_end":1019,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153172,"byte_end":153182,"line_start":1020,"line_end":1020,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153187,"byte_end":153194,"line_start":1021,"line_end":1021,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2631},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154135,"byte_end":154141,"line_start":1055,"line_end":1055,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153331,"byte_end":153378,"line_start":1029,"line_end":1029,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153383,"byte_end":153386,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153391,"byte_end":153465,"line_start":1031,"line_end":1031,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153470,"byte_end":153507,"line_start":1032,"line_end":1032,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153512,"byte_end":153515,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153520,"byte_end":153534,"line_start":1034,"line_end":1034,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153539,"byte_end":153542,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153547,"byte_end":153554,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153559,"byte_end":153600,"line_start":1037,"line_end":1037,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153605,"byte_end":153648,"line_start":1038,"line_end":1038,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153653,"byte_end":153656,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153661,"byte_end":153701,"line_start":1040,"line_end":1040,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153706,"byte_end":153709,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153714,"byte_end":153743,"line_start":1042,"line_end":1042,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153748,"byte_end":153776,"line_start":1043,"line_end":1043,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153781,"byte_end":153838,"line_start":1044,"line_end":1044,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153843,"byte_end":153870,"line_start":1045,"line_end":1045,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153875,"byte_end":153898,"line_start":1046,"line_end":1046,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153903,"byte_end":153906,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153911,"byte_end":153946,"line_start":1048,"line_end":1048,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153951,"byte_end":153979,"line_start":1049,"line_end":1049,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153984,"byte_end":154041,"line_start":1050,"line_end":1050,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154046,"byte_end":154073,"line_start":1051,"line_end":1051,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154078,"byte_end":154101,"line_start":1052,"line_end":1052,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154106,"byte_end":154115,"line_start":1053,"line_end":1053,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154120,"byte_end":154127,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2632},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160253,"byte_end":160256,"line_start":1222,"line_end":1222,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159565,"byte_end":159613,"line_start":1200,"line_end":1200,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159618,"byte_end":159621,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159626,"byte_end":159699,"line_start":1202,"line_end":1202,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159704,"byte_end":159776,"line_start":1203,"line_end":1203,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159781,"byte_end":159794,"line_start":1204,"line_end":1204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159799,"byte_end":159802,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159807,"byte_end":159821,"line_start":1206,"line_end":1206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159826,"byte_end":159829,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159834,"byte_end":159841,"line_start":1208,"line_end":1208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159846,"byte_end":159887,"line_start":1209,"line_end":1209,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159892,"byte_end":159935,"line_start":1210,"line_end":1210,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159940,"byte_end":159943,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159948,"byte_end":159986,"line_start":1212,"line_end":1212,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159991,"byte_end":160030,"line_start":1213,"line_end":1213,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160035,"byte_end":160038,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160043,"byte_end":160077,"line_start":1215,"line_end":1215,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160082,"byte_end":160123,"line_start":1216,"line_end":1216,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160128,"byte_end":160156,"line_start":1217,"line_end":1217,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160161,"byte_end":160211,"line_start":1218,"line_end":1218,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160216,"byte_end":160225,"line_start":1219,"line_end":1219,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160230,"byte_end":160237,"line_start":1220,"line_end":1220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160242,"byte_end":160245,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2634},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161164,"byte_end":161169,"line_start":1253,"line_end":1253,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160437,"byte_end":160474,"line_start":1230,"line_end":1230,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160479,"byte_end":160482,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160487,"byte_end":160558,"line_start":1232,"line_end":1232,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160563,"byte_end":160639,"line_start":1233,"line_end":1233,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160644,"byte_end":160647,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160652,"byte_end":160659,"line_start":1235,"line_end":1235,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160664,"byte_end":160705,"line_start":1236,"line_end":1236,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160710,"byte_end":160753,"line_start":1237,"line_end":1237,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160758,"byte_end":160761,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160766,"byte_end":160823,"line_start":1239,"line_end":1239,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160828,"byte_end":160884,"line_start":1240,"line_end":1240,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160889,"byte_end":160892,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160897,"byte_end":160937,"line_start":1242,"line_end":1242,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160942,"byte_end":160945,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160950,"byte_end":160998,"line_start":1244,"line_end":1244,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161003,"byte_end":161031,"line_start":1245,"line_end":1245,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161036,"byte_end":161051,"line_start":1246,"line_end":1246,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161056,"byte_end":161075,"line_start":1247,"line_end":1247,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161080,"byte_end":161098,"line_start":1248,"line_end":1248,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161103,"byte_end":161118,"line_start":1249,"line_end":1249,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161123,"byte_end":161130,"line_start":1250,"line_end":1250,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161135,"byte_end":161144,"line_start":1251,"line_end":1251,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161149,"byte_end":161156,"line_start":1252,"line_end":1252,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2636},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161507,"byte_end":161515,"line_start":1264,"line_end":1264,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161361,"byte_end":161416,"line_start":1261,"line_end":1261,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161421,"byte_end":161424,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161429,"byte_end":161499,"line_start":1263,"line_end":1263,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166462,"byte_end":166469,"line_start":1376,"line_end":1376,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166159,"byte_end":166232,"line_start":1371,"line_end":1371,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166237,"byte_end":166240,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166245,"byte_end":166314,"line_start":1373,"line_end":1373,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166319,"byte_end":166388,"line_start":1374,"line_end":1374,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166393,"byte_end":166454,"line_start":1375,"line_end":1375,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2639},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166925,"byte_end":166936,"line_start":1389,"line_end":1389,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166646,"byte_end":166721,"line_start":1384,"line_end":1384,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166726,"byte_end":166747,"line_start":1385,"line_end":1385,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166752,"byte_end":166755,"line_start":1386,"line_end":1386,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166760,"byte_end":166840,"line_start":1387,"line_end":1387,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166845,"byte_end":166917,"line_start":1388,"line_end":1388,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167389,"byte_end":167401,"line_start":1402,"line_end":1402,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167110,"byte_end":167186,"line_start":1397,"line_end":1397,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167191,"byte_end":167212,"line_start":1398,"line_end":1398,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167217,"byte_end":167220,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167225,"byte_end":167304,"line_start":1400,"line_end":1400,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167309,"byte_end":167381,"line_start":1401,"line_end":1401,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2643},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167677,"byte_end":167692,"line_start":1412,"line_end":1412,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167576,"byte_end":167647,"line_start":1410,"line_end":1410,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167652,"byte_end":167669,"line_start":1411,"line_end":1411,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2644},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169793,"byte_end":169809,"line_start":1467,"line_end":1467,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167839,"byte_end":167914,"line_start":1419,"line_end":1419,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167919,"byte_end":167929,"line_start":1420,"line_end":1420,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167934,"byte_end":167937,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167942,"byte_end":168015,"line_start":1422,"line_end":1422,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168020,"byte_end":168088,"line_start":1423,"line_end":1423,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168093,"byte_end":168141,"line_start":1424,"line_end":1424,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168146,"byte_end":168221,"line_start":1425,"line_end":1425,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168226,"byte_end":168302,"line_start":1426,"line_end":1426,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168307,"byte_end":168333,"line_start":1427,"line_end":1427,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168338,"byte_end":168341,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168346,"byte_end":168419,"line_start":1429,"line_end":1429,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168424,"byte_end":168494,"line_start":1430,"line_end":1430,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168499,"byte_end":168539,"line_start":1431,"line_end":1431,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168544,"byte_end":168547,"line_start":1432,"line_end":1432,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168552,"byte_end":168606,"line_start":1433,"line_end":1433,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168611,"byte_end":168695,"line_start":1434,"line_end":1434,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168700,"byte_end":168703,"line_start":1435,"line_end":1435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168708,"byte_end":168722,"line_start":1436,"line_end":1436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168727,"byte_end":168730,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168735,"byte_end":168742,"line_start":1438,"line_end":1438,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168747,"byte_end":168788,"line_start":1439,"line_end":1439,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168793,"byte_end":168827,"line_start":1440,"line_end":1440,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168832,"byte_end":168887,"line_start":1441,"line_end":1441,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168892,"byte_end":168895,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168900,"byte_end":168935,"line_start":1443,"line_end":1443,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168940,"byte_end":168990,"line_start":1444,"line_end":1444,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168995,"byte_end":169017,"line_start":1445,"line_end":1445,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169022,"byte_end":169032,"line_start":1446,"line_end":1446,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169037,"byte_end":169054,"line_start":1447,"line_end":1447,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169059,"byte_end":169085,"line_start":1448,"line_end":1448,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169090,"byte_end":169145,"line_start":1449,"line_end":1449,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169150,"byte_end":169179,"line_start":1450,"line_end":1450,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169184,"byte_end":169247,"line_start":1451,"line_end":1451,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169252,"byte_end":169298,"line_start":1452,"line_end":1452,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169303,"byte_end":169317,"line_start":1453,"line_end":1453,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169322,"byte_end":169391,"line_start":1454,"line_end":1454,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169396,"byte_end":169421,"line_start":1455,"line_end":1455,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169426,"byte_end":169479,"line_start":1456,"line_end":1456,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169484,"byte_end":169513,"line_start":1457,"line_end":1457,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169518,"byte_end":169531,"line_start":1458,"line_end":1458,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169536,"byte_end":169606,"line_start":1459,"line_end":1459,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169611,"byte_end":169670,"line_start":1460,"line_end":1460,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169675,"byte_end":169705,"line_start":1461,"line_end":1461,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169710,"byte_end":169719,"line_start":1462,"line_end":1462,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169724,"byte_end":169729,"line_start":1463,"line_end":1463,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169734,"byte_end":169759,"line_start":1464,"line_end":1464,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169764,"byte_end":169773,"line_start":1465,"line_end":1465,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169778,"byte_end":169785,"line_start":1466,"line_end":1466,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8302},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":274960,"byte_end":274967,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":8306},{"krate":0,"index":8307},{"krate":0,"index":8308}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8366},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":239169,"byte_end":239176,"line_start":28,"line_end":28,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":8369}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8435},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":239424,"byte_end":239433,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":8438}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8504},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":239734,"byte_end":239744,"line_start":42,"line_end":42,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":8507}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8575},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":277709,"byte_end":277719,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":8577}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8613},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":240170,"byte_end":240175,"line_start":53,"line_end":53,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":8616}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8682},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":240452,"byte_end":240458,"line_start":60,"line_end":60,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":8685}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8748},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":279067,"byte_end":279073,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":8752},{"krate":0,"index":8753},{"krate":0,"index":8754}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8809},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":281909,"byte_end":281916,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":8812}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":281742,"byte_end":281812,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":281830,"byte_end":281897,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8817},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":283001,"byte_end":283011,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":8821},{"krate":0,"index":8822},{"krate":0,"index":8823}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8874},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":284897,"byte_end":284906,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":8878},{"krate":0,"index":8879},{"krate":0,"index":8880},{"krate":0,"index":8881}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8939},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":288041,"byte_end":288053,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":8943},{"krate":0,"index":8944},{"krate":0,"index":8945}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9005},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":291058,"byte_end":291068,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9007},{"krate":0,"index":9008}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9051},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":293246,"byte_end":293256,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":9054},{"krate":0,"index":9055}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9098},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":294605,"byte_end":294614,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":9100},{"krate":0,"index":9101}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9133},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":296028,"byte_end":296035,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":9138},{"krate":0,"index":9139},{"krate":0,"index":9140},{"krate":0,"index":9141}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3383},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300483,"byte_end":300493,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":298626,"byte_end":298702,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":298703,"byte_end":298706,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":298707,"byte_end":298783,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":298784,"byte_end":298854,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":298855,"byte_end":298914,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":298915,"byte_end":298918,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":298919,"byte_end":298997,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":298998,"byte_end":299075,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299076,"byte_end":299140,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299141,"byte_end":299144,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299145,"byte_end":299217,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299218,"byte_end":299296,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299297,"byte_end":299326,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299327,"byte_end":299330,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299331,"byte_end":299408,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299409,"byte_end":299473,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299474,"byte_end":299526,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299527,"byte_end":299530,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299531,"byte_end":299608,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299609,"byte_end":299681,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299682,"byte_end":299751,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299752,"byte_end":299830,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299831,"byte_end":299834,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299835,"byte_end":299848,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299849,"byte_end":299852,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299853,"byte_end":299860,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299861,"byte_end":299894,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299895,"byte_end":299918,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299919,"byte_end":299960,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":299961,"byte_end":300007,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300008,"byte_end":300011,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300012,"byte_end":300071,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300072,"byte_end":300094,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300095,"byte_end":300129,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300130,"byte_end":300139,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300140,"byte_end":300143,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300144,"byte_end":300167,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300168,"byte_end":300207,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300208,"byte_end":300244,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300245,"byte_end":300288,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300289,"byte_end":300305,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300306,"byte_end":300326,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300327,"byte_end":300336,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300337,"byte_end":300344,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300345,"byte_end":300348,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300349,"byte_end":300414,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300415,"byte_end":300457,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300458,"byte_end":300467,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300468,"byte_end":300475,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9202},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":300856,"byte_end":300865,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":9206},{"krate":0,"index":9207},{"krate":0,"index":9208}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9259},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":302773,"byte_end":302785,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":9263},{"krate":0,"index":9264},{"krate":0,"index":9265},{"krate":0,"index":9266},{"krate":0,"index":9267}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9328},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":306329,"byte_end":306341,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":9332},{"krate":0,"index":9333},{"krate":0,"index":9334},{"krate":0,"index":9335},{"krate":0,"index":9336}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3525},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243344,"byte_end":243356,"line_start":145,"line_end":145,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":3526},{"krate":0,"index":3528},{"krate":0,"index":3531},{"krate":0,"index":3534},{"krate":0,"index":3537},{"krate":0,"index":3540},{"krate":0,"index":3542},{"krate":0,"index":3544},{"krate":0,"index":3545},{"krate":0,"index":3546},{"krate":0,"index":3549},{"krate":0,"index":3552},{"krate":0,"index":3555},{"krate":0,"index":3557},{"krate":0,"index":3560},{"krate":0,"index":3564},{"krate":0,"index":3565},{"krate":0,"index":3569},{"krate":0,"index":3570}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243282,"byte_end":243333,"line_start":144,"line_end":144,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3526},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243898,"byte_end":243906,"line_start":163,"line_end":163,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243374,"byte_end":243448,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243453,"byte_end":243479,"line_start":147,"line_end":147,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243484,"byte_end":243487,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243492,"byte_end":243506,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243511,"byte_end":243514,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243519,"byte_end":243526,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243531,"byte_end":243572,"line_start":152,"line_end":152,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243577,"byte_end":243623,"line_start":153,"line_end":153,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243628,"byte_end":243631,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243636,"byte_end":243656,"line_start":155,"line_end":155,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243661,"byte_end":243706,"line_start":156,"line_end":156,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243711,"byte_end":243742,"line_start":157,"line_end":157,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243747,"byte_end":243750,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243755,"byte_end":243809,"line_start":159,"line_end":159,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243814,"byte_end":243865,"line_start":160,"line_end":160,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243870,"byte_end":243878,"line_start":161,"line_end":161,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243883,"byte_end":243890,"line_start":162,"line_end":162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3528},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244602,"byte_end":244608,"line_start":188,"line_end":188,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244082,"byte_end":244155,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244160,"byte_end":244191,"line_start":172,"line_end":172,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244196,"byte_end":244199,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244204,"byte_end":244218,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244223,"byte_end":244226,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244231,"byte_end":244238,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244243,"byte_end":244284,"line_start":177,"line_end":177,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244289,"byte_end":244335,"line_start":178,"line_end":178,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244340,"byte_end":244343,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244348,"byte_end":244368,"line_start":180,"line_end":180,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244373,"byte_end":244414,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244419,"byte_end":244450,"line_start":182,"line_end":182,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244455,"byte_end":244458,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244463,"byte_end":244516,"line_start":184,"line_end":184,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244521,"byte_end":244569,"line_start":185,"line_end":185,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244574,"byte_end":244582,"line_start":186,"line_end":186,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244587,"byte_end":244594,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3531},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245317,"byte_end":245324,"line_start":213,"line_end":213,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244798,"byte_end":244869,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244874,"byte_end":244905,"line_start":197,"line_end":197,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244910,"byte_end":244913,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244918,"byte_end":244932,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244937,"byte_end":244940,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244945,"byte_end":244952,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":244957,"byte_end":244998,"line_start":202,"line_end":202,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245003,"byte_end":245049,"line_start":203,"line_end":203,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245054,"byte_end":245057,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245062,"byte_end":245082,"line_start":205,"line_end":205,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245087,"byte_end":245128,"line_start":206,"line_end":206,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245133,"byte_end":245165,"line_start":207,"line_end":207,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245170,"byte_end":245173,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245178,"byte_end":245231,"line_start":209,"line_end":209,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245236,"byte_end":245284,"line_start":210,"line_end":210,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245289,"byte_end":245297,"line_start":211,"line_end":211,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245302,"byte_end":245309,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3534},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246929,"byte_end":246937,"line_start":259,"line_end":259,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245516,"byte_end":245592,"line_start":221,"line_end":221,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245597,"byte_end":245637,"line_start":222,"line_end":222,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245642,"byte_end":245645,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245650,"byte_end":245726,"line_start":224,"line_end":224,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245731,"byte_end":245807,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245812,"byte_end":245885,"line_start":226,"line_end":226,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245890,"byte_end":245932,"line_start":227,"line_end":227,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245937,"byte_end":245940,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":245945,"byte_end":246018,"line_start":229,"line_end":229,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246023,"byte_end":246054,"line_start":230,"line_end":230,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246059,"byte_end":246062,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246067,"byte_end":246141,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246146,"byte_end":246220,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246225,"byte_end":246241,"line_start":234,"line_end":234,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246246,"byte_end":246249,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246254,"byte_end":246325,"line_start":236,"line_end":236,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246330,"byte_end":246356,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246361,"byte_end":246364,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246369,"byte_end":246441,"line_start":239,"line_end":239,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246446,"byte_end":246495,"line_start":240,"line_end":240,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246500,"byte_end":246503,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246508,"byte_end":246522,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246527,"byte_end":246530,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246535,"byte_end":246542,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246547,"byte_end":246578,"line_start":245,"line_end":245,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246583,"byte_end":246607,"line_start":246,"line_end":246,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246612,"byte_end":246650,"line_start":247,"line_end":247,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246655,"byte_end":246658,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246663,"byte_end":246719,"line_start":249,"line_end":249,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246724,"byte_end":246727,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246732,"byte_end":246767,"line_start":251,"line_end":251,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246772,"byte_end":246811,"line_start":252,"line_end":252,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246816,"byte_end":246840,"line_start":253,"line_end":253,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246845,"byte_end":246861,"line_start":254,"line_end":254,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246866,"byte_end":246882,"line_start":255,"line_end":255,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246887,"byte_end":246897,"line_start":256,"line_end":256,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246902,"byte_end":246909,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":246914,"byte_end":246921,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3537},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":248089,"byte_end":248096,"line_start":285,"line_end":285,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":247190,"byte_end":247255,"line_start":268,"line_end":268,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":247260,"byte_end":247309,"line_start":269,"line_end":269,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":247314,"byte_end":247317,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":247322,"byte_end":247401,"line_start":271,"line_end":271,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":247406,"byte_end":247480,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":247485,"byte_end":247561,"line_start":273,"line_end":273,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":247566,"byte_end":247611,"line_start":274,"line_end":274,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":247616,"byte_end":247619,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":247624,"byte_end":247699,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":247704,"byte_end":247744,"line_start":277,"line_end":277,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":247749,"byte_end":247752,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":247757,"byte_end":247866,"line_start":279,"line_end":279,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":247871,"byte_end":247945,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":247950,"byte_end":247966,"line_start":281,"line_end":281,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":247971,"byte_end":247974,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":247979,"byte_end":248050,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":248055,"byte_end":248081,"line_start":284,"line_end":284,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3540},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":248648,"byte_end":248658,"line_start":300,"line_end":300,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":248345,"byte_end":248419,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":248424,"byte_end":248434,"line_start":295,"line_end":295,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":248439,"byte_end":248442,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":248447,"byte_end":248517,"line_start":297,"line_end":297,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":248522,"byte_end":248598,"line_start":298,"line_end":298,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":248603,"byte_end":248640,"line_start":299,"line_end":299,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3542},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249147,"byte_end":249158,"line_start":313,"line_end":313,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":248856,"byte_end":248935,"line_start":308,"line_end":308,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":248940,"byte_end":248943,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":248948,"byte_end":249018,"line_start":310,"line_end":310,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249023,"byte_end":249097,"line_start":311,"line_end":311,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249102,"byte_end":249139,"line_start":312,"line_end":312,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3544},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250079,"byte_end":250090,"line_start":342,"line_end":342,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249361,"byte_end":249414,"line_start":321,"line_end":321,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249419,"byte_end":249463,"line_start":322,"line_end":322,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249468,"byte_end":249471,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249476,"byte_end":249525,"line_start":324,"line_end":324,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249530,"byte_end":249603,"line_start":325,"line_end":325,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249608,"byte_end":249628,"line_start":326,"line_end":326,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249633,"byte_end":249636,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249641,"byte_end":249655,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249660,"byte_end":249663,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249668,"byte_end":249675,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249680,"byte_end":249739,"line_start":331,"line_end":331,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249744,"byte_end":249747,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249752,"byte_end":249771,"line_start":333,"line_end":333,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249776,"byte_end":249794,"line_start":334,"line_end":334,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249799,"byte_end":249871,"line_start":335,"line_end":335,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249876,"byte_end":249906,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249911,"byte_end":249918,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":249923,"byte_end":249997,"line_start":338,"line_end":338,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250002,"byte_end":250005,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250010,"byte_end":250059,"line_start":340,"line_end":340,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250064,"byte_end":250071,"line_start":341,"line_end":341,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3545},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250985,"byte_end":250993,"line_start":369,"line_end":369,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250246,"byte_end":250320,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250325,"byte_end":250399,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250404,"byte_end":250416,"line_start":351,"line_end":351,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250421,"byte_end":250424,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250429,"byte_end":250496,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250501,"byte_end":250573,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250578,"byte_end":250617,"line_start":355,"line_end":355,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250622,"byte_end":250625,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250630,"byte_end":250644,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250649,"byte_end":250652,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250657,"byte_end":250664,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250669,"byte_end":250710,"line_start":360,"line_end":360,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250715,"byte_end":250761,"line_start":361,"line_end":361,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250766,"byte_end":250769,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250774,"byte_end":250831,"line_start":363,"line_end":363,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250836,"byte_end":250839,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250844,"byte_end":250898,"line_start":365,"line_end":365,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250903,"byte_end":250952,"line_start":366,"line_end":366,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250957,"byte_end":250965,"line_start":367,"line_end":367,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":250970,"byte_end":250977,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3546},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252345,"byte_end":252357,"line_start":409,"line_end":409,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251160,"byte_end":251229,"line_start":376,"line_end":376,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251234,"byte_end":251290,"line_start":377,"line_end":377,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251295,"byte_end":251298,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251303,"byte_end":251378,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251383,"byte_end":251453,"line_start":380,"line_end":380,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251458,"byte_end":251496,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251501,"byte_end":251504,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251509,"byte_end":251587,"line_start":383,"line_end":383,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251592,"byte_end":251652,"line_start":384,"line_end":384,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251657,"byte_end":251714,"line_start":385,"line_end":385,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251719,"byte_end":251786,"line_start":386,"line_end":386,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251791,"byte_end":251821,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251826,"byte_end":251829,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251834,"byte_end":251848,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251853,"byte_end":251856,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251861,"byte_end":251868,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251873,"byte_end":251914,"line_start":392,"line_end":392,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251919,"byte_end":251943,"line_start":393,"line_end":393,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251948,"byte_end":251994,"line_start":394,"line_end":394,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":251999,"byte_end":252002,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252007,"byte_end":252028,"line_start":396,"line_end":396,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252033,"byte_end":252036,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252041,"byte_end":252046,"line_start":398,"line_end":398,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252051,"byte_end":252112,"line_start":399,"line_end":399,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252117,"byte_end":252139,"line_start":400,"line_end":400,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252144,"byte_end":252208,"line_start":401,"line_end":401,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252213,"byte_end":252224,"line_start":402,"line_end":402,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252229,"byte_end":252268,"line_start":403,"line_end":403,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252273,"byte_end":252278,"line_start":404,"line_end":404,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252283,"byte_end":252286,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252291,"byte_end":252312,"line_start":406,"line_end":406,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252317,"byte_end":252325,"line_start":407,"line_end":407,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252330,"byte_end":252337,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3549},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253370,"byte_end":253384,"line_start":439,"line_end":439,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252621,"byte_end":252695,"line_start":418,"line_end":418,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252700,"byte_end":252723,"line_start":419,"line_end":419,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252728,"byte_end":252731,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252736,"byte_end":252767,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252772,"byte_end":252849,"line_start":422,"line_end":422,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252854,"byte_end":252883,"line_start":423,"line_end":423,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252888,"byte_end":252891,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252896,"byte_end":252910,"line_start":425,"line_end":425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252915,"byte_end":252918,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252923,"byte_end":252930,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252935,"byte_end":252976,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":252981,"byte_end":253005,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253010,"byte_end":253056,"line_start":430,"line_end":430,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253061,"byte_end":253064,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253069,"byte_end":253138,"line_start":432,"line_end":432,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253143,"byte_end":253213,"line_start":433,"line_end":433,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253218,"byte_end":253221,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253226,"byte_end":253293,"line_start":435,"line_end":435,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253298,"byte_end":253337,"line_start":436,"line_end":436,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253342,"byte_end":253350,"line_start":437,"line_end":437,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253355,"byte_end":253362,"line_start":438,"line_end":438,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3552},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":254417,"byte_end":254431,"line_start":469,"line_end":469,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253661,"byte_end":253735,"line_start":448,"line_end":448,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253740,"byte_end":253763,"line_start":449,"line_end":449,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253768,"byte_end":253771,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253776,"byte_end":253807,"line_start":451,"line_end":451,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253812,"byte_end":253889,"line_start":452,"line_end":452,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253894,"byte_end":253923,"line_start":453,"line_end":453,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253928,"byte_end":253931,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253936,"byte_end":253950,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253955,"byte_end":253958,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253963,"byte_end":253970,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":253975,"byte_end":254016,"line_start":458,"line_end":458,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":254021,"byte_end":254045,"line_start":459,"line_end":459,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":254050,"byte_end":254096,"line_start":460,"line_end":460,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":254101,"byte_end":254104,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":254109,"byte_end":254185,"line_start":462,"line_end":462,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":254190,"byte_end":254260,"line_start":463,"line_end":463,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":254265,"byte_end":254268,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":254273,"byte_end":254340,"line_start":465,"line_end":465,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":254345,"byte_end":254384,"line_start":466,"line_end":466,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":254389,"byte_end":254397,"line_start":467,"line_end":467,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":254402,"byte_end":254409,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3555},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257818,"byte_end":257829,"line_start":568,"line_end":568,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":256779,"byte_end":256831,"line_start":538,"line_end":538,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":256836,"byte_end":256903,"line_start":539,"line_end":539,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":256908,"byte_end":256911,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":256916,"byte_end":256990,"line_start":541,"line_end":541,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":256995,"byte_end":257076,"line_start":542,"line_end":542,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257081,"byte_end":257151,"line_start":543,"line_end":543,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257156,"byte_end":257159,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257164,"byte_end":257232,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257237,"byte_end":257240,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257245,"byte_end":257259,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257264,"byte_end":257267,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257272,"byte_end":257279,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257284,"byte_end":257325,"line_start":550,"line_end":550,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257330,"byte_end":257361,"line_start":551,"line_end":551,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257366,"byte_end":257404,"line_start":552,"line_end":552,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257409,"byte_end":257429,"line_start":553,"line_end":553,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257434,"byte_end":257437,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257442,"byte_end":257479,"line_start":555,"line_end":555,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257484,"byte_end":257487,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257492,"byte_end":257519,"line_start":557,"line_end":557,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257524,"byte_end":257548,"line_start":558,"line_end":558,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257553,"byte_end":257599,"line_start":559,"line_end":559,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257604,"byte_end":257613,"line_start":560,"line_end":560,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257618,"byte_end":257661,"line_start":561,"line_end":561,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257666,"byte_end":257673,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257678,"byte_end":257681,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257686,"byte_end":257749,"line_start":564,"line_end":564,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257754,"byte_end":257785,"line_start":565,"line_end":565,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257790,"byte_end":257798,"line_start":566,"line_end":566,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":257803,"byte_end":257810,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3557},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":259300,"byte_end":259310,"line_start":605,"line_end":605,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258012,"byte_end":258085,"line_start":575,"line_end":575,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258090,"byte_end":258124,"line_start":576,"line_end":576,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258129,"byte_end":258132,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258137,"byte_end":258212,"line_start":578,"line_end":578,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258217,"byte_end":258292,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258297,"byte_end":258370,"line_start":580,"line_end":580,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258375,"byte_end":258446,"line_start":581,"line_end":581,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258451,"byte_end":258501,"line_start":582,"line_end":582,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258506,"byte_end":258509,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258514,"byte_end":258585,"line_start":584,"line_end":584,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258590,"byte_end":258593,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258598,"byte_end":258674,"line_start":586,"line_end":586,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258679,"byte_end":258749,"line_start":587,"line_end":587,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258754,"byte_end":258779,"line_start":588,"line_end":588,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258784,"byte_end":258787,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258792,"byte_end":258806,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258811,"byte_end":258818,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258823,"byte_end":258864,"line_start":592,"line_end":592,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258869,"byte_end":258893,"line_start":593,"line_end":593,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258898,"byte_end":258955,"line_start":594,"line_end":594,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258960,"byte_end":258963,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":258968,"byte_end":259048,"line_start":596,"line_end":596,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":259053,"byte_end":259096,"line_start":597,"line_end":597,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":259101,"byte_end":259134,"line_start":598,"line_end":598,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":259139,"byte_end":259146,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":259151,"byte_end":259154,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":259159,"byte_end":259207,"line_start":601,"line_end":601,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":259212,"byte_end":259267,"line_start":602,"line_end":602,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":259272,"byte_end":259280,"line_start":603,"line_end":603,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":259285,"byte_end":259292,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3560},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260937,"byte_end":260951,"line_start":646,"line_end":646,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":259561,"byte_end":259623,"line_start":614,"line_end":614,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":259628,"byte_end":259696,"line_start":615,"line_end":615,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":259701,"byte_end":259735,"line_start":616,"line_end":616,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":259740,"byte_end":259743,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":259748,"byte_end":259823,"line_start":618,"line_end":618,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":259828,"byte_end":259903,"line_start":619,"line_end":619,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":259908,"byte_end":259984,"line_start":620,"line_end":620,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":259989,"byte_end":260054,"line_start":621,"line_end":621,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260059,"byte_end":260062,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260067,"byte_end":260138,"line_start":623,"line_end":623,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260143,"byte_end":260146,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260151,"byte_end":260227,"line_start":625,"line_end":625,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260232,"byte_end":260306,"line_start":626,"line_end":626,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260311,"byte_end":260336,"line_start":627,"line_end":627,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260341,"byte_end":260344,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260349,"byte_end":260363,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260368,"byte_end":260375,"line_start":630,"line_end":630,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260380,"byte_end":260421,"line_start":631,"line_end":631,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260426,"byte_end":260483,"line_start":632,"line_end":632,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260488,"byte_end":260513,"line_start":633,"line_end":633,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260518,"byte_end":260521,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260526,"byte_end":260596,"line_start":635,"line_end":635,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260601,"byte_end":260656,"line_start":636,"line_end":636,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260661,"byte_end":260723,"line_start":637,"line_end":637,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260728,"byte_end":260743,"line_start":638,"line_end":638,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260748,"byte_end":260755,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260760,"byte_end":260763,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260768,"byte_end":260789,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260794,"byte_end":260843,"line_start":642,"line_end":642,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260848,"byte_end":260904,"line_start":643,"line_end":643,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260909,"byte_end":260917,"line_start":644,"line_end":644,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":260922,"byte_end":260929,"line_start":645,"line_end":645,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3564},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262643,"byte_end":262654,"line_start":693,"line_end":693,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261228,"byte_end":261293,"line_start":655,"line_end":655,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261298,"byte_end":261301,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261306,"byte_end":261379,"line_start":657,"line_end":657,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261384,"byte_end":261457,"line_start":658,"line_end":658,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261462,"byte_end":261535,"line_start":659,"line_end":659,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261540,"byte_end":261610,"line_start":660,"line_end":660,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261615,"byte_end":261618,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261623,"byte_end":261637,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261642,"byte_end":261645,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261650,"byte_end":261657,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261662,"byte_end":261703,"line_start":665,"line_end":665,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261708,"byte_end":261739,"line_start":666,"line_end":666,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261744,"byte_end":261795,"line_start":667,"line_end":667,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261800,"byte_end":261820,"line_start":668,"line_end":668,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261825,"byte_end":261828,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261833,"byte_end":261872,"line_start":670,"line_end":670,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261877,"byte_end":261916,"line_start":671,"line_end":671,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261921,"byte_end":261960,"line_start":672,"line_end":672,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261965,"byte_end":261968,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":261973,"byte_end":262000,"line_start":674,"line_end":674,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262005,"byte_end":262048,"line_start":675,"line_end":675,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262053,"byte_end":262060,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262065,"byte_end":262092,"line_start":677,"line_end":677,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262097,"byte_end":262140,"line_start":678,"line_end":678,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262145,"byte_end":262189,"line_start":679,"line_end":679,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262194,"byte_end":262201,"line_start":680,"line_end":680,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262206,"byte_end":262233,"line_start":681,"line_end":681,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262238,"byte_end":262283,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262288,"byte_end":262333,"line_start":683,"line_end":683,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262338,"byte_end":262382,"line_start":684,"line_end":684,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262387,"byte_end":262394,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262399,"byte_end":262402,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262407,"byte_end":262446,"line_start":687,"line_end":687,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262451,"byte_end":262500,"line_start":688,"line_end":688,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262505,"byte_end":262554,"line_start":689,"line_end":689,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262559,"byte_end":262609,"line_start":690,"line_end":690,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262614,"byte_end":262623,"line_start":691,"line_end":691,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262628,"byte_end":262635,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3565},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":264246,"byte_end":264254,"line_start":732,"line_end":732,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":262959,"byte_end":263029,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263034,"byte_end":263094,"line_start":705,"line_end":705,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263099,"byte_end":263102,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263107,"byte_end":263177,"line_start":707,"line_end":707,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263182,"byte_end":263258,"line_start":708,"line_end":708,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263263,"byte_end":263339,"line_start":709,"line_end":709,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263344,"byte_end":263414,"line_start":710,"line_end":710,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263419,"byte_end":263445,"line_start":711,"line_end":711,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263450,"byte_end":263453,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263458,"byte_end":263538,"line_start":713,"line_end":713,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263543,"byte_end":263612,"line_start":714,"line_end":714,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263617,"byte_end":263638,"line_start":715,"line_end":715,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263643,"byte_end":263646,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263651,"byte_end":263665,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263670,"byte_end":263673,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263678,"byte_end":263685,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263690,"byte_end":263731,"line_start":720,"line_end":720,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263736,"byte_end":263782,"line_start":721,"line_end":721,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263787,"byte_end":263790,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263795,"byte_end":263864,"line_start":723,"line_end":723,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263869,"byte_end":263946,"line_start":724,"line_end":724,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263951,"byte_end":263984,"line_start":725,"line_end":725,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263989,"byte_end":263992,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":263997,"byte_end":264083,"line_start":727,"line_end":727,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":264088,"byte_end":264174,"line_start":728,"line_end":728,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":264179,"byte_end":264213,"line_start":729,"line_end":729,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":264218,"byte_end":264226,"line_start":730,"line_end":730,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":264231,"byte_end":264238,"line_start":731,"line_end":731,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3569},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265780,"byte_end":265790,"line_start":775,"line_end":775,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":264534,"byte_end":264596,"line_start":741,"line_end":741,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":264601,"byte_end":264676,"line_start":742,"line_end":742,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":264681,"byte_end":264684,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":264689,"byte_end":264760,"line_start":744,"line_end":744,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":264765,"byte_end":264841,"line_start":745,"line_end":745,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":264846,"byte_end":264885,"line_start":746,"line_end":746,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":264890,"byte_end":264893,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":264898,"byte_end":264984,"line_start":748,"line_end":748,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":264989,"byte_end":264992,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":264997,"byte_end":265081,"line_start":750,"line_end":750,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265086,"byte_end":265142,"line_start":751,"line_end":751,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265147,"byte_end":265150,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265155,"byte_end":265169,"line_start":753,"line_end":753,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265174,"byte_end":265177,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265182,"byte_end":265189,"line_start":755,"line_end":755,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265194,"byte_end":265235,"line_start":756,"line_end":756,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265240,"byte_end":265271,"line_start":757,"line_end":757,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265276,"byte_end":265314,"line_start":758,"line_end":758,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265319,"byte_end":265339,"line_start":759,"line_end":759,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265344,"byte_end":265347,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265352,"byte_end":265413,"line_start":761,"line_end":761,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265418,"byte_end":265421,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265426,"byte_end":265453,"line_start":763,"line_end":763,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265458,"byte_end":265489,"line_start":764,"line_end":764,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265494,"byte_end":265520,"line_start":765,"line_end":765,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265525,"byte_end":265595,"line_start":766,"line_end":766,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265600,"byte_end":265609,"line_start":767,"line_end":767,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265614,"byte_end":265621,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265626,"byte_end":265629,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265634,"byte_end":265673,"line_start":770,"line_end":770,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265678,"byte_end":265681,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265686,"byte_end":265746,"line_start":772,"line_end":772,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265751,"byte_end":265760,"line_start":773,"line_end":773,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":265765,"byte_end":265772,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3570},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":271980,"byte_end":271999,"line_start":932,"line_end":932,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":271872,"byte_end":271950,"line_start":930,"line_end":930,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":271955,"byte_end":271972,"line_start":931,"line_end":931,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":9397},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":309805,"byte_end":309809,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":9399}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":309683,"byte_end":309720,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":309745,"byte_end":309793,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3654},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":310327,"byte_end":310331,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":309861,"byte_end":309925,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":309926,"byte_end":309954,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":309955,"byte_end":309958,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":309959,"byte_end":310032,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":310033,"byte_end":310088,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":310089,"byte_end":310092,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":310093,"byte_end":310100,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":310101,"byte_end":310142,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":310143,"byte_end":310186,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":310187,"byte_end":310190,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":310191,"byte_end":310235,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":310236,"byte_end":310301,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":310302,"byte_end":310311,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":310312,"byte_end":310319,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9406},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311022,"byte_end":311028,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":9408}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":310898,"byte_end":310937,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":310962,"byte_end":311010,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3689},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311552,"byte_end":311558,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311050,"byte_end":311110,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311111,"byte_end":311114,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311115,"byte_end":311182,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311183,"byte_end":311255,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311256,"byte_end":311313,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311314,"byte_end":311317,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311318,"byte_end":311325,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311326,"byte_end":311367,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311368,"byte_end":311411,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311412,"byte_end":311415,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311416,"byte_end":311451,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311452,"byte_end":311526,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311527,"byte_end":311536,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311537,"byte_end":311544,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9415},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":312549,"byte_end":312559,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":9417}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":312247,"byte_end":312307,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":312308,"byte_end":312360,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":312361,"byte_end":312364,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":312365,"byte_end":312428,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":312429,"byte_end":312464,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":312489,"byte_end":312537,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3742},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314847,"byte_end":314858,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313075,"byte_end":313146,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313147,"byte_end":313214,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313215,"byte_end":313218,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313219,"byte_end":313291,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313292,"byte_end":313295,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313296,"byte_end":313370,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313371,"byte_end":313423,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313424,"byte_end":313427,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313428,"byte_end":313500,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313501,"byte_end":313574,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313575,"byte_end":313612,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313613,"byte_end":313616,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313617,"byte_end":313631,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313632,"byte_end":313635,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313636,"byte_end":313652,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313653,"byte_end":313656,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313657,"byte_end":313664,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313665,"byte_end":313706,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313707,"byte_end":313750,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313751,"byte_end":313754,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313755,"byte_end":313823,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313824,"byte_end":313902,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313903,"byte_end":313934,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313935,"byte_end":313956,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313957,"byte_end":313960,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313961,"byte_end":313995,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":313996,"byte_end":314051,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314052,"byte_end":314055,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314056,"byte_end":314109,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314110,"byte_end":314163,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314164,"byte_end":314217,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314218,"byte_end":314227,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314228,"byte_end":314235,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314236,"byte_end":314239,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314240,"byte_end":314276,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314277,"byte_end":314280,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314281,"byte_end":314292,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314293,"byte_end":314334,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314335,"byte_end":314378,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314379,"byte_end":314382,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314383,"byte_end":314432,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314433,"byte_end":314454,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314455,"byte_end":314532,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314533,"byte_end":314566,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314567,"byte_end":314570,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314571,"byte_end":314614,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314615,"byte_end":314658,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314659,"byte_end":314702,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314703,"byte_end":314746,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314747,"byte_end":314750,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314751,"byte_end":314780,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314781,"byte_end":314821,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314822,"byte_end":314831,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":314832,"byte_end":314839,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9424},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":315249,"byte_end":315254,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":9426}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":315133,"byte_end":315171,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":315189,"byte_end":315237,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3776},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":315423,"byte_end":315428,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":315293,"byte_end":315341,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":315342,"byte_end":315345,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":315346,"byte_end":315415,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":3828},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":316513,"byte_end":316517,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":316206,"byte_end":316247,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":316248,"byte_end":316251,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":316252,"byte_end":316259,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":316260,"byte_end":316301,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":316302,"byte_end":316345,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":316346,"byte_end":316349,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":316350,"byte_end":316394,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":316395,"byte_end":316450,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":316451,"byte_end":316487,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":316488,"byte_end":316497,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":316498,"byte_end":316505,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9435},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":316779,"byte_end":316783,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":9437}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9466},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":317959,"byte_end":317966,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":9468}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":317839,"byte_end":317881,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":317899,"byte_end":317947,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3872},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":318142,"byte_end":318149,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":318010,"byte_end":318064,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":318065,"byte_end":318068,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":318069,"byte_end":318134,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3914},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":318992,"byte_end":318998,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":3916}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":318891,"byte_end":318931,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":318932,"byte_end":318980,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3922},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319686,"byte_end":319693,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319198,"byte_end":319271,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319272,"byte_end":319275,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319276,"byte_end":319335,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319336,"byte_end":319339,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319340,"byte_end":319354,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319355,"byte_end":319358,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319359,"byte_end":319366,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319367,"byte_end":319400,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319401,"byte_end":319429,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319430,"byte_end":319433,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319434,"byte_end":319463,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319464,"byte_end":319467,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319468,"byte_end":319532,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319533,"byte_end":319586,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319587,"byte_end":319608,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319609,"byte_end":319662,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319663,"byte_end":319670,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319671,"byte_end":319678,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9479},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":320413,"byte_end":320419,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":9482},{"krate":0,"index":9483},{"krate":0,"index":9484}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3968},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":321023,"byte_end":321029,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":320547,"byte_end":320615,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":320616,"byte_end":320692,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":320693,"byte_end":320741,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":320742,"byte_end":320745,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":320746,"byte_end":320820,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":320821,"byte_end":320890,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":320891,"byte_end":320918,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":320919,"byte_end":320922,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":320923,"byte_end":320994,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":320995,"byte_end":321015,"line_start":30,"line_end":30,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3974},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":321434,"byte_end":321441,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":321326,"byte_end":321400,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":321405,"byte_end":321422,"line_start":45,"line_end":45,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3975},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":321797,"byte_end":321804,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":321535,"byte_end":321603,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":321608,"byte_end":321639,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":321644,"byte_end":321647,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":321652,"byte_end":321725,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":321730,"byte_end":321785,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3976},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":322179,"byte_end":322190,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":321910,"byte_end":321985,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":321990,"byte_end":322021,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":322026,"byte_end":322029,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":322034,"byte_end":322107,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":322112,"byte_end":322167,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3977},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":322596,"byte_end":322606,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":322360,"byte_end":322423,"line_start":69,"line_end":69,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":322428,"byte_end":322431,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":322436,"byte_end":322508,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":322513,"byte_end":322584,"line_start":72,"line_end":72,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":4033},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325823,"byte_end":325829,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":324381,"byte_end":324451,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":324452,"byte_end":324455,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":324456,"byte_end":324525,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":324526,"byte_end":324607,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":324608,"byte_end":324639,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":324640,"byte_end":324643,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":324644,"byte_end":324723,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":324724,"byte_end":324803,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":324804,"byte_end":324858,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":324859,"byte_end":324862,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":324863,"byte_end":324943,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":324944,"byte_end":325014,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325015,"byte_end":325037,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325038,"byte_end":325041,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325042,"byte_end":325119,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325120,"byte_end":325192,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325193,"byte_end":325270,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325271,"byte_end":325331,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325332,"byte_end":325335,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325336,"byte_end":325349,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325350,"byte_end":325353,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325354,"byte_end":325361,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325362,"byte_end":325403,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325404,"byte_end":325447,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325448,"byte_end":325451,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325452,"byte_end":325507,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325508,"byte_end":325531,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325532,"byte_end":325571,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325572,"byte_end":325609,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325610,"byte_end":325649,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325650,"byte_end":325666,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325667,"byte_end":325683,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325684,"byte_end":325693,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325694,"byte_end":325701,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325702,"byte_end":325705,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325706,"byte_end":325758,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325759,"byte_end":325797,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325798,"byte_end":325807,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":325808,"byte_end":325815,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9525},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":326176,"byte_end":326182,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":9529},{"krate":0,"index":9530}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7287250,"byte_end":7287259,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":4079},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":4080},{"krate":0,"index":4081},{"krate":0,"index":4084},{"krate":0,"index":4087},{"krate":0,"index":4090},{"krate":0,"index":4093},{"krate":0,"index":4096},{"krate":0,"index":4097},{"krate":0,"index":4100},{"krate":0,"index":4103},{"krate":0,"index":4106},{"krate":0,"index":4109},{"krate":0,"index":4112},{"krate":0,"index":4115},{"krate":0,"index":9578},{"krate":0,"index":4118},{"krate":0,"index":4132},{"krate":0,"index":4133},{"krate":0,"index":4136}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":327721,"byte_end":327754,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":327755,"byte_end":327758,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":327759,"byte_end":327784,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":327785,"byte_end":327788,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":327789,"byte_end":327837,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":327838,"byte_end":327891,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":327892,"byte_end":327940,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":327941,"byte_end":327988,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":327989,"byte_end":327992,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":327993,"byte_end":328067,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":328068,"byte_end":328140,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":4130},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":329329,"byte_end":329337,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":329286,"byte_end":329318,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":4131},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":332093,"byte_end":332106,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":332045,"byte_end":332082,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":4139},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","parent":null,"children":[{"krate":0,"index":4140}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":334565,"byte_end":334607,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":334608,"byte_end":334611,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":334612,"byte_end":334678,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":4140},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":335315,"byte_end":335320,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":334680,"byte_end":334715,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":334716,"byte_end":334719,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":334720,"byte_end":334795,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":334796,"byte_end":334833,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":334834,"byte_end":334837,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":334838,"byte_end":334902,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":334903,"byte_end":334906,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":334907,"byte_end":334978,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":334979,"byte_end":335030,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":335031,"byte_end":335123,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":335124,"byte_end":335127,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":335128,"byte_end":335199,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":335200,"byte_end":335305,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Trait","id":{"krate":0,"index":4152},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":335423,"byte_end":335430,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":4154},{"krate":0,"index":4155}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4154},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":335445,"byte_end":335451,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":4152},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4155},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":335460,"byte_end":335469,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":4152},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4162},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":335662,"byte_end":335668,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":4164}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4164},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":335693,"byte_end":335701,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":4162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4179},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":337007,"byte_end":337011,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9599},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":337367,"byte_end":337374,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9620},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":338108,"byte_end":338121,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9636},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":338463,"byte_end":338472,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9651},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":339427,"byte_end":339434,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9666},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":340145,"byte_end":340153,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9681},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":340873,"byte_end":340884,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9693},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":341769,"byte_end":341781,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9705},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":342929,"byte_end":342943,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4343},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":343708,"byte_end":343714,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":35948,"byte_end":35955,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":36085,"byte_end":36092,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":36317,"byte_end":36324,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":37098,"byte_end":37105,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":37330,"byte_end":37337,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40351,"byte_end":40355,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40462,"byte_end":40466,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":42195,"byte_end":42199,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":42312,"byte_end":42316,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":43294,"byte_end":43297,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":43466,"byte_end":43469,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":43731,"byte_end":43734,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19099,"byte_end":19100,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":66541,"byte_end":66551,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":66702,"byte_end":66712,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":66835,"byte_end":66845,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":67554,"byte_end":67564,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":67694,"byte_end":67704,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":67947,"byte_end":67957,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":68910,"byte_end":68920,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":69163,"byte_end":69173,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":72497,"byte_end":72510,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":72640,"byte_end":72653,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":72896,"byte_end":72909,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":49087,"byte_end":49090,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74218,"byte_end":74222,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74818,"byte_end":74822,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74966,"byte_end":74970,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75573,"byte_end":75580,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":76141,"byte_end":76148,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":76293,"byte_end":76300,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":76326,"byte_end":76333,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77087,"byte_end":77096,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77699,"byte_end":77708,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":78806,"byte_end":78815,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":79016,"byte_end":79025,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":80345,"byte_end":80357,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":80583,"byte_end":80595,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":81708,"byte_end":81720,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":81924,"byte_end":81936,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":83593,"byte_end":83605,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":83919,"byte_end":83931,"line_start":45,"line_end":45,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":84118,"byte_end":84130,"line_start":54,"line_end":54,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84568,"byte_end":84574,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":85268,"byte_end":85274,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":85416,"byte_end":85422,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":85925,"byte_end":85930,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86109,"byte_end":86114,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86146,"byte_end":86151,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86248,"byte_end":86253,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93334,"byte_end":93340,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":95776,"byte_end":95782,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":96486,"byte_end":96492,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":104451,"byte_end":104460,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":106299,"byte_end":106308,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":108103,"byte_end":108109,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":108448,"byte_end":108454,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":108839,"byte_end":108845,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":109226,"byte_end":109232,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":109473,"byte_end":109479,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":109818,"byte_end":109824,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":110100,"byte_end":110106,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":110641,"byte_end":110647,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":170513,"byte_end":170518,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":170744,"byte_end":170749,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":170958,"byte_end":170963,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":172559,"byte_end":172566,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1335},{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":172831,"byte_end":172838,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":173016,"byte_end":173023,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":174049,"byte_end":174054,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":174448,"byte_end":174453,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1395}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":174703,"byte_end":174708,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1402},{"krate":0,"index":1403}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":175833,"byte_end":175839,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":176059,"byte_end":176065,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1443},{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":176773,"byte_end":176779,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":177442,"byte_end":177447,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1480}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":177603,"byte_end":177608,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":178357,"byte_end":178362,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":179110,"byte_end":179119,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1518},{"krate":0,"index":7018},{"krate":0,"index":7019},{"krate":0,"index":7020},{"krate":0,"index":7021}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":179305,"byte_end":179314,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":179432,"byte_end":179441,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":180882,"byte_end":180888,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":181361,"byte_end":181367,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1573},{"krate":0,"index":7083},{"krate":0,"index":7084},{"krate":0,"index":7085},{"krate":0,"index":7086}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":181690,"byte_end":181696,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":182033,"byte_end":182039,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":184211,"byte_end":184220,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1627}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":184517,"byte_end":184526,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1632},{"krate":0,"index":7144},{"krate":0,"index":7145},{"krate":0,"index":7146},{"krate":0,"index":7147}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":184793,"byte_end":184802,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":185069,"byte_end":185078,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":187180,"byte_end":187187,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1677},{"krate":0,"index":7197},{"krate":0,"index":7198},{"krate":0,"index":7199},{"krate":0,"index":7200}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":187356,"byte_end":187363,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":187555,"byte_end":187562,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":189076,"byte_end":189080,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":189436,"byte_end":189440,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":189701,"byte_end":189705,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1732}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":189940,"byte_end":189944,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1738},{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":191533,"byte_end":191540,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":191833,"byte_end":191840,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":192071,"byte_end":192078,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1791}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":192317,"byte_end":192324,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1796},{"krate":0,"index":1797}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":193425,"byte_end":193429,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":7422},{"krate":0,"index":7423},{"krate":0,"index":7424},{"krate":0,"index":7425}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":193926,"byte_end":193930,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1831}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":194028,"byte_end":194032,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":195234,"byte_end":195246,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":197736,"byte_end":197748,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1876}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":197868,"byte_end":197880,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1879},{"krate":0,"index":1880}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":198765,"byte_end":198768,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1917}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":198957,"byte_end":198960,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1921},{"krate":0,"index":7546},{"krate":0,"index":7547},{"krate":0,"index":7548},{"krate":0,"index":7549}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":199129,"byte_end":199132,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1925}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":199300,"byte_end":199303,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1932}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":200415,"byte_end":200419,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":200470,"byte_end":200474,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1969}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":200625,"byte_end":200629,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1972}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":200768,"byte_end":200772,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1975},{"krate":0,"index":1976}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":201423,"byte_end":201437,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2010}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":201588,"byte_end":201602,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2013}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":201746,"byte_end":201760,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2016},{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":203071,"byte_end":203079,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2070},{"krate":0,"index":7689},{"krate":0,"index":7690},{"krate":0,"index":7691},{"krate":0,"index":7692},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":207045,"byte_end":207053,"line_start":141,"line_end":141,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2080}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":207195,"byte_end":207203,"line_start":147,"line_end":147,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":208362,"byte_end":208366,"line_start":189,"line_end":189,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2088}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":208611,"byte_end":208615,"line_start":199,"line_end":199,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2091}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":208726,"byte_end":208730,"line_start":205,"line_end":205,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2095},{"krate":0,"index":2096}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":209435,"byte_end":209441,"line_start":231,"line_end":231,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":209793,"byte_end":209799,"line_start":242,"line_end":242,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2106}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":210068,"byte_end":210074,"line_start":253,"line_end":253,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2111},{"krate":0,"index":2112}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":211335,"byte_end":211343,"line_start":291,"line_end":291,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":211663,"byte_end":211671,"line_start":304,"line_end":304,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2121}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":211855,"byte_end":211863,"line_start":315,"line_end":315,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2125},{"krate":0,"index":2126}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":212234,"byte_end":212244,"line_start":333,"line_end":333,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2136},{"krate":0,"index":2137}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":212909,"byte_end":212913,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2177},{"krate":0,"index":7872},{"krate":0,"index":7873},{"krate":0,"index":7874},{"krate":0,"index":7875}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":213104,"byte_end":213108,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2180}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":213226,"byte_end":213230,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2185}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":214827,"byte_end":214836,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2224}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":215288,"byte_end":215297,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2229},{"krate":0,"index":7941},{"krate":0,"index":7942},{"krate":0,"index":7943},{"krate":0,"index":7944}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":215623,"byte_end":215632,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2234}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":215880,"byte_end":215889,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":218189,"byte_end":218193,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2274},{"krate":0,"index":7985},{"krate":0,"index":7986},{"krate":0,"index":7987},{"krate":0,"index":7988}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":218366,"byte_end":218370,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2279}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":219342,"byte_end":219346,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2282}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":220369,"byte_end":220378,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2320}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":220826,"byte_end":220835,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2325},{"krate":0,"index":8054},{"krate":0,"index":8055},{"krate":0,"index":8056},{"krate":0,"index":8057}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":221154,"byte_end":221163,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2332}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":222682,"byte_end":222691,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2337}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":224075,"byte_end":224084,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2374}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":224372,"byte_end":224381,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2378},{"krate":0,"index":8111},{"krate":0,"index":8112},{"krate":0,"index":8113},{"krate":0,"index":8114},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":226498,"byte_end":226507,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":227539,"byte_end":227548,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2391}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":228490,"byte_end":228494,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2429}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":228745,"byte_end":228749,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2434},{"krate":0,"index":8172},{"krate":0,"index":8173},{"krate":0,"index":8174},{"krate":0,"index":8175}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":228995,"byte_end":228999,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2439}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":229225,"byte_end":229229,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":231111,"byte_end":231114,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2488}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":232700,"byte_end":232703,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2492}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":232898,"byte_end":232901,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":235609,"byte_end":235613,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2542}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":236099,"byte_end":236103,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2549}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":236267,"byte_end":236271,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2556},{"krate":0,"index":8298},{"krate":0,"index":8299},{"krate":0,"index":8300},{"krate":0,"index":8301}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":236633,"byte_end":236637,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2565}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":237864,"byte_end":237868,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2572}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":125714,"byte_end":125715,"line_start":208,"line_end":208,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":275116,"byte_end":275123,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2842}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":275416,"byte_end":275423,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2847},{"krate":0,"index":8359},{"krate":0,"index":8360},{"krate":0,"index":8361},{"krate":0,"index":8362}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":275704,"byte_end":275711,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2852},{"krate":0,"index":2853},{"krate":0,"index":2854}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":276854,"byte_end":276861,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2859}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":277779,"byte_end":277789,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2889},{"krate":0,"index":8606},{"krate":0,"index":8607},{"krate":0,"index":8608},{"krate":0,"index":8609}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":277982,"byte_end":277992,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2892}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":278113,"byte_end":278123,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2897}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":279222,"byte_end":279228,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2938}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":279520,"byte_end":279526,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2943},{"krate":0,"index":8805},{"krate":0,"index":8806},{"krate":0,"index":8807},{"krate":0,"index":8808}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":279804,"byte_end":279810,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2950}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":281087,"byte_end":281093,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2955}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":281997,"byte_end":282004,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":282058,"byte_end":282065,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2992}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":282228,"byte_end":282235,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":282377,"byte_end":282384,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2998},{"krate":0,"index":2999}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":283160,"byte_end":283170,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3037}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":283466,"byte_end":283476,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3042}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":283721,"byte_end":283731,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3047},{"krate":0,"index":3048}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":285130,"byte_end":285139,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3089}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":285535,"byte_end":285544,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3094},{"krate":0,"index":8935},{"krate":0,"index":8936},{"krate":0,"index":8937},{"krate":0,"index":8938}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":285787,"byte_end":285796,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3099}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":286053,"byte_end":286062,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3104},{"krate":0,"index":3105},{"krate":0,"index":3106}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":288203,"byte_end":288215,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3147}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":288515,"byte_end":288527,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3152},{"krate":0,"index":8996},{"krate":0,"index":8997},{"krate":0,"index":8998},{"krate":0,"index":8999}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":288724,"byte_end":288736,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3158}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":289014,"byte_end":289026,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3166}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":291210,"byte_end":291220,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3199},{"krate":0,"index":9040},{"krate":0,"index":9041},{"krate":0,"index":9042},{"krate":0,"index":9043}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":291485,"byte_end":291495,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3202}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":291741,"byte_end":291751,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3205},{"krate":0,"index":3206}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":293360,"byte_end":293370,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3247}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":293510,"byte_end":293520,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3251}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":293708,"byte_end":293718,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3255},{"krate":0,"index":3256}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":294716,"byte_end":294725,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3285}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":294944,"byte_end":294953,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3288},{"krate":0,"index":3289}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":296216,"byte_end":296223,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3331}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":296582,"byte_end":296589,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3337}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":296869,"byte_end":296876,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3343}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":297130,"byte_end":297137,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3349},{"krate":0,"index":3350}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":301000,"byte_end":301009,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3392}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":301271,"byte_end":301280,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3398},{"krate":0,"index":3399}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":303026,"byte_end":303038,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3444}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":303494,"byte_end":303506,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3449},{"krate":0,"index":9324},{"krate":0,"index":9325},{"krate":0,"index":9326},{"krate":0,"index":9327}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":303846,"byte_end":303858,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3456}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":305357,"byte_end":305369,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3461}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":306597,"byte_end":306609,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3502}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":307061,"byte_end":307073,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3507},{"krate":0,"index":9393},{"krate":0,"index":9394},{"krate":0,"index":9395},{"krate":0,"index":9396}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":307411,"byte_end":307423,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3514}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":309030,"byte_end":309042,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3519}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243276,"byte_end":243277,"line_start":142,"line_end":142,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":309849,"byte_end":309853,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":310475,"byte_end":310479,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3658},{"krate":0,"index":3659},{"krate":0,"index":3660}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311670,"byte_end":311676,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311703,"byte_end":311709,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3695},{"krate":0,"index":3696},{"krate":0,"index":3697}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":312017,"byte_end":312023,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3700}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":312620,"byte_end":312630,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":312674,"byte_end":312684,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3735},{"krate":0,"index":3736},{"krate":0,"index":3737}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":312998,"byte_end":313008,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3741}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":315528,"byte_end":315533,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":315565,"byte_end":315570,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3782}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":315655,"byte_end":315660,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3785},{"krate":0,"index":3786},{"krate":0,"index":3787}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":315909,"byte_end":315914,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3790}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":316853,"byte_end":316857,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3832}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":316986,"byte_end":316990,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3837}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":317595,"byte_end":317599,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3840}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":318258,"byte_end":318265,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":318297,"byte_end":318304,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3878}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":318389,"byte_end":318396,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3881},{"krate":0,"index":3882},{"krate":0,"index":3883}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":318641,"byte_end":318648,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3886}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319035,"byte_end":319041,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319072,"byte_end":319078,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3921}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319843,"byte_end":319849,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3928},{"krate":0,"index":3929}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":321303,"byte_end":321309,"line_start":43,"line_end":43,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3974},{"krate":0,"index":3975},{"krate":0,"index":3976},{"krate":0,"index":3977}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":322732,"byte_end":322738,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3981}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":322951,"byte_end":322957,"line_start":88,"line_end":88,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3985},{"krate":0,"index":3986}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":326301,"byte_end":326307,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4042}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":326547,"byte_end":326553,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4048}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":326833,"byte_end":326839,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4054},{"krate":0,"index":4055}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":329201,"byte_end":329203,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":329258,"byte_end":329260,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":335533,"byte_end":335534,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4160},{"krate":0,"index":4161}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":335769,"byte_end":335770,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4169}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":336040,"byte_end":336041,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4177}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":337057,"byte_end":337061,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4185}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":337155,"byte_end":337159,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4189},{"krate":0,"index":4190}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":337418,"byte_end":337425,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4195},{"krate":0,"index":4196}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":337648,"byte_end":337655,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4201}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":337846,"byte_end":337853,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4206}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":338158,"byte_end":338171,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4212},{"krate":0,"index":4213}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":338588,"byte_end":338597,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4218},{"krate":0,"index":4219}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":338881,"byte_end":338890,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4224}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":339152,"byte_end":339161,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4229}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":339483,"byte_end":339490,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4236},{"krate":0,"index":4237}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":339709,"byte_end":339716,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4243}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":339894,"byte_end":339901,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4249}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":340202,"byte_end":340210,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4257},{"krate":0,"index":4258}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":340433,"byte_end":340441,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4264}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":340623,"byte_end":340631,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4270}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":340941,"byte_end":340952,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4279},{"krate":0,"index":4280}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":341212,"byte_end":341223,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4286}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":341460,"byte_end":341471,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4292}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":341838,"byte_end":341850,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4300},{"krate":0,"index":4301}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":342111,"byte_end":342123,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4307}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":342361,"byte_end":342373,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4313}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":342992,"byte_end":343006,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4326},{"krate":0,"index":4327}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":343229,"byte_end":343243,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4333}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":343444,"byte_end":343458,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4339}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":343764,"byte_end":343770,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4349}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":343863,"byte_end":343869,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4353},{"krate":0,"index":4354}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/unfold_state.rs","byte_start":344474,"byte_end":344485,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4365},{"krate":0,"index":4366}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11238,"byte_end":11244,"line_start":301,"line_end":301,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":15}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11339,"byte_end":11345,"line_start":305,"line_end":305,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1207}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11606,"byte_end":11610,"line_start":316,"line_end":316,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4079}},{"kind":"Mod","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11621,"byte_end":11626,"line_start":318,"line_end":318,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4139}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":35948,"byte_end":35955,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":4371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":36085,"byte_end":36092,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":4371},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":36317,"byte_end":36324,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":4371},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":37098,"byte_end":37105,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":4371},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":37330,"byte_end":37337,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":4371},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40351,"byte_end":40355,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40462,"byte_end":40466,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":4419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":42195,"byte_end":42199,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4419},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":42312,"byte_end":42316,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4419},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":43294,"byte_end":43297,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":43466,"byte_end":43469,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4454},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":43731,"byte_end":43734,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4454},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19099,"byte_end":19100,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":221},"to":{"krate":0,"index":222}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19231,"byte_end":19237,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":11835},"to":{"krate":0,"index":222}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":66541,"byte_end":66551,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":5007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":66702,"byte_end":66712,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":5007},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":66835,"byte_end":66845,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":5007},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":67554,"byte_end":67564,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":5042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":67694,"byte_end":67704,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":5042},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":67947,"byte_end":67957,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":5042},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":68910,"byte_end":68920,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":5042},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":69163,"byte_end":69173,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":5042},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":72497,"byte_end":72510,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":5089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":72640,"byte_end":72653,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":5089},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":72896,"byte_end":72909,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":5089},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":49087,"byte_end":49090,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":484},"to":{"krate":0,"index":485}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":49173,"byte_end":49182,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":44},"to":{"krate":0,"index":485}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74218,"byte_end":74222,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":5952},"to":{"krate":1,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74818,"byte_end":74822,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":5952},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":74966,"byte_end":74970,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":5952},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":75573,"byte_end":75580,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":5958},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":76141,"byte_end":76148,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":5958},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":76293,"byte_end":76300,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":5958},"to":{"krate":1,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":76326,"byte_end":76333,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":5958},"to":{"krate":1,"index":2447}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77087,"byte_end":77096,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":5964},"to":{"krate":1,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":77699,"byte_end":77708,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":5964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":78806,"byte_end":78815,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":5964},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":79016,"byte_end":79025,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":5964},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":80345,"byte_end":80357,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":5977},"to":{"krate":1,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":80583,"byte_end":80595,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":5977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":81708,"byte_end":81720,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":5977},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":81924,"byte_end":81936,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":5977},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":83593,"byte_end":83605,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":5995},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":83919,"byte_end":83931,"line_start":45,"line_end":45,"column_start":38,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":5995},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":84118,"byte_end":84130,"line_start":54,"line_end":54,"column_start":29,"column_end":41},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":5995},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":84568,"byte_end":84574,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":801},"to":{"krate":1,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":85268,"byte_end":85274,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":801},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":85416,"byte_end":85422,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":801},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":85925,"byte_end":85930,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":6029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86109,"byte_end":86114,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":6029},"to":{"krate":1,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86146,"byte_end":86151,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":6029},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":86248,"byte_end":86253,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":6029},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":93334,"byte_end":93340,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":6383},"to":{"krate":1,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":95776,"byte_end":95782,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":6383},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":96486,"byte_end":96492,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":6383},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":104451,"byte_end":104460,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":6713},"to":{"krate":1,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":106299,"byte_end":106308,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":6713},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":108103,"byte_end":108109,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":6721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":108448,"byte_end":108454,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":6721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":108839,"byte_end":108845,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":6721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":109226,"byte_end":109232,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":6721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":109473,"byte_end":109479,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":6721},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":109818,"byte_end":109824,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":6721},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":110100,"byte_end":110106,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":6721},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":110641,"byte_end":110647,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":6721},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":170513,"byte_end":170518,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":6745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":170744,"byte_end":170749,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":6745},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":170958,"byte_end":170963,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":6745},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":172559,"byte_end":172566,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":6794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":172831,"byte_end":172838,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":6794},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":173016,"byte_end":173023,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":6794},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":174049,"byte_end":174054,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":6845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":174448,"byte_end":174453,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":6845},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":174703,"byte_end":174708,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":6845},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":175833,"byte_end":175839,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":6903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":176059,"byte_end":176065,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":6903},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":176773,"byte_end":176779,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":6903},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":177442,"byte_end":177447,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":6943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":177603,"byte_end":177608,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":6943},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":178357,"byte_end":178362,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":6943},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":179110,"byte_end":179119,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":6983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":179305,"byte_end":179314,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":6983},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":179432,"byte_end":179441,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":6983},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":180882,"byte_end":180888,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":7022},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":181361,"byte_end":181367,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":7022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":181690,"byte_end":181696,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":7022},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":182033,"byte_end":182039,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":7022},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":184211,"byte_end":184220,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":7087},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":184517,"byte_end":184526,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":7087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":184793,"byte_end":184802,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":7087},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":185069,"byte_end":185078,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":7087},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":187180,"byte_end":187187,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":7155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":187356,"byte_end":187363,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":7155},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":187555,"byte_end":187562,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":7155},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":189076,"byte_end":189080,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":7256},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":189436,"byte_end":189440,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":7256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":189701,"byte_end":189705,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":7256},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":189940,"byte_end":189944,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":7256},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":191533,"byte_end":191540,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":7325},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":191833,"byte_end":191840,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":7325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":192071,"byte_end":192078,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":7325},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":192317,"byte_end":192324,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":7325},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":193425,"byte_end":193429,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":7387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":193926,"byte_end":193930,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":7387},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":194028,"byte_end":194032,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":7387},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":195234,"byte_end":195246,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":7426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":197736,"byte_end":197748,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":7426},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":197868,"byte_end":197880,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":7426},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":198765,"byte_end":198768,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":7501},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":198957,"byte_end":198960,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":7501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":199129,"byte_end":199132,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":7501},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":199300,"byte_end":199303,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":7501},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":200415,"byte_end":200419,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":7633},"to":{"krate":1,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":200470,"byte_end":200474,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":7633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":200625,"byte_end":200629,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":7633},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":200768,"byte_end":200772,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":7633},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":201423,"byte_end":201437,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":7641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":201588,"byte_end":201602,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":7641},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":201746,"byte_end":201760,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":7641},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":203071,"byte_end":203079,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":7654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":207045,"byte_end":207053,"line_start":141,"line_end":141,"column_start":34,"column_end":42},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":7654},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":207195,"byte_end":207203,"line_start":147,"line_end":147,"column_start":28,"column_end":36},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":7654},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":208362,"byte_end":208366,"line_start":189,"line_end":189,"column_start":25,"column_end":29},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":7693},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":208611,"byte_end":208615,"line_start":199,"line_end":199,"column_start":34,"column_end":38},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":7693},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":208726,"byte_end":208730,"line_start":205,"line_end":205,"column_start":25,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":7693},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":209435,"byte_end":209441,"line_start":231,"line_end":231,"column_start":28,"column_end":34},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":7734},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":209793,"byte_end":209799,"line_start":242,"line_end":242,"column_start":29,"column_end":35},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":7734},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":210068,"byte_end":210074,"line_start":253,"line_end":253,"column_start":24,"column_end":30},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":7734},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":211335,"byte_end":211343,"line_start":291,"line_end":291,"column_start":28,"column_end":36},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":7783},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":211663,"byte_end":211671,"line_start":304,"line_end":304,"column_start":29,"column_end":37},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":7783},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":211855,"byte_end":211863,"line_start":315,"line_end":315,"column_start":24,"column_end":32},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":7783},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":212234,"byte_end":212244,"line_start":333,"line_end":333,"column_start":34,"column_end":44},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2127},"to":{"krate":0,"index":4152}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":212909,"byte_end":212913,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":7837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":213104,"byte_end":213108,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":7837},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":213226,"byte_end":213230,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":7837},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":214827,"byte_end":214836,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":7876},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":215288,"byte_end":215297,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":7876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":215623,"byte_end":215632,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":7876},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":215880,"byte_end":215889,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":7876},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":218189,"byte_end":218193,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":7950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":218366,"byte_end":218370,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":7950},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":219342,"byte_end":219346,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":7950},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":220369,"byte_end":220378,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":7989},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":220826,"byte_end":220835,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":7989},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":221154,"byte_end":221163,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":7989},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":222682,"byte_end":222691,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":7989},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":224075,"byte_end":224084,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":8058},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":224372,"byte_end":224381,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":8058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":226498,"byte_end":226507,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":8058},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":227539,"byte_end":227548,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":8058},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":228490,"byte_end":228494,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":8115},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":228745,"byte_end":228749,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":8115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":228995,"byte_end":228999,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":8115},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":229225,"byte_end":229229,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":8115},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":231111,"byte_end":231114,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":8183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":232700,"byte_end":232703,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":8183},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":232898,"byte_end":232901,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":8183},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":235609,"byte_end":235613,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":8233},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":236099,"byte_end":236103,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":8233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":236267,"byte_end":236271,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":8233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":236633,"byte_end":236637,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":8233},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":237864,"byte_end":237868,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":8233},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":125714,"byte_end":125715,"line_start":208,"line_end":208,"column_start":31,"column_end":32},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2577},"to":{"krate":0,"index":2578}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":125858,"byte_end":125864,"line_start":212,"line_end":212,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":4,"index":96},"to":{"krate":0,"index":2578}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":275116,"byte_end":275123,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":8302},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":275416,"byte_end":275423,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":8302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":275704,"byte_end":275711,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":8302},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":276854,"byte_end":276861,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":8302},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":277779,"byte_end":277789,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":8575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":277982,"byte_end":277992,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":8575},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":278113,"byte_end":278123,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":8575},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":279222,"byte_end":279228,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":8748},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":279520,"byte_end":279526,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":8748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":279804,"byte_end":279810,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":8748},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":281087,"byte_end":281093,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":8748},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":281997,"byte_end":282004,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":8809},"to":{"krate":1,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":282058,"byte_end":282065,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":8809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":282228,"byte_end":282235,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":8809},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":282377,"byte_end":282384,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":8809},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":283160,"byte_end":283170,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":8817},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":283466,"byte_end":283476,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":8817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":283721,"byte_end":283731,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":8817},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":285130,"byte_end":285139,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":8874},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":285535,"byte_end":285544,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":8874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":285787,"byte_end":285796,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":8874},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":286053,"byte_end":286062,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":8874},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":288203,"byte_end":288215,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":8939},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":288515,"byte_end":288527,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":8939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":288724,"byte_end":288736,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":8939},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":289014,"byte_end":289026,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":8939},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":291210,"byte_end":291220,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":9005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":291485,"byte_end":291495,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":9005},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":291741,"byte_end":291751,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":9005},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":293360,"byte_end":293370,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":9051},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":293510,"byte_end":293520,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":9051},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":293708,"byte_end":293718,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":9051},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":294716,"byte_end":294725,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":9098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":294944,"byte_end":294953,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":9098},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":296216,"byte_end":296223,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":9133},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":296582,"byte_end":296589,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":9133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":296869,"byte_end":296876,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":9133},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":297130,"byte_end":297137,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":9133},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":301000,"byte_end":301009,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":9202},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":301271,"byte_end":301280,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":9202},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":303026,"byte_end":303038,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":9259},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":303494,"byte_end":303506,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":9259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":303846,"byte_end":303858,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":9259},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":305357,"byte_end":305369,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":9259},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":306597,"byte_end":306609,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":9328},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":307061,"byte_end":307073,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":9328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":307411,"byte_end":307423,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":9328},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":309030,"byte_end":309042,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":9328},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243276,"byte_end":243277,"line_start":142,"line_end":142,"column_start":46,"column_end":47},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3524},"to":{"krate":0,"index":3525}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":243358,"byte_end":243367,"line_start":145,"line_end":145,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":127},"to":{"krate":0,"index":3525}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":309849,"byte_end":309853,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":9397},"to":{"krate":1,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":310475,"byte_end":310479,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":9397},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311670,"byte_end":311676,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":9406},"to":{"krate":1,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":311703,"byte_end":311709,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":9406},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":312017,"byte_end":312023,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":9406},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":312620,"byte_end":312630,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":9415},"to":{"krate":1,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":312674,"byte_end":312684,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":9415},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":312998,"byte_end":313008,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":9415},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":315528,"byte_end":315533,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":9424},"to":{"krate":1,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":315565,"byte_end":315570,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":9424},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":315655,"byte_end":315660,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":9424},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":315909,"byte_end":315914,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":9424},"to":{"krate":1,"index":2447}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":316853,"byte_end":316857,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":9435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":316986,"byte_end":316990,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":9435},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":317595,"byte_end":317599,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":9435},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":318258,"byte_end":318265,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":9466},"to":{"krate":1,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":318297,"byte_end":318304,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":9466},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":318389,"byte_end":318396,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":9466},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":318641,"byte_end":318648,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":9466},"to":{"krate":1,"index":2447}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319035,"byte_end":319041,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3914},"to":{"krate":1,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319072,"byte_end":319078,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3914},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":319843,"byte_end":319849,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3914},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":321303,"byte_end":321309,"line_start":43,"line_end":43,"column_start":16,"column_end":22},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":9479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":322732,"byte_end":322738,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":9479},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":322951,"byte_end":322957,"line_start":88,"line_end":88,"column_start":27,"column_end":33},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":9479},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":326301,"byte_end":326307,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":9525},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":326547,"byte_end":326553,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":9525},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":326833,"byte_end":326839,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":9525},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":329201,"byte_end":329203,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":4127},"to":{"krate":0,"index":4130}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":329258,"byte_end":329260,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":4129},"to":{"krate":0,"index":4131}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":329339,"byte_end":329344,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":18,"index":16},"to":{"krate":0,"index":4130}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":332108,"byte_end":332118,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":18,"index":19},"to":{"krate":0,"index":4131}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":335533,"byte_end":335534,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4157},"to":{"krate":0,"index":4152}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":335673,"byte_end":335680,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":4152},"to":{"krate":0,"index":4162}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":335769,"byte_end":335770,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4166},"to":{"krate":0,"index":4162}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":335956,"byte_end":335962,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":4162},"to":{"krate":0,"index":4170}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":336040,"byte_end":336041,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4174},"to":{"krate":0,"index":4170}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":337057,"byte_end":337061,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":4179},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":337155,"byte_end":337159,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4179},"to":{"krate":0,"index":4152}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":337418,"byte_end":337425,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":9599},"to":{"krate":0,"index":4152}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":337648,"byte_end":337655,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":9599},"to":{"krate":0,"index":4162}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":337846,"byte_end":337853,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":9599},"to":{"krate":0,"index":4170}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":338158,"byte_end":338171,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":9620},"to":{"krate":0,"index":4152}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":338588,"byte_end":338597,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":9636},"to":{"krate":0,"index":4152}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":338881,"byte_end":338890,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":9636},"to":{"krate":0,"index":4162}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":339152,"byte_end":339161,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":9636},"to":{"krate":0,"index":4170}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":339483,"byte_end":339490,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":9651},"to":{"krate":0,"index":4152}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":339709,"byte_end":339716,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":9651},"to":{"krate":0,"index":4162}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":339894,"byte_end":339901,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":9651},"to":{"krate":0,"index":4170}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":340202,"byte_end":340210,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":9666},"to":{"krate":0,"index":4152}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":340433,"byte_end":340441,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":9666},"to":{"krate":0,"index":4162}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":340623,"byte_end":340631,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":9666},"to":{"krate":0,"index":4170}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":340941,"byte_end":340952,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":9681},"to":{"krate":0,"index":4152}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":341212,"byte_end":341223,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":9681},"to":{"krate":0,"index":4162}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":341460,"byte_end":341471,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":9681},"to":{"krate":0,"index":4170}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":341838,"byte_end":341850,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":9693},"to":{"krate":0,"index":4152}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":342111,"byte_end":342123,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":9693},"to":{"krate":0,"index":4162}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":342361,"byte_end":342373,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":9693},"to":{"krate":0,"index":4170}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":342992,"byte_end":343006,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":9705},"to":{"krate":0,"index":4152}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":343229,"byte_end":343243,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":9705},"to":{"krate":0,"index":4162}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":343444,"byte_end":343458,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":9705},"to":{"krate":0,"index":4170}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":343764,"byte_end":343770,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4343},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":343863,"byte_end":343869,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4343},"to":{"krate":0,"index":4152}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/unfold_state.rs","byte_start":344474,"byte_end":344485,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":9742},"to":{"krate":4294967295,"index":4294967295}}]}