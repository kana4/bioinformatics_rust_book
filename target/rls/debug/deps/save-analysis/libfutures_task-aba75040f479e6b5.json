{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15","program":"/Users/l/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","futures_task","--edition=2018","/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=aba75040f479e6b5","-C","extra-filename=-aba75040f479e6b5","--out-dir","/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps","-L","dependency=/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/l/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/l/Desktop/projects/github/bioinformatics_rust_book/target/rls/debug/deps/libfutures_task-aba75040f479e6b5.rmeta"},"prelude":{"crate_id":{"name":"futures_task","disambiguator":[4160729551248730685,10624135722420974948]},"crate_root":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src","external_crates":[{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11698766721189094488,12060600386163665861]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[7682173449702177568,11032960836976215208]}},{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4743338922599007115,7423637119316760057]}}],"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","byte_start":0,"byte_end":1359,"line_start":1,"line_end":48,"column_start":1,"column_end":70}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":19},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","byte_start":664,"byte_end":674,"line_start":21,"line_end":21,"column_start":24,"column_end":34},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","byte_start":676,"byte_end":681,"line_start":21,"line_end":21,"column_start":36,"column_end":41},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":22},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","byte_start":683,"byte_end":693,"line_start":21,"line_end":21,"column_start":43,"column_end":53},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":115},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","byte_start":1127,"byte_end":1136,"line_start":41,"line_end":41,"column_start":29,"column_end":38},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","byte_start":1138,"byte_end":1152,"line_start":41,"line_end":41,"column_start":40,"column_end":54},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":136},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","byte_start":1154,"byte_end":1169,"line_start":41,"line_end":41,"column_start":56,"column_end":71},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":191},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","byte_start":1216,"byte_end":1226,"line_start":44,"line_end":44,"column_start":28,"column_end":38},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":192},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","byte_start":1255,"byte_end":1269,"line_start":45,"line_end":45,"column_start":28,"column_end":42},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":12072},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","byte_start":1311,"byte_end":1318,"line_start":48,"line_end":48,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":40046},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","byte_start":1320,"byte_end":1324,"line_start":48,"line_end":48,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":40082},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","byte_start":1326,"byte_end":1334,"line_start":48,"line_end":48,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":40091},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","byte_start":1336,"byte_end":1350,"line_start":48,"line_end":48,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":12082},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","byte_start":1352,"byte_end":1357,"line_start":48,"line_end":48,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","byte_start":0,"byte_end":1359,"line_start":1,"line_end":48,"column_start":1,"column_end":70},"name":"","qualname":"::","value":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":5},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":217}],"decl_id":null,"docs":" Tools for working with tasks.\n","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","byte_start":0,"byte_end":33,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"no_std","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","byte_start":69,"byte_end":75,"line_start":3,"line_end":3,"column_start":35,"column_end":41}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","byte_start":78,"byte_end":166,"line_start":4,"line_end":4,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/lib.rs","byte_start":334,"byte_end":355,"line_start":7,"line_end":7,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":16},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":1531,"byte_end":1536,"line_start":6,"line_end":6,"column_start":11,"column_end":16},"name":"Spawn","qualname":"::spawn::Spawn","value":"Spawn","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18}],"decl_id":null,"docs":" The `Spawn` trait allows for pushing futures onto an executor that will\n run them to completion.\n","sig":null,"attributes":[{"value":"/ The `Spawn` trait allows for pushing futures onto an executor that will","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":1417,"byte_end":1492,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ run them to completion.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":1493,"byte_end":1520,"line_start":5,"line_end":5,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":1856,"byte_end":1865,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"spawn_obj","qualname":"::spawn::Spawn::spawn_obj","value":"pub fn spawn_obj(&Self, FutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Spawns a future that will be run to completion.","sig":null,"attributes":[{"value":"/ Spawns a future that will be run to completion.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":1543,"byte_end":1594,"line_start":7,"line_end":7,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":1599,"byte_end":1602,"line_start":8,"line_end":8,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":1607,"byte_end":1619,"line_start":9,"line_end":9,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":1624,"byte_end":1627,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ The executor may be unable to spawn tasks. Spawn errors should","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":1632,"byte_end":1698,"line_start":11,"line_end":11,"column_start":5,"column_end":71}},{"value":"/ represent relatively rare scenarios, such as the executor","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":1703,"byte_end":1764,"line_start":12,"line_end":12,"column_start":5,"column_end":66}},{"value":"/ having been shut down so that it is no longer able to accept","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":1769,"byte_end":1833,"line_start":13,"line_end":13,"column_start":5,"column_end":69}},{"value":"/ tasks.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":1838,"byte_end":1848,"line_start":14,"line_end":14,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2275,"byte_end":2281,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"status","qualname":"::spawn::Spawn::status","value":"pub fn status(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Determines whether the executor is able to spawn new tasks.","sig":null,"attributes":[{"value":"/ Determines whether the executor is able to spawn new tasks.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":1937,"byte_end":2000,"line_start":17,"line_end":17,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2005,"byte_end":2008,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will return `Ok` when the executor is *likely*","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2013,"byte_end":2075,"line_start":19,"line_end":19,"column_start":5,"column_end":67}},{"value":"/ (but not guaranteed) to accept a subsequent spawn attempt.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2080,"byte_end":2142,"line_start":20,"line_end":20,"column_start":5,"column_end":67}},{"value":"/ Likewise, an `Err` return means that `spawn` is likely, but","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2147,"byte_end":2210,"line_start":21,"line_end":21,"column_start":5,"column_end":68}},{"value":"/ not guaranteed, to yield an error.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2215,"byte_end":2253,"line_start":22,"line_end":22,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2258,"byte_end":2267,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":19},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2458,"byte_end":2468,"line_start":31,"line_end":31,"column_start":11,"column_end":21},"name":"LocalSpawn","qualname":"::spawn::LocalSpawn","value":"LocalSpawn","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"decl_id":null,"docs":" The `LocalSpawn` is similar to [`Spawn`], but allows spawning futures\n that don't implement `Send`.\n","sig":null,"attributes":[{"value":"/ The `LocalSpawn` is similar to [`Spawn`], but allows spawning futures","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2341,"byte_end":2414,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ that don't implement `Send`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2415,"byte_end":2447,"line_start":30,"line_end":30,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2788,"byte_end":2803,"line_start":40,"line_end":40,"column_start":8,"column_end":23},"name":"spawn_local_obj","qualname":"::spawn::LocalSpawn::spawn_local_obj","value":"pub fn spawn_local_obj(&Self, LocalFutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Spawns a future that will be run to completion.","sig":null,"attributes":[{"value":"/ Spawns a future that will be run to completion.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2475,"byte_end":2526,"line_start":32,"line_end":32,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2531,"byte_end":2534,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2539,"byte_end":2551,"line_start":34,"line_end":34,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2556,"byte_end":2559,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ The executor may be unable to spawn tasks. Spawn errors should","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2564,"byte_end":2630,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ represent relatively rare scenarios, such as the executor","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2635,"byte_end":2696,"line_start":37,"line_end":37,"column_start":5,"column_end":66}},{"value":"/ having been shut down so that it is no longer able to accept","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2701,"byte_end":2765,"line_start":38,"line_end":38,"column_start":5,"column_end":69}},{"value":"/ tasks.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2770,"byte_end":2780,"line_start":39,"line_end":39,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":3218,"byte_end":3230,"line_start":49,"line_end":49,"column_start":8,"column_end":20},"name":"status_local","qualname":"::spawn::LocalSpawn::status_local","value":"pub fn status_local(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Determines whether the executor is able to spawn new tasks.","sig":null,"attributes":[{"value":"/ Determines whether the executor is able to spawn new tasks.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2880,"byte_end":2943,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2948,"byte_end":2951,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method will return `Ok` when the executor is *likely*","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":2956,"byte_end":3018,"line_start":44,"line_end":44,"column_start":5,"column_end":67}},{"value":"/ (but not guaranteed) to accept a subsequent spawn attempt.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":3023,"byte_end":3085,"line_start":45,"line_end":45,"column_start":5,"column_end":67}},{"value":"/ Likewise, an `Err` return means that `spawn` is likely, but","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":3090,"byte_end":3153,"line_start":46,"line_end":46,"column_start":5,"column_end":68}},{"value":"/ not guaranteed, to yield an error.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":3158,"byte_end":3196,"line_start":47,"line_end":47,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":3201,"byte_end":3210,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":22},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":3345,"byte_end":3355,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"SpawnError","qualname":"::spawn::SpawnError","value":"SpawnError {  }","parent":null,"children":[{"krate":0,"index":23}],"decl_id":null,"docs":" An error that occurred during spawning.\n","sig":null,"attributes":[{"value":"/ An error that occurred during spawning.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":3290,"byte_end":3333,"line_start":54,"line_end":54,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":3854,"byte_end":3862,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<SpawnError>::shutdown","value":"pub fn shutdown() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Spawning failed because the executor has been shut down.\n","sig":null,"attributes":[{"value":"/ Spawning failed because the executor has been shut down.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":3782,"byte_end":3842,"line_start":75,"line_end":75,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":3991,"byte_end":4002,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<SpawnError>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether spawning failed to the executor being shut down.\n","sig":null,"attributes":[{"value":"/ Check whether spawning failed to the executor being shut down.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":3913,"byte_end":3979,"line_start":80,"line_end":80,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":7611,"byte_end":7625,"line_start":16,"line_end":16,"column_start":12,"column_end":26},"name":"LocalFutureObj","qualname":"::future_obj::LocalFutureObj","value":"LocalFutureObj {  }","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86}],"decl_id":null,"docs":" A custom trait object for polling futures, roughly akin to\n `Box<dyn Future<Output = T> + 'a>`.","sig":null,"attributes":[{"value":"/ A custom trait object for polling futures, roughly akin to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":7322,"byte_end":7384,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/ `Box<dyn Future<Output = T> + 'a>`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":7385,"byte_end":7424,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":7425,"byte_end":7428,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This custom trait object was introduced as currently it is not possible to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":7429,"byte_end":7507,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ take `dyn Trait` by value and `Box<dyn Trait>` is not available in no_std","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":7508,"byte_end":7585,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ contexts.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":7586,"byte_end":7599,"line_start":15,"line_end":15,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":8633,"byte_end":8636,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalFutureObj>::new","value":"pub fn new<F: UnsafeFutureObj + 'a>(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `LocalFutureObj` from a custom trait object representation.\n","sig":null,"attributes":[{"value":"/ Create a `LocalFutureObj` from a custom trait object representation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":8535,"byte_end":8607,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":8612,"byte_end":8621,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":9185,"byte_end":9200,"line_start":61,"line_end":61,"column_start":19,"column_end":34},"name":"into_future_obj","qualname":"<LocalFutureObj>::into_future_obj","value":"pub unsafe fn into_future_obj(Self) -> FutureObj","parent":null,"children":[],"decl_id":null,"docs":" Converts the `LocalFutureObj` into a `FutureObj`.","sig":null,"attributes":[{"value":"/ Converts the `LocalFutureObj` into a `FutureObj`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":8887,"byte_end":8940,"line_start":53,"line_end":53,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":8945,"byte_end":8948,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":8953,"byte_end":8965,"line_start":55,"line_end":55,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":8970,"byte_end":8973,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ To make this operation safe one has to ensure that the `UnsafeFutureObj`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":8978,"byte_end":9054,"line_start":57,"line_end":57,"column_start":5,"column_end":81}},{"value":"/ instance from which this `LocalFutureObj` was created actually","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":9059,"byte_end":9125,"line_start":58,"line_end":58,"column_start":5,"column_end":71}},{"value":"/ implements `Send`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":9130,"byte_end":9152,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":9157,"byte_end":9166,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":115},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10362,"byte_end":10371,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"FutureObj","qualname":"::future_obj::FutureObj","value":"","parent":null,"children":[],"decl_id":null,"docs":" A custom trait object for polling futures, roughly akin to\n `Box<dyn Future<Output = T> + Send + 'a>`.","sig":null,"attributes":[{"value":"/ A custom trait object for polling futures, roughly akin to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":9921,"byte_end":9983,"line_start":94,"line_end":94,"column_start":1,"column_end":63}},{"value":"/ `Box<dyn Future<Output = T> + Send + 'a>`.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":9984,"byte_end":10030,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10031,"byte_end":10034,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ This custom trait object was introduced as currently it is not possible to","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10035,"byte_end":10113,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ take `dyn Trait` by value and `Box<dyn Trait>` is not available in no_std","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10114,"byte_end":10191,"line_start":98,"line_end":98,"column_start":1,"column_end":78}},{"value":"/ contexts.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10192,"byte_end":10205,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10206,"byte_end":10209,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ You should generally not need to use this type outside of `no_std` or when","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10210,"byte_end":10288,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/ implementing `Spawn`, consider using `BoxFuture` instead.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10289,"byte_end":10350,"line_start":102,"line_end":102,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10615,"byte_end":10618,"line_start":111,"line_end":111,"column_start":12,"column_end":15},"name":"new","qualname":"<FutureObj>::new","value":"pub fn new<F: UnsafeFutureObj + Send>(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `FutureObj` from a custom trait object representation.\n","sig":null,"attributes":[{"value":"/ Create a `FutureObj` from a custom trait object representation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10522,"byte_end":10589,"line_start":109,"line_end":109,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10594,"byte_end":10603,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":136},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11466,"byte_end":11481,"line_start":141,"line_end":141,"column_start":18,"column_end":33},"name":"UnsafeFutureObj","qualname":"::future_obj::UnsafeFutureObj","value":"UnsafeFutureObj<'a, T>: 'a","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"decl_id":null,"docs":" A custom implementation of a future trait object for `FutureObj`, providing\n a vtable with drop support.","sig":null,"attributes":[{"value":"/ A custom implementation of a future trait object for `FutureObj`, providing","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11069,"byte_end":11148,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ a vtable with drop support.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11149,"byte_end":11180,"line_start":132,"line_end":132,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11181,"byte_end":11184,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ This custom representation is typically used only in `no_std` contexts,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11185,"byte_end":11260,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ where the default `Box`-based implementation is not available.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11261,"byte_end":11327,"line_start":135,"line_end":135,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11328,"byte_end":11331,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11332,"byte_end":11344,"line_start":137,"line_end":137,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11345,"byte_end":11348,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ See the safety notes on individual methods for what guarantees an","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11349,"byte_end":11418,"line_start":139,"line_end":139,"column_start":1,"column_end":70}},{"value":"/ implementor must provide.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11419,"byte_end":11448,"line_start":140,"line_end":140,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11926,"byte_end":11934,"line_start":152,"line_end":152,"column_start":8,"column_end":16},"name":"into_raw","qualname":"::future_obj::UnsafeFutureObj::into_raw","value":"pub fn into_raw(Self) -> *mut dyn Future<Output = T> + 'a","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Convert an owned instance into a (conceptually owned) fat pointer.","sig":null,"attributes":[{"value":"/ Convert an owned instance into a (conceptually owned) fat pointer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11499,"byte_end":11569,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11574,"byte_end":11577,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11582,"byte_end":11594,"line_start":144,"line_end":144,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11599,"byte_end":11602,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ## Implementor","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11607,"byte_end":11625,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11630,"byte_end":11633,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ The trait implementor must guarantee that it is safe to convert the","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11638,"byte_end":11709,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"/ provided `*mut (dyn Future<Output = T> + 'a)` into a `Pin<&mut (dyn","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11714,"byte_end":11785,"line_start":149,"line_end":149,"column_start":5,"column_end":76}},{"value":"/ Future<Output = T> + 'a)>` and call methods on it, non-reentrantly,","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11790,"byte_end":11861,"line_start":150,"line_end":150,"column_start":5,"column_end":76}},{"value":"/ until `UnsafeFutureObj::drop` is called with it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11866,"byte_end":11918,"line_start":151,"line_end":151,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":12612,"byte_end":12616,"line_start":172,"line_end":172,"column_start":15,"column_end":19},"name":"drop","qualname":"::future_obj::UnsafeFutureObj::drop","value":"pub unsafe fn drop(*mut dyn Future<Output = T> + 'a)","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Drops the future represented by the given fat pointer.","sig":null,"attributes":[{"value":"/ Drops the future represented by the given fat pointer.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":11985,"byte_end":12043,"line_start":154,"line_end":154,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":12048,"byte_end":12051,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":12056,"byte_end":12068,"line_start":156,"line_end":156,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":12073,"byte_end":12076,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ## Implementor","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":12081,"byte_end":12099,"line_start":158,"line_end":158,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":12104,"byte_end":12107,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The trait implementor must guarantee that it is safe to call this","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":12112,"byte_end":12181,"line_start":160,"line_end":160,"column_start":5,"column_end":74}},{"value":"/ function once per `into_raw` invocation.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":12186,"byte_end":12230,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":12235,"byte_end":12238,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ## Caller","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":12243,"byte_end":12256,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":12261,"byte_end":12264,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure:","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":12269,"byte_end":12296,"line_start":165,"line_end":165,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":12301,"byte_end":12304,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/  * the pointer passed was obtained from an `into_raw` invocation from","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":12309,"byte_end":12382,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/    this same trait object","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":12387,"byte_end":12416,"line_start":168,"line_end":168,"column_start":5,"column_end":34}},{"value":"/  * the pointer is not currently in use as a `Pin<&mut (dyn Future<Output","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":12421,"byte_end":12497,"line_start":169,"line_end":169,"column_start":5,"column_end":81}},{"value":"/    = T> + 'a)>`","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":12502,"byte_end":12521,"line_start":170,"line_end":170,"column_start":5,"column_end":24}},{"value":"/  * the pointer must not be used again after this function is called","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":12526,"byte_end":12597,"line_start":171,"line_end":171,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":191},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18435,"byte_end":18445,"line_start":29,"line_end":29,"column_start":8,"column_end":18},"name":"noop_waker","qualname":"::noop_waker::noop_waker","value":"pub fn noop_waker() -> Waker","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Waker`] which does\n nothing when `wake()` is called on it.","sig":null,"attributes":[{"value":"/ Create a new [`Waker`] which does","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18215,"byte_end":18252,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/ nothing when `wake()` is called on it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18253,"byte_end":18295,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18296,"byte_end":18299,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18300,"byte_end":18314,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18315,"byte_end":18318,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18319,"byte_end":18326,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ use futures::task::noop_waker;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18327,"byte_end":18361,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ let waker = noop_waker();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18362,"byte_end":18391,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ waker.wake();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18392,"byte_end":18409,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18410,"byte_end":18417,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18418,"byte_end":18427,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":192},"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18856,"byte_end":18870,"line_start":45,"line_end":45,"column_start":8,"column_end":22},"name":"noop_waker_ref","qualname":"::noop_waker::noop_waker_ref","value":"pub fn noop_waker_ref() -> &'static Waker","parent":null,"children":[],"decl_id":null,"docs":" Get a static reference to a [`Waker`] which\n does nothing when `wake()` is called on it.","sig":null,"attributes":[{"value":"/ Get a static reference to a [`Waker`] which","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18606,"byte_end":18653,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ does nothing when `wake()` is called on it.","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18654,"byte_end":18701,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18702,"byte_end":18705,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18706,"byte_end":18720,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18721,"byte_end":18724,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18725,"byte_end":18732,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ use futures::task::noop_waker_ref;","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18733,"byte_end":18771,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ let waker = noop_waker_ref();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18772,"byte_end":18805,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/ waker.wake_by_ref();","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18806,"byte_end":18830,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18831,"byte_end":18838,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18839,"byte_end":18848,"line_start":44,"line_end":44,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":3396,"byte_end":3406,"line_start":59,"line_end":59,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":3567,"byte_end":3577,"line_start":65,"line_end":65,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":3765,"byte_end":3775,"line_start":74,"line_end":74,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":8028,"byte_end":8042,"line_start":25,"line_end":25,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":8507,"byte_end":8521,"line_start":42,"line_end":42,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":9285,"byte_end":9299,"line_start":66,"line_end":66,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":9470,"byte_end":9484,"line_start":72,"line_end":72,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":9591,"byte_end":9605,"line_start":79,"line_end":79,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":9816,"byte_end":9830,"line_start":88,"line_end":88,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10422,"byte_end":10431,"line_start":105,"line_end":105,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10466,"byte_end":10475,"line_start":106,"line_end":106,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10499,"byte_end":10508,"line_start":108,"line_end":108,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10738,"byte_end":10747,"line_start":116,"line_end":116,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10893,"byte_end":10902,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":13272,"byte_end":13275,"line_start":194,"line_end":194,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":13584,"byte_end":13587,"line_start":205,"line_end":205,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18953,"byte_end":18965,"line_start":47,"line_end":47,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":3396,"byte_end":3406,"line_start":59,"line_end":59,"column_start":21,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":22},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":3567,"byte_end":3577,"line_start":65,"line_end":65,"column_start":23,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":22},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/spawn.rs","byte_start":3765,"byte_end":3775,"line_start":74,"line_end":74,"column_start":6,"column_end":16},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":22},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":8028,"byte_end":8042,"line_start":25,"line_end":25,"column_start":19,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":81},"to":{"krate":1,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":8507,"byte_end":8521,"line_start":42,"line_end":42,"column_start":13,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":9285,"byte_end":9299,"line_start":66,"line_end":66,"column_start":24,"column_end":38},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":81},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":9470,"byte_end":9484,"line_start":72,"line_end":72,"column_start":40,"column_end":54},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":81},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":9591,"byte_end":9605,"line_start":79,"line_end":79,"column_start":20,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":81},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":9816,"byte_end":9830,"line_start":88,"line_end":88,"column_start":18,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":81},"to":{"krate":1,"index":3050}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10422,"byte_end":10431,"line_start":105,"line_end":105,"column_start":19,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":115},"to":{"krate":1,"index":2863}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10466,"byte_end":10475,"line_start":106,"line_end":106,"column_start":25,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":115},"to":{"krate":1,"index":2822}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10499,"byte_end":10508,"line_start":108,"line_end":108,"column_start":13,"column_end":22},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10738,"byte_end":10747,"line_start":116,"line_end":116,"column_start":24,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":115},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":10893,"byte_end":10902,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":115},"to":{"krate":1,"index":11835}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":13272,"byte_end":13275,"line_start":194,"line_end":194,"column_start":50,"column_end":53},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":37471},"to":{"krate":0,"index":136}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/future_obj.rs","byte_start":13584,"byte_end":13587,"line_start":205,"line_end":205,"column_start":47,"column_end":50},"kind":{"Impl":{"id":15}},"from":{"krate":1,"index":37471},"to":{"krate":0,"index":136}},{"span":{"file_name":"/Users/l/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.15/src/noop_waker.rs","byte_start":18953,"byte_end":18965,"line_start":47,"line_end":47,"column_start":26,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":193},"to":{"krate":1,"index":2834}}]}